"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/hast-util-to-parse5";
exports.ids = ["vendor-chunks/hast-util-to-parse5"];
exports.modules = {

/***/ "(ssr)/./node_modules/hast-util-to-parse5/lib/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/hast-util-to-parse5/lib/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toParse5: () => (/* binding */ toParse5)\n/* harmony export */ });\n/* harmony import */ var comma_separated_tokens__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! comma-separated-tokens */ \"(ssr)/./node_modules/comma-separated-tokens/index.js\");\n/* harmony import */ var devlop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! devlop */ \"(ssr)/./node_modules/devlop/lib/development.js\");\n/* harmony import */ var property_information__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! property-information */ \"(ssr)/./node_modules/property-information/index.js\");\n/* harmony import */ var property_information__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! property-information */ \"(ssr)/./node_modules/property-information/lib/find.js\");\n/* harmony import */ var space_separated_tokens__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! space-separated-tokens */ \"(ssr)/./node_modules/space-separated-tokens/index.js\");\n/* harmony import */ var web_namespaces__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web-namespaces */ \"(ssr)/./node_modules/web-namespaces/index.js\");\n/* harmony import */ var zwitch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zwitch */ \"(ssr)/./node_modules/zwitch/index.js\");\n/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap['document']} Parse5Document\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentFragment']} Parse5Fragment\n * @typedef {import('parse5').DefaultTreeAdapterMap['element']} Parse5Element\n * @typedef {import('parse5').DefaultTreeAdapterMap['node']} Parse5Nodes\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentType']} Parse5Doctype\n * @typedef {import('parse5').DefaultTreeAdapterMap['commentNode']} Parse5Comment\n * @typedef {import('parse5').DefaultTreeAdapterMap['textNode']} Parse5Text\n * @typedef {import('parse5').DefaultTreeAdapterMap['parentNode']} Parse5Parent\n * @typedef {import('parse5').Token.Attribute} Parse5Attribute\n *\n * @typedef {import('property-information').Schema} Schema\n */ /**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n *\n * @typedef {Exclude<Parse5Nodes, Parse5Document | Parse5Fragment>} Parse5Content\n *\n * @typedef {'html' | 'svg'} Space\n */ \n\n\n\n\n\n/** @type {Options} */ const emptyOptions = {};\nconst own = {}.hasOwnProperty;\nconst one = (0,zwitch__WEBPACK_IMPORTED_MODULE_0__.zwitch)(\"type\", {\n    handlers: {\n        root,\n        element,\n        text,\n        comment,\n        doctype\n    }\n});\n/**\n * Transform a hast tree to a `parse5` AST.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Parse5Nodes}\n *   `parse5` node.\n */ function toParse5(tree, options) {\n    const settings = options || emptyOptions;\n    const space = settings.space;\n    return one(tree, space === \"svg\" ? property_information__WEBPACK_IMPORTED_MODULE_1__.svg : property_information__WEBPACK_IMPORTED_MODULE_1__.html);\n}\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Document}\n *   Parse5 node.\n */ function root(node, schema) {\n    /** @type {Parse5Document} */ const result = {\n        nodeName: \"#document\",\n        // @ts-expect-error: `parse5` uses enums, which are actually strings.\n        mode: (node.data || {}).quirksMode ? \"quirks\" : \"no-quirks\",\n        childNodes: []\n    };\n    result.childNodes = all(node.children, result, schema);\n    patch(node, result);\n    return result;\n}\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Fragment}\n *   Parse5 node.\n */ function fragment(node, schema) {\n    /** @type {Parse5Fragment} */ const result = {\n        nodeName: \"#document-fragment\",\n        childNodes: []\n    };\n    result.childNodes = all(node.children, result, schema);\n    patch(node, result);\n    return result;\n}\n/**\n * @param {Doctype} node\n *   Node (hast) to transform.\n * @returns {Parse5Doctype}\n *   Parse5 node.\n */ function doctype(node) {\n    /** @type {Parse5Doctype} */ const result = {\n        nodeName: \"#documentType\",\n        name: \"html\",\n        publicId: \"\",\n        systemId: \"\",\n        parentNode: null\n    };\n    patch(node, result);\n    return result;\n}\n/**\n * @param {Text} node\n *   Node (hast) to transform.\n * @returns {Parse5Text}\n *   Parse5 node.\n */ function text(node) {\n    /** @type {Parse5Text} */ const result = {\n        nodeName: \"#text\",\n        value: node.value,\n        parentNode: null\n    };\n    patch(node, result);\n    return result;\n}\n/**\n * @param {Comment} node\n *   Node (hast) to transform.\n * @returns {Parse5Comment}\n *   Parse5 node.\n */ function comment(node) {\n    /** @type {Parse5Comment} */ const result = {\n        nodeName: \"#comment\",\n        data: node.value,\n        parentNode: null\n    };\n    patch(node, result);\n    return result;\n}\n/**\n * @param {Element} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Element}\n *   Parse5 node.\n */ function element(node, schema) {\n    const parentSchema = schema;\n    let currentSchema = parentSchema;\n    if (node.type === \"element\" && node.tagName.toLowerCase() === \"svg\" && parentSchema.space === \"html\") {\n        currentSchema = property_information__WEBPACK_IMPORTED_MODULE_1__.svg;\n    }\n    /** @type {Array<Parse5Attribute>} */ const attrs = [];\n    /** @type {string} */ let prop;\n    if (node.properties) {\n        for(prop in node.properties){\n            if (prop !== \"children\" && own.call(node.properties, prop)) {\n                const result = createProperty(currentSchema, prop, node.properties[prop]);\n                if (result) {\n                    attrs.push(result);\n                }\n            }\n        }\n    }\n    const space = currentSchema.space;\n    // `html` and `svg` both have a space.\n    (0,devlop__WEBPACK_IMPORTED_MODULE_2__.ok)(space);\n    /** @type {Parse5Element} */ const result = {\n        nodeName: node.tagName,\n        tagName: node.tagName,\n        attrs,\n        // @ts-expect-error: `parse5` types are wrong.\n        namespaceURI: web_namespaces__WEBPACK_IMPORTED_MODULE_3__.webNamespaces[space],\n        childNodes: [],\n        parentNode: null\n    };\n    result.childNodes = all(node.children, result, currentSchema);\n    patch(node, result);\n    if (node.tagName === \"template\" && node.content) {\n        // @ts-expect-error: `parse5` types are wrong.\n        result.content = fragment(node.content, currentSchema);\n    }\n    return result;\n}\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Parse5Attribute | undefined}\n *   Field for runtime, optional.\n */ function createProperty(schema, prop, value) {\n    const info = (0,property_information__WEBPACK_IMPORTED_MODULE_4__.find)(schema, prop);\n    // Ignore nullish and `NaN` values.\n    if (value === false || value === null || value === undefined || typeof value === \"number\" && Number.isNaN(value) || !value && info.boolean) {\n        return;\n    }\n    if (Array.isArray(value)) {\n        // Accept `array`.\n        // Most props are space-separated.\n        value = info.commaSeparated ? (0,comma_separated_tokens__WEBPACK_IMPORTED_MODULE_5__.stringify)(value) : (0,space_separated_tokens__WEBPACK_IMPORTED_MODULE_6__.stringify)(value);\n    }\n    /** @type {Parse5Attribute} */ const attribute = {\n        name: info.attribute,\n        value: value === true ? \"\" : String(value)\n    };\n    if (info.space && info.space !== \"html\" && info.space !== \"svg\") {\n        const index = attribute.name.indexOf(\":\");\n        if (index < 0) {\n            attribute.prefix = \"\";\n        } else {\n            attribute.name = attribute.name.slice(index + 1);\n            attribute.prefix = info.attribute.slice(0, index);\n        }\n        attribute.namespace = web_namespaces__WEBPACK_IMPORTED_MODULE_3__.webNamespaces[info.space];\n    }\n    return attribute;\n}\n/**\n * Transform all hast nodes.\n *\n * @param {Array<RootContent>} children\n *   List of children.\n * @param {Parse5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<Parse5Content>}\n *   Transformed children.\n */ function all(children, parentNode, schema) {\n    let index = -1;\n    /** @type {Array<Parse5Content>} */ const results = [];\n    if (children) {\n        while(++index < children.length){\n            /** @type {Parse5Content} */ const child = one(children[index], schema);\n            child.parentNode = parentNode;\n            results.push(child);\n        }\n    }\n    return results;\n}\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Nodes} from\n *   hast node.\n * @param {Parse5Nodes} to\n *   `parse5` node.\n * @returns {undefined}\n *   Nothing.\n */ function patch(from, to) {\n    const position = from.position;\n    if (position && position.start && position.end) {\n        (0,devlop__WEBPACK_IMPORTED_MODULE_2__.ok)(typeof position.start.offset === \"number\");\n        (0,devlop__WEBPACK_IMPORTED_MODULE_2__.ok)(typeof position.end.offset === \"number\");\n        to.sourceCodeLocation = {\n            startLine: position.start.line,\n            startCol: position.start.column,\n            startOffset: position.start.offset,\n            endLine: position.end.line,\n            endCol: position.end.column,\n            endOffset: position.end.offset\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-to-parse5/lib/index.js\n");

/***/ })

};
;