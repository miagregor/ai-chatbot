"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/mdast-util-gfm-footnote";
exports.ids = ["vendor-chunks/mdast-util-gfm-footnote"];
exports.modules = {

/***/ "(ssr)/./node_modules/mdast-util-gfm-footnote/lib/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/mdast-util-gfm-footnote/lib/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   gfmFootnoteFromMarkdown: () => (/* binding */ gfmFootnoteFromMarkdown),\n/* harmony export */   gfmFootnoteToMarkdown: () => (/* binding */ gfmFootnoteToMarkdown)\n/* harmony export */ });\n/* harmony import */ var devlop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! devlop */ \"(ssr)/./node_modules/devlop/lib/development.js\");\n/* harmony import */ var micromark_util_normalize_identifier__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-normalize-identifier */ \"(ssr)/./node_modules/micromark-util-normalize-identifier/dev/index.js\");\n/**\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */ \n\nfootnoteReference.peek = footnoteReferencePeek;\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */ function gfmFootnoteFromMarkdown() {\n    return {\n        enter: {\n            gfmFootnoteDefinition: enterFootnoteDefinition,\n            gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n            gfmFootnoteCall: enterFootnoteCall,\n            gfmFootnoteCallString: enterFootnoteCallString\n        },\n        exit: {\n            gfmFootnoteDefinition: exitFootnoteDefinition,\n            gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n            gfmFootnoteCall: exitFootnoteCall,\n            gfmFootnoteCallString: exitFootnoteCallString\n        }\n    };\n}\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */ function gfmFootnoteToMarkdown() {\n    return {\n        // This is on by default already.\n        unsafe: [\n            {\n                character: \"[\",\n                inConstruct: [\n                    \"phrasing\",\n                    \"label\",\n                    \"reference\"\n                ]\n            }\n        ],\n        handlers: {\n            footnoteDefinition,\n            footnoteReference\n        }\n    };\n}\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */ function enterFootnoteDefinition(token) {\n    this.enter({\n        type: \"footnoteDefinition\",\n        identifier: \"\",\n        label: \"\",\n        children: []\n    }, token);\n}\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */ function enterFootnoteDefinitionLabelString() {\n    this.buffer();\n}\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */ function exitFootnoteDefinitionLabelString(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    (0,devlop__WEBPACK_IMPORTED_MODULE_0__.ok)(node.type === \"footnoteDefinition\");\n    node.label = label;\n    node.identifier = (0,micromark_util_normalize_identifier__WEBPACK_IMPORTED_MODULE_1__.normalizeIdentifier)(this.sliceSerialize(token)).toLowerCase();\n}\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */ function exitFootnoteDefinition(token) {\n    this.exit(token);\n}\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */ function enterFootnoteCall(token) {\n    this.enter({\n        type: \"footnoteReference\",\n        identifier: \"\",\n        label: \"\"\n    }, token);\n}\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */ function enterFootnoteCallString() {\n    this.buffer();\n}\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */ function exitFootnoteCallString(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    (0,devlop__WEBPACK_IMPORTED_MODULE_0__.ok)(node.type === \"footnoteReference\");\n    node.label = label;\n    node.identifier = (0,micromark_util_normalize_identifier__WEBPACK_IMPORTED_MODULE_1__.normalizeIdentifier)(this.sliceSerialize(token)).toLowerCase();\n}\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */ function exitFootnoteCall(token) {\n    this.exit(token);\n}\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */ function footnoteReference(node, _, state, info) {\n    const tracker = state.createTracker(info);\n    let value = tracker.move(\"[^\");\n    const exit = state.enter(\"footnoteReference\");\n    const subexit = state.enter(\"reference\");\n    value += tracker.move(state.safe(state.associationId(node), {\n        ...tracker.current(),\n        before: value,\n        after: \"]\"\n    }));\n    subexit();\n    exit();\n    value += tracker.move(\"]\");\n    return value;\n}\n/** @type {ToMarkdownHandle} */ function footnoteReferencePeek() {\n    return \"[\";\n}\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */ function footnoteDefinition(node, _, state, info) {\n    const tracker = state.createTracker(info);\n    let value = tracker.move(\"[^\");\n    const exit = state.enter(\"footnoteDefinition\");\n    const subexit = state.enter(\"label\");\n    value += tracker.move(state.safe(state.associationId(node), {\n        ...tracker.current(),\n        before: value,\n        after: \"]\"\n    }));\n    subexit();\n    value += tracker.move(\"]:\" + (node.children && node.children.length > 0 ? \" \" : \"\"));\n    tracker.shift(4);\n    value += tracker.move(state.indentLines(state.containerFlow(node, tracker.current()), map));\n    exit();\n    return value;\n}\n/** @type {Map} */ function map(line, index, blank) {\n    if (index === 0) {\n        return line;\n    }\n    return (blank ? \"\" : \"    \") + line;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-gfm-footnote/lib/index.js\n");

/***/ })

};
;