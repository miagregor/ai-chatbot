/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/refractor";
exports.ids = ["vendor-chunks/refractor"];
exports.modules = {

/***/ "(ssr)/./node_modules/refractor/core.js":
/*!****************************************!*\
  !*** ./node_modules/refractor/core.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n/* global window, self */ // istanbul ignore next - Don't allow Prism to run on page load in browser or\n// to start messaging from workers.\nvar ctx = typeof globalThis === \"object\" ? globalThis : typeof self === \"object\" ? self :  false ? 0 : typeof global === \"object\" ? global : {};\nvar restore = capture();\nctx.Prism = {\n    manual: true,\n    disableWorkerMessageHandler: true\n};\n// Load all stuff in `prism.js` itself, except for `prism-file-highlight.js`.\n// The wrapped non-leaky grammars are loaded instead of Prism’s originals.\nvar h = __webpack_require__(/*! hastscript */ \"(ssr)/./node_modules/hastscript/index.js\");\nvar decode = __webpack_require__(/*! parse-entities */ \"(ssr)/./node_modules/parse-entities/index.js\");\nvar Prism = __webpack_require__(/*! prismjs/components/prism-core */ \"(ssr)/./node_modules/refractor/node_modules/prismjs/components/prism-core.js\");\nvar markup = __webpack_require__(/*! ./lang/markup */ \"(ssr)/./node_modules/refractor/lang/markup.js\");\nvar css = __webpack_require__(/*! ./lang/css */ \"(ssr)/./node_modules/refractor/lang/css.js\");\nvar clike = __webpack_require__(/*! ./lang/clike */ \"(ssr)/./node_modules/refractor/lang/clike.js\");\nvar js = __webpack_require__(/*! ./lang/javascript */ \"(ssr)/./node_modules/refractor/lang/javascript.js\");\nrestore();\nvar own = {}.hasOwnProperty;\n// Inherit.\nfunction Refractor() {}\nRefractor.prototype = Prism;\n// Construct.\nvar refract = new Refractor();\n// Expose.\nmodule.exports = refract;\n// Create.\nrefract.highlight = highlight;\nrefract.register = register;\nrefract.alias = alias;\nrefract.registered = registered;\nrefract.listLanguages = listLanguages;\n// Register bundled grammars.\nregister(markup);\nregister(css);\nregister(clike);\nregister(js);\nrefract.util.encode = encode;\nrefract.Token.stringify = stringify;\nfunction register(grammar) {\n    if (typeof grammar !== \"function\" || !grammar.displayName) {\n        throw new Error(\"Expected `function` for `grammar`, got `\" + grammar + \"`\");\n    }\n    // Do not duplicate registrations.\n    if (refract.languages[grammar.displayName] === undefined) {\n        grammar(refract);\n    }\n}\nfunction alias(name, alias) {\n    var languages = refract.languages;\n    var map = name;\n    var key;\n    var list;\n    var length;\n    var index;\n    if (alias) {\n        map = {};\n        map[name] = alias;\n    }\n    for(key in map){\n        list = map[key];\n        list = typeof list === \"string\" ? [\n            list\n        ] : list;\n        length = list.length;\n        index = -1;\n        while(++index < length){\n            languages[list[index]] = languages[key];\n        }\n    }\n}\nfunction highlight(value, name) {\n    var sup = Prism.highlight;\n    var grammar;\n    if (typeof value !== \"string\") {\n        throw new Error(\"Expected `string` for `value`, got `\" + value + \"`\");\n    }\n    // `name` is a grammar object.\n    if (refract.util.type(name) === \"Object\") {\n        grammar = name;\n        name = null;\n    } else {\n        if (typeof name !== \"string\") {\n            throw new Error(\"Expected `string` for `name`, got `\" + name + \"`\");\n        }\n        if (own.call(refract.languages, name)) {\n            grammar = refract.languages[name];\n        } else {\n            throw new Error(\"Unknown language: `\" + name + \"` is not registered\");\n        }\n    }\n    return sup.call(this, value, grammar, name);\n}\nfunction registered(language) {\n    if (typeof language !== \"string\") {\n        throw new Error(\"Expected `string` for `language`, got `\" + language + \"`\");\n    }\n    return own.call(refract.languages, language);\n}\nfunction listLanguages() {\n    var languages = refract.languages;\n    var list = [];\n    var language;\n    for(language in languages){\n        if (own.call(languages, language) && typeof languages[language] === \"object\") {\n            list.push(language);\n        }\n    }\n    return list;\n}\nfunction stringify(value, language, parent) {\n    var env;\n    if (typeof value === \"string\") {\n        return {\n            type: \"text\",\n            value: value\n        };\n    }\n    if (refract.util.type(value) === \"Array\") {\n        return stringifyAll(value, language);\n    }\n    env = {\n        type: value.type,\n        content: refract.Token.stringify(value.content, language, parent),\n        tag: \"span\",\n        classes: [\n            \"token\",\n            value.type\n        ],\n        attributes: {},\n        language: language,\n        parent: parent\n    };\n    if (value.alias) {\n        env.classes = env.classes.concat(value.alias);\n    }\n    refract.hooks.run(\"wrap\", env);\n    return h(env.tag + \".\" + env.classes.join(\".\"), attributes(env.attributes), env.content);\n}\nfunction stringifyAll(values, language) {\n    var result = [];\n    var length = values.length;\n    var index = -1;\n    var value;\n    while(++index < length){\n        value = values[index];\n        if (value !== \"\" && value !== null && value !== undefined) {\n            result.push(value);\n        }\n    }\n    index = -1;\n    length = result.length;\n    while(++index < length){\n        value = result[index];\n        result[index] = refract.Token.stringify(value, language, result);\n    }\n    return result;\n}\nfunction encode(tokens) {\n    return tokens;\n}\nfunction attributes(attrs) {\n    var key;\n    for(key in attrs){\n        attrs[key] = decode(attrs[key]);\n    }\n    return attrs;\n}\nfunction capture() {\n    var defined = \"Prism\" in ctx;\n    /* istanbul ignore next */ var current = defined ? ctx.Prism : undefined;\n    return restore;\n    function restore() {\n        /* istanbul ignore else - Clean leaks after Prism. */ if (defined) {\n            ctx.Prism = current;\n        } else {\n            delete ctx.Prism;\n        }\n        defined = undefined;\n        current = undefined;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/core.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/index.js":
/*!*****************************************!*\
  !*** ./node_modules/refractor/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractor = __webpack_require__(/*! ./core.js */ \"(ssr)/./node_modules/refractor/core.js\");\nmodule.exports = refractor;\nrefractor.register(__webpack_require__(/*! ./lang/abap.js */ \"(ssr)/./node_modules/refractor/lang/abap.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/abnf.js */ \"(ssr)/./node_modules/refractor/lang/abnf.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/actionscript.js */ \"(ssr)/./node_modules/refractor/lang/actionscript.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/ada.js */ \"(ssr)/./node_modules/refractor/lang/ada.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/agda.js */ \"(ssr)/./node_modules/refractor/lang/agda.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/al.js */ \"(ssr)/./node_modules/refractor/lang/al.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/antlr4.js */ \"(ssr)/./node_modules/refractor/lang/antlr4.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/apacheconf.js */ \"(ssr)/./node_modules/refractor/lang/apacheconf.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/apex.js */ \"(ssr)/./node_modules/refractor/lang/apex.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/apl.js */ \"(ssr)/./node_modules/refractor/lang/apl.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/applescript.js */ \"(ssr)/./node_modules/refractor/lang/applescript.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/aql.js */ \"(ssr)/./node_modules/refractor/lang/aql.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/arduino.js */ \"(ssr)/./node_modules/refractor/lang/arduino.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/arff.js */ \"(ssr)/./node_modules/refractor/lang/arff.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/asciidoc.js */ \"(ssr)/./node_modules/refractor/lang/asciidoc.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/asm6502.js */ \"(ssr)/./node_modules/refractor/lang/asm6502.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/asmatmel.js */ \"(ssr)/./node_modules/refractor/lang/asmatmel.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/aspnet.js */ \"(ssr)/./node_modules/refractor/lang/aspnet.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/autohotkey.js */ \"(ssr)/./node_modules/refractor/lang/autohotkey.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/autoit.js */ \"(ssr)/./node_modules/refractor/lang/autoit.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/avisynth.js */ \"(ssr)/./node_modules/refractor/lang/avisynth.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/avro-idl.js */ \"(ssr)/./node_modules/refractor/lang/avro-idl.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/bash.js */ \"(ssr)/./node_modules/refractor/lang/bash.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/basic.js */ \"(ssr)/./node_modules/refractor/lang/basic.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/batch.js */ \"(ssr)/./node_modules/refractor/lang/batch.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/bbcode.js */ \"(ssr)/./node_modules/refractor/lang/bbcode.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/bicep.js */ \"(ssr)/./node_modules/refractor/lang/bicep.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/birb.js */ \"(ssr)/./node_modules/refractor/lang/birb.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/bison.js */ \"(ssr)/./node_modules/refractor/lang/bison.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/bnf.js */ \"(ssr)/./node_modules/refractor/lang/bnf.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/brainfuck.js */ \"(ssr)/./node_modules/refractor/lang/brainfuck.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/brightscript.js */ \"(ssr)/./node_modules/refractor/lang/brightscript.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/bro.js */ \"(ssr)/./node_modules/refractor/lang/bro.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/bsl.js */ \"(ssr)/./node_modules/refractor/lang/bsl.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/c.js */ \"(ssr)/./node_modules/refractor/lang/c.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/cfscript.js */ \"(ssr)/./node_modules/refractor/lang/cfscript.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/chaiscript.js */ \"(ssr)/./node_modules/refractor/lang/chaiscript.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/cil.js */ \"(ssr)/./node_modules/refractor/lang/cil.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/clojure.js */ \"(ssr)/./node_modules/refractor/lang/clojure.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/cmake.js */ \"(ssr)/./node_modules/refractor/lang/cmake.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/cobol.js */ \"(ssr)/./node_modules/refractor/lang/cobol.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/coffeescript.js */ \"(ssr)/./node_modules/refractor/lang/coffeescript.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/concurnas.js */ \"(ssr)/./node_modules/refractor/lang/concurnas.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/coq.js */ \"(ssr)/./node_modules/refractor/lang/coq.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/cpp.js */ \"(ssr)/./node_modules/refractor/lang/cpp.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/crystal.js */ \"(ssr)/./node_modules/refractor/lang/crystal.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/csharp.js */ \"(ssr)/./node_modules/refractor/lang/csharp.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/cshtml.js */ \"(ssr)/./node_modules/refractor/lang/cshtml.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/csp.js */ \"(ssr)/./node_modules/refractor/lang/csp.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/css-extras.js */ \"(ssr)/./node_modules/refractor/lang/css-extras.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/csv.js */ \"(ssr)/./node_modules/refractor/lang/csv.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/cypher.js */ \"(ssr)/./node_modules/refractor/lang/cypher.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/d.js */ \"(ssr)/./node_modules/refractor/lang/d.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/dart.js */ \"(ssr)/./node_modules/refractor/lang/dart.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/dataweave.js */ \"(ssr)/./node_modules/refractor/lang/dataweave.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/dax.js */ \"(ssr)/./node_modules/refractor/lang/dax.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/dhall.js */ \"(ssr)/./node_modules/refractor/lang/dhall.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/diff.js */ \"(ssr)/./node_modules/refractor/lang/diff.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/django.js */ \"(ssr)/./node_modules/refractor/lang/django.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/dns-zone-file.js */ \"(ssr)/./node_modules/refractor/lang/dns-zone-file.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/docker.js */ \"(ssr)/./node_modules/refractor/lang/docker.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/dot.js */ \"(ssr)/./node_modules/refractor/lang/dot.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/ebnf.js */ \"(ssr)/./node_modules/refractor/lang/ebnf.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/editorconfig.js */ \"(ssr)/./node_modules/refractor/lang/editorconfig.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/eiffel.js */ \"(ssr)/./node_modules/refractor/lang/eiffel.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/ejs.js */ \"(ssr)/./node_modules/refractor/lang/ejs.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/elixir.js */ \"(ssr)/./node_modules/refractor/lang/elixir.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/elm.js */ \"(ssr)/./node_modules/refractor/lang/elm.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/erb.js */ \"(ssr)/./node_modules/refractor/lang/erb.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/erlang.js */ \"(ssr)/./node_modules/refractor/lang/erlang.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/etlua.js */ \"(ssr)/./node_modules/refractor/lang/etlua.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/excel-formula.js */ \"(ssr)/./node_modules/refractor/lang/excel-formula.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/factor.js */ \"(ssr)/./node_modules/refractor/lang/factor.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/false.js */ \"(ssr)/./node_modules/refractor/lang/false.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/firestore-security-rules.js */ \"(ssr)/./node_modules/refractor/lang/firestore-security-rules.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/flow.js */ \"(ssr)/./node_modules/refractor/lang/flow.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/fortran.js */ \"(ssr)/./node_modules/refractor/lang/fortran.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/fsharp.js */ \"(ssr)/./node_modules/refractor/lang/fsharp.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/ftl.js */ \"(ssr)/./node_modules/refractor/lang/ftl.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/gap.js */ \"(ssr)/./node_modules/refractor/lang/gap.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/gcode.js */ \"(ssr)/./node_modules/refractor/lang/gcode.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/gdscript.js */ \"(ssr)/./node_modules/refractor/lang/gdscript.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/gedcom.js */ \"(ssr)/./node_modules/refractor/lang/gedcom.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/gherkin.js */ \"(ssr)/./node_modules/refractor/lang/gherkin.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/git.js */ \"(ssr)/./node_modules/refractor/lang/git.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/glsl.js */ \"(ssr)/./node_modules/refractor/lang/glsl.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/gml.js */ \"(ssr)/./node_modules/refractor/lang/gml.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/gn.js */ \"(ssr)/./node_modules/refractor/lang/gn.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/go-module.js */ \"(ssr)/./node_modules/refractor/lang/go-module.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/go.js */ \"(ssr)/./node_modules/refractor/lang/go.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/graphql.js */ \"(ssr)/./node_modules/refractor/lang/graphql.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/groovy.js */ \"(ssr)/./node_modules/refractor/lang/groovy.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/haml.js */ \"(ssr)/./node_modules/refractor/lang/haml.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/handlebars.js */ \"(ssr)/./node_modules/refractor/lang/handlebars.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/haskell.js */ \"(ssr)/./node_modules/refractor/lang/haskell.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/haxe.js */ \"(ssr)/./node_modules/refractor/lang/haxe.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/hcl.js */ \"(ssr)/./node_modules/refractor/lang/hcl.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/hlsl.js */ \"(ssr)/./node_modules/refractor/lang/hlsl.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/hoon.js */ \"(ssr)/./node_modules/refractor/lang/hoon.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/hpkp.js */ \"(ssr)/./node_modules/refractor/lang/hpkp.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/hsts.js */ \"(ssr)/./node_modules/refractor/lang/hsts.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/http.js */ \"(ssr)/./node_modules/refractor/lang/http.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/ichigojam.js */ \"(ssr)/./node_modules/refractor/lang/ichigojam.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/icon.js */ \"(ssr)/./node_modules/refractor/lang/icon.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/icu-message-format.js */ \"(ssr)/./node_modules/refractor/lang/icu-message-format.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/idris.js */ \"(ssr)/./node_modules/refractor/lang/idris.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/iecst.js */ \"(ssr)/./node_modules/refractor/lang/iecst.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/ignore.js */ \"(ssr)/./node_modules/refractor/lang/ignore.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/inform7.js */ \"(ssr)/./node_modules/refractor/lang/inform7.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/ini.js */ \"(ssr)/./node_modules/refractor/lang/ini.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/io.js */ \"(ssr)/./node_modules/refractor/lang/io.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/j.js */ \"(ssr)/./node_modules/refractor/lang/j.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/java.js */ \"(ssr)/./node_modules/refractor/lang/java.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/javadoc.js */ \"(ssr)/./node_modules/refractor/lang/javadoc.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/javadoclike.js */ \"(ssr)/./node_modules/refractor/lang/javadoclike.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/javastacktrace.js */ \"(ssr)/./node_modules/refractor/lang/javastacktrace.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/jexl.js */ \"(ssr)/./node_modules/refractor/lang/jexl.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/jolie.js */ \"(ssr)/./node_modules/refractor/lang/jolie.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/jq.js */ \"(ssr)/./node_modules/refractor/lang/jq.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/js-extras.js */ \"(ssr)/./node_modules/refractor/lang/js-extras.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/js-templates.js */ \"(ssr)/./node_modules/refractor/lang/js-templates.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/jsdoc.js */ \"(ssr)/./node_modules/refractor/lang/jsdoc.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/json.js */ \"(ssr)/./node_modules/refractor/lang/json.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/json5.js */ \"(ssr)/./node_modules/refractor/lang/json5.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/jsonp.js */ \"(ssr)/./node_modules/refractor/lang/jsonp.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/jsstacktrace.js */ \"(ssr)/./node_modules/refractor/lang/jsstacktrace.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/jsx.js */ \"(ssr)/./node_modules/refractor/lang/jsx.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/julia.js */ \"(ssr)/./node_modules/refractor/lang/julia.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/keepalived.js */ \"(ssr)/./node_modules/refractor/lang/keepalived.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/keyman.js */ \"(ssr)/./node_modules/refractor/lang/keyman.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/kotlin.js */ \"(ssr)/./node_modules/refractor/lang/kotlin.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/kumir.js */ \"(ssr)/./node_modules/refractor/lang/kumir.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/kusto.js */ \"(ssr)/./node_modules/refractor/lang/kusto.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/latex.js */ \"(ssr)/./node_modules/refractor/lang/latex.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/latte.js */ \"(ssr)/./node_modules/refractor/lang/latte.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/less.js */ \"(ssr)/./node_modules/refractor/lang/less.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/lilypond.js */ \"(ssr)/./node_modules/refractor/lang/lilypond.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/liquid.js */ \"(ssr)/./node_modules/refractor/lang/liquid.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/lisp.js */ \"(ssr)/./node_modules/refractor/lang/lisp.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/livescript.js */ \"(ssr)/./node_modules/refractor/lang/livescript.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/llvm.js */ \"(ssr)/./node_modules/refractor/lang/llvm.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/log.js */ \"(ssr)/./node_modules/refractor/lang/log.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/lolcode.js */ \"(ssr)/./node_modules/refractor/lang/lolcode.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/lua.js */ \"(ssr)/./node_modules/refractor/lang/lua.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/magma.js */ \"(ssr)/./node_modules/refractor/lang/magma.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/makefile.js */ \"(ssr)/./node_modules/refractor/lang/makefile.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/markdown.js */ \"(ssr)/./node_modules/refractor/lang/markdown.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/markup-templating.js */ \"(ssr)/./node_modules/refractor/lang/markup-templating.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/matlab.js */ \"(ssr)/./node_modules/refractor/lang/matlab.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/maxscript.js */ \"(ssr)/./node_modules/refractor/lang/maxscript.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/mel.js */ \"(ssr)/./node_modules/refractor/lang/mel.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/mermaid.js */ \"(ssr)/./node_modules/refractor/lang/mermaid.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/mizar.js */ \"(ssr)/./node_modules/refractor/lang/mizar.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/mongodb.js */ \"(ssr)/./node_modules/refractor/lang/mongodb.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/monkey.js */ \"(ssr)/./node_modules/refractor/lang/monkey.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/moonscript.js */ \"(ssr)/./node_modules/refractor/lang/moonscript.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/n1ql.js */ \"(ssr)/./node_modules/refractor/lang/n1ql.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/n4js.js */ \"(ssr)/./node_modules/refractor/lang/n4js.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/nand2tetris-hdl.js */ \"(ssr)/./node_modules/refractor/lang/nand2tetris-hdl.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/naniscript.js */ \"(ssr)/./node_modules/refractor/lang/naniscript.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/nasm.js */ \"(ssr)/./node_modules/refractor/lang/nasm.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/neon.js */ \"(ssr)/./node_modules/refractor/lang/neon.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/nevod.js */ \"(ssr)/./node_modules/refractor/lang/nevod.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/nginx.js */ \"(ssr)/./node_modules/refractor/lang/nginx.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/nim.js */ \"(ssr)/./node_modules/refractor/lang/nim.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/nix.js */ \"(ssr)/./node_modules/refractor/lang/nix.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/nsis.js */ \"(ssr)/./node_modules/refractor/lang/nsis.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/objectivec.js */ \"(ssr)/./node_modules/refractor/lang/objectivec.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/ocaml.js */ \"(ssr)/./node_modules/refractor/lang/ocaml.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/opencl.js */ \"(ssr)/./node_modules/refractor/lang/opencl.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/openqasm.js */ \"(ssr)/./node_modules/refractor/lang/openqasm.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/oz.js */ \"(ssr)/./node_modules/refractor/lang/oz.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/parigp.js */ \"(ssr)/./node_modules/refractor/lang/parigp.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/parser.js */ \"(ssr)/./node_modules/refractor/lang/parser.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/pascal.js */ \"(ssr)/./node_modules/refractor/lang/pascal.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/pascaligo.js */ \"(ssr)/./node_modules/refractor/lang/pascaligo.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/pcaxis.js */ \"(ssr)/./node_modules/refractor/lang/pcaxis.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/peoplecode.js */ \"(ssr)/./node_modules/refractor/lang/peoplecode.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/perl.js */ \"(ssr)/./node_modules/refractor/lang/perl.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/php-extras.js */ \"(ssr)/./node_modules/refractor/lang/php-extras.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/php.js */ \"(ssr)/./node_modules/refractor/lang/php.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/phpdoc.js */ \"(ssr)/./node_modules/refractor/lang/phpdoc.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/plsql.js */ \"(ssr)/./node_modules/refractor/lang/plsql.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/powerquery.js */ \"(ssr)/./node_modules/refractor/lang/powerquery.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/powershell.js */ \"(ssr)/./node_modules/refractor/lang/powershell.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/processing.js */ \"(ssr)/./node_modules/refractor/lang/processing.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/prolog.js */ \"(ssr)/./node_modules/refractor/lang/prolog.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/promql.js */ \"(ssr)/./node_modules/refractor/lang/promql.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/properties.js */ \"(ssr)/./node_modules/refractor/lang/properties.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/protobuf.js */ \"(ssr)/./node_modules/refractor/lang/protobuf.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/psl.js */ \"(ssr)/./node_modules/refractor/lang/psl.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/pug.js */ \"(ssr)/./node_modules/refractor/lang/pug.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/puppet.js */ \"(ssr)/./node_modules/refractor/lang/puppet.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/pure.js */ \"(ssr)/./node_modules/refractor/lang/pure.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/purebasic.js */ \"(ssr)/./node_modules/refractor/lang/purebasic.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/purescript.js */ \"(ssr)/./node_modules/refractor/lang/purescript.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/python.js */ \"(ssr)/./node_modules/refractor/lang/python.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/q.js */ \"(ssr)/./node_modules/refractor/lang/q.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/qml.js */ \"(ssr)/./node_modules/refractor/lang/qml.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/qore.js */ \"(ssr)/./node_modules/refractor/lang/qore.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/qsharp.js */ \"(ssr)/./node_modules/refractor/lang/qsharp.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/r.js */ \"(ssr)/./node_modules/refractor/lang/r.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/racket.js */ \"(ssr)/./node_modules/refractor/lang/racket.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/reason.js */ \"(ssr)/./node_modules/refractor/lang/reason.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/regex.js */ \"(ssr)/./node_modules/refractor/lang/regex.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/rego.js */ \"(ssr)/./node_modules/refractor/lang/rego.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/renpy.js */ \"(ssr)/./node_modules/refractor/lang/renpy.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/rest.js */ \"(ssr)/./node_modules/refractor/lang/rest.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/rip.js */ \"(ssr)/./node_modules/refractor/lang/rip.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/roboconf.js */ \"(ssr)/./node_modules/refractor/lang/roboconf.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/robotframework.js */ \"(ssr)/./node_modules/refractor/lang/robotframework.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/ruby.js */ \"(ssr)/./node_modules/refractor/lang/ruby.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/rust.js */ \"(ssr)/./node_modules/refractor/lang/rust.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/sas.js */ \"(ssr)/./node_modules/refractor/lang/sas.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/sass.js */ \"(ssr)/./node_modules/refractor/lang/sass.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/scala.js */ \"(ssr)/./node_modules/refractor/lang/scala.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/scheme.js */ \"(ssr)/./node_modules/refractor/lang/scheme.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/scss.js */ \"(ssr)/./node_modules/refractor/lang/scss.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/shell-session.js */ \"(ssr)/./node_modules/refractor/lang/shell-session.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/smali.js */ \"(ssr)/./node_modules/refractor/lang/smali.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/smalltalk.js */ \"(ssr)/./node_modules/refractor/lang/smalltalk.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/smarty.js */ \"(ssr)/./node_modules/refractor/lang/smarty.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/sml.js */ \"(ssr)/./node_modules/refractor/lang/sml.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/solidity.js */ \"(ssr)/./node_modules/refractor/lang/solidity.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/solution-file.js */ \"(ssr)/./node_modules/refractor/lang/solution-file.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/soy.js */ \"(ssr)/./node_modules/refractor/lang/soy.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/sparql.js */ \"(ssr)/./node_modules/refractor/lang/sparql.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/splunk-spl.js */ \"(ssr)/./node_modules/refractor/lang/splunk-spl.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/sqf.js */ \"(ssr)/./node_modules/refractor/lang/sqf.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/sql.js */ \"(ssr)/./node_modules/refractor/lang/sql.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/squirrel.js */ \"(ssr)/./node_modules/refractor/lang/squirrel.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/stan.js */ \"(ssr)/./node_modules/refractor/lang/stan.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/stylus.js */ \"(ssr)/./node_modules/refractor/lang/stylus.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/swift.js */ \"(ssr)/./node_modules/refractor/lang/swift.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/systemd.js */ \"(ssr)/./node_modules/refractor/lang/systemd.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/t4-cs.js */ \"(ssr)/./node_modules/refractor/lang/t4-cs.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/t4-templating.js */ \"(ssr)/./node_modules/refractor/lang/t4-templating.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/t4-vb.js */ \"(ssr)/./node_modules/refractor/lang/t4-vb.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/tap.js */ \"(ssr)/./node_modules/refractor/lang/tap.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/tcl.js */ \"(ssr)/./node_modules/refractor/lang/tcl.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/textile.js */ \"(ssr)/./node_modules/refractor/lang/textile.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/toml.js */ \"(ssr)/./node_modules/refractor/lang/toml.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/tremor.js */ \"(ssr)/./node_modules/refractor/lang/tremor.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/tsx.js */ \"(ssr)/./node_modules/refractor/lang/tsx.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/tt2.js */ \"(ssr)/./node_modules/refractor/lang/tt2.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/turtle.js */ \"(ssr)/./node_modules/refractor/lang/turtle.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/twig.js */ \"(ssr)/./node_modules/refractor/lang/twig.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/typescript.js */ \"(ssr)/./node_modules/refractor/lang/typescript.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/typoscript.js */ \"(ssr)/./node_modules/refractor/lang/typoscript.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/unrealscript.js */ \"(ssr)/./node_modules/refractor/lang/unrealscript.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/uorazor.js */ \"(ssr)/./node_modules/refractor/lang/uorazor.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/uri.js */ \"(ssr)/./node_modules/refractor/lang/uri.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/v.js */ \"(ssr)/./node_modules/refractor/lang/v.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/vala.js */ \"(ssr)/./node_modules/refractor/lang/vala.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/vbnet.js */ \"(ssr)/./node_modules/refractor/lang/vbnet.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/velocity.js */ \"(ssr)/./node_modules/refractor/lang/velocity.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/verilog.js */ \"(ssr)/./node_modules/refractor/lang/verilog.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/vhdl.js */ \"(ssr)/./node_modules/refractor/lang/vhdl.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/vim.js */ \"(ssr)/./node_modules/refractor/lang/vim.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/visual-basic.js */ \"(ssr)/./node_modules/refractor/lang/visual-basic.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/warpscript.js */ \"(ssr)/./node_modules/refractor/lang/warpscript.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/wasm.js */ \"(ssr)/./node_modules/refractor/lang/wasm.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/web-idl.js */ \"(ssr)/./node_modules/refractor/lang/web-idl.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/wiki.js */ \"(ssr)/./node_modules/refractor/lang/wiki.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/wolfram.js */ \"(ssr)/./node_modules/refractor/lang/wolfram.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/wren.js */ \"(ssr)/./node_modules/refractor/lang/wren.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/xeora.js */ \"(ssr)/./node_modules/refractor/lang/xeora.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/xml-doc.js */ \"(ssr)/./node_modules/refractor/lang/xml-doc.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/xojo.js */ \"(ssr)/./node_modules/refractor/lang/xojo.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/xquery.js */ \"(ssr)/./node_modules/refractor/lang/xquery.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/yaml.js */ \"(ssr)/./node_modules/refractor/lang/yaml.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/yang.js */ \"(ssr)/./node_modules/refractor/lang/yang.js\"));\nrefractor.register(__webpack_require__(/*! ./lang/zig.js */ \"(ssr)/./node_modules/refractor/lang/zig.js\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/abap.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/abap.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = abap;\nabap.displayName = \"abap\";\nabap.aliases = [];\nfunction abap(Prism) {\n    Prism.languages.abap = {\n        comment: /^\\*.*/m,\n        string: /(`|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        \"string-template\": {\n            pattern: /([|}])(?:\\\\.|[^\\\\|{\\r\\n])*(?=[|{])/,\n            lookbehind: true,\n            alias: \"string\"\n        },\n        /* End Of Line comments should not interfere with strings when the\nquote character occurs within them. We assume a string being highlighted\ninside an EOL comment is more acceptable than the opposite.\n*/ \"eol-comment\": {\n            pattern: /(^|\\s)\".*/m,\n            lookbehind: true,\n            alias: \"comment\"\n        },\n        keyword: {\n            pattern: /(\\s|\\.|^)(?:SCIENTIFIC_WITH_LEADING_ZERO|SCALE_PRESERVING_SCIENTIFIC|RMC_COMMUNICATION_FAILURE|END-ENHANCEMENT-SECTION|MULTIPLY-CORRESPONDING|SUBTRACT-CORRESPONDING|VERIFICATION-MESSAGE|DIVIDE-CORRESPONDING|ENHANCEMENT-SECTION|CURRENCY_CONVERSION|RMC_SYSTEM_FAILURE|START-OF-SELECTION|MOVE-CORRESPONDING|RMC_INVALID_STATUS|CUSTOMER-FUNCTION|END-OF-DEFINITION|ENHANCEMENT-POINT|SYSTEM-EXCEPTIONS|ADD-CORRESPONDING|SCALE_PRESERVING|SELECTION-SCREEN|CURSOR-SELECTION|END-OF-SELECTION|LOAD-OF-PROGRAM|SCROLL-BOUNDARY|SELECTION-TABLE|EXCEPTION-TABLE|IMPLEMENTATIONS|PARAMETER-TABLE|RIGHT-JUSTIFIED|UNIT_CONVERSION|AUTHORITY-CHECK|LIST-PROCESSING|SIGN_AS_POSTFIX|COL_BACKGROUND|IMPLEMENTATION|INTERFACE-POOL|TRANSFORMATION|IDENTIFICATION|ENDENHANCEMENT|LINE-SELECTION|INITIALIZATION|LEFT-JUSTIFIED|SELECT-OPTIONS|SELECTION-SETS|COMMUNICATION|CORRESPONDING|DECIMAL_SHIFT|PRINT-CONTROL|VALUE-REQUEST|CHAIN-REQUEST|FUNCTION-POOL|FIELD-SYMBOLS|FUNCTIONALITY|INVERTED-DATE|SELECTION-SET|CLASS-METHODS|OUTPUT-LENGTH|CLASS-CODING|COL_NEGATIVE|ERRORMESSAGE|FIELD-GROUPS|HELP-REQUEST|NO-EXTENSION|NO-TOPOFPAGE|REDEFINITION|DISPLAY-MODE|ENDINTERFACE|EXIT-COMMAND|FIELD-SYMBOL|NO-SCROLLING|SHORTDUMP-ID|ACCESSPOLICY|CLASS-EVENTS|COL_POSITIVE|DECLARATIONS|ENHANCEMENTS|FILTER-TABLE|SWITCHSTATES|SYNTAX-CHECK|TRANSPORTING|ASYNCHRONOUS|SYNTAX-TRACE|TOKENIZATION|USER-COMMAND|WITH-HEADING|ABAP-SOURCE|BREAK-POINT|CHAIN-INPUT|COMPRESSION|FIXED-POINT|NEW-SECTION|NON-UNICODE|OCCURRENCES|RESPONSIBLE|SYSTEM-CALL|TRACE-TABLE|ABBREVIATED|CHAR-TO-HEX|END-OF-FILE|ENDFUNCTION|ENVIRONMENT|ASSOCIATION|COL_HEADING|EDITOR-CALL|END-OF-PAGE|ENGINEERING|IMPLEMENTED|INTENSIFIED|RADIOBUTTON|SYSTEM-EXIT|TOP-OF-PAGE|TRANSACTION|APPLICATION|CONCATENATE|DESTINATION|ENHANCEMENT|IMMEDIATELY|NO-GROUPING|PRECOMPILED|REPLACEMENT|TITLE-LINES|ACTIVATION|BYTE-ORDER|CLASS-POOL|CONNECTION|CONVERSION|DEFINITION|DEPARTMENT|EXPIRATION|INHERITING|MESSAGE-ID|NO-HEADING|PERFORMING|QUEUE-ONLY|RIGHTSPACE|SCIENTIFIC|STATUSINFO|STRUCTURES|SYNCPOINTS|WITH-TITLE|ATTRIBUTES|BOUNDARIES|CLASS-DATA|COL_NORMAL|DD\\/MM\\/YYYY|DESCENDING|INTERFACES|LINE-COUNT|MM\\/DD\\/YYYY|NON-UNIQUE|PRESERVING|SELECTIONS|STATEMENTS|SUBROUTINE|TRUNCATION|TYPE-POOLS|ARITHMETIC|BACKGROUND|ENDPROVIDE|EXCEPTIONS|IDENTIFIER|INDEX-LINE|OBLIGATORY|PARAMETERS|PERCENTAGE|PUSHBUTTON|RESOLUTION|COMPONENTS|DEALLOCATE|DISCONNECT|DUPLICATES|FIRST-LINE|HEAD-LINES|NO-DISPLAY|OCCURRENCE|RESPECTING|RETURNCODE|SUBMATCHES|TRACE-FILE|ASCENDING|BYPASSING|ENDMODULE|EXCEPTION|EXCLUDING|EXPORTING|INCREMENT|MATCHCODE|PARAMETER|PARTIALLY|PREFERRED|REFERENCE|REPLACING|RETURNING|SELECTION|SEPARATED|SPECIFIED|STATEMENT|TIMESTAMP|TYPE-POOL|ACCEPTING|APPENDAGE|ASSIGNING|COL_GROUP|COMPARING|CONSTANTS|DANGEROUS|IMPORTING|INSTANCES|LEFTSPACE|LOG-POINT|QUICKINFO|READ-ONLY|SCROLLING|SQLSCRIPT|STEP-LOOP|TOP-LINES|TRANSLATE|APPENDING|AUTHORITY|CHARACTER|COMPONENT|CONDITION|DIRECTORY|DUPLICATE|MESSAGING|RECEIVING|SUBSCREEN|ACCORDING|COL_TOTAL|END-LINES|ENDMETHOD|ENDSELECT|EXPANDING|EXTENSION|INCLUDING|INFOTYPES|INTERFACE|INTERVALS|LINE-SIZE|PF-STATUS|PROCEDURE|PROTECTED|REQUESTED|RESUMABLE|RIGHTPLUS|SAP-SPOOL|SECONDARY|STRUCTURE|SUBSTRING|TABLEVIEW|NUMOFCHAR|ADJACENT|ANALYSIS|ASSIGNED|BACKWARD|CHANNELS|CHECKBOX|CONTINUE|CRITICAL|DATAINFO|DD\\/MM\\/YY|DURATION|ENCODING|ENDCLASS|FUNCTION|LEFTPLUS|LINEFEED|MM\\/DD\\/YY|OVERFLOW|RECEIVED|SKIPPING|SORTABLE|STANDARD|SUBTRACT|SUPPRESS|TABSTRIP|TITLEBAR|TRUNCATE|UNASSIGN|WHENEVER|ANALYZER|COALESCE|COMMENTS|CONDENSE|DECIMALS|DEFERRED|ENDWHILE|EXPLICIT|KEYWORDS|MESSAGES|POSITION|PRIORITY|RECEIVER|RENAMING|TIMEZONE|TRAILING|ALLOCATE|CENTERED|CIRCULAR|CONTROLS|CURRENCY|DELETING|DESCRIBE|DISTANCE|ENDCATCH|EXPONENT|EXTENDED|GENERATE|IGNORING|INCLUDES|INTERNAL|MAJOR-ID|MODIFIER|NEW-LINE|OPTIONAL|PROPERTY|ROLLBACK|STARTING|SUPPLIED|ABSTRACT|CHANGING|CONTEXTS|CREATING|CUSTOMER|DATABASE|DAYLIGHT|DEFINING|DISTINCT|DIVISION|ENABLING|ENDCHAIN|ESCAPING|HARMLESS|IMPLICIT|INACTIVE|LANGUAGE|MINOR-ID|MULTIPLY|NEW-PAGE|NO-TITLE|POS_HIGH|SEPARATE|TEXTPOOL|TRANSFER|SELECTOR|DBMAXLEN|ITERATOR|ARCHIVE|BIT-XOR|BYTE-CO|COLLECT|COMMENT|CURRENT|DEFAULT|DISPLAY|ENDFORM|EXTRACT|LEADING|LISTBOX|LOCATOR|MEMBERS|METHODS|NESTING|POS_LOW|PROCESS|PROVIDE|RAISING|RESERVE|SECONDS|SUMMARY|VISIBLE|BETWEEN|BIT-AND|BYTE-CS|CLEANUP|COMPUTE|CONTROL|CONVERT|DATASET|ENDCASE|FORWARD|HEADERS|HOTSPOT|INCLUDE|INVERSE|KEEPING|NO-ZERO|OBJECTS|OVERLAY|PADDING|PATTERN|PROGRAM|REFRESH|SECTION|SUMMING|TESTING|VERSION|WINDOWS|WITHOUT|BIT-NOT|BYTE-CA|BYTE-NA|CASTING|CONTEXT|COUNTRY|DYNAMIC|ENABLED|ENDLOOP|EXECUTE|FRIENDS|HANDLER|HEADING|INITIAL|\\*-INPUT|LOGFILE|MAXIMUM|MINIMUM|NO-GAPS|NO-SIGN|PRAGMAS|PRIMARY|PRIVATE|REDUCED|REPLACE|REQUEST|RESULTS|UNICODE|WARNING|ALIASES|BYTE-CN|BYTE-NS|CALLING|COL_KEY|COLUMNS|CONNECT|ENDEXEC|ENTRIES|EXCLUDE|FILTERS|FURTHER|HELP-ID|LOGICAL|MAPPING|MESSAGE|NAMETAB|OPTIONS|PACKAGE|PERFORM|RECEIVE|STATICS|VARYING|BINDING|CHARLEN|GREATER|XSTRLEN|ACCEPT|APPEND|DETAIL|ELSEIF|ENDING|ENDTRY|FORMAT|FRAMES|GIVING|HASHED|HEADER|IMPORT|INSERT|MARGIN|MODULE|NATIVE|OBJECT|OFFSET|REMOTE|RESUME|SAVING|SIMPLE|SUBMIT|TABBED|TOKENS|UNIQUE|UNPACK|UPDATE|WINDOW|YELLOW|ACTUAL|ASPECT|CENTER|CURSOR|DELETE|DIALOG|DIVIDE|DURING|ERRORS|EVENTS|EXTEND|FILTER|HANDLE|HAVING|IGNORE|LITTLE|MEMORY|NO-GAP|OCCURS|OPTION|PERSON|PLACES|PUBLIC|REDUCE|REPORT|RESULT|SINGLE|SORTED|SWITCH|SYNTAX|TARGET|VALUES|WRITER|ASSERT|BLOCKS|BOUNDS|BUFFER|CHANGE|COLUMN|COMMIT|CONCAT|COPIES|CREATE|DDMMYY|DEFINE|ENDIAN|ESCAPE|EXPAND|KERNEL|LAYOUT|LEGACY|LEVELS|MMDDYY|NUMBER|OUTPUT|RANGES|READER|RETURN|SCREEN|SEARCH|SELECT|SHARED|SOURCE|STABLE|STATIC|SUBKEY|SUFFIX|TABLES|UNWIND|YYMMDD|ASSIGN|BACKUP|BEFORE|BINARY|BIT-OR|BLANKS|CLIENT|CODING|COMMON|DEMAND|DYNPRO|EXCEPT|EXISTS|EXPORT|FIELDS|GLOBAL|GROUPS|LENGTH|LOCALE|MEDIUM|METHOD|MODIFY|NESTED|OTHERS|REJECT|SCROLL|SUPPLY|SYMBOL|ENDFOR|STRLEN|ALIGN|BEGIN|BOUND|ENDAT|ENTRY|EVENT|FINAL|FLUSH|GRANT|INNER|SHORT|USING|WRITE|AFTER|BLACK|BLOCK|CLOCK|COLOR|COUNT|DUMMY|EMPTY|ENDDO|ENDON|GREEN|INDEX|INOUT|LEAVE|LEVEL|LINES|MODIF|ORDER|OUTER|RANGE|RESET|RETRY|RIGHT|SMART|SPLIT|STYLE|TABLE|THROW|UNDER|UNTIL|UPPER|UTF-8|WHERE|ALIAS|BLANK|CLEAR|CLOSE|EXACT|FETCH|FIRST|FOUND|GROUP|LLANG|LOCAL|OTHER|REGEX|SPOOL|TITLE|TYPES|VALID|WHILE|ALPHA|BOXED|CATCH|CHAIN|CHECK|CLASS|COVER|ENDIF|EQUIV|FIELD|FLOOR|FRAME|INPUT|LOWER|MATCH|NODES|PAGES|PRINT|RAISE|ROUND|SHIFT|SPACE|SPOTS|STAMP|STATE|TASKS|TIMES|TRMAC|ULINE|UNION|VALUE|WIDTH|EQUAL|LOG10|TRUNC|BLOB|CASE|CEIL|CLOB|COND|EXIT|FILE|GAPS|HOLD|INCL|INTO|KEEP|KEYS|LAST|LINE|LONG|LPAD|MAIL|MODE|OPEN|PINK|READ|ROWS|TEST|THEN|ZERO|AREA|BACK|BADI|BYTE|CAST|EDIT|EXEC|FAIL|FIND|FKEQ|FONT|FREE|GKEQ|HIDE|INIT|ITNO|LATE|LOOP|MAIN|MARK|MOVE|NEXT|NULL|RISK|ROLE|UNIT|WAIT|ZONE|BASE|CALL|CODE|DATA|DATE|FKGE|GKGE|HIGH|KIND|LEFT|LIST|MASK|MESH|NAME|NODE|PACK|PAGE|POOL|SEND|SIGN|SIZE|SOME|STOP|TASK|TEXT|TIME|USER|VARY|WITH|WORD|BLUE|CONV|COPY|DEEP|ELSE|FORM|FROM|HINT|ICON|JOIN|LIKE|LOAD|ONLY|PART|SCAN|SKIP|SORT|TYPE|UNIX|VIEW|WHEN|WORK|ACOS|ASIN|ATAN|COSH|EACH|FRAC|LESS|RTTI|SINH|SQRT|TANH|AVG|BIT|DIV|ISO|LET|OUT|PAD|SQL|ALL|CI_|CPI|END|LOB|LPI|MAX|MIN|NEW|OLE|RUN|SET|\\?TO|YES|ABS|ADD|AND|BIG|FOR|HDB|JOB|LOW|NOT|SAP|TRY|VIA|XML|ANY|GET|IDS|KEY|MOD|OFF|PUT|RAW|RED|REF|SUM|TAB|XSD|CNT|COS|EXP|LOG|SIN|TAN|XOR|AT|CO|CP|DO|GT|ID|IF|NS|OR|BT|CA|CS|GE|NA|NB|EQ|IN|LT|NE|NO|OF|ON|PF|TO|AS|BY|CN|IS|LE|NP|UP|E|I|M|O|Z|C|X)\\b/i,\n            lookbehind: true\n        },\n        /* Numbers can be only integers. Decimal or Hex appear only as strings */ number: /\\b\\d+\\b/,\n        /* Operators must always be surrounded by whitespace, they cannot be put\nadjacent to operands.\n*/ operator: {\n            pattern: /(\\s)(?:\\*\\*?|<[=>]?|>=?|\\?=|[-+\\/=])(?=\\s)/,\n            lookbehind: true\n        },\n        \"string-operator\": {\n            pattern: /(\\s)&&?(?=\\s)/,\n            lookbehind: true,\n            /* The official editor highlights */ alias: \"keyword\"\n        },\n        \"token-operator\": [\n            {\n                /* Special operators used to access structure components, class methods/attributes, etc. */ pattern: /(\\w)(?:->?|=>|[~|{}])(?=\\w)/,\n                lookbehind: true,\n                alias: \"punctuation\"\n            },\n            {\n                /* Special tokens used do delimit string templates */ pattern: /[|{}]/,\n                alias: \"punctuation\"\n            }\n        ],\n        punctuation: /[,.:()]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/abap.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/abnf.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/abnf.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = abnf;\nabnf.displayName = \"abnf\";\nabnf.aliases = [];\nfunction abnf(Prism) {\n    ;\n    (function(Prism) {\n        var coreRules = \"(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)\";\n        Prism.languages.abnf = {\n            comment: /;.*/,\n            string: {\n                pattern: /(?:%[is])?\"[^\"\\n\\r]*\"/,\n                greedy: true,\n                inside: {\n                    punctuation: /^%[is]/\n                }\n            },\n            range: {\n                pattern: /%(?:b[01]+-[01]+|d\\d+-\\d+|x[A-F\\d]+-[A-F\\d]+)/i,\n                alias: \"number\"\n            },\n            terminal: {\n                pattern: /%(?:b[01]+(?:\\.[01]+)*|d\\d+(?:\\.\\d+)*|x[A-F\\d]+(?:\\.[A-F\\d]+)*)/i,\n                alias: \"number\"\n            },\n            repetition: {\n                pattern: /(^|[^\\w-])(?:\\d*\\*\\d*|\\d+)/,\n                lookbehind: true,\n                alias: \"operator\"\n            },\n            definition: {\n                pattern: /(^[ \\t]*)(?:[a-z][\\w-]*|<[^<>\\r\\n]*>)(?=\\s*=)/m,\n                lookbehind: true,\n                alias: \"keyword\",\n                inside: {\n                    punctuation: /<|>/\n                }\n            },\n            \"core-rule\": {\n                pattern: RegExp(\"(?:(^|[^<\\\\w-])\" + coreRules + \"|<\" + coreRules + \">)(?![\\\\w-])\", \"i\"),\n                lookbehind: true,\n                alias: [\n                    \"rule\",\n                    \"constant\"\n                ],\n                inside: {\n                    punctuation: /<|>/\n                }\n            },\n            rule: {\n                pattern: /(^|[^<\\w-])[a-z][\\w-]*|<[^<>\\r\\n]*>/i,\n                lookbehind: true,\n                inside: {\n                    punctuation: /<|>/\n                }\n            },\n            operator: /=\\/?|\\//,\n            punctuation: /[()\\[\\]]/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYWJuZi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7O0lBQ2YsVUFBVUEsS0FBSztRQUNmLElBQUlDLFlBQ0Y7UUFDRkQsTUFBTUUsU0FBUyxDQUFDTCxJQUFJLEdBQUc7WUFDckJNLFNBQVM7WUFDVEMsUUFBUTtnQkFDTkMsU0FBUztnQkFDVEMsUUFBUTtnQkFDUkMsUUFBUTtvQkFDTkMsYUFBYTtnQkFDZjtZQUNGO1lBQ0FDLE9BQU87Z0JBQ0xKLFNBQVM7Z0JBQ1RLLE9BQU87WUFDVDtZQUNBQyxVQUFVO2dCQUNSTixTQUNFO2dCQUNGSyxPQUFPO1lBQ1Q7WUFDQUUsWUFBWTtnQkFDVlAsU0FBUztnQkFDVFEsWUFBWTtnQkFDWkgsT0FBTztZQUNUO1lBQ0FJLFlBQVk7Z0JBQ1ZULFNBQVM7Z0JBQ1RRLFlBQVk7Z0JBQ1pILE9BQU87Z0JBQ1BILFFBQVE7b0JBQ05DLGFBQWE7Z0JBQ2Y7WUFDRjtZQUNBLGFBQWE7Z0JBQ1hILFNBQVNVLE9BQ1Asb0JBQW9CZCxZQUFZLE9BQU9BLFlBQVksZ0JBQ25EO2dCQUVGWSxZQUFZO2dCQUNaSCxPQUFPO29CQUFDO29CQUFRO2lCQUFXO2dCQUMzQkgsUUFBUTtvQkFDTkMsYUFBYTtnQkFDZjtZQUNGO1lBQ0FRLE1BQU07Z0JBQ0pYLFNBQVM7Z0JBQ1RRLFlBQVk7Z0JBQ1pOLFFBQVE7b0JBQ05DLGFBQWE7Z0JBQ2Y7WUFDRjtZQUNBUyxVQUFVO1lBQ1ZULGFBQWE7UUFDZjtJQUNGLEdBQUdSO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYWJuZi5qcz85YWUzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGFibmZcbmFibmYuZGlzcGxheU5hbWUgPSAnYWJuZidcbmFibmYuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBhYm5mKFByaXNtKSB7XG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIGNvcmVSdWxlcyA9XG4gICAgICAnKD86QUxQSEF8QklUfENIQVJ8Q1J8Q1JMRnxDVEx8RElHSVR8RFFVT1RFfEhFWERJR3xIVEFCfExGfExXU1B8T0NURVR8U1B8VkNIQVJ8V1NQKSdcbiAgICBQcmlzbS5sYW5ndWFnZXMuYWJuZiA9IHtcbiAgICAgIGNvbW1lbnQ6IC87LiovLFxuICAgICAgc3RyaW5nOiB7XG4gICAgICAgIHBhdHRlcm46IC8oPzolW2lzXSk/XCJbXlwiXFxuXFxyXSpcIi8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgcHVuY3R1YXRpb246IC9eJVtpc10vXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICByYW5nZToge1xuICAgICAgICBwYXR0ZXJuOiAvJSg/OmJbMDFdKy1bMDFdK3xkXFxkKy1cXGQrfHhbQS1GXFxkXSstW0EtRlxcZF0rKS9pLFxuICAgICAgICBhbGlhczogJ251bWJlcidcbiAgICAgIH0sXG4gICAgICB0ZXJtaW5hbDoge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8lKD86YlswMV0rKD86XFwuWzAxXSspKnxkXFxkKyg/OlxcLlxcZCspKnx4W0EtRlxcZF0rKD86XFwuW0EtRlxcZF0rKSopL2ksXG4gICAgICAgIGFsaWFzOiAnbnVtYmVyJ1xuICAgICAgfSxcbiAgICAgIHJlcGV0aXRpb246IHtcbiAgICAgICAgcGF0dGVybjogLyhefFteXFx3LV0pKD86XFxkKlxcKlxcZCp8XFxkKykvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogJ29wZXJhdG9yJ1xuICAgICAgfSxcbiAgICAgIGRlZmluaXRpb246IHtcbiAgICAgICAgcGF0dGVybjogLyheWyBcXHRdKikoPzpbYS16XVtcXHctXSp8PFtePD5cXHJcXG5dKj4pKD89XFxzKj0pL20sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiAna2V5d29yZCcsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIHB1bmN0dWF0aW9uOiAvPHw+L1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgJ2NvcmUtcnVsZSc6IHtcbiAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgICcoPzooXnxbXjxcXFxcdy1dKScgKyBjb3JlUnVsZXMgKyAnfDwnICsgY29yZVJ1bGVzICsgJz4pKD8hW1xcXFx3LV0pJyxcbiAgICAgICAgICAnaSdcbiAgICAgICAgKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6IFsncnVsZScsICdjb25zdGFudCddLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjogLzx8Pi9cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHJ1bGU6IHtcbiAgICAgICAgcGF0dGVybjogLyhefFtePFxcdy1dKVthLXpdW1xcdy1dKnw8W148Plxcclxcbl0qPi9pLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjogLzx8Pi9cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIG9wZXJhdG9yOiAvPVxcLz98XFwvLyxcbiAgICAgIHB1bmN0dWF0aW9uOiAvWygpXFxbXFxdXS9cbiAgICB9XG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhYm5mIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJjb3JlUnVsZXMiLCJsYW5ndWFnZXMiLCJjb21tZW50Iiwic3RyaW5nIiwicGF0dGVybiIsImdyZWVkeSIsImluc2lkZSIsInB1bmN0dWF0aW9uIiwicmFuZ2UiLCJhbGlhcyIsInRlcm1pbmFsIiwicmVwZXRpdGlvbiIsImxvb2tiZWhpbmQiLCJkZWZpbml0aW9uIiwiUmVnRXhwIiwicnVsZSIsIm9wZXJhdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/abnf.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/actionscript.js":
/*!*****************************************************!*\
  !*** ./node_modules/refractor/lang/actionscript.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = actionscript;\nactionscript.displayName = \"actionscript\";\nactionscript.aliases = [];\nfunction actionscript(Prism) {\n    Prism.languages.actionscript = Prism.languages.extend(\"javascript\", {\n        keyword: /\\b(?:as|break|case|catch|class|const|default|delete|do|dynamic|each|else|extends|final|finally|for|function|get|if|implements|import|in|include|instanceof|interface|internal|is|namespace|native|new|null|override|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|use|var|void|while|with)\\b/,\n        operator: /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n    });\n    Prism.languages.actionscript[\"class-name\"].alias = \"function\" // doesn't work with AS because AS is too complex\n    ;\n    delete Prism.languages.actionscript[\"parameter\"];\n    delete Prism.languages.actionscript[\"literal-property\"];\n    if (Prism.languages.markup) {\n        Prism.languages.insertBefore(\"actionscript\", \"string\", {\n            xml: {\n                pattern: /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n                lookbehind: true,\n                inside: Prism.languages.markup\n            }\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYWN0aW9uc2NyaXB0LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLGFBQWFDLFdBQVcsR0FBRztBQUMzQkQsYUFBYUUsT0FBTyxHQUFHLEVBQUU7QUFDekIsU0FBU0YsYUFBYUcsS0FBSztJQUN6QkEsTUFBTUMsU0FBUyxDQUFDSixZQUFZLEdBQUdHLE1BQU1DLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLGNBQWM7UUFDbEVDLFNBQ0U7UUFDRkMsVUFBVTtJQUNaO0lBQ0FKLE1BQU1DLFNBQVMsQ0FBQ0osWUFBWSxDQUFDLGFBQWEsQ0FBQ1EsS0FBSyxHQUFHLFdBQVcsaURBQWlEOztJQUMvRyxPQUFPTCxNQUFNQyxTQUFTLENBQUNKLFlBQVksQ0FBQyxZQUFZO0lBQ2hELE9BQU9HLE1BQU1DLFNBQVMsQ0FBQ0osWUFBWSxDQUFDLG1CQUFtQjtJQUN2RCxJQUFJRyxNQUFNQyxTQUFTLENBQUNLLE1BQU0sRUFBRTtRQUMxQk4sTUFBTUMsU0FBUyxDQUFDTSxZQUFZLENBQUMsZ0JBQWdCLFVBQVU7WUFDckRDLEtBQUs7Z0JBQ0hDLFNBQ0U7Z0JBQ0ZDLFlBQVk7Z0JBQ1pDLFFBQVFYLE1BQU1DLFNBQVMsQ0FBQ0ssTUFBTTtZQUNoQztRQUNGO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hY3Rpb25zY3JpcHQuanM/MWMyYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBhY3Rpb25zY3JpcHRcbmFjdGlvbnNjcmlwdC5kaXNwbGF5TmFtZSA9ICdhY3Rpb25zY3JpcHQnXG5hY3Rpb25zY3JpcHQuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBhY3Rpb25zY3JpcHQoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmFjdGlvbnNjcmlwdCA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2phdmFzY3JpcHQnLCB7XG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzphc3xicmVha3xjYXNlfGNhdGNofGNsYXNzfGNvbnN0fGRlZmF1bHR8ZGVsZXRlfGRvfGR5bmFtaWN8ZWFjaHxlbHNlfGV4dGVuZHN8ZmluYWx8ZmluYWxseXxmb3J8ZnVuY3Rpb258Z2V0fGlmfGltcGxlbWVudHN8aW1wb3J0fGlufGluY2x1ZGV8aW5zdGFuY2VvZnxpbnRlcmZhY2V8aW50ZXJuYWx8aXN8bmFtZXNwYWNlfG5hdGl2ZXxuZXd8bnVsbHxvdmVycmlkZXxwYWNrYWdlfHByaXZhdGV8cHJvdGVjdGVkfHB1YmxpY3xyZXR1cm58c2V0fHN0YXRpY3xzdXBlcnxzd2l0Y2h8dGhpc3x0aHJvd3x0cnl8dHlwZW9mfHVzZXx2YXJ8dm9pZHx3aGlsZXx3aXRoKVxcYi8sXG4gICAgb3BlcmF0b3I6IC9cXCtcXCt8LS18KD86WytcXC0qXFwvJV5dfCYmP3xcXHxcXHw/fDw8P3w+Pj8+P3xbIT1dPT8pPT98W34/QF0vXG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5hY3Rpb25zY3JpcHRbJ2NsYXNzLW5hbWUnXS5hbGlhcyA9ICdmdW5jdGlvbicgLy8gZG9lc24ndCB3b3JrIHdpdGggQVMgYmVjYXVzZSBBUyBpcyB0b28gY29tcGxleFxuICBkZWxldGUgUHJpc20ubGFuZ3VhZ2VzLmFjdGlvbnNjcmlwdFsncGFyYW1ldGVyJ11cbiAgZGVsZXRlIFByaXNtLmxhbmd1YWdlcy5hY3Rpb25zY3JpcHRbJ2xpdGVyYWwtcHJvcGVydHknXVxuICBpZiAoUHJpc20ubGFuZ3VhZ2VzLm1hcmt1cCkge1xuICAgIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ2FjdGlvbnNjcmlwdCcsICdzdHJpbmcnLCB7XG4gICAgICB4bWw6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKF58W14uXSk8XFwvP1xcdysoPzpcXHMrW15cXHM+XFwvPV0rPShcInwnKSg/OlxcXFxbXFxzXFxTXXwoPyFcXDIpW15cXFxcXSkqXFwyKSpcXHMqXFwvPz4vLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy5tYXJrdXBcbiAgICAgIH1cbiAgICB9KVxuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImFjdGlvbnNjcmlwdCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwia2V5d29yZCIsIm9wZXJhdG9yIiwiYWxpYXMiLCJtYXJrdXAiLCJpbnNlcnRCZWZvcmUiLCJ4bWwiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImluc2lkZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/actionscript.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/ada.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/ada.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = ada;\nada.displayName = \"ada\";\nada.aliases = [];\nfunction ada(Prism) {\n    Prism.languages.ada = {\n        comment: /--.*/,\n        string: /\"(?:\"\"|[^\"\\r\\f\\n])*\"/,\n        number: [\n            {\n                pattern: /\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i\n            },\n            {\n                pattern: /\\b\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:E[+-]?\\d(?:_?\\d)*)?\\b/i\n            }\n        ],\n        \"attr-name\": /\\b'\\w+/,\n        keyword: /\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|new|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|return|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,\n        boolean: /\\b(?:false|true)\\b/i,\n        operator: /<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,\n        punctuation: /\\.\\.?|[,;():]/,\n        char: /'.'/,\n        variable: /\\b[a-z](?:\\w)*\\b/i\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYWRhLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLElBQUlDLFdBQVcsR0FBRztBQUNsQkQsSUFBSUUsT0FBTyxHQUFHLEVBQUU7QUFDaEIsU0FBU0YsSUFBSUcsS0FBSztJQUNoQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7UUFDVEMsUUFBUTtRQUNSQyxRQUFRO1lBQ047Z0JBQ0VDLFNBQ0U7WUFDSjtZQUNBO2dCQUNFQSxTQUFTO1lBQ1g7U0FDRDtRQUNELGFBQWE7UUFDYkMsU0FDRTtRQUNGQyxTQUFTO1FBQ1RDLFVBQVU7UUFDVkMsYUFBYTtRQUNiQyxNQUFNO1FBQ05DLFVBQVU7SUFDWjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2FkYS5qcz9jZTMzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGFkYVxuYWRhLmRpc3BsYXlOYW1lID0gJ2FkYSdcbmFkYS5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGFkYShQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuYWRhID0ge1xuICAgIGNvbW1lbnQ6IC8tLS4qLyxcbiAgICBzdHJpbmc6IC9cIig/OlwiXCJ8W15cIlxcclxcZlxcbl0pKlwiLyxcbiAgICBudW1iZXI6IFtcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvXFxiXFxkKD86Xz9cXGQpKiNbXFxkQS1GXSg/Ol8/W1xcZEEtRl0pKig/OlxcLltcXGRBLUZdKD86Xz9bXFxkQS1GXSkqKT8jKD86RVsrLV0/XFxkKD86Xz9cXGQpKik/L2lcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC9cXGJcXGQoPzpfP1xcZCkqKD86XFwuXFxkKD86Xz9cXGQpKik/KD86RVsrLV0/XFxkKD86Xz9cXGQpKik/XFxiL2lcbiAgICAgIH1cbiAgICBdLFxuICAgICdhdHRyLW5hbWUnOiAvXFxiJ1xcdysvLFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YWJvcnR8YWJzfGFic3RyYWN0fGFjY2VwdHxhY2Nlc3N8YWxpYXNlZHxhbGx8YW5kfGFycmF5fGF0fGJlZ2lufGJvZHl8Y2FzZXxjb25zdGFudHxkZWNsYXJlfGRlbGF5fGRlbHRhfGRpZ2l0c3xkb3xlbHNlfGVsc2lmfGVuZHxlbnRyeXxleGNlcHRpb258ZXhpdHxmb3J8ZnVuY3Rpb258Z2VuZXJpY3xnb3RvfGlmfGlufGludGVyZmFjZXxpc3xsaW1pdGVkfGxvb3B8bW9kfG5ld3xub3R8bnVsbHxvZnxvdGhlcnN8b3V0fG92ZXJyaWRpbmd8cGFja2FnZXxwcmFnbWF8cHJpdmF0ZXxwcm9jZWR1cmV8cHJvdGVjdGVkfHJhaXNlfHJhbmdlfHJlY29yZHxyZW18cmVuYW1lc3xyZXF1ZXVlfHJldHVybnxyZXZlcnNlfHNlbGVjdHxzZXBhcmF0ZXxzb21lfHN1YnR5cGV8c3luY2hyb25pemVkfHRhZ2dlZHx0YXNrfHRlcm1pbmF0ZXx0aGVufHR5cGV8dW50aWx8dXNlfHdoZW58d2hpbGV8d2l0aHx4b3IpXFxiL2ksXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiL2ksXG4gICAgb3BlcmF0b3I6IC88Wz0+XT98Pj0/fD0+P3w6PXxcXC89P3xcXCpcXCo/fFsmKy1dLyxcbiAgICBwdW5jdHVhdGlvbjogL1xcLlxcLj98Wyw7KCk6XS8sXG4gICAgY2hhcjogLycuJy8sXG4gICAgdmFyaWFibGU6IC9cXGJbYS16XSg/OlxcdykqXFxiL2lcbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhZGEiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJzdHJpbmciLCJudW1iZXIiLCJwYXR0ZXJuIiwia2V5d29yZCIsImJvb2xlYW4iLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIiwiY2hhciIsInZhcmlhYmxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/ada.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/agda.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/agda.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = agda;\nagda.displayName = \"agda\";\nagda.aliases = [];\nfunction agda(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.agda = {\n            comment: /\\{-[\\s\\S]*?(?:-\\}|$)|--.*/,\n            string: {\n                pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n                greedy: true\n            },\n            punctuation: /[(){}⦃⦄.;@]/,\n            \"class-name\": {\n                pattern: /((?:data|record) +)\\S+/,\n                lookbehind: true\n            },\n            function: {\n                pattern: /(^[ \\t]*)(?!\\s)[^:\\r\\n]+(?=:)/m,\n                lookbehind: true\n            },\n            operator: {\n                pattern: /(^\\s*|\\s)(?:[=|:∀→λ\\\\?_]|->)(?=\\s)/,\n                lookbehind: true\n            },\n            keyword: /\\b(?:Set|abstract|constructor|data|eta-equality|field|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\\b/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYWdkYS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7O0lBQ2YsVUFBVUEsS0FBSztRQUNmQSxNQUFNQyxTQUFTLENBQUNKLElBQUksR0FBRztZQUNyQkssU0FBUztZQUNUQyxRQUFRO2dCQUNOQyxTQUFTO2dCQUNUQyxRQUFRO1lBQ1Y7WUFDQUMsYUFBYTtZQUNiLGNBQWM7Z0JBQ1pGLFNBQVM7Z0JBQ1RHLFlBQVk7WUFDZDtZQUNBQyxVQUFVO2dCQUNSSixTQUFTO2dCQUNURyxZQUFZO1lBQ2Q7WUFDQUUsVUFBVTtnQkFDUkwsU0FBUztnQkFDVEcsWUFBWTtZQUNkO1lBQ0FHLFNBQ0U7UUFDSjtJQUNGLEdBQUdWO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYWdkYS5qcz85YTMzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGFnZGFcbmFnZGEuZGlzcGxheU5hbWUgPSAnYWdkYSdcbmFnZGEuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBhZ2RhKFByaXNtKSB7XG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgUHJpc20ubGFuZ3VhZ2VzLmFnZGEgPSB7XG4gICAgICBjb21tZW50OiAvXFx7LVtcXHNcXFNdKj8oPzotXFx9fCQpfC0tLiovLFxuICAgICAgc3RyaW5nOiB7XG4gICAgICAgIHBhdHRlcm46IC9cIig/OlxcXFwoPzpcXHJcXG58W1xcc1xcU10pfFteXFxcXFxcclxcblwiXSkqXCIvLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICBwdW5jdHVhdGlvbjogL1soKXt94qaD4qaELjtAXS8sXG4gICAgICAnY2xhc3MtbmFtZSc6IHtcbiAgICAgICAgcGF0dGVybjogLygoPzpkYXRhfHJlY29yZCkgKylcXFMrLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGZ1bmN0aW9uOiB7XG4gICAgICAgIHBhdHRlcm46IC8oXlsgXFx0XSopKD8hXFxzKVteOlxcclxcbl0rKD89OikvbSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIG9wZXJhdG9yOiB7XG4gICAgICAgIHBhdHRlcm46IC8oXlxccyp8XFxzKSg/Ols9fDriiIDihpLOu1xcXFw/X118LT4pKD89XFxzKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBrZXl3b3JkOlxuICAgICAgICAvXFxiKD86U2V0fGFic3RyYWN0fGNvbnN0cnVjdG9yfGRhdGF8ZXRhLWVxdWFsaXR5fGZpZWxkfGZvcmFsbHxoaWRpbmd8aW1wb3J0fGlufGluZHVjdGl2ZXxpbmZpeHxpbmZpeGx8aW5maXhyfGluc3RhbmNlfGxldHxtYWNyb3xtb2R1bGV8bXV0dWFsfG5vLWV0YS1lcXVhbGl0eXxvcGVufG92ZXJsYXB8cGF0dGVybnxwb3N0dWxhdGV8cHJpbWl0aXZlfHByaXZhdGV8cHVibGljfHF1b3RlfHF1b3RlQ29udGV4dHxxdW90ZUdvYWx8cXVvdGVUZXJtfHJlY29yZHxyZW5hbWluZ3xyZXdyaXRlfHN5bnRheHx0YWN0aWN8dW5xdW90ZXx1bnF1b3RlRGVjbHx1bnF1b3RlRGVmfHVzaW5nfHZhcmlhYmxlfHdoZXJlfHdpdGgpXFxiL1xuICAgIH1cbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImFnZGEiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZ3JlZWR5IiwicHVuY3R1YXRpb24iLCJsb29rYmVoaW5kIiwiZnVuY3Rpb24iLCJvcGVyYXRvciIsImtleXdvcmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/agda.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/al.js":
/*!*******************************************!*\
  !*** ./node_modules/refractor/lang/al.js ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = al;\nal.displayName = \"al\";\nal.aliases = [];\nfunction al(Prism) {\n    // based on https://github.com/microsoft/AL/blob/master/grammar/alsyntax.tmlanguage\n    Prism.languages.al = {\n        comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        string: {\n            pattern: /'(?:''|[^'\\r\\n])*'(?!')|\"(?:\"\"|[^\"\\r\\n])*\"(?!\")/,\n            greedy: true\n        },\n        function: {\n            pattern: /(\\b(?:event|procedure|trigger)\\s+|(?:^|[^.])\\.\\s*)[a-z_]\\w*(?=\\s*\\()/i,\n            lookbehind: true\n        },\n        keyword: [\n            // keywords\n            /\\b(?:array|asserterror|begin|break|case|do|downto|else|end|event|exit|for|foreach|function|if|implements|in|indataset|interface|internal|local|of|procedure|program|protected|repeat|runonclient|securityfiltering|suppressdispose|temporary|then|to|trigger|until|var|while|with|withevents)\\b/i,\n            /\\b(?:action|actions|addafter|addbefore|addfirst|addlast|area|assembly|chartpart|codeunit|column|controladdin|cuegroup|customizes|dataitem|dataset|dotnet|elements|enum|enumextension|extends|field|fieldattribute|fieldelement|fieldgroup|fieldgroups|fields|filter|fixed|grid|group|key|keys|label|labels|layout|modify|moveafter|movebefore|movefirst|movelast|page|pagecustomization|pageextension|part|profile|query|repeater|report|requestpage|schema|separator|systempart|table|tableelement|tableextension|textattribute|textelement|type|usercontrol|value|xmlport)\\b/i\n        ],\n        number: /\\b(?:0x[\\da-f]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)(?:F|LL?|U(?:LL?)?)?\\b/i,\n        boolean: /\\b(?:false|true)\\b/i,\n        variable: /\\b(?:Curr(?:FieldNo|Page|Report)|x?Rec|RequestOptionsPage)\\b/,\n        \"class-name\": /\\b(?:automation|biginteger|bigtext|blob|boolean|byte|char|clienttype|code|completiontriggererrorlevel|connectiontype|database|dataclassification|datascope|date|dateformula|datetime|decimal|defaultlayout|dialog|dictionary|dotnetassembly|dotnettypedeclaration|duration|errorinfo|errortype|executioncontext|executionmode|fieldclass|fieldref|fieldtype|file|filterpagebuilder|guid|httpclient|httpcontent|httpheaders|httprequestmessage|httpresponsemessage|instream|integer|joker|jsonarray|jsonobject|jsontoken|jsonvalue|keyref|list|moduledependencyinfo|moduleinfo|none|notification|notificationscope|objecttype|option|outstream|pageresult|record|recordid|recordref|reportformat|securityfilter|sessionsettings|tableconnectiontype|tablefilter|testaction|testfield|testfilterfield|testpage|testpermissions|testrequestpage|text|textbuilder|textconst|textencoding|time|transactionmodel|transactiontype|variant|verbosity|version|view|views|webserviceactioncontext|webserviceactionresultcode|xmlattribute|xmlattributecollection|xmlcdata|xmlcomment|xmldeclaration|xmldocument|xmldocumenttype|xmlelement|xmlnamespacemanager|xmlnametable|xmlnode|xmlnodelist|xmlprocessinginstruction|xmlreadoptions|xmltext|xmlwriteoptions)\\b/i,\n        operator: /\\.\\.|:[=:]|[-+*/]=?|<>|[<>]=?|=|\\b(?:and|div|mod|not|or|xor)\\b/i,\n        punctuation: /[()\\[\\]{}:.;,]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYWwuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsR0FBR0MsV0FBVyxHQUFHO0FBQ2pCRCxHQUFHRSxPQUFPLEdBQUcsRUFBRTtBQUNmLFNBQVNGLEdBQUdHLEtBQUs7SUFDZixtRkFBbUY7SUFDbkZBLE1BQU1DLFNBQVMsQ0FBQ0osRUFBRSxHQUFHO1FBQ25CSyxTQUFTO1FBQ1RDLFFBQVE7WUFDTkMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsVUFBVTtZQUNSRixTQUNFO1lBQ0ZHLFlBQVk7UUFDZDtRQUNBQyxTQUFTO1lBQ1AsV0FBVztZQUNYO1lBQ0E7U0FDRDtRQUNEQyxRQUNFO1FBQ0ZDLFNBQVM7UUFDVEMsVUFBVTtRQUNWLGNBQ0U7UUFDRkMsVUFBVTtRQUNWQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hbC5qcz81Zjk0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGFsXG5hbC5kaXNwbGF5TmFtZSA9ICdhbCdcbmFsLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gYWwoUHJpc20pIHtcbiAgLy8gYmFzZWQgb24gaHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC9BTC9ibG9iL21hc3Rlci9ncmFtbWFyL2Fsc3ludGF4LnRtbGFuZ3VhZ2VcbiAgUHJpc20ubGFuZ3VhZ2VzLmFsID0ge1xuICAgIGNvbW1lbnQ6IC9cXC9cXC8uKnxcXC9cXCpbXFxzXFxTXSo/XFwqXFwvLyxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC8nKD86Jyd8W14nXFxyXFxuXSkqJyg/IScpfFwiKD86XCJcInxbXlwiXFxyXFxuXSkqXCIoPyFcIikvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBmdW5jdGlvbjoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhcXGIoPzpldmVudHxwcm9jZWR1cmV8dHJpZ2dlcilcXHMrfCg/Ol58W14uXSlcXC5cXHMqKVthLXpfXVxcdyooPz1cXHMqXFwoKS9pLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAga2V5d29yZDogW1xuICAgICAgLy8ga2V5d29yZHNcbiAgICAgIC9cXGIoPzphcnJheXxhc3NlcnRlcnJvcnxiZWdpbnxicmVha3xjYXNlfGRvfGRvd250b3xlbHNlfGVuZHxldmVudHxleGl0fGZvcnxmb3JlYWNofGZ1bmN0aW9ufGlmfGltcGxlbWVudHN8aW58aW5kYXRhc2V0fGludGVyZmFjZXxpbnRlcm5hbHxsb2NhbHxvZnxwcm9jZWR1cmV8cHJvZ3JhbXxwcm90ZWN0ZWR8cmVwZWF0fHJ1bm9uY2xpZW50fHNlY3VyaXR5ZmlsdGVyaW5nfHN1cHByZXNzZGlzcG9zZXx0ZW1wb3Jhcnl8dGhlbnx0b3x0cmlnZ2VyfHVudGlsfHZhcnx3aGlsZXx3aXRofHdpdGhldmVudHMpXFxiL2ksIC8vIG9iamVjdHMgYW5kIG1ldGFkYXRhIHRoYXQgYXJlIHVzZWQgbGlrZSBrZXl3b3Jkc1xuICAgICAgL1xcYig/OmFjdGlvbnxhY3Rpb25zfGFkZGFmdGVyfGFkZGJlZm9yZXxhZGRmaXJzdHxhZGRsYXN0fGFyZWF8YXNzZW1ibHl8Y2hhcnRwYXJ0fGNvZGV1bml0fGNvbHVtbnxjb250cm9sYWRkaW58Y3VlZ3JvdXB8Y3VzdG9taXplc3xkYXRhaXRlbXxkYXRhc2V0fGRvdG5ldHxlbGVtZW50c3xlbnVtfGVudW1leHRlbnNpb258ZXh0ZW5kc3xmaWVsZHxmaWVsZGF0dHJpYnV0ZXxmaWVsZGVsZW1lbnR8ZmllbGRncm91cHxmaWVsZGdyb3Vwc3xmaWVsZHN8ZmlsdGVyfGZpeGVkfGdyaWR8Z3JvdXB8a2V5fGtleXN8bGFiZWx8bGFiZWxzfGxheW91dHxtb2RpZnl8bW92ZWFmdGVyfG1vdmViZWZvcmV8bW92ZWZpcnN0fG1vdmVsYXN0fHBhZ2V8cGFnZWN1c3RvbWl6YXRpb258cGFnZWV4dGVuc2lvbnxwYXJ0fHByb2ZpbGV8cXVlcnl8cmVwZWF0ZXJ8cmVwb3J0fHJlcXVlc3RwYWdlfHNjaGVtYXxzZXBhcmF0b3J8c3lzdGVtcGFydHx0YWJsZXx0YWJsZWVsZW1lbnR8dGFibGVleHRlbnNpb258dGV4dGF0dHJpYnV0ZXx0ZXh0ZWxlbWVudHx0eXBlfHVzZXJjb250cm9sfHZhbHVlfHhtbHBvcnQpXFxiL2lcbiAgICBdLFxuICAgIG51bWJlcjpcbiAgICAgIC9cXGIoPzoweFtcXGRhLWZdK3woPzpcXGQrKD86XFwuXFxkKik/fFxcLlxcZCspKD86ZVsrLV0/XFxkKyk/KSg/OkZ8TEw/fFUoPzpMTD8pPyk/XFxiL2ksXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiL2ksXG4gICAgdmFyaWFibGU6IC9cXGIoPzpDdXJyKD86RmllbGROb3xQYWdlfFJlcG9ydCl8eD9SZWN8UmVxdWVzdE9wdGlvbnNQYWdlKVxcYi8sXG4gICAgJ2NsYXNzLW5hbWUnOlxuICAgICAgL1xcYig/OmF1dG9tYXRpb258YmlnaW50ZWdlcnxiaWd0ZXh0fGJsb2J8Ym9vbGVhbnxieXRlfGNoYXJ8Y2xpZW50dHlwZXxjb2RlfGNvbXBsZXRpb250cmlnZ2VyZXJyb3JsZXZlbHxjb25uZWN0aW9udHlwZXxkYXRhYmFzZXxkYXRhY2xhc3NpZmljYXRpb258ZGF0YXNjb3BlfGRhdGV8ZGF0ZWZvcm11bGF8ZGF0ZXRpbWV8ZGVjaW1hbHxkZWZhdWx0bGF5b3V0fGRpYWxvZ3xkaWN0aW9uYXJ5fGRvdG5ldGFzc2VtYmx5fGRvdG5ldHR5cGVkZWNsYXJhdGlvbnxkdXJhdGlvbnxlcnJvcmluZm98ZXJyb3J0eXBlfGV4ZWN1dGlvbmNvbnRleHR8ZXhlY3V0aW9ubW9kZXxmaWVsZGNsYXNzfGZpZWxkcmVmfGZpZWxkdHlwZXxmaWxlfGZpbHRlcnBhZ2VidWlsZGVyfGd1aWR8aHR0cGNsaWVudHxodHRwY29udGVudHxodHRwaGVhZGVyc3xodHRwcmVxdWVzdG1lc3NhZ2V8aHR0cHJlc3BvbnNlbWVzc2FnZXxpbnN0cmVhbXxpbnRlZ2VyfGpva2VyfGpzb25hcnJheXxqc29ub2JqZWN0fGpzb250b2tlbnxqc29udmFsdWV8a2V5cmVmfGxpc3R8bW9kdWxlZGVwZW5kZW5jeWluZm98bW9kdWxlaW5mb3xub25lfG5vdGlmaWNhdGlvbnxub3RpZmljYXRpb25zY29wZXxvYmplY3R0eXBlfG9wdGlvbnxvdXRzdHJlYW18cGFnZXJlc3VsdHxyZWNvcmR8cmVjb3JkaWR8cmVjb3JkcmVmfHJlcG9ydGZvcm1hdHxzZWN1cml0eWZpbHRlcnxzZXNzaW9uc2V0dGluZ3N8dGFibGVjb25uZWN0aW9udHlwZXx0YWJsZWZpbHRlcnx0ZXN0YWN0aW9ufHRlc3RmaWVsZHx0ZXN0ZmlsdGVyZmllbGR8dGVzdHBhZ2V8dGVzdHBlcm1pc3Npb25zfHRlc3RyZXF1ZXN0cGFnZXx0ZXh0fHRleHRidWlsZGVyfHRleHRjb25zdHx0ZXh0ZW5jb2Rpbmd8dGltZXx0cmFuc2FjdGlvbm1vZGVsfHRyYW5zYWN0aW9udHlwZXx2YXJpYW50fHZlcmJvc2l0eXx2ZXJzaW9ufHZpZXd8dmlld3N8d2Vic2VydmljZWFjdGlvbmNvbnRleHR8d2Vic2VydmljZWFjdGlvbnJlc3VsdGNvZGV8eG1sYXR0cmlidXRlfHhtbGF0dHJpYnV0ZWNvbGxlY3Rpb258eG1sY2RhdGF8eG1sY29tbWVudHx4bWxkZWNsYXJhdGlvbnx4bWxkb2N1bWVudHx4bWxkb2N1bWVudHR5cGV8eG1sZWxlbWVudHx4bWxuYW1lc3BhY2VtYW5hZ2VyfHhtbG5hbWV0YWJsZXx4bWxub2RlfHhtbG5vZGVsaXN0fHhtbHByb2Nlc3NpbmdpbnN0cnVjdGlvbnx4bWxyZWFkb3B0aW9uc3x4bWx0ZXh0fHhtbHdyaXRlb3B0aW9ucylcXGIvaSxcbiAgICBvcGVyYXRvcjogL1xcLlxcLnw6Wz06XXxbLSsqL109P3w8PnxbPD5dPT98PXxcXGIoPzphbmR8ZGl2fG1vZHxub3R8b3J8eG9yKVxcYi9pLFxuICAgIHB1bmN0dWF0aW9uOiAvWygpXFxbXFxde306LjssXS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhbCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJmdW5jdGlvbiIsImxvb2tiZWhpbmQiLCJrZXl3b3JkIiwibnVtYmVyIiwiYm9vbGVhbiIsInZhcmlhYmxlIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/al.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/antlr4.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/antlr4.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = antlr4;\nantlr4.displayName = \"antlr4\";\nantlr4.aliases = [\n    \"g4\"\n];\nfunction antlr4(Prism) {\n    Prism.languages.antlr4 = {\n        comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        string: {\n            pattern: /'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n            greedy: true\n        },\n        \"character-class\": {\n            pattern: /\\[(?:\\\\.|[^\\\\\\]\\r\\n])*\\]/,\n            greedy: true,\n            alias: \"regex\",\n            inside: {\n                range: {\n                    pattern: /([^[]|(?:^|[^\\\\])(?:\\\\\\\\)*\\\\\\[)-(?!\\])/,\n                    lookbehind: true,\n                    alias: \"punctuation\"\n                },\n                escape: /\\\\(?:u(?:[a-fA-F\\d]{4}|\\{[a-fA-F\\d]+\\})|[pP]\\{[=\\w-]+\\}|[^\\r\\nupP])/,\n                punctuation: /[\\[\\]]/\n            }\n        },\n        action: {\n            pattern: /\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\}/,\n            greedy: true,\n            inside: {\n                content: {\n                    // this might be C, C++, Python, Java, C#, or any other language ANTLR4 compiles to\n                    pattern: /(\\{)[\\s\\S]+(?=\\})/,\n                    lookbehind: true\n                },\n                punctuation: /[{}]/\n            }\n        },\n        command: {\n            pattern: /(->\\s*(?!\\s))(?:\\s*(?:,\\s*)?\\b[a-z]\\w*(?:\\s*\\([^()\\r\\n]*\\))?)+(?=\\s*;)/i,\n            lookbehind: true,\n            inside: {\n                function: /\\b\\w+(?=\\s*(?:[,(]|$))/,\n                punctuation: /[,()]/\n            }\n        },\n        annotation: {\n            pattern: /@\\w+(?:::\\w+)*/,\n            alias: \"keyword\"\n        },\n        label: {\n            pattern: /#[ \\t]*\\w+/,\n            alias: \"punctuation\"\n        },\n        keyword: /\\b(?:catch|channels|finally|fragment|grammar|import|lexer|locals|mode|options|parser|returns|throws|tokens)\\b/,\n        definition: [\n            {\n                pattern: /\\b[a-z]\\w*(?=\\s*:)/,\n                alias: [\n                    \"rule\",\n                    \"class-name\"\n                ]\n            },\n            {\n                pattern: /\\b[A-Z]\\w*(?=\\s*:)/,\n                alias: [\n                    \"token\",\n                    \"constant\"\n                ]\n            }\n        ],\n        constant: /\\b[A-Z][A-Z_]*\\b/,\n        operator: /\\.\\.|->|[|~]|[*+?]\\??/,\n        punctuation: /[;:()=]/\n    };\n    Prism.languages.g4 = Prism.languages.antlr4;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYW50bHI0LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLE9BQU9DLFdBQVcsR0FBRztBQUNyQkQsT0FBT0UsT0FBTyxHQUFHO0lBQUM7Q0FBSztBQUN2QixTQUFTRixPQUFPRyxLQUFLO0lBQ25CQSxNQUFNQyxTQUFTLENBQUNKLE1BQU0sR0FBRztRQUN2QkssU0FBUztRQUNUQyxRQUFRO1lBQ05DLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0EsbUJBQW1CO1lBQ2pCRCxTQUFTO1lBQ1RDLFFBQVE7WUFDUkMsT0FBTztZQUNQQyxRQUFRO2dCQUNOQyxPQUFPO29CQUNMSixTQUFTO29CQUNUSyxZQUFZO29CQUNaSCxPQUFPO2dCQUNUO2dCQUNBSSxRQUNFO2dCQUNGQyxhQUFhO1lBQ2Y7UUFDRjtRQUNBQyxRQUFRO1lBQ05SLFNBQVM7WUFDVEMsUUFBUTtZQUNSRSxRQUFRO2dCQUNOTSxTQUFTO29CQUNQLG1GQUFtRjtvQkFDbkZULFNBQVM7b0JBQ1RLLFlBQVk7Z0JBQ2Q7Z0JBQ0FFLGFBQWE7WUFDZjtRQUNGO1FBQ0FHLFNBQVM7WUFDUFYsU0FDRTtZQUNGSyxZQUFZO1lBQ1pGLFFBQVE7Z0JBQ05RLFVBQVU7Z0JBQ1ZKLGFBQWE7WUFDZjtRQUNGO1FBQ0FLLFlBQVk7WUFDVlosU0FBUztZQUNURSxPQUFPO1FBQ1Q7UUFDQVcsT0FBTztZQUNMYixTQUFTO1lBQ1RFLE9BQU87UUFDVDtRQUNBWSxTQUNFO1FBQ0ZDLFlBQVk7WUFDVjtnQkFDRWYsU0FBUztnQkFDVEUsT0FBTztvQkFBQztvQkFBUTtpQkFBYTtZQUMvQjtZQUNBO2dCQUNFRixTQUFTO2dCQUNURSxPQUFPO29CQUFDO29CQUFTO2lCQUFXO1lBQzlCO1NBQ0Q7UUFDRGMsVUFBVTtRQUNWQyxVQUFVO1FBQ1ZWLGFBQWE7SUFDZjtJQUNBWCxNQUFNQyxTQUFTLENBQUNxQixFQUFFLEdBQUd0QixNQUFNQyxTQUFTLENBQUNKLE1BQU07QUFDN0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYW50bHI0LmpzP2U4ZWEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gYW50bHI0XG5hbnRscjQuZGlzcGxheU5hbWUgPSAnYW50bHI0J1xuYW50bHI0LmFsaWFzZXMgPSBbJ2c0J11cbmZ1bmN0aW9uIGFudGxyNChQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuYW50bHI0ID0ge1xuICAgIGNvbW1lbnQ6IC9cXC9cXC8uKnxcXC9cXCpbXFxzXFxTXSo/KD86XFwqXFwvfCQpLyxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC8nKD86XFxcXC58W15cXFxcJ1xcclxcbl0pKicvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICAnY2hhcmFjdGVyLWNsYXNzJzoge1xuICAgICAgcGF0dGVybjogL1xcWyg/OlxcXFwufFteXFxcXFxcXVxcclxcbl0pKlxcXS8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBhbGlhczogJ3JlZ2V4JyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICByYW5nZToge1xuICAgICAgICAgIHBhdHRlcm46IC8oW15bXXwoPzpefFteXFxcXF0pKD86XFxcXFxcXFwpKlxcXFxcXFspLSg/IVxcXSkvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbidcbiAgICAgICAgfSxcbiAgICAgICAgZXNjYXBlOlxuICAgICAgICAgIC9cXFxcKD86dSg/OlthLWZBLUZcXGRdezR9fFxce1thLWZBLUZcXGRdK1xcfSl8W3BQXVxce1s9XFx3LV0rXFx9fFteXFxyXFxudXBQXSkvLFxuICAgICAgICBwdW5jdHVhdGlvbjogL1tcXFtcXF1dL1xuICAgICAgfVxuICAgIH0sXG4gICAgYWN0aW9uOiB7XG4gICAgICBwYXR0ZXJuOiAvXFx7KD86W157fV18XFx7KD86W157fV18XFx7KD86W157fV18XFx7W157fV0qXFx9KSpcXH0pKlxcfSkqXFx9LyxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBjb250ZW50OiB7XG4gICAgICAgICAgLy8gdGhpcyBtaWdodCBiZSBDLCBDKyssIFB5dGhvbiwgSmF2YSwgQyMsIG9yIGFueSBvdGhlciBsYW5ndWFnZSBBTlRMUjQgY29tcGlsZXMgdG9cbiAgICAgICAgICBwYXR0ZXJuOiAvKFxceylbXFxzXFxTXSsoPz1cXH0pLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIHB1bmN0dWF0aW9uOiAvW3t9XS9cbiAgICAgIH1cbiAgICB9LFxuICAgIGNvbW1hbmQ6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oLT5cXHMqKD8hXFxzKSkoPzpcXHMqKD86LFxccyopP1xcYlthLXpdXFx3Kig/OlxccypcXChbXigpXFxyXFxuXSpcXCkpPykrKD89XFxzKjspL2ksXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIGZ1bmN0aW9uOiAvXFxiXFx3Kyg/PVxccyooPzpbLChdfCQpKS8sXG4gICAgICAgIHB1bmN0dWF0aW9uOiAvWywoKV0vXG4gICAgICB9XG4gICAgfSxcbiAgICBhbm5vdGF0aW9uOiB7XG4gICAgICBwYXR0ZXJuOiAvQFxcdysoPzo6OlxcdyspKi8sXG4gICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgfSxcbiAgICBsYWJlbDoge1xuICAgICAgcGF0dGVybjogLyNbIFxcdF0qXFx3Ky8sXG4gICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgIH0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzpjYXRjaHxjaGFubmVsc3xmaW5hbGx5fGZyYWdtZW50fGdyYW1tYXJ8aW1wb3J0fGxleGVyfGxvY2Fsc3xtb2RlfG9wdGlvbnN8cGFyc2VyfHJldHVybnN8dGhyb3dzfHRva2VucylcXGIvLFxuICAgIGRlZmluaXRpb246IFtcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogL1xcYlthLXpdXFx3Kig/PVxccyo6KS8sXG4gICAgICAgIGFsaWFzOiBbJ3J1bGUnLCAnY2xhc3MtbmFtZSddXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvXFxiW0EtWl1cXHcqKD89XFxzKjopLyxcbiAgICAgICAgYWxpYXM6IFsndG9rZW4nLCAnY29uc3RhbnQnXVxuICAgICAgfVxuICAgIF0sXG4gICAgY29uc3RhbnQ6IC9cXGJbQS1aXVtBLVpfXSpcXGIvLFxuICAgIG9wZXJhdG9yOiAvXFwuXFwufC0+fFt8fl18WyorP11cXD8/LyxcbiAgICBwdW5jdHVhdGlvbjogL1s7OigpPV0vXG4gIH1cbiAgUHJpc20ubGFuZ3VhZ2VzLmc0ID0gUHJpc20ubGFuZ3VhZ2VzLmFudGxyNFxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhbnRscjQiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZ3JlZWR5IiwiYWxpYXMiLCJpbnNpZGUiLCJyYW5nZSIsImxvb2tiZWhpbmQiLCJlc2NhcGUiLCJwdW5jdHVhdGlvbiIsImFjdGlvbiIsImNvbnRlbnQiLCJjb21tYW5kIiwiZnVuY3Rpb24iLCJhbm5vdGF0aW9uIiwibGFiZWwiLCJrZXl3b3JkIiwiZGVmaW5pdGlvbiIsImNvbnN0YW50Iiwib3BlcmF0b3IiLCJnNCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/antlr4.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/apacheconf.js":
/*!***************************************************!*\
  !*** ./node_modules/refractor/lang/apacheconf.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = apacheconf;\napacheconf.displayName = \"apacheconf\";\napacheconf.aliases = [];\nfunction apacheconf(Prism) {\n    Prism.languages.apacheconf = {\n        comment: /#.*/,\n        \"directive-inline\": {\n            pattern: /(^[\\t ]*)\\b(?:AcceptFilter|AcceptPathInfo|AccessFileName|Action|Add(?:Alt|AltByEncoding|AltByType|Charset|DefaultCharset|Description|Encoding|Handler|Icon|IconByEncoding|IconByType|InputFilter|Language|ModuleInfo|OutputFilter|OutputFilterByType|Type)|Alias|AliasMatch|Allow(?:CONNECT|EncodedSlashes|Methods|Override|OverrideList)?|Anonymous(?:_LogEmail|_MustGiveEmail|_NoUserID|_VerifyEmail)?|AsyncRequestWorkerFactor|Auth(?:BasicAuthoritative|BasicFake|BasicProvider|BasicUseDigestAlgorithm|DBDUserPWQuery|DBDUserRealmQuery|DBMGroupFile|DBMType|DBMUserFile|Digest(?:Algorithm|Domain|NonceLifetime|Provider|Qop|ShmemSize)|Form(?:Authoritative|Body|DisableNoStore|FakeBasicAuth|Location|LoginRequiredLocation|LoginSuccessLocation|LogoutLocation|Method|Mimetype|Password|Provider|SitePassphrase|Size|Username)|GroupFile|LDAP(?:AuthorizePrefix|BindAuthoritative|BindDN|BindPassword|CharsetConfig|CompareAsUser|CompareDNOnServer|DereferenceAliases|GroupAttribute|GroupAttributeIsDN|InitialBindAsUser|InitialBindPattern|MaxSubGroupDepth|RemoteUserAttribute|RemoteUserIsDN|SearchAsUser|SubGroupAttribute|SubGroupClass|Url)|Merging|Name|nCache(?:Context|Enable|ProvideFor|SOCache|Timeout)|nzFcgiCheckAuthnProvider|nzFcgiDefineProvider|Type|UserFile|zDBDLoginToReferer|zDBDQuery|zDBDRedirectQuery|zDBMType|zSendForbiddenOnFailure)|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferedLogs|BufferSize|Cache(?:DefaultExpire|DetailHeader|DirLength|DirLevels|Disable|Enable|File|Header|IgnoreCacheControl|IgnoreHeaders|IgnoreNoLastMod|IgnoreQueryString|IgnoreURLSessionIdentifiers|KeyBaseURL|LastModifiedFactor|Lock|LockMaxAge|LockPath|MaxExpire|MaxFileSize|MinExpire|MinFileSize|NegotiatedDocs|QuickHandler|ReadSize|ReadTime|Root|Socache(?:MaxSize|MaxTime|MinTime|ReadSize|ReadTime)?|StaleOnError|StoreExpired|StoreNoStore|StorePrivate)|CGIDScriptTimeout|CGIMapExtension|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|Deflate(?:BufferSize|CompressionLevel|FilterNote|InflateLimitRequestBody|InflateRatio(?:Burst|Limit)|MemLevel|WindowSize)|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DTracePrivileges|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtendedStatus|ExtFilterDefine|ExtFilterOptions|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|Heartbeat(?:Address|Listen|MaxServers|Storage)|HostnameLookups|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|Index(?:HeadInsert|Ignore|IgnoreReset|Options|OrderDefault|StyleSheet)|InputSed|ISAPI(?:AppendLogToErrors|AppendLogToQuery|CacheFile|FakeAsync|LogNotSupported|ReadAheadBuffer)|KeepAlive|KeepAliveTimeout|KeptBodySize|LanguagePriority|LDAP(?:CacheEntries|CacheTTL|ConnectionPoolTTL|ConnectionTimeout|LibraryDebug|OpCacheEntries|OpCacheTTL|ReferralHopLimit|Referrals|Retries|RetryDelay|SharedCacheFile|SharedCacheSize|Timeout|TrustedClientCert|TrustedGlobalCert|TrustedMode|VerifyServerCert)|Limit(?:InternalRecursion|Request(?:Body|Fields|FieldSize|Line)|XMLRequestBody)|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|Lua(?:Hook(?:AccessChecker|AuthChecker|CheckUserID|Fixups|InsertFilter|Log|MapToStorage|TranslateName|TypeChecker)|Inherit|InputFilter|MapHandler|OutputFilter|PackageCPath|PackagePath|QuickHandler|Root|Scope)|Max(?:ConnectionsPerChild|KeepAliveRequests|MemFree|RangeOverlaps|RangeReversals|Ranges|RequestWorkers|SpareServers|SpareThreads|Threads)|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|MMapFile|ModemStandard|ModMimeUsePathInfo|MultiviewsMatch|Mutex|NameVirtualHost|NoProxy|NWSSLTrustedCerts|NWSSLUpgradeable|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|Proxy(?:AddHeaders|BadHeader|Block|Domain|ErrorOverride|ExpressDBMFile|ExpressDBMType|ExpressEnable|FtpDirCharset|FtpEscapeWildcards|FtpListOnWildcard|HTML(?:BufSize|CharsetOut|DocType|Enable|Events|Extended|Fixups|Interp|Links|Meta|StripComments|URLMap)|IOBufferSize|MaxForwards|Pass(?:Inherit|InterpolateEnv|Match|Reverse|ReverseCookieDomain|ReverseCookiePath)?|PreserveHost|ReceiveBufferSize|Remote|RemoteMatch|Requests|SCGIInternalRedirect|SCGISendfile|Set|SourceAddress|Status|Timeout|Via)|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIP(?:Header|InternalProxy|InternalProxyList|ProxiesHeader|TrustedProxy|TrustedProxyList)|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|Rewrite(?:Base|Cond|Engine|Map|Options|Rule)|RLimitCPU|RLimitMEM|RLimitNPROC|Satisfy|ScoreBoardFile|Script(?:Alias|AliasMatch|InterpreterSource|Log|LogBuffer|LogLength|Sock)?|SecureListen|SeeRequestTail|SendBufferSize|Server(?:Admin|Alias|Limit|Name|Path|Root|Signature|Tokens)|Session(?:Cookie(?:Name|Name2|Remove)|Crypto(?:Cipher|Driver|Passphrase|PassphraseFile)|DBD(?:CookieName|CookieName2|CookieRemove|DeleteLabel|InsertLabel|PerUser|SelectLabel|UpdateLabel)|Env|Exclude|Header|Include|MaxAge)?|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|SSIEndTag|SSIErrorMsg|SSIETag|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSL(?:CACertificateFile|CACertificatePath|CADNRequestFile|CADNRequestPath|CARevocationCheck|CARevocationFile|CARevocationPath|CertificateChainFile|CertificateFile|CertificateKeyFile|CipherSuite|Compression|CryptoDevice|Engine|FIPS|HonorCipherOrder|InsecureRenegotiation|OCSP(?:DefaultResponder|Enable|OverrideResponder|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|UseRequestNonce)|OpenSSLConfCmd|Options|PassPhraseDialog|Protocol|Proxy(?:CACertificateFile|CACertificatePath|CARevocation(?:Check|File|Path)|CheckPeer(?:CN|Expire|Name)|CipherSuite|Engine|MachineCertificate(?:ChainFile|File|Path)|Protocol|Verify|VerifyDepth)|RandomSeed|RenegBufferSize|Require|RequireSSL|Session(?:Cache|CacheTimeout|TicketKeyFile|Tickets)|SRPUnknownUserSeed|SRPVerifierFile|Stapling(?:Cache|ErrorCacheTimeout|FakeTryLater|ForceURL|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|ReturnResponderErrors|StandardCacheTimeout)|StrictSNIVHostCheck|UserName|UseStapling|VerifyClient|VerifyDepth)|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadsPerChild|ThreadStackSize|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|Virtual(?:DocumentRoot|ScriptAlias)(?:IP)?|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\\b/im,\n            lookbehind: true,\n            alias: \"property\"\n        },\n        \"directive-block\": {\n            pattern: /<\\/?\\b(?:Auth[nz]ProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|Require(?:All|Any|None)|VirtualHost)\\b.*>/i,\n            inside: {\n                \"directive-block\": {\n                    pattern: /^<\\/?\\w+/,\n                    inside: {\n                        punctuation: /^<\\/?/\n                    },\n                    alias: \"tag\"\n                },\n                \"directive-block-parameter\": {\n                    pattern: /.*[^>]/,\n                    inside: {\n                        punctuation: /:/,\n                        string: {\n                            pattern: /(\"|').*\\1/,\n                            inside: {\n                                variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n                            }\n                        }\n                    },\n                    alias: \"attr-value\"\n                },\n                punctuation: />/\n            },\n            alias: \"tag\"\n        },\n        \"directive-flags\": {\n            pattern: /\\[(?:[\\w=],?)+\\]/,\n            alias: \"keyword\"\n        },\n        string: {\n            pattern: /(\"|').*\\1/,\n            inside: {\n                variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n            }\n        },\n        variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/,\n        regex: /\\^?.*\\$|\\^.*\\$?/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/apacheconf.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/apex.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/apex.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorSql = __webpack_require__(/*! ./sql.js */ \"(ssr)/./node_modules/refractor/lang/sql.js\");\nmodule.exports = apex;\napex.displayName = \"apex\";\napex.aliases = [];\nfunction apex(Prism) {\n    Prism.register(refractorSql);\n    (function(Prism) {\n        var keywords = /\\b(?:(?:after|before)(?=\\s+[a-z])|abstract|activate|and|any|array|as|asc|autonomous|begin|bigdecimal|blob|boolean|break|bulk|by|byte|case|cast|catch|char|class|collect|commit|const|continue|currency|date|datetime|decimal|default|delete|desc|do|double|else|end|enum|exception|exit|export|extends|final|finally|float|for|from|get(?=\\s*[{};])|global|goto|group|having|hint|if|implements|import|in|inner|insert|instanceof|int|integer|interface|into|join|like|limit|list|long|loop|map|merge|new|not|null|nulls|number|object|of|on|or|outer|override|package|parallel|pragma|private|protected|public|retrieve|return|rollback|select|set|short|sObject|sort|static|string|super|switch|synchronized|system|testmethod|then|this|throw|time|transaction|transient|trigger|try|undelete|update|upsert|using|virtual|void|webservice|when|where|while|(?:inherited|with|without)\\s+sharing)\\b/i;\n        var className = /\\b(?:(?=[a-z_]\\w*\\s*[<\\[])|(?!<keyword>))[A-Z_]\\w*(?:\\s*\\.\\s*[A-Z_]\\w*)*\\b(?:\\s*(?:\\[\\s*\\]|<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>))*/.source.replace(/<keyword>/g, function() {\n            return keywords.source;\n        });\n        /** @param {string} pattern */ function insertClassName(pattern) {\n            return RegExp(pattern.replace(/<CLASS-NAME>/g, function() {\n                return className;\n            }), \"i\");\n        }\n        var classNameInside = {\n            keyword: keywords,\n            punctuation: /[()\\[\\]{};,:.<>]/\n        };\n        Prism.languages.apex = {\n            comment: Prism.languages.clike.comment,\n            string: Prism.languages.clike.string,\n            sql: {\n                pattern: /((?:[=,({:]|\\breturn)\\s*)\\[[^\\[\\]]*\\]/i,\n                lookbehind: true,\n                greedy: true,\n                alias: \"language-sql\",\n                inside: Prism.languages.sql\n            },\n            annotation: {\n                pattern: /@\\w+\\b/,\n                alias: \"punctuation\"\n            },\n            \"class-name\": [\n                {\n                    pattern: insertClassName(/(\\b(?:class|enum|extends|implements|instanceof|interface|new|trigger\\s+\\w+\\s+on)\\s+)<CLASS-NAME>/.source),\n                    lookbehind: true,\n                    inside: classNameInside\n                },\n                {\n                    // cast\n                    pattern: insertClassName(/(\\(\\s*)<CLASS-NAME>(?=\\s*\\)\\s*[\\w(])/.source),\n                    lookbehind: true,\n                    inside: classNameInside\n                },\n                {\n                    // variable/parameter declaration and return types\n                    pattern: insertClassName(/<CLASS-NAME>(?=\\s*\\w+\\s*[;=,(){:])/.source),\n                    inside: classNameInside\n                }\n            ],\n            trigger: {\n                pattern: /(\\btrigger\\s+)\\w+\\b/i,\n                lookbehind: true,\n                alias: \"class-name\"\n            },\n            keyword: keywords,\n            function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n            boolean: /\\b(?:false|true)\\b/i,\n            number: /(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d+|L)?)\\b/i,\n            operator: /[!=](?:==?)?|\\?\\.?|&&|\\|\\||--|\\+\\+|[-+*/^&|]=?|:|<<?=?|>{1,3}=?/,\n            punctuation: /[()\\[\\]{};,.]/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYXBleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLElBQUlBLGVBQWVDLG1CQUFPQSxDQUFDO0FBQzNCQyxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDakJBLE1BQU1DLFFBQVEsQ0FBQ1I7SUFDYixVQUFVTyxLQUFLO1FBQ2YsSUFBSUUsV0FDRjtRQUNGLElBQUlDLFlBQ0YsbUlBQW1JQyxNQUFNLENBQUNDLE9BQU8sQ0FDL0ksY0FDQTtZQUNFLE9BQU9ILFNBQVNFLE1BQU07UUFDeEI7UUFFSiw0QkFBNEIsR0FDNUIsU0FBU0UsZ0JBQWdCQyxPQUFPO1lBQzlCLE9BQU9DLE9BQ0xELFFBQVFGLE9BQU8sQ0FBQyxpQkFBaUI7Z0JBQy9CLE9BQU9GO1lBQ1QsSUFDQTtRQUVKO1FBQ0EsSUFBSU0sa0JBQWtCO1lBQ3BCQyxTQUFTUjtZQUNUUyxhQUFhO1FBQ2Y7UUFDQVgsTUFBTVksU0FBUyxDQUFDZixJQUFJLEdBQUc7WUFDckJnQixTQUFTYixNQUFNWSxTQUFTLENBQUNFLEtBQUssQ0FBQ0QsT0FBTztZQUN0Q0UsUUFBUWYsTUFBTVksU0FBUyxDQUFDRSxLQUFLLENBQUNDLE1BQU07WUFDcENDLEtBQUs7Z0JBQ0hULFNBQVM7Z0JBQ1RVLFlBQVk7Z0JBQ1pDLFFBQVE7Z0JBQ1JDLE9BQU87Z0JBQ1BDLFFBQVFwQixNQUFNWSxTQUFTLENBQUNJLEdBQUc7WUFDN0I7WUFDQUssWUFBWTtnQkFDVmQsU0FBUztnQkFDVFksT0FBTztZQUNUO1lBQ0EsY0FBYztnQkFDWjtvQkFDRVosU0FBU0QsZ0JBQ1AsbUdBQ0dGLE1BQU07b0JBRVhhLFlBQVk7b0JBQ1pHLFFBQVFYO2dCQUNWO2dCQUNBO29CQUNFLE9BQU87b0JBQ1BGLFNBQVNELGdCQUNQLHVDQUF1Q0YsTUFBTTtvQkFFL0NhLFlBQVk7b0JBQ1pHLFFBQVFYO2dCQUNWO2dCQUNBO29CQUNFLGtEQUFrRDtvQkFDbERGLFNBQVNELGdCQUFnQixxQ0FBcUNGLE1BQU07b0JBQ3BFZ0IsUUFBUVg7Z0JBQ1Y7YUFDRDtZQUNEYSxTQUFTO2dCQUNQZixTQUFTO2dCQUNUVSxZQUFZO2dCQUNaRSxPQUFPO1lBQ1Q7WUFDQVQsU0FBU1I7WUFDVHFCLFVBQVU7WUFDVkMsU0FBUztZQUNUQyxRQUFRO1lBQ1JDLFVBQ0U7WUFDRmYsYUFBYTtRQUNmO0lBQ0YsR0FBR1g7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hcGV4LmpzPzcwODciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG52YXIgcmVmcmFjdG9yU3FsID0gcmVxdWlyZSgnLi9zcWwuanMnKVxubW9kdWxlLmV4cG9ydHMgPSBhcGV4XG5hcGV4LmRpc3BsYXlOYW1lID0gJ2FwZXgnXG5hcGV4LmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gYXBleChQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JTcWwpXG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIGtleXdvcmRzID1cbiAgICAgIC9cXGIoPzooPzphZnRlcnxiZWZvcmUpKD89XFxzK1thLXpdKXxhYnN0cmFjdHxhY3RpdmF0ZXxhbmR8YW55fGFycmF5fGFzfGFzY3xhdXRvbm9tb3VzfGJlZ2lufGJpZ2RlY2ltYWx8YmxvYnxib29sZWFufGJyZWFrfGJ1bGt8Ynl8Ynl0ZXxjYXNlfGNhc3R8Y2F0Y2h8Y2hhcnxjbGFzc3xjb2xsZWN0fGNvbW1pdHxjb25zdHxjb250aW51ZXxjdXJyZW5jeXxkYXRlfGRhdGV0aW1lfGRlY2ltYWx8ZGVmYXVsdHxkZWxldGV8ZGVzY3xkb3xkb3VibGV8ZWxzZXxlbmR8ZW51bXxleGNlcHRpb258ZXhpdHxleHBvcnR8ZXh0ZW5kc3xmaW5hbHxmaW5hbGx5fGZsb2F0fGZvcnxmcm9tfGdldCg/PVxccypbe307XSl8Z2xvYmFsfGdvdG98Z3JvdXB8aGF2aW5nfGhpbnR8aWZ8aW1wbGVtZW50c3xpbXBvcnR8aW58aW5uZXJ8aW5zZXJ0fGluc3RhbmNlb2Z8aW50fGludGVnZXJ8aW50ZXJmYWNlfGludG98am9pbnxsaWtlfGxpbWl0fGxpc3R8bG9uZ3xsb29wfG1hcHxtZXJnZXxuZXd8bm90fG51bGx8bnVsbHN8bnVtYmVyfG9iamVjdHxvZnxvbnxvcnxvdXRlcnxvdmVycmlkZXxwYWNrYWdlfHBhcmFsbGVsfHByYWdtYXxwcml2YXRlfHByb3RlY3RlZHxwdWJsaWN8cmV0cmlldmV8cmV0dXJufHJvbGxiYWNrfHNlbGVjdHxzZXR8c2hvcnR8c09iamVjdHxzb3J0fHN0YXRpY3xzdHJpbmd8c3VwZXJ8c3dpdGNofHN5bmNocm9uaXplZHxzeXN0ZW18dGVzdG1ldGhvZHx0aGVufHRoaXN8dGhyb3d8dGltZXx0cmFuc2FjdGlvbnx0cmFuc2llbnR8dHJpZ2dlcnx0cnl8dW5kZWxldGV8dXBkYXRlfHVwc2VydHx1c2luZ3x2aXJ0dWFsfHZvaWR8d2Vic2VydmljZXx3aGVufHdoZXJlfHdoaWxlfCg/OmluaGVyaXRlZHx3aXRofHdpdGhvdXQpXFxzK3NoYXJpbmcpXFxiL2lcbiAgICB2YXIgY2xhc3NOYW1lID1cbiAgICAgIC9cXGIoPzooPz1bYS16X11cXHcqXFxzKls8XFxbXSl8KD8hPGtleXdvcmQ+KSlbQS1aX11cXHcqKD86XFxzKlxcLlxccypbQS1aX11cXHcqKSpcXGIoPzpcXHMqKD86XFxbXFxzKlxcXXw8KD86W148Pl18PCg/OltePD5dfDxbXjw+XSo+KSo+KSo+KSkqLy5zb3VyY2UucmVwbGFjZShcbiAgICAgICAgLzxrZXl3b3JkPi9nLFxuICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIGtleXdvcmRzLnNvdXJjZVxuICAgICAgICB9XG4gICAgICApXG4gICAgLyoqIEBwYXJhbSB7c3RyaW5nfSBwYXR0ZXJuICovXG4gICAgZnVuY3Rpb24gaW5zZXJ0Q2xhc3NOYW1lKHBhdHRlcm4pIHtcbiAgICAgIHJldHVybiBSZWdFeHAoXG4gICAgICAgIHBhdHRlcm4ucmVwbGFjZSgvPENMQVNTLU5BTUU+L2csIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gY2xhc3NOYW1lXG4gICAgICAgIH0pLFxuICAgICAgICAnaSdcbiAgICAgIClcbiAgICB9XG4gICAgdmFyIGNsYXNzTmFtZUluc2lkZSA9IHtcbiAgICAgIGtleXdvcmQ6IGtleXdvcmRzLFxuICAgICAgcHVuY3R1YXRpb246IC9bKClcXFtcXF17fTssOi48Pl0vXG4gICAgfVxuICAgIFByaXNtLmxhbmd1YWdlcy5hcGV4ID0ge1xuICAgICAgY29tbWVudDogUHJpc20ubGFuZ3VhZ2VzLmNsaWtlLmNvbW1lbnQsXG4gICAgICBzdHJpbmc6IFByaXNtLmxhbmd1YWdlcy5jbGlrZS5zdHJpbmcsXG4gICAgICBzcWw6IHtcbiAgICAgICAgcGF0dGVybjogLygoPzpbPSwoezpdfFxcYnJldHVybilcXHMqKVxcW1teXFxbXFxdXSpcXF0vaSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBhbGlhczogJ2xhbmd1YWdlLXNxbCcsXG4gICAgICAgIGluc2lkZTogUHJpc20ubGFuZ3VhZ2VzLnNxbFxuICAgICAgfSxcbiAgICAgIGFubm90YXRpb246IHtcbiAgICAgICAgcGF0dGVybjogL0BcXHcrXFxiLyxcbiAgICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbidcbiAgICAgIH0sXG4gICAgICAnY2xhc3MtbmFtZSc6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IGluc2VydENsYXNzTmFtZShcbiAgICAgICAgICAgIC8oXFxiKD86Y2xhc3N8ZW51bXxleHRlbmRzfGltcGxlbWVudHN8aW5zdGFuY2VvZnxpbnRlcmZhY2V8bmV3fHRyaWdnZXJcXHMrXFx3K1xccytvbilcXHMrKTxDTEFTUy1OQU1FPi9cbiAgICAgICAgICAgICAgLnNvdXJjZVxuICAgICAgICAgICksXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IGNsYXNzTmFtZUluc2lkZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgLy8gY2FzdFxuICAgICAgICAgIHBhdHRlcm46IGluc2VydENsYXNzTmFtZShcbiAgICAgICAgICAgIC8oXFwoXFxzKik8Q0xBU1MtTkFNRT4oPz1cXHMqXFwpXFxzKltcXHcoXSkvLnNvdXJjZVxuICAgICAgICAgICksXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IGNsYXNzTmFtZUluc2lkZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgLy8gdmFyaWFibGUvcGFyYW1ldGVyIGRlY2xhcmF0aW9uIGFuZCByZXR1cm4gdHlwZXNcbiAgICAgICAgICBwYXR0ZXJuOiBpbnNlcnRDbGFzc05hbWUoLzxDTEFTUy1OQU1FPig/PVxccypcXHcrXFxzKls7PSwoKXs6XSkvLnNvdXJjZSksXG4gICAgICAgICAgaW5zaWRlOiBjbGFzc05hbWVJbnNpZGVcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIHRyaWdnZXI6IHtcbiAgICAgICAgcGF0dGVybjogLyhcXGJ0cmlnZ2VyXFxzKylcXHcrXFxiL2ksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiAnY2xhc3MtbmFtZSdcbiAgICAgIH0sXG4gICAgICBrZXl3b3JkOiBrZXl3b3JkcyxcbiAgICAgIGZ1bmN0aW9uOiAvXFxiW2Etel9dXFx3Kig/PVxccypcXCgpL2ksXG4gICAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvaSxcbiAgICAgIG51bWJlcjogLyg/OlxcQlxcLlxcZCt8XFxiXFxkKyg/OlxcLlxcZCt8TCk/KVxcYi9pLFxuICAgICAgb3BlcmF0b3I6XG4gICAgICAgIC9bIT1dKD86PT0/KT98XFw/XFwuP3wmJnxcXHxcXHx8LS18XFwrXFwrfFstKyovXiZ8XT0/fDp8PDw/PT98PnsxLDN9PT8vLFxuICAgICAgcHVuY3R1YXRpb246IC9bKClcXFtcXF17fTssLl0vXG4gICAgfVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JTcWwiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImFwZXgiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwia2V5d29yZHMiLCJjbGFzc05hbWUiLCJzb3VyY2UiLCJyZXBsYWNlIiwiaW5zZXJ0Q2xhc3NOYW1lIiwicGF0dGVybiIsIlJlZ0V4cCIsImNsYXNzTmFtZUluc2lkZSIsImtleXdvcmQiLCJwdW5jdHVhdGlvbiIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJjbGlrZSIsInN0cmluZyIsInNxbCIsImxvb2tiZWhpbmQiLCJncmVlZHkiLCJhbGlhcyIsImluc2lkZSIsImFubm90YXRpb24iLCJ0cmlnZ2VyIiwiZnVuY3Rpb24iLCJib29sZWFuIiwibnVtYmVyIiwib3BlcmF0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/apex.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/apl.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/apl.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = apl;\napl.displayName = \"apl\";\napl.aliases = [];\nfunction apl(Prism) {\n    Prism.languages.apl = {\n        comment: /(?:⍝|#[! ]).*$/m,\n        string: {\n            pattern: /'(?:[^'\\r\\n]|'')*'/,\n            greedy: true\n        },\n        number: /¯?(?:\\d*\\.?\\b\\d+(?:e[+¯]?\\d+)?|¯|∞)(?:j¯?(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+¯]?\\d+)?|¯|∞))?/i,\n        statement: /:[A-Z][a-z][A-Za-z]*\\b/,\n        \"system-function\": {\n            pattern: /⎕[A-Z]+/i,\n            alias: \"function\"\n        },\n        constant: /[⍬⌾#⎕⍞]/,\n        function: /[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⊆⊇⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,\n        \"monadic-operator\": {\n            pattern: /[\\\\\\/⌿⍀¨⍨⌶&∥]/,\n            alias: \"operator\"\n        },\n        \"dyadic-operator\": {\n            pattern: /[.⍣⍠⍤∘⌸@⌺⍥]/,\n            alias: \"operator\"\n        },\n        assignment: {\n            pattern: /←/,\n            alias: \"keyword\"\n        },\n        punctuation: /[\\[;\\]()◇⋄]/,\n        dfn: {\n            pattern: /[{}⍺⍵⍶⍹∇⍫:]/,\n            alias: \"builtin\"\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYXBsLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLElBQUlDLFdBQVcsR0FBRztBQUNsQkQsSUFBSUUsT0FBTyxHQUFHLEVBQUU7QUFDaEIsU0FBU0YsSUFBSUcsS0FBSztJQUNoQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7UUFDVEMsUUFBUTtZQUNOQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBQyxRQUNFO1FBQ0ZDLFdBQVc7UUFDWCxtQkFBbUI7WUFDakJILFNBQVM7WUFDVEksT0FBTztRQUNUO1FBQ0FDLFVBQVU7UUFDVkMsVUFBVTtRQUNWLG9CQUFvQjtZQUNsQk4sU0FBUztZQUNUSSxPQUFPO1FBQ1Q7UUFDQSxtQkFBbUI7WUFDakJKLFNBQVM7WUFDVEksT0FBTztRQUNUO1FBQ0FHLFlBQVk7WUFDVlAsU0FBUztZQUNUSSxPQUFPO1FBQ1Q7UUFDQUksYUFBYTtRQUNiQyxLQUFLO1lBQ0hULFNBQVM7WUFDVEksT0FBTztRQUNUO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hcGwuanM/ZTFkNCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBhcGxcbmFwbC5kaXNwbGF5TmFtZSA9ICdhcGwnXG5hcGwuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBhcGwoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmFwbCA9IHtcbiAgICBjb21tZW50OiAvKD864o2dfCNbISBdKS4qJC9tLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLycoPzpbXidcXHJcXG5dfCcnKSonLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgbnVtYmVyOlxuICAgICAgL8KvPyg/OlxcZCpcXC4/XFxiXFxkKyg/OmVbK8KvXT9cXGQrKT98wq984oieKSg/OmrCrz8oPzooPzpcXGQrKD86XFwuXFxkKyk/fFxcLlxcZCspKD86ZVsrwq9dP1xcZCspP3zCr3ziiJ4pKT8vaSxcbiAgICBzdGF0ZW1lbnQ6IC86W0EtWl1bYS16XVtBLVphLXpdKlxcYi8sXG4gICAgJ3N5c3RlbS1mdW5jdGlvbic6IHtcbiAgICAgIHBhdHRlcm46IC/ijpVbQS1aXSsvaSxcbiAgICAgIGFsaWFzOiAnZnVuY3Rpb24nXG4gICAgfSxcbiAgICBjb25zdGFudDogL1vijazijL4j4o6V4o2eXS8sXG4gICAgZnVuY3Rpb246IC9bLSvDl8O34oyI4oyK4oijfOKNs+KNuD8q4o2f4peLIeKMuTziiaQ9PuKJpeKJoOKJoeKJouKIiuKNt+KIquKIqX7iiKjiiKfijbHijbLijbQs4o2q4oy94oqW4o2J4oaR4oaT4oqC4oqD4oqG4oqH4oy34o2L4o2S4oqk4oql4o2V4o2O4oqj4oqi4o2B4o2C4omI4o2v4oaXwqTihpJdLyxcbiAgICAnbW9uYWRpYy1vcGVyYXRvcic6IHtcbiAgICAgIHBhdHRlcm46IC9bXFxcXFxcL+KMv+KNgMKo4o2o4oy2JuKIpV0vLFxuICAgICAgYWxpYXM6ICdvcGVyYXRvcidcbiAgICB9LFxuICAgICdkeWFkaWMtb3BlcmF0b3InOiB7XG4gICAgICBwYXR0ZXJuOiAvWy7ijaPijaDijaTiiJjijLhA4oy64o2lXS8sXG4gICAgICBhbGlhczogJ29wZXJhdG9yJ1xuICAgIH0sXG4gICAgYXNzaWdubWVudDoge1xuICAgICAgcGF0dGVybjogL+KGkC8sXG4gICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgfSxcbiAgICBwdW5jdHVhdGlvbjogL1tcXFs7XFxdKCnil4fii4RdLyxcbiAgICBkZm46IHtcbiAgICAgIHBhdHRlcm46IC9be33ijbrijbXijbbijbniiIfijas6XS8sXG4gICAgICBhbGlhczogJ2J1aWx0aW4nXG4gICAgfVxuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImFwbCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJudW1iZXIiLCJzdGF0ZW1lbnQiLCJhbGlhcyIsImNvbnN0YW50IiwiZnVuY3Rpb24iLCJhc3NpZ25tZW50IiwicHVuY3R1YXRpb24iLCJkZm4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/apl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/applescript.js":
/*!****************************************************!*\
  !*** ./node_modules/refractor/lang/applescript.js ***!
  \****************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = applescript;\napplescript.displayName = \"applescript\";\napplescript.aliases = [];\nfunction applescript(Prism) {\n    Prism.languages.applescript = {\n        comment: [\n            // Allow one level of nesting\n            /\\(\\*(?:\\(\\*(?:[^*]|\\*(?!\\)))*\\*\\)|(?!\\(\\*)[\\s\\S])*?\\*\\)/,\n            /--.+/,\n            /#.+/\n        ],\n        string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n        number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e-?\\d+)?\\b/i,\n        operator: [\n            /[&=≠≤≥*+\\-\\/÷^]|[<>]=?/,\n            /\\b(?:(?:begin|end|start)s? with|(?:contains?|(?:does not|doesn't) contain)|(?:is|isn't|is not) (?:contained by|in)|(?:(?:is|isn't|is not) )?(?:greater|less) than(?: or equal)?(?: to)?|(?:comes|(?:does not|doesn't) come) (?:after|before)|(?:is|isn't|is not) equal(?: to)?|(?:(?:does not|doesn't) equal|equal to|equals|is not|isn't)|(?:a )?(?:ref(?: to)?|reference to)|(?:and|as|div|mod|not|or))\\b/\n        ],\n        keyword: /\\b(?:about|above|after|against|apart from|around|aside from|at|back|before|beginning|behind|below|beneath|beside|between|but|by|considering|continue|copy|does|eighth|else|end|equal|error|every|exit|false|fifth|first|for|fourth|from|front|get|given|global|if|ignoring|in|instead of|into|is|it|its|last|local|me|middle|my|ninth|of|on|onto|out of|over|prop|property|put|repeat|return|returning|second|set|seventh|since|sixth|some|tell|tenth|that|the|then|third|through|thru|timeout|times|to|transaction|true|try|until|where|while|whose|with|without)\\b/,\n        \"class-name\": /\\b(?:POSIX file|RGB color|alias|application|boolean|centimeters|centimetres|class|constant|cubic centimeters|cubic centimetres|cubic feet|cubic inches|cubic meters|cubic metres|cubic yards|date|degrees Celsius|degrees Fahrenheit|degrees Kelvin|feet|file|gallons|grams|inches|integer|kilograms|kilometers|kilometres|list|liters|litres|meters|metres|miles|number|ounces|pounds|quarts|real|record|reference|script|square feet|square kilometers|square kilometres|square meters|square metres|square miles|square yards|text|yards)\\b/,\n        punctuation: /[{}():,¬«»《》]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYXBwbGVzY3JpcHQuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsWUFBWUMsV0FBVyxHQUFHO0FBQzFCRCxZQUFZRSxPQUFPLEdBQUcsRUFBRTtBQUN4QixTQUFTRixZQUFZRyxLQUFLO0lBQ3hCQSxNQUFNQyxTQUFTLENBQUNKLFdBQVcsR0FBRztRQUM1QkssU0FBUztZQUNQLDZCQUE2QjtZQUM3QjtZQUNBO1lBQ0E7U0FDRDtRQUNEQyxRQUFRO1FBQ1JDLFFBQVE7UUFDUkMsVUFBVTtZQUNSO1lBQ0E7U0FDRDtRQUNEQyxTQUNFO1FBQ0YsY0FDRTtRQUNGQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hcHBsZXNjcmlwdC5qcz9iYjg4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGFwcGxlc2NyaXB0XG5hcHBsZXNjcmlwdC5kaXNwbGF5TmFtZSA9ICdhcHBsZXNjcmlwdCdcbmFwcGxlc2NyaXB0LmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gYXBwbGVzY3JpcHQoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmFwcGxlc2NyaXB0ID0ge1xuICAgIGNvbW1lbnQ6IFtcbiAgICAgIC8vIEFsbG93IG9uZSBsZXZlbCBvZiBuZXN0aW5nXG4gICAgICAvXFwoXFwqKD86XFwoXFwqKD86W14qXXxcXCooPyFcXCkpKSpcXCpcXCl8KD8hXFwoXFwqKVtcXHNcXFNdKSo/XFwqXFwpLyxcbiAgICAgIC8tLS4rLyxcbiAgICAgIC8jLisvXG4gICAgXSxcbiAgICBzdHJpbmc6IC9cIig/OlxcXFwufFteXCJcXFxcXFxyXFxuXSkqXCIvLFxuICAgIG51bWJlcjogLyg/OlxcYlxcZCsoPzpcXC5cXGQqKT98XFxCXFwuXFxkKykoPzplLT9cXGQrKT9cXGIvaSxcbiAgICBvcGVyYXRvcjogW1xuICAgICAgL1smPeKJoOKJpOKJpSorXFwtXFwvw7deXXxbPD5dPT8vLFxuICAgICAgL1xcYig/Oig/OmJlZ2lufGVuZHxzdGFydClzPyB3aXRofCg/OmNvbnRhaW5zP3woPzpkb2VzIG5vdHxkb2Vzbid0KSBjb250YWluKXwoPzppc3xpc24ndHxpcyBub3QpICg/OmNvbnRhaW5lZCBieXxpbil8KD86KD86aXN8aXNuJ3R8aXMgbm90KSApPyg/OmdyZWF0ZXJ8bGVzcykgdGhhbig/OiBvciBlcXVhbCk/KD86IHRvKT98KD86Y29tZXN8KD86ZG9lcyBub3R8ZG9lc24ndCkgY29tZSkgKD86YWZ0ZXJ8YmVmb3JlKXwoPzppc3xpc24ndHxpcyBub3QpIGVxdWFsKD86IHRvKT98KD86KD86ZG9lcyBub3R8ZG9lc24ndCkgZXF1YWx8ZXF1YWwgdG98ZXF1YWxzfGlzIG5vdHxpc24ndCl8KD86YSApPyg/OnJlZig/OiB0byk/fHJlZmVyZW5jZSB0byl8KD86YW5kfGFzfGRpdnxtb2R8bm90fG9yKSlcXGIvXG4gICAgXSxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OmFib3V0fGFib3ZlfGFmdGVyfGFnYWluc3R8YXBhcnQgZnJvbXxhcm91bmR8YXNpZGUgZnJvbXxhdHxiYWNrfGJlZm9yZXxiZWdpbm5pbmd8YmVoaW5kfGJlbG93fGJlbmVhdGh8YmVzaWRlfGJldHdlZW58YnV0fGJ5fGNvbnNpZGVyaW5nfGNvbnRpbnVlfGNvcHl8ZG9lc3xlaWdodGh8ZWxzZXxlbmR8ZXF1YWx8ZXJyb3J8ZXZlcnl8ZXhpdHxmYWxzZXxmaWZ0aHxmaXJzdHxmb3J8Zm91cnRofGZyb218ZnJvbnR8Z2V0fGdpdmVufGdsb2JhbHxpZnxpZ25vcmluZ3xpbnxpbnN0ZWFkIG9mfGludG98aXN8aXR8aXRzfGxhc3R8bG9jYWx8bWV8bWlkZGxlfG15fG5pbnRofG9mfG9ufG9udG98b3V0IG9mfG92ZXJ8cHJvcHxwcm9wZXJ0eXxwdXR8cmVwZWF0fHJldHVybnxyZXR1cm5pbmd8c2Vjb25kfHNldHxzZXZlbnRofHNpbmNlfHNpeHRofHNvbWV8dGVsbHx0ZW50aHx0aGF0fHRoZXx0aGVufHRoaXJkfHRocm91Z2h8dGhydXx0aW1lb3V0fHRpbWVzfHRvfHRyYW5zYWN0aW9ufHRydWV8dHJ5fHVudGlsfHdoZXJlfHdoaWxlfHdob3NlfHdpdGh8d2l0aG91dClcXGIvLFxuICAgICdjbGFzcy1uYW1lJzpcbiAgICAgIC9cXGIoPzpQT1NJWCBmaWxlfFJHQiBjb2xvcnxhbGlhc3xhcHBsaWNhdGlvbnxib29sZWFufGNlbnRpbWV0ZXJzfGNlbnRpbWV0cmVzfGNsYXNzfGNvbnN0YW50fGN1YmljIGNlbnRpbWV0ZXJzfGN1YmljIGNlbnRpbWV0cmVzfGN1YmljIGZlZXR8Y3ViaWMgaW5jaGVzfGN1YmljIG1ldGVyc3xjdWJpYyBtZXRyZXN8Y3ViaWMgeWFyZHN8ZGF0ZXxkZWdyZWVzIENlbHNpdXN8ZGVncmVlcyBGYWhyZW5oZWl0fGRlZ3JlZXMgS2VsdmlufGZlZXR8ZmlsZXxnYWxsb25zfGdyYW1zfGluY2hlc3xpbnRlZ2VyfGtpbG9ncmFtc3xraWxvbWV0ZXJzfGtpbG9tZXRyZXN8bGlzdHxsaXRlcnN8bGl0cmVzfG1ldGVyc3xtZXRyZXN8bWlsZXN8bnVtYmVyfG91bmNlc3xwb3VuZHN8cXVhcnRzfHJlYWx8cmVjb3JkfHJlZmVyZW5jZXxzY3JpcHR8c3F1YXJlIGZlZXR8c3F1YXJlIGtpbG9tZXRlcnN8c3F1YXJlIGtpbG9tZXRyZXN8c3F1YXJlIG1ldGVyc3xzcXVhcmUgbWV0cmVzfHNxdWFyZSBtaWxlc3xzcXVhcmUgeWFyZHN8dGV4dHx5YXJkcylcXGIvLFxuICAgIHB1bmN0dWF0aW9uOiAvW3t9KCk6LMKswqvCu+OAiuOAi10vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiYXBwbGVzY3JpcHQiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJzdHJpbmciLCJudW1iZXIiLCJvcGVyYXRvciIsImtleXdvcmQiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/applescript.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/aql.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/aql.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = aql;\naql.displayName = \"aql\";\naql.aliases = [];\nfunction aql(Prism) {\n    Prism.languages.aql = {\n        comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        property: {\n            pattern: /([{,]\\s*)(?:(?!\\d)\\w+|([\"'´`])(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2)(?=\\s*:)/,\n            lookbehind: true,\n            greedy: true\n        },\n        string: {\n            pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n            greedy: true\n        },\n        identifier: {\n            pattern: /([´`])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n            greedy: true\n        },\n        variable: /@@?\\w+/,\n        keyword: [\n            {\n                pattern: /(\\bWITH\\s+)COUNT(?=\\s+INTO\\b)/i,\n                lookbehind: true\n            },\n            /\\b(?:AGGREGATE|ALL|AND|ANY|ASC|COLLECT|DESC|DISTINCT|FILTER|FOR|GRAPH|IN|INBOUND|INSERT|INTO|K_PATHS|K_SHORTEST_PATHS|LET|LIKE|LIMIT|NONE|NOT|NULL|OR|OUTBOUND|REMOVE|REPLACE|RETURN|SHORTEST_PATH|SORT|UPDATE|UPSERT|WINDOW|WITH)\\b/i,\n            {\n                pattern: /(^|[^\\w.[])(?:KEEP|PRUNE|SEARCH|TO)\\b/i,\n                lookbehind: true\n            },\n            {\n                pattern: /(^|[^\\w.[])(?:CURRENT|NEW|OLD)\\b/,\n                lookbehind: true\n            },\n            {\n                pattern: /\\bOPTIONS(?=\\s*\\{)/i\n            }\n        ],\n        function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n        boolean: /\\b(?:false|true)\\b/i,\n        range: {\n            pattern: /\\.\\./,\n            alias: \"operator\"\n        },\n        number: [\n            /\\b0b[01]+/i,\n            /\\b0x[0-9a-f]+/i,\n            /(?:\\B\\.\\d+|\\b(?:0|[1-9]\\d*)(?:\\.\\d+)?)(?:e[+-]?\\d+)?/i\n        ],\n        operator: /\\*{2,}|[=!]~|[!=<>]=?|&&|\\|\\||[-+*/%]/,\n        punctuation: /::|[?.:,;()[\\]{}]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYXFsLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLElBQUlDLFdBQVcsR0FBRztBQUNsQkQsSUFBSUUsT0FBTyxHQUFHLEVBQUU7QUFDaEIsU0FBU0YsSUFBSUcsS0FBSztJQUNoQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7UUFDVEMsVUFBVTtZQUNSQyxTQUNFO1lBQ0ZDLFlBQVk7WUFDWkMsUUFBUTtRQUNWO1FBQ0FDLFFBQVE7WUFDTkgsU0FBUztZQUNURSxRQUFRO1FBQ1Y7UUFDQUUsWUFBWTtZQUNWSixTQUFTO1lBQ1RFLFFBQVE7UUFDVjtRQUNBRyxVQUFVO1FBQ1ZDLFNBQVM7WUFDUDtnQkFDRU4sU0FBUztnQkFDVEMsWUFBWTtZQUNkO1lBQ0E7WUFDQTtnQkFDRUQsU0FBUztnQkFDVEMsWUFBWTtZQUNkO1lBQ0E7Z0JBQ0VELFNBQVM7Z0JBQ1RDLFlBQVk7WUFDZDtZQUNBO2dCQUNFRCxTQUFTO1lBQ1g7U0FDRDtRQUNETyxVQUFVO1FBQ1ZDLFNBQVM7UUFDVEMsT0FBTztZQUNMVCxTQUFTO1lBQ1RVLE9BQU87UUFDVDtRQUNBQyxRQUFRO1lBQ047WUFDQTtZQUNBO1NBQ0Q7UUFDREMsVUFBVTtRQUNWQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hcWwuanM/NjYwMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBhcWxcbmFxbC5kaXNwbGF5TmFtZSA9ICdhcWwnXG5hcWwuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBhcWwoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmFxbCA9IHtcbiAgICBjb21tZW50OiAvXFwvXFwvLip8XFwvXFwqW1xcc1xcU10qP1xcKlxcLy8sXG4gICAgcHJvcGVydHk6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oW3ssXVxccyopKD86KD8hXFxkKVxcdyt8KFtcIifCtGBdKSg/Oig/IVxcMilbXlxcXFxcXHJcXG5dfFxcXFwuKSpcXDIpKD89XFxzKjopLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyhbXCInXSkoPzooPyFcXDEpW15cXFxcXFxyXFxuXXxcXFxcLikqXFwxLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgaWRlbnRpZmllcjoge1xuICAgICAgcGF0dGVybjogLyhbwrRgXSkoPzooPyFcXDEpW15cXFxcXFxyXFxuXXxcXFxcLikqXFwxLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgdmFyaWFibGU6IC9AQD9cXHcrLyxcbiAgICBrZXl3b3JkOiBbXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC8oXFxiV0lUSFxccyspQ09VTlQoPz1cXHMrSU5UT1xcYikvaSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIC9cXGIoPzpBR0dSRUdBVEV8QUxMfEFORHxBTll8QVNDfENPTExFQ1R8REVTQ3xESVNUSU5DVHxGSUxURVJ8Rk9SfEdSQVBIfElOfElOQk9VTkR8SU5TRVJUfElOVE98S19QQVRIU3xLX1NIT1JURVNUX1BBVEhTfExFVHxMSUtFfExJTUlUfE5PTkV8Tk9UfE5VTEx8T1J8T1VUQk9VTkR8UkVNT1ZFfFJFUExBQ0V8UkVUVVJOfFNIT1JURVNUX1BBVEh8U09SVHxVUERBVEV8VVBTRVJUfFdJTkRPV3xXSVRIKVxcYi9pLCAvLyBwc2V1ZG8ga2V5d29yZHMgZ2V0IGEgbG9va2JlaGluZCB0byBhdm9pZCBmYWxzZSBwb3NpdGl2ZXNcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyhefFteXFx3LltdKSg/OktFRVB8UFJVTkV8U0VBUkNIfFRPKVxcYi9pLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvKF58W15cXHcuW10pKD86Q1VSUkVOVHxORVd8T0xEKVxcYi8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC9cXGJPUFRJT05TKD89XFxzKlxceykvaVxuICAgICAgfVxuICAgIF0sXG4gICAgZnVuY3Rpb246IC9cXGIoPyFcXGQpXFx3Kyg/PVxccypcXCgpLyxcbiAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvaSxcbiAgICByYW5nZToge1xuICAgICAgcGF0dGVybjogL1xcLlxcLi8sXG4gICAgICBhbGlhczogJ29wZXJhdG9yJ1xuICAgIH0sXG4gICAgbnVtYmVyOiBbXG4gICAgICAvXFxiMGJbMDFdKy9pLFxuICAgICAgL1xcYjB4WzAtOWEtZl0rL2ksXG4gICAgICAvKD86XFxCXFwuXFxkK3xcXGIoPzowfFsxLTldXFxkKikoPzpcXC5cXGQrKT8pKD86ZVsrLV0/XFxkKyk/L2lcbiAgICBdLFxuICAgIG9wZXJhdG9yOiAvXFwqezIsfXxbPSFdfnxbIT08Pl09P3wmJnxcXHxcXHx8Wy0rKi8lXS8sXG4gICAgcHVuY3R1YXRpb246IC86OnxbPy46LDsoKVtcXF17fV0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiYXFsIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicHJvcGVydHkiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImdyZWVkeSIsInN0cmluZyIsImlkZW50aWZpZXIiLCJ2YXJpYWJsZSIsImtleXdvcmQiLCJmdW5jdGlvbiIsImJvb2xlYW4iLCJyYW5nZSIsImFsaWFzIiwibnVtYmVyIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/aql.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/arduino.js":
/*!************************************************!*\
  !*** ./node_modules/refractor/lang/arduino.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorCpp = __webpack_require__(/*! ./cpp.js */ \"(ssr)/./node_modules/refractor/lang/cpp.js\");\nmodule.exports = arduino;\narduino.displayName = \"arduino\";\narduino.aliases = [\n    \"ino\"\n];\nfunction arduino(Prism) {\n    Prism.register(refractorCpp);\n    Prism.languages.arduino = Prism.languages.extend(\"cpp\", {\n        keyword: /\\b(?:String|array|bool|boolean|break|byte|case|catch|continue|default|do|double|else|finally|for|function|goto|if|in|instanceof|int|integer|long|loop|new|null|return|setup|string|switch|throw|try|void|while|word)\\b/,\n        constant: /\\b(?:ANALOG_MESSAGE|DEFAULT|DIGITAL_MESSAGE|EXTERNAL|FIRMATA_STRING|HIGH|INPUT|INPUT_PULLUP|INTERNAL|INTERNAL1V1|INTERNAL2V56|LED_BUILTIN|LOW|OUTPUT|REPORT_ANALOG|REPORT_DIGITAL|SET_PIN_MODE|SYSEX_START|SYSTEM_RESET)\\b/,\n        builtin: /\\b(?:Audio|BSSID|Bridge|Client|Console|EEPROM|Esplora|EsploraTFT|Ethernet|EthernetClient|EthernetServer|EthernetUDP|File|FileIO|FileSystem|Firmata|GPRS|GSM|GSMBand|GSMClient|GSMModem|GSMPIN|GSMScanner|GSMServer|GSMVoiceCall|GSM_SMS|HttpClient|IPAddress|IRread|Keyboard|KeyboardController|LiquidCrystal|LiquidCrystal_I2C|Mailbox|Mouse|MouseController|PImage|Process|RSSI|RobotControl|RobotMotor|SD|SPI|SSID|Scheduler|Serial|Server|Servo|SoftwareSerial|Stepper|Stream|TFT|Task|USBHost|WiFi|WiFiClient|WiFiServer|WiFiUDP|Wire|YunClient|YunServer|abs|addParameter|analogRead|analogReadResolution|analogReference|analogWrite|analogWriteResolution|answerCall|attach|attachGPRS|attachInterrupt|attached|autoscroll|available|background|beep|begin|beginPacket|beginSD|beginSMS|beginSpeaker|beginTFT|beginTransmission|beginWrite|bit|bitClear|bitRead|bitSet|bitWrite|blink|blinkVersion|buffer|changePIN|checkPIN|checkPUK|checkReg|circle|cityNameRead|cityNameWrite|clear|clearScreen|click|close|compassRead|config|connect|connected|constrain|cos|countryNameRead|countryNameWrite|createChar|cursor|debugPrint|delay|delayMicroseconds|detach|detachInterrupt|digitalRead|digitalWrite|disconnect|display|displayLogos|drawBMP|drawCompass|encryptionType|end|endPacket|endSMS|endTransmission|endWrite|exists|exitValue|fill|find|findUntil|flush|gatewayIP|get|getAsynchronously|getBand|getButton|getCurrentCarrier|getIMEI|getKey|getModifiers|getOemKey|getPINUsed|getResult|getSignalStrength|getSocket|getVoiceCallStatus|getXChange|getYChange|hangCall|height|highByte|home|image|interrupts|isActionDone|isDirectory|isListening|isPIN|isPressed|isValid|keyPressed|keyReleased|keyboardRead|knobRead|leftToRight|line|lineFollowConfig|listen|listenOnLocalhost|loadImage|localIP|lowByte|macAddress|maintain|map|max|messageAvailable|micros|millis|min|mkdir|motorsStop|motorsWrite|mouseDragged|mouseMoved|mousePressed|mouseReleased|move|noAutoscroll|noBlink|noBuffer|noCursor|noDisplay|noFill|noInterrupts|noListenOnLocalhost|noStroke|noTone|onReceive|onRequest|open|openNextFile|overflow|parseCommand|parseFloat|parseInt|parsePacket|pauseMode|peek|pinMode|playFile|playMelody|point|pointTo|position|pow|prepare|press|print|printFirmwareVersion|printVersion|println|process|processInput|pulseIn|put|random|randomSeed|read|readAccelerometer|readBlue|readButton|readBytes|readBytesUntil|readGreen|readJoystickButton|readJoystickSwitch|readJoystickX|readJoystickY|readLightSensor|readMessage|readMicrophone|readNetworks|readRed|readSlider|readString|readStringUntil|readTemperature|ready|rect|release|releaseAll|remoteIP|remoteNumber|remotePort|remove|requestFrom|retrieveCallingNumber|rewindDirectory|rightToLeft|rmdir|robotNameRead|robotNameWrite|run|runAsynchronously|runShellCommand|runShellCommandAsynchronously|running|scanNetworks|scrollDisplayLeft|scrollDisplayRight|seek|sendAnalog|sendDigitalPortPair|sendDigitalPorts|sendString|sendSysex|serialEvent|setBand|setBitOrder|setClockDivider|setCursor|setDNS|setDataMode|setFirmwareVersion|setMode|setPINUsed|setSpeed|setTextSize|setTimeout|shiftIn|shiftOut|shutdown|sin|size|sqrt|startLoop|step|stop|stroke|subnetMask|switchPIN|tan|tempoWrite|text|tone|transfer|tuneWrite|turn|updateIR|userNameRead|userNameWrite|voiceCall|waitContinue|width|write|writeBlue|writeGreen|writeJSON|writeMessage|writeMicroseconds|writeRGB|writeRed|yield)\\b/\n    });\n    Prism.languages.ino = Prism.languages.arduino;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYXJkdWluby5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLElBQUlBLGVBQWVDLG1CQUFPQSxDQUFDO0FBQzNCQyxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxRQUFRQyxXQUFXLEdBQUc7QUFDdEJELFFBQVFFLE9BQU8sR0FBRztJQUFDO0NBQU07QUFDekIsU0FBU0YsUUFBUUcsS0FBSztJQUNwQkEsTUFBTUMsUUFBUSxDQUFDUjtJQUNmTyxNQUFNRSxTQUFTLENBQUNMLE9BQU8sR0FBR0csTUFBTUUsU0FBUyxDQUFDQyxNQUFNLENBQUMsT0FBTztRQUN0REMsU0FDRTtRQUNGQyxVQUNFO1FBQ0ZDLFNBQ0U7SUFDSjtJQUNBTixNQUFNRSxTQUFTLENBQUNLLEdBQUcsR0FBR1AsTUFBTUUsU0FBUyxDQUFDTCxPQUFPO0FBQy9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2FyZHVpbm8uanM/MjA3MSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcbnZhciByZWZyYWN0b3JDcHAgPSByZXF1aXJlKCcuL2NwcC5qcycpXG5tb2R1bGUuZXhwb3J0cyA9IGFyZHVpbm9cbmFyZHVpbm8uZGlzcGxheU5hbWUgPSAnYXJkdWlubydcbmFyZHVpbm8uYWxpYXNlcyA9IFsnaW5vJ11cbmZ1bmN0aW9uIGFyZHVpbm8oUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yQ3BwKVxuICBQcmlzbS5sYW5ndWFnZXMuYXJkdWlubyA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2NwcCcsIHtcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OlN0cmluZ3xhcnJheXxib29sfGJvb2xlYW58YnJlYWt8Ynl0ZXxjYXNlfGNhdGNofGNvbnRpbnVlfGRlZmF1bHR8ZG98ZG91YmxlfGVsc2V8ZmluYWxseXxmb3J8ZnVuY3Rpb258Z290b3xpZnxpbnxpbnN0YW5jZW9mfGludHxpbnRlZ2VyfGxvbmd8bG9vcHxuZXd8bnVsbHxyZXR1cm58c2V0dXB8c3RyaW5nfHN3aXRjaHx0aHJvd3x0cnl8dm9pZHx3aGlsZXx3b3JkKVxcYi8sXG4gICAgY29uc3RhbnQ6XG4gICAgICAvXFxiKD86QU5BTE9HX01FU1NBR0V8REVGQVVMVHxESUdJVEFMX01FU1NBR0V8RVhURVJOQUx8RklSTUFUQV9TVFJJTkd8SElHSHxJTlBVVHxJTlBVVF9QVUxMVVB8SU5URVJOQUx8SU5URVJOQUwxVjF8SU5URVJOQUwyVjU2fExFRF9CVUlMVElOfExPV3xPVVRQVVR8UkVQT1JUX0FOQUxPR3xSRVBPUlRfRElHSVRBTHxTRVRfUElOX01PREV8U1lTRVhfU1RBUlR8U1lTVEVNX1JFU0VUKVxcYi8sXG4gICAgYnVpbHRpbjpcbiAgICAgIC9cXGIoPzpBdWRpb3xCU1NJRHxCcmlkZ2V8Q2xpZW50fENvbnNvbGV8RUVQUk9NfEVzcGxvcmF8RXNwbG9yYVRGVHxFdGhlcm5ldHxFdGhlcm5ldENsaWVudHxFdGhlcm5ldFNlcnZlcnxFdGhlcm5ldFVEUHxGaWxlfEZpbGVJT3xGaWxlU3lzdGVtfEZpcm1hdGF8R1BSU3xHU018R1NNQmFuZHxHU01DbGllbnR8R1NNTW9kZW18R1NNUElOfEdTTVNjYW5uZXJ8R1NNU2VydmVyfEdTTVZvaWNlQ2FsbHxHU01fU01TfEh0dHBDbGllbnR8SVBBZGRyZXNzfElScmVhZHxLZXlib2FyZHxLZXlib2FyZENvbnRyb2xsZXJ8TGlxdWlkQ3J5c3RhbHxMaXF1aWRDcnlzdGFsX0kyQ3xNYWlsYm94fE1vdXNlfE1vdXNlQ29udHJvbGxlcnxQSW1hZ2V8UHJvY2Vzc3xSU1NJfFJvYm90Q29udHJvbHxSb2JvdE1vdG9yfFNEfFNQSXxTU0lEfFNjaGVkdWxlcnxTZXJpYWx8U2VydmVyfFNlcnZvfFNvZnR3YXJlU2VyaWFsfFN0ZXBwZXJ8U3RyZWFtfFRGVHxUYXNrfFVTQkhvc3R8V2lGaXxXaUZpQ2xpZW50fFdpRmlTZXJ2ZXJ8V2lGaVVEUHxXaXJlfFl1bkNsaWVudHxZdW5TZXJ2ZXJ8YWJzfGFkZFBhcmFtZXRlcnxhbmFsb2dSZWFkfGFuYWxvZ1JlYWRSZXNvbHV0aW9ufGFuYWxvZ1JlZmVyZW5jZXxhbmFsb2dXcml0ZXxhbmFsb2dXcml0ZVJlc29sdXRpb258YW5zd2VyQ2FsbHxhdHRhY2h8YXR0YWNoR1BSU3xhdHRhY2hJbnRlcnJ1cHR8YXR0YWNoZWR8YXV0b3Njcm9sbHxhdmFpbGFibGV8YmFja2dyb3VuZHxiZWVwfGJlZ2lufGJlZ2luUGFja2V0fGJlZ2luU0R8YmVnaW5TTVN8YmVnaW5TcGVha2VyfGJlZ2luVEZUfGJlZ2luVHJhbnNtaXNzaW9ufGJlZ2luV3JpdGV8Yml0fGJpdENsZWFyfGJpdFJlYWR8Yml0U2V0fGJpdFdyaXRlfGJsaW5rfGJsaW5rVmVyc2lvbnxidWZmZXJ8Y2hhbmdlUElOfGNoZWNrUElOfGNoZWNrUFVLfGNoZWNrUmVnfGNpcmNsZXxjaXR5TmFtZVJlYWR8Y2l0eU5hbWVXcml0ZXxjbGVhcnxjbGVhclNjcmVlbnxjbGlja3xjbG9zZXxjb21wYXNzUmVhZHxjb25maWd8Y29ubmVjdHxjb25uZWN0ZWR8Y29uc3RyYWlufGNvc3xjb3VudHJ5TmFtZVJlYWR8Y291bnRyeU5hbWVXcml0ZXxjcmVhdGVDaGFyfGN1cnNvcnxkZWJ1Z1ByaW50fGRlbGF5fGRlbGF5TWljcm9zZWNvbmRzfGRldGFjaHxkZXRhY2hJbnRlcnJ1cHR8ZGlnaXRhbFJlYWR8ZGlnaXRhbFdyaXRlfGRpc2Nvbm5lY3R8ZGlzcGxheXxkaXNwbGF5TG9nb3N8ZHJhd0JNUHxkcmF3Q29tcGFzc3xlbmNyeXB0aW9uVHlwZXxlbmR8ZW5kUGFja2V0fGVuZFNNU3xlbmRUcmFuc21pc3Npb258ZW5kV3JpdGV8ZXhpc3RzfGV4aXRWYWx1ZXxmaWxsfGZpbmR8ZmluZFVudGlsfGZsdXNofGdhdGV3YXlJUHxnZXR8Z2V0QXN5bmNocm9ub3VzbHl8Z2V0QmFuZHxnZXRCdXR0b258Z2V0Q3VycmVudENhcnJpZXJ8Z2V0SU1FSXxnZXRLZXl8Z2V0TW9kaWZpZXJzfGdldE9lbUtleXxnZXRQSU5Vc2VkfGdldFJlc3VsdHxnZXRTaWduYWxTdHJlbmd0aHxnZXRTb2NrZXR8Z2V0Vm9pY2VDYWxsU3RhdHVzfGdldFhDaGFuZ2V8Z2V0WUNoYW5nZXxoYW5nQ2FsbHxoZWlnaHR8aGlnaEJ5dGV8aG9tZXxpbWFnZXxpbnRlcnJ1cHRzfGlzQWN0aW9uRG9uZXxpc0RpcmVjdG9yeXxpc0xpc3RlbmluZ3xpc1BJTnxpc1ByZXNzZWR8aXNWYWxpZHxrZXlQcmVzc2VkfGtleVJlbGVhc2VkfGtleWJvYXJkUmVhZHxrbm9iUmVhZHxsZWZ0VG9SaWdodHxsaW5lfGxpbmVGb2xsb3dDb25maWd8bGlzdGVufGxpc3Rlbk9uTG9jYWxob3N0fGxvYWRJbWFnZXxsb2NhbElQfGxvd0J5dGV8bWFjQWRkcmVzc3xtYWludGFpbnxtYXB8bWF4fG1lc3NhZ2VBdmFpbGFibGV8bWljcm9zfG1pbGxpc3xtaW58bWtkaXJ8bW90b3JzU3RvcHxtb3RvcnNXcml0ZXxtb3VzZURyYWdnZWR8bW91c2VNb3ZlZHxtb3VzZVByZXNzZWR8bW91c2VSZWxlYXNlZHxtb3ZlfG5vQXV0b3Njcm9sbHxub0JsaW5rfG5vQnVmZmVyfG5vQ3Vyc29yfG5vRGlzcGxheXxub0ZpbGx8bm9JbnRlcnJ1cHRzfG5vTGlzdGVuT25Mb2NhbGhvc3R8bm9TdHJva2V8bm9Ub25lfG9uUmVjZWl2ZXxvblJlcXVlc3R8b3BlbnxvcGVuTmV4dEZpbGV8b3ZlcmZsb3d8cGFyc2VDb21tYW5kfHBhcnNlRmxvYXR8cGFyc2VJbnR8cGFyc2VQYWNrZXR8cGF1c2VNb2RlfHBlZWt8cGluTW9kZXxwbGF5RmlsZXxwbGF5TWVsb2R5fHBvaW50fHBvaW50VG98cG9zaXRpb258cG93fHByZXBhcmV8cHJlc3N8cHJpbnR8cHJpbnRGaXJtd2FyZVZlcnNpb258cHJpbnRWZXJzaW9ufHByaW50bG58cHJvY2Vzc3xwcm9jZXNzSW5wdXR8cHVsc2VJbnxwdXR8cmFuZG9tfHJhbmRvbVNlZWR8cmVhZHxyZWFkQWNjZWxlcm9tZXRlcnxyZWFkQmx1ZXxyZWFkQnV0dG9ufHJlYWRCeXRlc3xyZWFkQnl0ZXNVbnRpbHxyZWFkR3JlZW58cmVhZEpveXN0aWNrQnV0dG9ufHJlYWRKb3lzdGlja1N3aXRjaHxyZWFkSm95c3RpY2tYfHJlYWRKb3lzdGlja1l8cmVhZExpZ2h0U2Vuc29yfHJlYWRNZXNzYWdlfHJlYWRNaWNyb3Bob25lfHJlYWROZXR3b3Jrc3xyZWFkUmVkfHJlYWRTbGlkZXJ8cmVhZFN0cmluZ3xyZWFkU3RyaW5nVW50aWx8cmVhZFRlbXBlcmF0dXJlfHJlYWR5fHJlY3R8cmVsZWFzZXxyZWxlYXNlQWxsfHJlbW90ZUlQfHJlbW90ZU51bWJlcnxyZW1vdGVQb3J0fHJlbW92ZXxyZXF1ZXN0RnJvbXxyZXRyaWV2ZUNhbGxpbmdOdW1iZXJ8cmV3aW5kRGlyZWN0b3J5fHJpZ2h0VG9MZWZ0fHJtZGlyfHJvYm90TmFtZVJlYWR8cm9ib3ROYW1lV3JpdGV8cnVufHJ1bkFzeW5jaHJvbm91c2x5fHJ1blNoZWxsQ29tbWFuZHxydW5TaGVsbENvbW1hbmRBc3luY2hyb25vdXNseXxydW5uaW5nfHNjYW5OZXR3b3Jrc3xzY3JvbGxEaXNwbGF5TGVmdHxzY3JvbGxEaXNwbGF5UmlnaHR8c2Vla3xzZW5kQW5hbG9nfHNlbmREaWdpdGFsUG9ydFBhaXJ8c2VuZERpZ2l0YWxQb3J0c3xzZW5kU3RyaW5nfHNlbmRTeXNleHxzZXJpYWxFdmVudHxzZXRCYW5kfHNldEJpdE9yZGVyfHNldENsb2NrRGl2aWRlcnxzZXRDdXJzb3J8c2V0RE5TfHNldERhdGFNb2RlfHNldEZpcm13YXJlVmVyc2lvbnxzZXRNb2RlfHNldFBJTlVzZWR8c2V0U3BlZWR8c2V0VGV4dFNpemV8c2V0VGltZW91dHxzaGlmdElufHNoaWZ0T3V0fHNodXRkb3dufHNpbnxzaXplfHNxcnR8c3RhcnRMb29wfHN0ZXB8c3RvcHxzdHJva2V8c3VibmV0TWFza3xzd2l0Y2hQSU58dGFufHRlbXBvV3JpdGV8dGV4dHx0b25lfHRyYW5zZmVyfHR1bmVXcml0ZXx0dXJufHVwZGF0ZUlSfHVzZXJOYW1lUmVhZHx1c2VyTmFtZVdyaXRlfHZvaWNlQ2FsbHx3YWl0Q29udGludWV8d2lkdGh8d3JpdGV8d3JpdGVCbHVlfHdyaXRlR3JlZW58d3JpdGVKU09OfHdyaXRlTWVzc2FnZXx3cml0ZU1pY3Jvc2Vjb25kc3x3cml0ZVJHQnx3cml0ZVJlZHx5aWVsZClcXGIvXG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5pbm8gPSBQcmlzbS5sYW5ndWFnZXMuYXJkdWlub1xufVxuIl0sIm5hbWVzIjpbInJlZnJhY3RvckNwcCIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiYXJkdWlubyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJrZXl3b3JkIiwiY29uc3RhbnQiLCJidWlsdGluIiwiaW5vIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/arduino.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/arff.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/arff.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = arff;\narff.displayName = \"arff\";\narff.aliases = [];\nfunction arff(Prism) {\n    Prism.languages.arff = {\n        comment: /%.*/,\n        string: {\n            pattern: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true\n        },\n        keyword: /@(?:attribute|data|end|relation)\\b/i,\n        number: /\\b\\d+(?:\\.\\d+)?\\b/,\n        punctuation: /[{},]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYXJmZi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDakJBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHO1FBQ3JCSyxTQUFTO1FBQ1RDLFFBQVE7WUFDTkMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsU0FBUztRQUNUQyxRQUFRO1FBQ1JDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2FyZmYuanM/YjE4MyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBhcmZmXG5hcmZmLmRpc3BsYXlOYW1lID0gJ2FyZmYnXG5hcmZmLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gYXJmZihQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuYXJmZiA9IHtcbiAgICBjb21tZW50OiAvJS4qLyxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC8oW1wiJ10pKD86XFxcXC58KD8hXFwxKVteXFxcXFxcclxcbl0pKlxcMS8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGtleXdvcmQ6IC9AKD86YXR0cmlidXRlfGRhdGF8ZW5kfHJlbGF0aW9uKVxcYi9pLFxuICAgIG51bWJlcjogL1xcYlxcZCsoPzpcXC5cXGQrKT9cXGIvLFxuICAgIHB1bmN0dWF0aW9uOiAvW3t9LF0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiYXJmZiIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJrZXl3b3JkIiwibnVtYmVyIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/arff.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/asciidoc.js":
/*!*************************************************!*\
  !*** ./node_modules/refractor/lang/asciidoc.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = asciidoc;\nasciidoc.displayName = \"asciidoc\";\nasciidoc.aliases = [\n    \"adoc\"\n];\nfunction asciidoc(Prism) {\n    ;\n    (function(Prism) {\n        var attributes = {\n            pattern: /(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\[\\]\\\\]|\\\\.)*\\]|[^\\[\\]\\\\\"'$`]|\\\\.)*\\]/m,\n            lookbehind: true,\n            inside: {\n                quoted: {\n                    pattern: /([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n                    inside: {\n                        punctuation: /^[$`]|[$`]$/\n                    }\n                },\n                interpreted: {\n                    pattern: /'(?:[^'\\\\]|\\\\.)*'/,\n                    inside: {\n                        punctuation: /^'|'$/ // See rest below\n                    }\n                },\n                string: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n                variable: /\\w+(?==)/,\n                punctuation: /^\\[|\\]$|,/,\n                operator: /=/,\n                // The negative look-ahead prevents blank matches\n                \"attr-value\": /(?!^\\s+$).+/\n            }\n        };\n        var asciidoc = Prism.languages.asciidoc = {\n            \"comment-block\": {\n                pattern: /^(\\/{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1/m,\n                alias: \"comment\"\n            },\n            table: {\n                pattern: /^\\|={3,}(?:(?:\\r?\\n|\\r(?!\\n)).*)*?(?:\\r?\\n|\\r)\\|={3,}$/m,\n                inside: {\n                    specifiers: {\n                        pattern: /(?:(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)[+*](?:[<^>](?:\\.[<^>])?|\\.[<^>])?|[<^>](?:\\.[<^>])?|\\.[<^>])[a-z]*|[a-z]+)(?=\\|)/,\n                        alias: \"attr-value\"\n                    },\n                    punctuation: {\n                        pattern: /(^|[^\\\\])[|!]=*/,\n                        lookbehind: true\n                    } // See rest below\n                }\n            },\n            \"passthrough-block\": {\n                pattern: /^(\\+{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n                inside: {\n                    punctuation: /^\\++|\\++$/ // See rest below\n                }\n            },\n            // Literal blocks and listing blocks\n            \"literal-block\": {\n                pattern: /^(-{4,}|\\.{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n                inside: {\n                    punctuation: /^(?:-+|\\.+)|(?:-+|\\.+)$/ // See rest below\n                }\n            },\n            // Sidebar blocks, quote blocks, example blocks and open blocks\n            \"other-block\": {\n                pattern: /^(--|\\*{4,}|_{4,}|={4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n                inside: {\n                    punctuation: /^(?:-+|\\*+|_+|=+)|(?:-+|\\*+|_+|=+)$/ // See rest below\n                }\n            },\n            // list-punctuation and list-label must appear before indented-block\n            \"list-punctuation\": {\n                pattern: /(^[ \\t]*)(?:-|\\*{1,5}|\\.{1,5}|(?:[a-z]|\\d+)\\.|[xvi]+\\))(?= )/im,\n                lookbehind: true,\n                alias: \"punctuation\"\n            },\n            \"list-label\": {\n                pattern: /(^[ \\t]*)[a-z\\d].+(?::{2,4}|;;)(?=\\s)/im,\n                lookbehind: true,\n                alias: \"symbol\"\n            },\n            \"indented-block\": {\n                pattern: /((\\r?\\n|\\r)\\2)([ \\t]+)\\S.*(?:(?:\\r?\\n|\\r)\\3.+)*(?=\\2{2}|$)/,\n                lookbehind: true\n            },\n            comment: /^\\/\\/.*/m,\n            title: {\n                pattern: /^.+(?:\\r?\\n|\\r)(?:={3,}|-{3,}|~{3,}|\\^{3,}|\\+{3,})$|^={1,5} .+|^\\.(?![\\s.]).*/m,\n                alias: \"important\",\n                inside: {\n                    punctuation: /^(?:\\.|=+)|(?:=+|-+|~+|\\^+|\\++)$/ // See rest below\n                }\n            },\n            \"attribute-entry\": {\n                pattern: /^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$/m,\n                alias: \"tag\"\n            },\n            attributes: attributes,\n            hr: {\n                pattern: /^'{3,}$/m,\n                alias: \"punctuation\"\n            },\n            \"page-break\": {\n                pattern: /^<{3,}$/m,\n                alias: \"punctuation\"\n            },\n            admonition: {\n                pattern: /^(?:CAUTION|IMPORTANT|NOTE|TIP|WARNING):/m,\n                alias: \"keyword\"\n            },\n            callout: [\n                {\n                    pattern: /(^[ \\t]*)<?\\d*>/m,\n                    lookbehind: true,\n                    alias: \"symbol\"\n                },\n                {\n                    pattern: /<\\d+>/,\n                    alias: \"symbol\"\n                }\n            ],\n            macro: {\n                pattern: /\\b[a-z\\d][a-z\\d-]*::?(?:[^\\s\\[\\]]*\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n                inside: {\n                    function: /^[a-z\\d-]+(?=:)/,\n                    punctuation: /^::?/,\n                    attributes: {\n                        pattern: /(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n                        inside: attributes.inside\n                    }\n                }\n            },\n            inline: {\n                /*\nThe initial look-behind prevents the highlighting of escaped quoted text.\nQuoted text can be multi-line but cannot span an empty line.\nAll quoted text can have attributes before [foobar, 'foobar', baz=\"bar\"].\nFirst, we handle the constrained quotes.\nThose must be bounded by non-word chars and cannot have spaces between the delimiter and the first char.\nThey are, in order: _emphasis_, ``double quotes'', `single quotes', `monospace`, 'emphasis', *strong*, +monospace+ and #unquoted#\nThen we handle the unconstrained quotes.\nThose do not have the restrictions of the constrained quotes.\nThey are, in order: __emphasis__, **strong**, ++monospace++, +++passthrough+++, ##unquoted##, $$passthrough$$, ~subscript~, ^superscript^, {attribute-reference}, [[anchor]], [[[bibliography anchor]]], <<xref>>, (((indexes))) and ((indexes))\n*/ pattern: /(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?:[^`'\\s]|\\s+\\S)+['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))/m,\n                lookbehind: true,\n                inside: {\n                    attributes: attributes,\n                    url: {\n                        pattern: /^(?:\\[\\[\\[?.+?\\]?\\]\\]|<<.+?>>)$/,\n                        inside: {\n                            punctuation: /^(?:\\[\\[\\[?|<<)|(?:\\]\\]\\]?|>>)$/\n                        }\n                    },\n                    \"attribute-ref\": {\n                        pattern: /^\\{.+\\}$/,\n                        inside: {\n                            variable: {\n                                pattern: /(^\\{)[a-z\\d,+_-]+/,\n                                lookbehind: true\n                            },\n                            operator: /^[=?!#%@$]|!(?=[:}])/,\n                            punctuation: /^\\{|\\}$|::?/\n                        }\n                    },\n                    italic: {\n                        pattern: /^(['_])[\\s\\S]+\\1$/,\n                        inside: {\n                            punctuation: /^(?:''?|__?)|(?:''?|__?)$/\n                        }\n                    },\n                    bold: {\n                        pattern: /^\\*[\\s\\S]+\\*$/,\n                        inside: {\n                            punctuation: /^\\*\\*?|\\*\\*?$/\n                        }\n                    },\n                    punctuation: /^(?:``?|\\+{1,3}|##?|\\$\\$|[~^]|\\(\\(\\(?)|(?:''?|\\+{1,3}|##?|\\$\\$|[~^`]|\\)?\\)\\))$/\n                }\n            },\n            replacement: {\n                pattern: /\\((?:C|R|TM)\\)/,\n                alias: \"builtin\"\n            },\n            entity: /&#?[\\da-z]{1,8};/i,\n            \"line-continuation\": {\n                pattern: /(^| )\\+$/m,\n                lookbehind: true,\n                alias: \"punctuation\"\n            }\n        } // Allow some nesting. There is no recursion though, so cloning should not be needed.\n        ;\n        function copyFromAsciiDoc(keys) {\n            keys = keys.split(\" \");\n            var o = {};\n            for(var i = 0, l = keys.length; i < l; i++){\n                o[keys[i]] = asciidoc[keys[i]];\n            }\n            return o;\n        }\n        attributes.inside[\"interpreted\"].inside.rest = copyFromAsciiDoc(\"macro inline replacement entity\");\n        asciidoc[\"passthrough-block\"].inside.rest = copyFromAsciiDoc(\"macro\");\n        asciidoc[\"literal-block\"].inside.rest = copyFromAsciiDoc(\"callout\");\n        asciidoc[\"table\"].inside.rest = copyFromAsciiDoc(\"comment-block passthrough-block literal-block other-block list-punctuation indented-block comment title attribute-entry attributes hr page-break admonition list-label callout macro inline replacement entity line-continuation\");\n        asciidoc[\"other-block\"].inside.rest = copyFromAsciiDoc(\"table list-punctuation indented-block comment attribute-entry attributes hr page-break admonition list-label macro inline replacement entity line-continuation\");\n        asciidoc[\"title\"].inside.rest = copyFromAsciiDoc(\"macro inline replacement entity\") // Plugin to make entity title show the real entity, idea by Roman Komarov\n        ;\n        Prism.hooks.add(\"wrap\", function(env) {\n            if (env.type === \"entity\") {\n                env.attributes[\"title\"] = env.content.value.replace(/&amp;/, \"&\");\n            }\n        });\n        Prism.languages.adoc = Prism.languages.asciidoc;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/asciidoc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/asm6502.js":
/*!************************************************!*\
  !*** ./node_modules/refractor/lang/asm6502.js ***!
  \************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = asm6502;\nasm6502.displayName = \"asm6502\";\nasm6502.aliases = [];\nfunction asm6502(Prism) {\n    Prism.languages.asm6502 = {\n        comment: /;.*/,\n        directive: {\n            pattern: /\\.\\w+(?= )/,\n            alias: \"property\"\n        },\n        string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        \"op-code\": {\n            pattern: /\\b(?:ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA|adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya)\\b/,\n            alias: \"keyword\"\n        },\n        \"hex-number\": {\n            pattern: /#?\\$[\\da-f]{1,4}\\b/i,\n            alias: \"number\"\n        },\n        \"binary-number\": {\n            pattern: /#?%[01]+\\b/,\n            alias: \"number\"\n        },\n        \"decimal-number\": {\n            pattern: /#?\\b\\d+\\b/,\n            alias: \"number\"\n        },\n        register: {\n            pattern: /\\b[xya]\\b/i,\n            alias: \"variable\"\n        },\n        punctuation: /[(),:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYXNtNjUwMi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxRQUFRQyxXQUFXLEdBQUc7QUFDdEJELFFBQVFFLE9BQU8sR0FBRyxFQUFFO0FBQ3BCLFNBQVNGLFFBQVFHLEtBQUs7SUFDcEJBLE1BQU1DLFNBQVMsQ0FBQ0osT0FBTyxHQUFHO1FBQ3hCSyxTQUFTO1FBQ1RDLFdBQVc7WUFDVEMsU0FBUztZQUNUQyxPQUFPO1FBQ1Q7UUFDQUMsUUFBUTtRQUNSLFdBQVc7WUFDVEYsU0FDRTtZQUNGQyxPQUFPO1FBQ1Q7UUFDQSxjQUFjO1lBQ1pELFNBQVM7WUFDVEMsT0FBTztRQUNUO1FBQ0EsaUJBQWlCO1lBQ2ZELFNBQVM7WUFDVEMsT0FBTztRQUNUO1FBQ0Esa0JBQWtCO1lBQ2hCRCxTQUFTO1lBQ1RDLE9BQU87UUFDVDtRQUNBRSxVQUFVO1lBQ1JILFNBQVM7WUFDVEMsT0FBTztRQUNUO1FBQ0FHLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2FzbTY1MDIuanM/ODJhMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBhc202NTAyXG5hc202NTAyLmRpc3BsYXlOYW1lID0gJ2FzbTY1MDInXG5hc202NTAyLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gYXNtNjUwMihQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuYXNtNjUwMiA9IHtcbiAgICBjb21tZW50OiAvOy4qLyxcbiAgICBkaXJlY3RpdmU6IHtcbiAgICAgIHBhdHRlcm46IC9cXC5cXHcrKD89ICkvLFxuICAgICAgYWxpYXM6ICdwcm9wZXJ0eSdcbiAgICB9LFxuICAgIHN0cmluZzogLyhbXCInYF0pKD86XFxcXC58KD8hXFwxKVteXFxcXFxcclxcbl0pKlxcMS8sXG4gICAgJ29wLWNvZGUnOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvXFxiKD86QURDfEFORHxBU0x8QkNDfEJDU3xCRVF8QklUfEJNSXxCTkV8QlBMfEJSS3xCVkN8QlZTfENMQ3xDTER8Q0xJfENMVnxDTVB8Q1BYfENQWXxERUN8REVYfERFWXxFT1J8SU5DfElOWHxJTll8Sk1QfEpTUnxMREF8TERYfExEWXxMU1J8Tk9QfE9SQXxQSEF8UEhQfFBMQXxQTFB8Uk9MfFJPUnxSVEl8UlRTfFNCQ3xTRUN8U0VEfFNFSXxTVEF8U1RYfFNUWXxUQVh8VEFZfFRTWHxUWEF8VFhTfFRZQXxhZGN8YW5kfGFzbHxiY2N8YmNzfGJlcXxiaXR8Ym1pfGJuZXxicGx8YnJrfGJ2Y3xidnN8Y2xjfGNsZHxjbGl8Y2x2fGNtcHxjcHh8Y3B5fGRlY3xkZXh8ZGV5fGVvcnxpbmN8aW54fGlueXxqbXB8anNyfGxkYXxsZHh8bGR5fGxzcnxub3B8b3JhfHBoYXxwaHB8cGxhfHBscHxyb2x8cm9yfHJ0aXxydHN8c2JjfHNlY3xzZWR8c2VpfHN0YXxzdHh8c3R5fHRheHx0YXl8dHN4fHR4YXx0eHN8dHlhKVxcYi8sXG4gICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgfSxcbiAgICAnaGV4LW51bWJlcic6IHtcbiAgICAgIHBhdHRlcm46IC8jP1xcJFtcXGRhLWZdezEsNH1cXGIvaSxcbiAgICAgIGFsaWFzOiAnbnVtYmVyJ1xuICAgIH0sXG4gICAgJ2JpbmFyeS1udW1iZXInOiB7XG4gICAgICBwYXR0ZXJuOiAvIz8lWzAxXStcXGIvLFxuICAgICAgYWxpYXM6ICdudW1iZXInXG4gICAgfSxcbiAgICAnZGVjaW1hbC1udW1iZXInOiB7XG4gICAgICBwYXR0ZXJuOiAvIz9cXGJcXGQrXFxiLyxcbiAgICAgIGFsaWFzOiAnbnVtYmVyJ1xuICAgIH0sXG4gICAgcmVnaXN0ZXI6IHtcbiAgICAgIHBhdHRlcm46IC9cXGJbeHlhXVxcYi9pLFxuICAgICAgYWxpYXM6ICd2YXJpYWJsZSdcbiAgICB9LFxuICAgIHB1bmN0dWF0aW9uOiAvWygpLDpdL1xuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImFzbTY1MDIiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJkaXJlY3RpdmUiLCJwYXR0ZXJuIiwiYWxpYXMiLCJzdHJpbmciLCJyZWdpc3RlciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/asm6502.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/asmatmel.js":
/*!*************************************************!*\
  !*** ./node_modules/refractor/lang/asmatmel.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = asmatmel;\nasmatmel.displayName = \"asmatmel\";\nasmatmel.aliases = [];\nfunction asmatmel(Prism) {\n    Prism.languages.asmatmel = {\n        comment: {\n            pattern: /;.*/,\n            greedy: true\n        },\n        string: {\n            pattern: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true\n        },\n        constant: /\\b(?:PORT[A-Z]|DDR[A-Z]|(?:DD|P)[A-Z](?:\\d|[0-2]\\d|3[01]))\\b/,\n        directive: {\n            pattern: /\\.\\w+(?= )/,\n            alias: \"property\"\n        },\n        \"r-register\": {\n            pattern: /\\br(?:\\d|[12]\\d|3[01])\\b/,\n            alias: \"variable\"\n        },\n        \"op-code\": {\n            pattern: /\\b(?:ADC|ADD|ADIW|AND|ANDI|ASR|BCLR|BLD|BRBC|BRBS|BRCC|BRCS|BREAK|BREQ|BRGE|BRHC|BRHS|BRID|BRIE|BRLO|BRLT|BRMI|BRNE|BRPL|BRSH|BRTC|BRTS|BRVC|BRVS|BSET|BST|CALL|CBI|CBR|CLC|CLH|CLI|CLN|CLR|CLS|CLT|CLV|CLZ|COM|CP|CPC|CPI|CPSE|DEC|DES|EICALL|EIJMP|ELPM|EOR|FMUL|FMULS|FMULSU|ICALL|IJMP|IN|INC|JMP|LAC|LAS|LAT|LD|LD[A-Za-z0-9]|LPM|LSL|LSR|MOV|MOVW|MUL|MULS|MULSU|NEG|NOP|OR|ORI|OUT|POP|PUSH|RCALL|RET|RETI|RJMP|ROL|ROR|SBC|SBCI|SBI|SBIC|SBIS|SBIW|SBR|SBRC|SBRS|SEC|SEH|SEI|SEN|SER|SES|SET|SEV|SEZ|SLEEP|SPM|ST|ST[A-Z0-9]|SUB|SUBI|SWAP|TST|WDR|XCH|adc|add|adiw|and|andi|asr|bclr|bld|brbc|brbs|brcc|brcs|break|breq|brge|brhc|brhs|brid|brie|brlo|brlt|brmi|brne|brpl|brsh|brtc|brts|brvc|brvs|bset|bst|call|cbi|cbr|clc|clh|cli|cln|clr|cls|clt|clv|clz|com|cp|cpc|cpi|cpse|dec|des|eicall|eijmp|elpm|eor|fmul|fmuls|fmulsu|icall|ijmp|in|inc|jmp|lac|las|lat|ld|ld[a-z0-9]|lpm|lsl|lsr|mov|movw|mul|muls|mulsu|neg|nop|or|ori|out|pop|push|rcall|ret|reti|rjmp|rol|ror|sbc|sbci|sbi|sbic|sbis|sbiw|sbr|sbrc|sbrs|sec|seh|sei|sen|ser|ses|set|sev|sez|sleep|spm|st|st[a-zA-Z0-9]|sub|subi|swap|tst|wdr|xch)\\b/,\n            alias: \"keyword\"\n        },\n        \"hex-number\": {\n            pattern: /#?\\$[\\da-f]{2,4}\\b/i,\n            alias: \"number\"\n        },\n        \"binary-number\": {\n            pattern: /#?%[01]+\\b/,\n            alias: \"number\"\n        },\n        \"decimal-number\": {\n            pattern: /#?\\b\\d+\\b/,\n            alias: \"number\"\n        },\n        register: {\n            pattern: /\\b[acznvshtixy]\\b/i,\n            alias: \"variable\"\n        },\n        operator: />>=?|<<=?|&&?|\\|\\|?|[-+*/%&|^!=<>?]=?/,\n        punctuation: /[(),:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYXNtYXRtZWwuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsU0FBU0MsV0FBVyxHQUFHO0FBQ3ZCRCxTQUFTRSxPQUFPLEdBQUcsRUFBRTtBQUNyQixTQUFTRixTQUFTRyxLQUFLO0lBQ3JCQSxNQUFNQyxTQUFTLENBQUNKLFFBQVEsR0FBRztRQUN6QkssU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBQyxRQUFRO1lBQ05GLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FFLFVBQVU7UUFDVkMsV0FBVztZQUNUSixTQUFTO1lBQ1RLLE9BQU87UUFDVDtRQUNBLGNBQWM7WUFDWkwsU0FBUztZQUNUSyxPQUFPO1FBQ1Q7UUFDQSxXQUFXO1lBQ1RMLFNBQ0U7WUFDRkssT0FBTztRQUNUO1FBQ0EsY0FBYztZQUNaTCxTQUFTO1lBQ1RLLE9BQU87UUFDVDtRQUNBLGlCQUFpQjtZQUNmTCxTQUFTO1lBQ1RLLE9BQU87UUFDVDtRQUNBLGtCQUFrQjtZQUNoQkwsU0FBUztZQUNUSyxPQUFPO1FBQ1Q7UUFDQUMsVUFBVTtZQUNSTixTQUFTO1lBQ1RLLE9BQU87UUFDVDtRQUNBRSxVQUFVO1FBQ1ZDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2FzbWF0bWVsLmpzPzJkOTkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gYXNtYXRtZWxcbmFzbWF0bWVsLmRpc3BsYXlOYW1lID0gJ2FzbWF0bWVsJ1xuYXNtYXRtZWwuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBhc21hdG1lbChQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuYXNtYXRtZWwgPSB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogLzsuKi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyhbXCInYF0pKD86XFxcXC58KD8hXFwxKVteXFxcXFxcclxcbl0pKlxcMS8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGNvbnN0YW50OiAvXFxiKD86UE9SVFtBLVpdfEREUltBLVpdfCg/OkREfFApW0EtWl0oPzpcXGR8WzAtMl1cXGR8M1swMV0pKVxcYi8sXG4gICAgZGlyZWN0aXZlOiB7XG4gICAgICBwYXR0ZXJuOiAvXFwuXFx3Kyg/PSApLyxcbiAgICAgIGFsaWFzOiAncHJvcGVydHknXG4gICAgfSxcbiAgICAnci1yZWdpc3Rlcic6IHtcbiAgICAgIHBhdHRlcm46IC9cXGJyKD86XFxkfFsxMl1cXGR8M1swMV0pXFxiLyxcbiAgICAgIGFsaWFzOiAndmFyaWFibGUnXG4gICAgfSxcbiAgICAnb3AtY29kZSc6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC9cXGIoPzpBREN8QUREfEFESVd8QU5EfEFOREl8QVNSfEJDTFJ8QkxEfEJSQkN8QlJCU3xCUkNDfEJSQ1N8QlJFQUt8QlJFUXxCUkdFfEJSSEN8QlJIU3xCUklEfEJSSUV8QlJMT3xCUkxUfEJSTUl8QlJORXxCUlBMfEJSU0h8QlJUQ3xCUlRTfEJSVkN8QlJWU3xCU0VUfEJTVHxDQUxMfENCSXxDQlJ8Q0xDfENMSHxDTEl8Q0xOfENMUnxDTFN8Q0xUfENMVnxDTFp8Q09NfENQfENQQ3xDUEl8Q1BTRXxERUN8REVTfEVJQ0FMTHxFSUpNUHxFTFBNfEVPUnxGTVVMfEZNVUxTfEZNVUxTVXxJQ0FMTHxJSk1QfElOfElOQ3xKTVB8TEFDfExBU3xMQVR8TER8TERbQS1aYS16MC05XXxMUE18TFNMfExTUnxNT1Z8TU9WV3xNVUx8TVVMU3xNVUxTVXxORUd8Tk9QfE9SfE9SSXxPVVR8UE9QfFBVU0h8UkNBTEx8UkVUfFJFVEl8UkpNUHxST0x8Uk9SfFNCQ3xTQkNJfFNCSXxTQklDfFNCSVN8U0JJV3xTQlJ8U0JSQ3xTQlJTfFNFQ3xTRUh8U0VJfFNFTnxTRVJ8U0VTfFNFVHxTRVZ8U0VafFNMRUVQfFNQTXxTVHxTVFtBLVowLTldfFNVQnxTVUJJfFNXQVB8VFNUfFdEUnxYQ0h8YWRjfGFkZHxhZGl3fGFuZHxhbmRpfGFzcnxiY2xyfGJsZHxicmJjfGJyYnN8YnJjY3xicmNzfGJyZWFrfGJyZXF8YnJnZXxicmhjfGJyaHN8YnJpZHxicmllfGJybG98YnJsdHxicm1pfGJybmV8YnJwbHxicnNofGJydGN8YnJ0c3xicnZjfGJydnN8YnNldHxic3R8Y2FsbHxjYml8Y2JyfGNsY3xjbGh8Y2xpfGNsbnxjbHJ8Y2xzfGNsdHxjbHZ8Y2x6fGNvbXxjcHxjcGN8Y3BpfGNwc2V8ZGVjfGRlc3xlaWNhbGx8ZWlqbXB8ZWxwbXxlb3J8Zm11bHxmbXVsc3xmbXVsc3V8aWNhbGx8aWptcHxpbnxpbmN8am1wfGxhY3xsYXN8bGF0fGxkfGxkW2EtejAtOV18bHBtfGxzbHxsc3J8bW92fG1vdnd8bXVsfG11bHN8bXVsc3V8bmVnfG5vcHxvcnxvcml8b3V0fHBvcHxwdXNofHJjYWxsfHJldHxyZXRpfHJqbXB8cm9sfHJvcnxzYmN8c2JjaXxzYml8c2JpY3xzYmlzfHNiaXd8c2JyfHNicmN8c2Jyc3xzZWN8c2VofHNlaXxzZW58c2VyfHNlc3xzZXR8c2V2fHNlenxzbGVlcHxzcG18c3R8c3RbYS16QS1aMC05XXxzdWJ8c3ViaXxzd2FwfHRzdHx3ZHJ8eGNoKVxcYi8sXG4gICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgfSxcbiAgICAnaGV4LW51bWJlcic6IHtcbiAgICAgIHBhdHRlcm46IC8jP1xcJFtcXGRhLWZdezIsNH1cXGIvaSxcbiAgICAgIGFsaWFzOiAnbnVtYmVyJ1xuICAgIH0sXG4gICAgJ2JpbmFyeS1udW1iZXInOiB7XG4gICAgICBwYXR0ZXJuOiAvIz8lWzAxXStcXGIvLFxuICAgICAgYWxpYXM6ICdudW1iZXInXG4gICAgfSxcbiAgICAnZGVjaW1hbC1udW1iZXInOiB7XG4gICAgICBwYXR0ZXJuOiAvIz9cXGJcXGQrXFxiLyxcbiAgICAgIGFsaWFzOiAnbnVtYmVyJ1xuICAgIH0sXG4gICAgcmVnaXN0ZXI6IHtcbiAgICAgIHBhdHRlcm46IC9cXGJbYWN6bnZzaHRpeHldXFxiL2ksXG4gICAgICBhbGlhczogJ3ZhcmlhYmxlJ1xuICAgIH0sXG4gICAgb3BlcmF0b3I6IC8+Pj0/fDw8PT98JiY/fFxcfFxcfD98Wy0rKi8lJnxeIT08Pj9dPT8vLFxuICAgIHB1bmN0dWF0aW9uOiAvWygpLDpdL1xuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImFzbWF0bWVsIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImdyZWVkeSIsInN0cmluZyIsImNvbnN0YW50IiwiZGlyZWN0aXZlIiwiYWxpYXMiLCJyZWdpc3RlciIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/asmatmel.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/aspnet.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/aspnet.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorCsharp = __webpack_require__(/*! ./csharp.js */ \"(ssr)/./node_modules/refractor/lang/csharp.js\");\nmodule.exports = aspnet;\naspnet.displayName = \"aspnet\";\naspnet.aliases = [];\nfunction aspnet(Prism) {\n    Prism.register(refractorCsharp);\n    Prism.languages.aspnet = Prism.languages.extend(\"markup\", {\n        \"page-directive\": {\n            pattern: /<%\\s*@.*%>/,\n            alias: \"tag\",\n            inside: {\n                \"page-directive\": {\n                    pattern: /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\n                    alias: \"tag\"\n                },\n                rest: Prism.languages.markup.tag.inside\n            }\n        },\n        directive: {\n            pattern: /<%.*%>/,\n            alias: \"tag\",\n            inside: {\n                directive: {\n                    pattern: /<%\\s*?[$=%#:]{0,2}|%>/,\n                    alias: \"tag\"\n                },\n                rest: Prism.languages.csharp\n            }\n        }\n    }) // Regexp copied from prism-markup, with a negative look-ahead added\n    ;\n    Prism.languages.aspnet.tag.pattern = /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/ // match directives of attribute value foo=\"<% Bar %>\"\n    ;\n    Prism.languages.insertBefore(\"inside\", \"punctuation\", {\n        directive: Prism.languages.aspnet[\"directive\"]\n    }, Prism.languages.aspnet.tag.inside[\"attr-value\"]);\n    Prism.languages.insertBefore(\"aspnet\", \"comment\", {\n        \"asp-comment\": {\n            pattern: /<%--[\\s\\S]*?--%>/,\n            alias: [\n                \"asp\",\n                \"comment\"\n            ]\n        }\n    }) // script runat=\"server\" contains csharp, not javascript\n    ;\n    Prism.languages.insertBefore(\"aspnet\", Prism.languages.javascript ? \"script\" : \"tag\", {\n        \"asp-script\": {\n            pattern: /(<script(?=.*runat=['\"]?server\\b)[^>]*>)[\\s\\S]*?(?=<\\/script>)/i,\n            lookbehind: true,\n            alias: [\n                \"asp\",\n                \"script\"\n            ],\n            inside: Prism.languages.csharp || {}\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYXNwbmV0LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsSUFBSUEsa0JBQWtCQyxtQkFBT0EsQ0FBQztBQUM5QkMsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUcsRUFBRTtBQUNuQixTQUFTRixPQUFPRyxLQUFLO0lBQ25CQSxNQUFNQyxRQUFRLENBQUNSO0lBQ2ZPLE1BQU1FLFNBQVMsQ0FBQ0wsTUFBTSxHQUFHRyxNQUFNRSxTQUFTLENBQUNDLE1BQU0sQ0FBQyxVQUFVO1FBQ3hELGtCQUFrQjtZQUNoQkMsU0FBUztZQUNUQyxPQUFPO1lBQ1BDLFFBQVE7Z0JBQ04sa0JBQWtCO29CQUNoQkYsU0FDRTtvQkFDRkMsT0FBTztnQkFDVDtnQkFDQUUsTUFBTVAsTUFBTUUsU0FBUyxDQUFDTSxNQUFNLENBQUNDLEdBQUcsQ0FBQ0gsTUFBTTtZQUN6QztRQUNGO1FBQ0FJLFdBQVc7WUFDVE4sU0FBUztZQUNUQyxPQUFPO1lBQ1BDLFFBQVE7Z0JBQ05JLFdBQVc7b0JBQ1ROLFNBQVM7b0JBQ1RDLE9BQU87Z0JBQ1Q7Z0JBQ0FFLE1BQU1QLE1BQU1FLFNBQVMsQ0FBQ1MsTUFBTTtZQUM5QjtRQUNGO0lBQ0YsR0FBRyxvRUFBb0U7O0lBQ3ZFWCxNQUFNRSxTQUFTLENBQUNMLE1BQU0sQ0FBQ1ksR0FBRyxDQUFDTCxPQUFPLEdBQ2hDLG1HQUFtRyxzREFBc0Q7O0lBQzNKSixNQUFNRSxTQUFTLENBQUNVLFlBQVksQ0FDMUIsVUFDQSxlQUNBO1FBQ0VGLFdBQVdWLE1BQU1FLFNBQVMsQ0FBQ0wsTUFBTSxDQUFDLFlBQVk7SUFDaEQsR0FDQUcsTUFBTUUsU0FBUyxDQUFDTCxNQUFNLENBQUNZLEdBQUcsQ0FBQ0gsTUFBTSxDQUFDLGFBQWE7SUFFakROLE1BQU1FLFNBQVMsQ0FBQ1UsWUFBWSxDQUFDLFVBQVUsV0FBVztRQUNoRCxlQUFlO1lBQ2JSLFNBQVM7WUFDVEMsT0FBTztnQkFBQztnQkFBTzthQUFVO1FBQzNCO0lBQ0YsR0FBRyx3REFBd0Q7O0lBQzNETCxNQUFNRSxTQUFTLENBQUNVLFlBQVksQ0FDMUIsVUFDQVosTUFBTUUsU0FBUyxDQUFDVyxVQUFVLEdBQUcsV0FBVyxPQUN4QztRQUNFLGNBQWM7WUFDWlQsU0FDRTtZQUNGVSxZQUFZO1lBQ1pULE9BQU87Z0JBQUM7Z0JBQU87YUFBUztZQUN4QkMsUUFBUU4sTUFBTUUsU0FBUyxDQUFDUyxNQUFNLElBQUksQ0FBQztRQUNyQztJQUNGO0FBRUoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYXNwbmV0LmpzPzBiNzAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG52YXIgcmVmcmFjdG9yQ3NoYXJwID0gcmVxdWlyZSgnLi9jc2hhcnAuanMnKVxubW9kdWxlLmV4cG9ydHMgPSBhc3BuZXRcbmFzcG5ldC5kaXNwbGF5TmFtZSA9ICdhc3BuZXQnXG5hc3BuZXQuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBhc3BuZXQoUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yQ3NoYXJwKVxuICBQcmlzbS5sYW5ndWFnZXMuYXNwbmV0ID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnbWFya3VwJywge1xuICAgICdwYWdlLWRpcmVjdGl2ZSc6IHtcbiAgICAgIHBhdHRlcm46IC88JVxccypALiolPi8sXG4gICAgICBhbGlhczogJ3RhZycsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgJ3BhZ2UtZGlyZWN0aXZlJzoge1xuICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAvPCVcXHMqQFxccyooPzpBc3NlbWJseXxDb250cm9sfEltcGxlbWVudHN8SW1wb3J0fE1hc3Rlcig/OlR5cGUpP3xPdXRwdXRDYWNoZXxQYWdlfFByZXZpb3VzUGFnZVR5cGV8UmVmZXJlbmNlfFJlZ2lzdGVyKT98JT4vaSxcbiAgICAgICAgICBhbGlhczogJ3RhZydcbiAgICAgICAgfSxcbiAgICAgICAgcmVzdDogUHJpc20ubGFuZ3VhZ2VzLm1hcmt1cC50YWcuaW5zaWRlXG4gICAgICB9XG4gICAgfSxcbiAgICBkaXJlY3RpdmU6IHtcbiAgICAgIHBhdHRlcm46IC88JS4qJT4vLFxuICAgICAgYWxpYXM6ICd0YWcnLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIGRpcmVjdGl2ZToge1xuICAgICAgICAgIHBhdHRlcm46IC88JVxccyo/WyQ9JSM6XXswLDJ9fCU+LyxcbiAgICAgICAgICBhbGlhczogJ3RhZydcbiAgICAgICAgfSxcbiAgICAgICAgcmVzdDogUHJpc20ubGFuZ3VhZ2VzLmNzaGFycFxuICAgICAgfVxuICAgIH1cbiAgfSkgLy8gUmVnZXhwIGNvcGllZCBmcm9tIHByaXNtLW1hcmt1cCwgd2l0aCBhIG5lZ2F0aXZlIGxvb2stYWhlYWQgYWRkZWRcbiAgUHJpc20ubGFuZ3VhZ2VzLmFzcG5ldC50YWcucGF0dGVybiA9XG4gICAgLzwoPyElKVxcLz9bXlxccz5cXC9dKyg/OlxccytbXlxccz5cXC89XSsoPzo9KD86KFwifCcpKD86XFxcXFtcXHNcXFNdfCg/IVxcMSlbXlxcXFxdKSpcXDF8W15cXHMnXCI+PV0rKSk/KSpcXHMqXFwvPz4vIC8vIG1hdGNoIGRpcmVjdGl2ZXMgb2YgYXR0cmlidXRlIHZhbHVlIGZvbz1cIjwlIEJhciAlPlwiXG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoXG4gICAgJ2luc2lkZScsXG4gICAgJ3B1bmN0dWF0aW9uJyxcbiAgICB7XG4gICAgICBkaXJlY3RpdmU6IFByaXNtLmxhbmd1YWdlcy5hc3BuZXRbJ2RpcmVjdGl2ZSddXG4gICAgfSxcbiAgICBQcmlzbS5sYW5ndWFnZXMuYXNwbmV0LnRhZy5pbnNpZGVbJ2F0dHItdmFsdWUnXVxuICApXG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ2FzcG5ldCcsICdjb21tZW50Jywge1xuICAgICdhc3AtY29tbWVudCc6IHtcbiAgICAgIHBhdHRlcm46IC88JS0tW1xcc1xcU10qPy0tJT4vLFxuICAgICAgYWxpYXM6IFsnYXNwJywgJ2NvbW1lbnQnXVxuICAgIH1cbiAgfSkgLy8gc2NyaXB0IHJ1bmF0PVwic2VydmVyXCIgY29udGFpbnMgY3NoYXJwLCBub3QgamF2YXNjcmlwdFxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKFxuICAgICdhc3BuZXQnLFxuICAgIFByaXNtLmxhbmd1YWdlcy5qYXZhc2NyaXB0ID8gJ3NjcmlwdCcgOiAndGFnJyxcbiAgICB7XG4gICAgICAnYXNwLXNjcmlwdCc6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKDxzY3JpcHQoPz0uKnJ1bmF0PVsnXCJdP3NlcnZlclxcYilbXj5dKj4pW1xcc1xcU10qPyg/PTxcXC9zY3JpcHQ+KS9pLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogWydhc3AnLCAnc2NyaXB0J10sXG4gICAgICAgIGluc2lkZTogUHJpc20ubGFuZ3VhZ2VzLmNzaGFycCB8fCB7fVxuICAgICAgfVxuICAgIH1cbiAgKVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3RvckNzaGFycCIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiYXNwbmV0IiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImV4dGVuZCIsInBhdHRlcm4iLCJhbGlhcyIsImluc2lkZSIsInJlc3QiLCJtYXJrdXAiLCJ0YWciLCJkaXJlY3RpdmUiLCJjc2hhcnAiLCJpbnNlcnRCZWZvcmUiLCJqYXZhc2NyaXB0IiwibG9va2JlaGluZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/aspnet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/autohotkey.js":
/*!***************************************************!*\
  !*** ./node_modules/refractor/lang/autohotkey.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = autohotkey;\nautohotkey.displayName = \"autohotkey\";\nautohotkey.aliases = [];\nfunction autohotkey(Prism) {\n    // NOTES - follows first-first highlight method, block is locked after highlight, different from SyntaxHl\n    Prism.languages.autohotkey = {\n        comment: [\n            {\n                pattern: /(^|\\s);.*/,\n                lookbehind: true\n            },\n            {\n                pattern: /(^[\\t ]*)\\/\\*(?:[\\r\\n](?![ \\t]*\\*\\/)|[^\\r\\n])*(?:[\\r\\n][ \\t]*\\*\\/)?/m,\n                lookbehind: true,\n                greedy: true\n            }\n        ],\n        tag: {\n            // labels\n            pattern: /^([ \\t]*)[^\\s,`\":]+(?=:[ \\t]*$)/m,\n            lookbehind: true\n        },\n        string: /\"(?:[^\"\\n\\r]|\"\")*\"/,\n        variable: /%\\w+%/,\n        number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        operator: /\\?|\\/\\/?=?|:=|\\|[=|]?|&[=&]?|\\+[=+]?|-[=-]?|\\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\\b(?:AND|NOT|OR)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        selector: /\\b(?:AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetRegView|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\\b/i,\n        constant: /\\b(?:a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_fileencoding|a_formatfloat|a_formatinteger|a_gui|a_guicontrol|a_guicontrolevent|a_guievent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_is64bitos|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|a_priorkey|a_programfiles|a_programs|a_programscommon|a_ptrsize|a_regview|a_screendpi|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scripthwnd|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel|programfiles)\\b/i,\n        builtin: /\\b(?:abs|acos|asc|asin|atan|ceil|chr|class|comobjactive|comobjarray|comobjconnect|comobjcreate|comobjerror|comobjflags|comobjget|comobjquery|comobjtype|comobjvalue|cos|dllcall|exp|fileexist|Fileopen|floor|format|il_add|il_create|il_destroy|instr|isfunc|islabel|IsObject|ln|log|ltrim|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|mod|numget|numput|onmessage|regexmatch|regexreplace|registercallback|round|rtrim|sb_seticon|sb_setparts|sb_settext|sin|sqrt|strlen|strreplace|strsplit|substr|tan|tv_add|tv_delete|tv_get|tv_getchild|tv_getcount|tv_getnext|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__Call|__Get|__New|__Set)\\b/i,\n        symbol: /\\b(?:alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\\b/i,\n        important: /#\\b(?:AllowSameLineComments|ClipboardTimeout|CommentFlag|DerefChar|ErrorStdOut|EscapeChar|HotkeyInterval|HotkeyModifierTimeout|Hotstring|If|IfTimeout|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Include|IncludeAgain|InputLevel|InstallKeybdHook|InstallMouseHook|KeyHistory|MaxHotkeysPerInterval|MaxMem|MaxThreads|MaxThreadsBuffer|MaxThreadsPerHotkey|MenuMaskKey|NoEnv|NoTrayIcon|Persistent|SingleInstance|UseHook|Warn|WinActivateForce)\\b/i,\n        keyword: /\\b(?:Abort|AboveNormal|Add|ahk_class|ahk_exe|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Catch|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|Finally|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|Region|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Throw|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|Try|TryAgain|Type|UnCheck|underline|Unicode|Unlock|Until|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\\b/i,\n        function: /[^(); \\t,\\n+*\\-=?>:\\\\\\/<&%\\[\\]]+(?=\\()/,\n        punctuation: /[{}[\\]():,]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/autohotkey.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/autoit.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/autoit.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = autoit;\nautoit.displayName = \"autoit\";\nautoit.aliases = [];\nfunction autoit(Prism) {\n    Prism.languages.autoit = {\n        comment: [\n            /;.*/,\n            {\n                // The multi-line comments delimiters can actually be commented out with \";\"\n                pattern: /(^[\\t ]*)#(?:comments-start|cs)[\\s\\S]*?^[ \\t]*#(?:ce|comments-end)/m,\n                lookbehind: true\n            }\n        ],\n        url: {\n            pattern: /(^[\\t ]*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,\n            lookbehind: true\n        },\n        string: {\n            pattern: /([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,\n            greedy: true,\n            inside: {\n                variable: /([%$@])\\w+\\1/\n            }\n        },\n        directive: {\n            pattern: /(^[\\t ]*)#[\\w-]+/m,\n            lookbehind: true,\n            alias: \"keyword\"\n        },\n        function: /\\b\\w+(?=\\()/,\n        // Variables and macros\n        variable: /[$@]\\w+/,\n        keyword: /\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,\n        number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n        boolean: /\\b(?:False|True)\\b/i,\n        operator: /<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Not|Or)\\b/i,\n        punctuation: /[\\[\\]().,:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYXV0b2l0LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLE9BQU9DLFdBQVcsR0FBRztBQUNyQkQsT0FBT0UsT0FBTyxHQUFHLEVBQUU7QUFDbkIsU0FBU0YsT0FBT0csS0FBSztJQUNuQkEsTUFBTUMsU0FBUyxDQUFDSixNQUFNLEdBQUc7UUFDdkJLLFNBQVM7WUFDUDtZQUNBO2dCQUNFLDRFQUE0RTtnQkFDNUVDLFNBQ0U7Z0JBQ0ZDLFlBQVk7WUFDZDtTQUNEO1FBQ0RDLEtBQUs7WUFDSEYsU0FBUztZQUNUQyxZQUFZO1FBQ2Q7UUFDQUUsUUFBUTtZQUNOSCxTQUFTO1lBQ1RJLFFBQVE7WUFDUkMsUUFBUTtnQkFDTkMsVUFBVTtZQUNaO1FBQ0Y7UUFDQUMsV0FBVztZQUNUUCxTQUFTO1lBQ1RDLFlBQVk7WUFDWk8sT0FBTztRQUNUO1FBQ0FDLFVBQVU7UUFDVix1QkFBdUI7UUFDdkJILFVBQVU7UUFDVkksU0FDRTtRQUNGQyxRQUFRO1FBQ1JDLFNBQVM7UUFDVEMsVUFBVTtRQUNWQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hdXRvaXQuanM/YmY1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBhdXRvaXRcbmF1dG9pdC5kaXNwbGF5TmFtZSA9ICdhdXRvaXQnXG5hdXRvaXQuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBhdXRvaXQoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmF1dG9pdCA9IHtcbiAgICBjb21tZW50OiBbXG4gICAgICAvOy4qLyxcbiAgICAgIHtcbiAgICAgICAgLy8gVGhlIG11bHRpLWxpbmUgY29tbWVudHMgZGVsaW1pdGVycyBjYW4gYWN0dWFsbHkgYmUgY29tbWVudGVkIG91dCB3aXRoIFwiO1wiXG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyheW1xcdCBdKikjKD86Y29tbWVudHMtc3RhcnR8Y3MpW1xcc1xcU10qP15bIFxcdF0qIyg/OmNlfGNvbW1lbnRzLWVuZCkvbSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfVxuICAgIF0sXG4gICAgdXJsOiB7XG4gICAgICBwYXR0ZXJuOiAvKF5bXFx0IF0qI2luY2x1ZGVcXHMrKSg/OjxbXlxcclxcbj5dKz58XCJbXlxcclxcblwiXStcIikvbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyhbXCInXSkoPzpcXDFcXDF8KD8hXFwxKVteXFxyXFxuXSkqXFwxLyxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICB2YXJpYWJsZTogLyhbJSRAXSlcXHcrXFwxL1xuICAgICAgfVxuICAgIH0sXG4gICAgZGlyZWN0aXZlOiB7XG4gICAgICBwYXR0ZXJuOiAvKF5bXFx0IF0qKSNbXFx3LV0rL20sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgIH0sXG4gICAgZnVuY3Rpb246IC9cXGJcXHcrKD89XFwoKS8sXG4gICAgLy8gVmFyaWFibGVzIGFuZCBtYWNyb3NcbiAgICB2YXJpYWJsZTogL1skQF1cXHcrLyxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OkNhc2V8Q29uc3R8Q29udGludWUoPzpDYXNlfExvb3ApfERlZmF1bHR8RGltfERvfEVsc2UoPzpJZik/fEVuZCg/OkZ1bmN8SWZ8U2VsZWN0fFN3aXRjaHxXaXRoKXxFbnVtfEV4aXQoPzpMb29wKT98Rm9yfEZ1bmN8R2xvYmFsfElmfElufExvY2FsfE5leHR8TnVsbHxSZURpbXxTZWxlY3R8U3RhdGljfFN0ZXB8U3dpdGNofFRoZW58VG98VW50aWx8Vm9sYXRpbGV8V0VuZHxXaGlsZXxXaXRoKVxcYi9pLFxuICAgIG51bWJlcjogL1xcYig/OjB4W1xcZGEtZl0rfFxcZCsoPzpcXC5cXGQrKT8oPzplWystXT9cXGQrKT8pXFxiL2ksXG4gICAgYm9vbGVhbjogL1xcYig/OkZhbHNlfFRydWUpXFxiL2ksXG4gICAgb3BlcmF0b3I6IC88Wz0+XT98Wy0rKlxcLz0mPl09P3xbP15dfFxcYig/OkFuZHxOb3R8T3IpXFxiL2ksXG4gICAgcHVuY3R1YXRpb246IC9bXFxbXFxdKCkuLDpdL1xuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImF1dG9pdCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwidXJsIiwic3RyaW5nIiwiZ3JlZWR5IiwiaW5zaWRlIiwidmFyaWFibGUiLCJkaXJlY3RpdmUiLCJhbGlhcyIsImZ1bmN0aW9uIiwia2V5d29yZCIsIm51bWJlciIsImJvb2xlYW4iLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/autoit.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/avisynth.js":
/*!*************************************************!*\
  !*** ./node_modules/refractor/lang/avisynth.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = avisynth;\navisynth.displayName = \"avisynth\";\navisynth.aliases = [\n    \"avs\"\n];\nfunction avisynth(Prism) {\n    // http://avisynth.nl/index.php/The_full_AviSynth_grammar\n    ;\n    (function(Prism) {\n        function replace(pattern, replacements) {\n            return pattern.replace(/<<(\\d+)>>/g, function(m, index) {\n                return replacements[+index];\n            });\n        }\n        function re(pattern, replacements, flags) {\n            return RegExp(replace(pattern, replacements), flags || \"\");\n        }\n        var types = /bool|clip|float|int|string|val/.source;\n        var internals = [\n            // bools\n            /is(?:bool|clip|float|int|string)|defined|(?:(?:internal)?function|var)?exists?/.source,\n            /apply|assert|default|eval|import|nop|select|undefined/.source,\n            /opt_(?:allowfloataudio|avipadscanlines|dwchannelmask|enable_(?:b64a|planartopackedrgb|v210|y3_10_10|y3_10_16)|usewaveextensible|vdubplanarhack)|set(?:cachemode|maxcpu|memorymax|planarlegacyalignment|workingdir)/.source,\n            /hex(?:value)?|value/.source,\n            /abs|ceil|continued(?:denominator|numerator)?|exp|floor|fmod|frac|log(?:10)?|max|min|muldiv|pi|pow|rand|round|sign|spline|sqrt/.source,\n            /a?sinh?|a?cosh?|a?tan[2h]?/.source,\n            /(?:bit(?:and|not|x?or|[lr]?shift[aslu]?|sh[lr]|sa[lr]|[lr]rotatel?|ro[rl]|te?st|set(?:count)?|cl(?:ea)?r|ch(?:an)?ge?))/.source,\n            /average(?:[bgr]|chroma[uv]|luma)|(?:[rgb]|chroma[uv]|luma|rgb|[yuv](?=difference(?:fromprevious|tonext)))difference(?:fromprevious|tonext)?|[yuvrgb]plane(?:median|min|max|minmaxdifference)/.source,\n            /getprocessinfo|logmsg|script(?:dir(?:utf8)?|file(?:utf8)?|name(?:utf8)?)|setlogparams/.source,\n            /chr|(?:fill|find|left|mid|replace|rev|right)str|format|[lu]case|ord|str(?:cmpi?|fromutf8|len|toutf8)|time|trim(?:all|left|right)/.source,\n            /isversionorgreater|version(?:number|string)/.source,\n            /buildpixeltype|colorspacenametopixeltype/.source,\n            /addautoloaddir|on(?:cpu|cuda)|prefetch|setfiltermtmode/.source\n        ].join(\"|\");\n        var properties = [\n            // content\n            /has(?:audio|video)/.source,\n            /height|width/.source,\n            /frame(?:count|rate)|framerate(?:denominator|numerator)/.source,\n            /getparity|is(?:field|frame)based/.source,\n            /bitspercomponent|componentsize|hasalpha|is(?:planar(?:rgba?)?|interleaved|rgb(?:24|32|48|64)?|y(?:8|u(?:va?|y2))?|yv(?:12|16|24|411)|420|422|444|packedrgb)|numcomponents|pixeltype/.source,\n            /audio(?:bits|channels|duration|length(?:[fs]|hi|lo)?|rate)|isaudio(?:float|int)/.source\n        ].join(\"|\");\n        var filters = [\n            // source\n            /avi(?:file)?source|directshowsource|image(?:reader|source|sourceanim)|opendmlsource|segmented(?:avisource|directshowsource)|wavsource/.source,\n            /coloryuv|convertbacktoyuy2|convertto(?:RGB(?:24|32|48|64)|(?:planar)?RGBA?|Y8?|YV(?:12|16|24|411)|YUVA?(?:411|420|422|444)|YUY2)|fixluminance|gr[ae]yscale|invert|levels|limiter|mergea?rgb|merge(?:chroma|luma)|rgbadjust|show(?:alpha|blue|green|red)|swapuv|tweak|[uv]toy8?|ytouv/.source,\n            /(?:colorkey|reset)mask|layer|mask(?:hs)?|merge|overlay|subtract/.source,\n            /addborders|(?:bicubic|bilinear|blackman|gauss|lanczos4|lanczos|point|sinc|spline(?:16|36|64))resize|crop(?:bottom)?|flip(?:horizontal|vertical)|(?:horizontal|vertical)?reduceby2|letterbox|skewrows|turn(?:180|left|right)/.source,\n            /blur|fixbrokenchromaupsampling|generalconvolution|(?:spatial|temporal)soften|sharpen/.source,\n            /trim|(?:un)?alignedsplice|(?:assume|assumescaled|change|convert)FPS|(?:delete|duplicate)frame|dissolve|fade(?:in|io|out)[02]?|freezeframe|interleave|loop|reverse|select(?:even|odd|(?:range)?every)/.source,\n            /assume[bt]ff|assume(?:field|frame)based|bob|complementparity|doubleweave|peculiarblend|pulldown|separate(?:columns|fields|rows)|swapfields|weave(?:columns|rows)?/.source,\n            /amplify(?:db)?|assumesamplerate|audiodub(?:ex)?|audiotrim|convertaudioto(?:(?:8|16|24|32)bit|float)|converttomono|delayaudio|ensurevbrmp3sync|get(?:left|right)?channel|kill(?:audio|video)|mergechannels|mixaudio|monotostereo|normalize|resampleaudio|ssrc|supereq|timestretch/.source,\n            /animate|applyrange|conditional(?:filter|reader|select)|frameevaluate|scriptclip|tcp(?:server|source)|writefile(?:end|if|start)?/.source,\n            /imagewriter/.source,\n            /blackness|blankclip|colorbars(?:hd)?|compare|dumpfiltergraph|echo|histogram|info|messageclip|preroll|setgraphanalysis|show(?:framenumber|smpte|time)|showfiveversions|stack(?:horizontal|vertical)|subtitle|tone|version/.source\n        ].join(\"|\");\n        var allinternals = [\n            internals,\n            properties,\n            filters\n        ].join(\"|\");\n        Prism.languages.avisynth = {\n            comment: [\n                {\n                    // Matches [* *] nestable block comments, but only supports 1 level of nested comments\n                    // /\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\])|<self>)*\\*\\]/\n                    pattern: /(^|[^\\\\])\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\])|\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\]))*\\*\\])*\\*\\]/,\n                    lookbehind: true,\n                    greedy: true\n                },\n                {\n                    // Matches /* */ block comments\n                    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n                    lookbehind: true,\n                    greedy: true\n                },\n                {\n                    // Matches # comments\n                    pattern: /(^|[^\\\\$])#.*/,\n                    lookbehind: true,\n                    greedy: true\n                }\n            ],\n            // Handle before strings because optional arguments are surrounded by double quotes\n            argument: {\n                pattern: re(/\\b(?:<<0>>)\\s+(\"?)\\w+\\1/.source, [\n                    types\n                ], \"i\"),\n                inside: {\n                    keyword: /^\\w+/\n                }\n            },\n            // Optional argument assignment\n            \"argument-label\": {\n                pattern: /([,(][\\s\\\\]*)\\w+\\s*=(?!=)/,\n                lookbehind: true,\n                inside: {\n                    \"argument-name\": {\n                        pattern: /^\\w+/,\n                        alias: \"punctuation\"\n                    },\n                    punctuation: /=$/\n                }\n            },\n            string: [\n                {\n                    // triple double-quoted\n                    pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n                    greedy: true\n                },\n                {\n                    // single double-quoted\n                    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n                    greedy: true,\n                    inside: {\n                        constant: {\n                            // These *are* case-sensitive!\n                            pattern: /\\b(?:DEFAULT_MT_MODE|(?:MAINSCRIPT|PROGRAM|SCRIPT)DIR|(?:MACHINE|USER)_(?:CLASSIC|PLUS)_PLUGINS)\\b/\n                        }\n                    }\n                }\n            ],\n            // The special \"last\" variable that takes the value of the last implicitly returned clip\n            variable: /\\b(?:last)\\b/i,\n            boolean: /\\b(?:false|no|true|yes)\\b/i,\n            keyword: /\\b(?:catch|else|for|function|global|if|return|try|while|__END__)\\b/i,\n            constant: /\\bMT_(?:MULTI_INSTANCE|NICE_FILTER|SERIALIZED|SPECIAL_MT)\\b/,\n            // AviSynth's internal functions, filters, and properties\n            \"builtin-function\": {\n                pattern: re(/\\b(?:<<0>>)\\b/.source, [\n                    allinternals\n                ], \"i\"),\n                alias: \"function\"\n            },\n            \"type-cast\": {\n                pattern: re(/\\b(?:<<0>>)(?=\\s*\\()/.source, [\n                    types\n                ], \"i\"),\n                alias: \"keyword\"\n            },\n            // External/user-defined filters\n            function: {\n                pattern: /\\b[a-z_]\\w*(?=\\s*\\()|(\\.)[a-z_]\\w*\\b/i,\n                lookbehind: true\n            },\n            // Matches a \\ as the first or last character on a line\n            \"line-continuation\": {\n                pattern: /(^[ \\t]*)\\\\|\\\\(?=[ \\t]*$)/m,\n                lookbehind: true,\n                alias: \"punctuation\"\n            },\n            number: /\\B\\$(?:[\\da-f]{6}|[\\da-f]{8})\\b|(?:(?:\\b|\\B-)\\d+(?:\\.\\d*)?\\b|\\B\\.\\d+\\b)/i,\n            operator: /\\+\\+?|[!=<>]=?|&&|\\|\\||[?:*/%-]/,\n            punctuation: /[{}\\[\\]();,.]/\n        };\n        Prism.languages.avs = Prism.languages.avisynth;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/avisynth.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/avro-idl.js":
/*!*************************************************!*\
  !*** ./node_modules/refractor/lang/avro-idl.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = avroIdl;\navroIdl.displayName = \"avroIdl\";\navroIdl.aliases = [];\nfunction avroIdl(Prism) {\n    // GitHub: https://github.com/apache/avro\n    // Docs: https://avro.apache.org/docs/current/idl.html\n    Prism.languages[\"avro-idl\"] = {\n        comment: {\n            pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n            greedy: true\n        },\n        string: {\n            pattern: /(^|[^\\\\])\"(?:[^\\r\\n\"\\\\]|\\\\.)*\"/,\n            lookbehind: true,\n            greedy: true\n        },\n        annotation: {\n            pattern: /@(?:[$\\w.-]|`[^\\r\\n`]+`)+/,\n            greedy: true,\n            alias: \"function\"\n        },\n        \"function-identifier\": {\n            pattern: /`[^\\r\\n`]+`(?=\\s*\\()/,\n            greedy: true,\n            alias: \"function\"\n        },\n        identifier: {\n            pattern: /`[^\\r\\n`]+`/,\n            greedy: true\n        },\n        \"class-name\": {\n            pattern: /(\\b(?:enum|error|protocol|record|throws)\\b\\s+)[$\\w]+/,\n            lookbehind: true,\n            greedy: true\n        },\n        keyword: /\\b(?:array|boolean|bytes|date|decimal|double|enum|error|false|fixed|float|idl|import|int|local_timestamp_ms|long|map|null|oneway|protocol|record|schema|string|throws|time_ms|timestamp_ms|true|union|uuid|void)\\b/,\n        function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        number: [\n            {\n                pattern: /(^|[^\\w.])-?(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|0x(?:[a-f0-9]+(?:\\.[a-f0-9]*)?|\\.[a-f0-9]+)(?:p[+-]?\\d+)?)[dfl]?(?![\\w.])/i,\n                lookbehind: true\n            },\n            /-?\\b(?:Infinity|NaN)\\b/\n        ],\n        operator: /=/,\n        punctuation: /[()\\[\\]{}<>.:,;-]/\n    };\n    Prism.languages.avdl = Prism.languages[\"avro-idl\"];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYXZyby1pZGwuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsUUFBUUMsV0FBVyxHQUFHO0FBQ3RCRCxRQUFRRSxPQUFPLEdBQUcsRUFBRTtBQUNwQixTQUFTRixRQUFRRyxLQUFLO0lBQ3BCLHlDQUF5QztJQUN6QyxzREFBc0Q7SUFDdERBLE1BQU1DLFNBQVMsQ0FBQyxXQUFXLEdBQUc7UUFDNUJDLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsUUFBUTtZQUNORixTQUFTO1lBQ1RHLFlBQVk7WUFDWkYsUUFBUTtRQUNWO1FBQ0FHLFlBQVk7WUFDVkosU0FBUztZQUNUQyxRQUFRO1lBQ1JJLE9BQU87UUFDVDtRQUNBLHVCQUF1QjtZQUNyQkwsU0FBUztZQUNUQyxRQUFRO1lBQ1JJLE9BQU87UUFDVDtRQUNBQyxZQUFZO1lBQ1ZOLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0EsY0FBYztZQUNaRCxTQUFTO1lBQ1RHLFlBQVk7WUFDWkYsUUFBUTtRQUNWO1FBQ0FNLFNBQ0U7UUFDRkMsVUFBVTtRQUNWQyxRQUFRO1lBQ047Z0JBQ0VULFNBQ0U7Z0JBQ0ZHLFlBQVk7WUFDZDtZQUNBO1NBQ0Q7UUFDRE8sVUFBVTtRQUNWQyxhQUFhO0lBQ2Y7SUFDQWQsTUFBTUMsU0FBUyxDQUFDYyxJQUFJLEdBQUdmLE1BQU1DLFNBQVMsQ0FBQyxXQUFXO0FBQ3BEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2F2cm8taWRsLmpzPzIzNTkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gYXZyb0lkbFxuYXZyb0lkbC5kaXNwbGF5TmFtZSA9ICdhdnJvSWRsJ1xuYXZyb0lkbC5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGF2cm9JZGwoUHJpc20pIHtcbiAgLy8gR2l0SHViOiBodHRwczovL2dpdGh1Yi5jb20vYXBhY2hlL2F2cm9cbiAgLy8gRG9jczogaHR0cHM6Ly9hdnJvLmFwYWNoZS5vcmcvZG9jcy9jdXJyZW50L2lkbC5odG1sXG4gIFByaXNtLmxhbmd1YWdlc1snYXZyby1pZGwnXSA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvXFwvXFwvLip8XFwvXFwqW1xcc1xcU10qP1xcKlxcLy8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyhefFteXFxcXF0pXCIoPzpbXlxcclxcblwiXFxcXF18XFxcXC4pKlwiLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGFubm90YXRpb246IHtcbiAgICAgIHBhdHRlcm46IC9AKD86WyRcXHcuLV18YFteXFxyXFxuYF0rYCkrLyxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGFsaWFzOiAnZnVuY3Rpb24nXG4gICAgfSxcbiAgICAnZnVuY3Rpb24taWRlbnRpZmllcic6IHtcbiAgICAgIHBhdHRlcm46IC9gW15cXHJcXG5gXStgKD89XFxzKlxcKCkvLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgYWxpYXM6ICdmdW5jdGlvbidcbiAgICB9LFxuICAgIGlkZW50aWZpZXI6IHtcbiAgICAgIHBhdHRlcm46IC9gW15cXHJcXG5gXStgLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgJ2NsYXNzLW5hbWUnOiB7XG4gICAgICBwYXR0ZXJuOiAvKFxcYig/OmVudW18ZXJyb3J8cHJvdG9jb2x8cmVjb3JkfHRocm93cylcXGJcXHMrKVskXFx3XSsvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzphcnJheXxib29sZWFufGJ5dGVzfGRhdGV8ZGVjaW1hbHxkb3VibGV8ZW51bXxlcnJvcnxmYWxzZXxmaXhlZHxmbG9hdHxpZGx8aW1wb3J0fGludHxsb2NhbF90aW1lc3RhbXBfbXN8bG9uZ3xtYXB8bnVsbHxvbmV3YXl8cHJvdG9jb2x8cmVjb3JkfHNjaGVtYXxzdHJpbmd8dGhyb3dzfHRpbWVfbXN8dGltZXN0YW1wX21zfHRydWV8dW5pb258dXVpZHx2b2lkKVxcYi8sXG4gICAgZnVuY3Rpb246IC9cXGJbYS16X11cXHcqKD89XFxzKlxcKCkvaSxcbiAgICBudW1iZXI6IFtcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKF58W15cXHcuXSktPyg/Oig/OlxcZCsoPzpcXC5cXGQqKT98XFwuXFxkKykoPzplWystXT9cXGQrKT98MHgoPzpbYS1mMC05XSsoPzpcXC5bYS1mMC05XSopP3xcXC5bYS1mMC05XSspKD86cFsrLV0/XFxkKyk/KVtkZmxdPyg/IVtcXHcuXSkvaSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIC8tP1xcYig/OkluZmluaXR5fE5hTilcXGIvXG4gICAgXSxcbiAgICBvcGVyYXRvcjogLz0vLFxuICAgIHB1bmN0dWF0aW9uOiAvWygpXFxbXFxde308Pi46LDstXS9cbiAgfVxuICBQcmlzbS5sYW5ndWFnZXMuYXZkbCA9IFByaXNtLmxhbmd1YWdlc1snYXZyby1pZGwnXVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhdnJvSWRsIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImdyZWVkeSIsInN0cmluZyIsImxvb2tiZWhpbmQiLCJhbm5vdGF0aW9uIiwiYWxpYXMiLCJpZGVudGlmaWVyIiwia2V5d29yZCIsImZ1bmN0aW9uIiwibnVtYmVyIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiIsImF2ZGwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/avro-idl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/bash.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/bash.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = bash;\nbash.displayName = \"bash\";\nbash.aliases = [\n    \"shell\"\n];\nfunction bash(Prism) {\n    ;\n    (function(Prism) {\n        // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n        // + LC_ALL, RANDOM, REPLY, SECONDS.\n        // + make sure PS1..4 are here as they are not always set,\n        // - some useless things.\n        var envVars = \"\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b\";\n        var commandAfterHeredoc = {\n            pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n            lookbehind: true,\n            alias: \"punctuation\",\n            // this looks reasonably well in all themes\n            inside: null // see below\n        };\n        var insideString = {\n            bash: commandAfterHeredoc,\n            environment: {\n                pattern: RegExp(\"\\\\$\" + envVars),\n                alias: \"constant\"\n            },\n            variable: [\n                // [0]: Arithmetic Environment\n                {\n                    pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n                    greedy: true,\n                    inside: {\n                        // If there is a $ sign at the beginning highlight $(( and )) as variable\n                        variable: [\n                            {\n                                pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n                                lookbehind: true\n                            },\n                            /^\\$\\(\\(/\n                        ],\n                        number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n                        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n                        operator: /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n                        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n                        punctuation: /\\(\\(?|\\)\\)?|,|;/\n                    }\n                },\n                {\n                    pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n                    greedy: true,\n                    inside: {\n                        variable: /^\\$\\(|^`|\\)$|`$/\n                    }\n                },\n                {\n                    pattern: /\\$\\{[^}]+\\}/,\n                    greedy: true,\n                    inside: {\n                        operator: /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n                        punctuation: /[\\[\\]]/,\n                        environment: {\n                            pattern: RegExp(\"(\\\\{)\" + envVars),\n                            lookbehind: true,\n                            alias: \"constant\"\n                        }\n                    }\n                },\n                /\\$(?:\\w+|[#?*!@$])/\n            ],\n            // Escape sequences from echo and printf's manuals, and escaped quotes.\n            entity: /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/\n        };\n        Prism.languages.bash = {\n            shebang: {\n                pattern: /^#!\\s*\\/.*/,\n                alias: \"important\"\n            },\n            comment: {\n                pattern: /(^|[^\"{\\\\$])#.*/,\n                lookbehind: true\n            },\n            \"function-name\": [\n                // a) function foo {\n                // b) foo() {\n                // c) function foo() {\n                // but not “foo {”\n                {\n                    // a) and c)\n                    pattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n                    lookbehind: true,\n                    alias: \"function\"\n                },\n                {\n                    // b)\n                    pattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n                    alias: \"function\"\n                }\n            ],\n            // Highlight variable names as variables in for and select beginnings.\n            \"for-or-select\": {\n                pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n                alias: \"variable\",\n                lookbehind: true\n            },\n            // Highlight variable names as variables in the left-hand part\n            // of assignments (“=” and “+=”).\n            \"assign-left\": {\n                pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n                inside: {\n                    environment: {\n                        pattern: RegExp(\"(^|[\\\\s;|&]|[<>]\\\\()\" + envVars),\n                        lookbehind: true,\n                        alias: \"constant\"\n                    }\n                },\n                alias: \"variable\",\n                lookbehind: true\n            },\n            string: [\n                // Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n                {\n                    pattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n                    lookbehind: true,\n                    greedy: true,\n                    inside: insideString\n                },\n                // → No expansion (so no “inside”).\n                {\n                    pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n                    lookbehind: true,\n                    greedy: true,\n                    inside: {\n                        bash: commandAfterHeredoc\n                    }\n                },\n                {\n                    // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n                    pattern: /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n                    lookbehind: true,\n                    greedy: true,\n                    inside: insideString\n                },\n                {\n                    // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n                    pattern: /(^|[^$\\\\])'[^']*'/,\n                    lookbehind: true,\n                    greedy: true\n                },\n                {\n                    // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n                    pattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n                    greedy: true,\n                    inside: {\n                        entity: insideString.entity\n                    }\n                }\n            ],\n            environment: {\n                pattern: RegExp(\"\\\\$?\" + envVars),\n                alias: \"constant\"\n            },\n            variable: insideString.variable,\n            function: {\n                pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n                lookbehind: true\n            },\n            keyword: {\n                pattern: /(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,\n                lookbehind: true\n            },\n            // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n            builtin: {\n                pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,\n                lookbehind: true,\n                // Alias added to make those easier to distinguish from strings.\n                alias: \"class-name\"\n            },\n            boolean: {\n                pattern: /(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,\n                lookbehind: true\n            },\n            \"file-descriptor\": {\n                pattern: /\\B&\\d\\b/,\n                alias: \"important\"\n            },\n            operator: {\n                // Lots of redirections here, but not just that.\n                pattern: /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n                inside: {\n                    \"file-descriptor\": {\n                        pattern: /^\\d/,\n                        alias: \"important\"\n                    }\n                }\n            },\n            punctuation: /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n            number: {\n                pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n                lookbehind: true\n            }\n        };\n        commandAfterHeredoc.inside = Prism.languages.bash;\n        /* Patterns in command substitution. */ var toBeCopied = [\n            \"comment\",\n            \"function-name\",\n            \"for-or-select\",\n            \"assign-left\",\n            \"string\",\n            \"environment\",\n            \"function\",\n            \"keyword\",\n            \"builtin\",\n            \"boolean\",\n            \"file-descriptor\",\n            \"operator\",\n            \"punctuation\",\n            \"number\"\n        ];\n        var inside = insideString.variable[1].inside;\n        for(var i = 0; i < toBeCopied.length; i++){\n            inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n        }\n        Prism.languages.shell = Prism.languages.bash;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/bash.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/basic.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/basic.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = basic;\nbasic.displayName = \"basic\";\nbasic.aliases = [];\nfunction basic(Prism) {\n    Prism.languages.basic = {\n        comment: {\n            pattern: /(?:!|REM\\b).+/i,\n            inside: {\n                keyword: /^REM/i\n            }\n        },\n        string: {\n            pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^\\w +\\-.])*\"/,\n            greedy: true\n        },\n        number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n        keyword: /\\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SELECT CASE|SHARED|SHELL|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\\$|\\b)/i,\n        function: /\\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\\$|\\b)/i,\n        operator: /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:AND|EQV|IMP|NOT|OR|XOR)\\b/i,\n        punctuation: /[,;:()]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYmFzaWMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsTUFBTUMsV0FBVyxHQUFHO0FBQ3BCRCxNQUFNRSxPQUFPLEdBQUcsRUFBRTtBQUNsQixTQUFTRixNQUFNRyxLQUFLO0lBQ2xCQSxNQUFNQyxTQUFTLENBQUNKLEtBQUssR0FBRztRQUN0QkssU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFFBQVE7Z0JBQ05DLFNBQVM7WUFDWDtRQUNGO1FBQ0FDLFFBQVE7WUFDTkgsU0FBUztZQUNUSSxRQUFRO1FBQ1Y7UUFDQUMsUUFBUTtRQUNSSCxTQUNFO1FBQ0ZJLFVBQ0U7UUFDRkMsVUFBVTtRQUNWQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9iYXNpYy5qcz9jMWM0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2ljXG5iYXNpYy5kaXNwbGF5TmFtZSA9ICdiYXNpYydcbmJhc2ljLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gYmFzaWMoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmJhc2ljID0ge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC8oPzohfFJFTVxcYikuKy9pLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIGtleXdvcmQ6IC9eUkVNL2lcbiAgICAgIH1cbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1wiKD86XCJcInxbISMkJSYnKCkqLFxcLzo7PD0+P15cXHcgK1xcLS5dKSpcIi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIG51bWJlcjogLyg/OlxcYlxcZCsoPzpcXC5cXGQqKT98XFxCXFwuXFxkKykoPzpFWystXT9cXGQrKT8vaSxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OkFTfEJFRVB8QkxPQUR8QlNBVkV8Q0FMTCg/OiBBQlNPTFVURSk/fENBU0V8Q0hBSU58Q0hESVJ8Q0xFQVJ8Q0xPU0V8Q0xTfENPTXxDT01NT058Q09OU1R8REFUQXxERUNMQVJFfERFRig/OiBGTnwgU0VHfERCTHxJTlR8TE5HfFNOR3xTVFIpfERJTXxET3xET1VCTEV8RUxTRXxFTFNFSUZ8RU5EfEVOVklST058RVJBU0V8RVJST1J8RVhJVHxGSUVMRHxGSUxFU3xGT1J8RlVOQ1RJT058R0VUfEdPU1VCfEdPVE98SUZ8SU5QVVR8SU5URUdFUnxJT0NUTHxLRVl8S0lMTHxMSU5FIElOUFVUfExPQ0FURXxMT0NLfExPTkd8TE9PUHxMU0VUfE1LRElSfE5BTUV8TkVYVHxPRkZ8T04oPzogQ09NfCBFUlJPUnwgS0VZfCBUSU1FUik/fE9QRU58T1BUSU9OIEJBU0V8T1VUfFBPS0V8UFVUfFJFQUR8UkVESU18UkVNfFJFU1RPUkV8UkVTVU1FfFJFVFVSTnxSTURJUnxSU0VUfFJVTnxTRUxFQ1QgQ0FTRXxTSEFSRUR8U0hFTEx8U0lOR0xFfFNMRUVQfFNUQVRJQ3xTVEVQfFNUT1B8U1RSSU5HfFNVQnxTV0FQfFNZU1RFTXxUSEVOfFRJTUVSfFRPfFRST0ZGfFRST058VFlQRXxVTkxPQ0t8VU5USUx8VVNJTkd8VklFVyBQUklOVHxXQUlUfFdFTkR8V0hJTEV8V1JJVEUpKD86XFwkfFxcYikvaSxcbiAgICBmdW5jdGlvbjpcbiAgICAgIC9cXGIoPzpBQlN8QUNDRVNTfEFDT1N8QU5HTEV8QVJFQXxBUklUSE1FVElDfEFSUkFZfEFTSU58QVNLfEFUfEFUTnxCQVNFfEJFR0lOfEJSRUFLfENBVVNFfENFSUx8Q0hSfENMSVB8Q09MTEFURXxDT0xPUnxDT058Q09TfENPU0h8Q09UfENTQ3xEQVRFfERBVFVNfERFQlVHfERFQ0lNQUx8REVGfERFR3xERUdSRUVTfERFTEVURXxERVR8REVWSUNFfERJU1BMQVl8RE9UfEVMQVBTRUR8RVBTfEVSQVNBQkxFfEVYTElORXxFWFB8RVhURVJOQUx8RVhUWVBFfEZJTEVUWVBFfEZJWEVEfEZQfEdPfEdSQVBIfEhBTkRMRVJ8SUROfElNQUdFfElOfElOVHxJTlRFUk5BTHxJUHxJU3xLRVlFRHxMQk9VTkR8TENBU0V8TEVGVHxMRU58TEVOR1RIfExFVHxMSU5FfExJTkVTfExPR3xMT0cxMHxMT0cyfExUUklNfE1BUkdJTnxNQVR8TUFYfE1BWE5VTXxNSUR8TUlOfE1JU1NJTkd8TU9EfE5BVElWRXxOVUx8TlVNRVJJQ3xPRnxPUFRJT058T1JEfE9SR0FOSVpBVElPTnxPVVRJTnxPVVRQVVR8UEl8UE9JTlR8UE9JTlRFUnxQT0lOVFN8UE9TfFBSSU5UfFBST0dSQU18UFJPTVBUfFJBRHxSQURJQU5TfFJBTkRPTUlaRXxSRUNPUkR8UkVDU0laRXxSRUNUWVBFfFJFTEFUSVZFfFJFTUFJTkRFUnxSRVBFQVR8UkVTVHxSRVRSWXxSRVdSSVRFfFJJR0hUfFJORHxST1VORHxSVFJJTXxTQU1FfFNFQ3xTRUxFQ1R8U0VRVUVOVElBTHxTRVR8U0VUVEVSfFNHTnxTSU58U0lOSHxTSVpFfFNLSVB8U1FSfFNUQU5EQVJEfFNUQVRVU3xTVFJ8U1RSRUFNfFNUWUxFfFRBQnxUQU58VEFOSHxURU1QTEFURXxURVhUfFRIRVJFfFRJTUV8VElNRU9VVHxUUkFDRXxUUkFOU0ZPUk18VFJVTkNBVEV8VUJPVU5EfFVDQVNFfFVTRXxWQUx8VkFSSUFCTEV8VklFV1BPUlR8V0hFTnxXSU5ET1d8V0lUSHxaRVJ8Wk9ORVdJRFRIKSg/OlxcJHxcXGIpL2ksXG4gICAgb3BlcmF0b3I6IC88Wz0+XT98Pj0/fFsrXFwtKlxcL149Jl18XFxiKD86QU5EfEVRVnxJTVB8Tk9UfE9SfFhPUilcXGIvaSxcbiAgICBwdW5jdHVhdGlvbjogL1ssOzooKV0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiYmFzaWMiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwiaW5zaWRlIiwia2V5d29yZCIsInN0cmluZyIsImdyZWVkeSIsIm51bWJlciIsImZ1bmN0aW9uIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/basic.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/batch.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/batch.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = batch;\nbatch.displayName = \"batch\";\nbatch.aliases = [];\nfunction batch(Prism) {\n    ;\n    (function(Prism) {\n        var variable = /%%?[~:\\w]+%?|!\\S+!/;\n        var parameter = {\n            pattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\n            alias: \"attr-name\",\n            inside: {\n                punctuation: /:/\n            }\n        };\n        var string = /\"(?:[\\\\\"]\"|[^\"])*\"(?!\")/;\n        var number = /(?:\\b|-)\\d+\\b/;\n        Prism.languages.batch = {\n            comment: [\n                /^::.*/m,\n                {\n                    pattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n                    lookbehind: true\n                }\n            ],\n            label: {\n                pattern: /^:.*/m,\n                alias: \"property\"\n            },\n            command: [\n                {\n                    // FOR command\n                    pattern: /((?:^|[&(])[ \\t]*)for(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* \\S+ in \\([^)]+\\) do/im,\n                    lookbehind: true,\n                    inside: {\n                        keyword: /\\b(?:do|in)\\b|^for\\b/i,\n                        string: string,\n                        parameter: parameter,\n                        variable: variable,\n                        number: number,\n                        punctuation: /[()',]/\n                    }\n                },\n                {\n                    // IF command\n                    pattern: /((?:^|[&(])[ \\t]*)if(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|(?!\")(?:(?!==)\\S)+)?(?:==| (?:equ|geq|gtr|leq|lss|neq) )(?:\"[^\"]*\"|[^\\s\"]\\S*))/im,\n                    lookbehind: true,\n                    inside: {\n                        keyword: /\\b(?:cmdextversion|defined|errorlevel|exist|not)\\b|^if\\b/i,\n                        string: string,\n                        parameter: parameter,\n                        variable: variable,\n                        number: number,\n                        operator: /\\^|==|\\b(?:equ|geq|gtr|leq|lss|neq)\\b/i\n                    }\n                },\n                {\n                    // ELSE command\n                    pattern: /((?:^|[&()])[ \\t]*)else\\b/im,\n                    lookbehind: true,\n                    inside: {\n                        keyword: /^else\\b/i\n                    }\n                },\n                {\n                    // SET command\n                    pattern: /((?:^|[&(])[ \\t]*)set(?: \\/[a-z](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n                    lookbehind: true,\n                    inside: {\n                        keyword: /^set\\b/i,\n                        string: string,\n                        parameter: parameter,\n                        variable: [\n                            variable,\n                            /\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/\n                        ],\n                        number: number,\n                        operator: /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\n                        punctuation: /[()',]/\n                    }\n                },\n                {\n                    // Other commands\n                    pattern: /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:\"(?:[\\\\\"]\"|[^\"])*\"(?!\")|[^\"^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/m,\n                    lookbehind: true,\n                    inside: {\n                        keyword: /^\\w+\\b/,\n                        string: string,\n                        parameter: parameter,\n                        label: {\n                            pattern: /(^\\s*):\\S+/m,\n                            lookbehind: true,\n                            alias: \"property\"\n                        },\n                        variable: variable,\n                        number: number,\n                        operator: /\\^/\n                    }\n                }\n            ],\n            operator: /[&@]/,\n            punctuation: /[()']/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYmF0Y2guanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsTUFBTUMsV0FBVyxHQUFHO0FBQ3BCRCxNQUFNRSxPQUFPLEdBQUcsRUFBRTtBQUNsQixTQUFTRixNQUFNRyxLQUFLOztJQUNoQixVQUFVQSxLQUFLO1FBQ2YsSUFBSUMsV0FBVztRQUNmLElBQUlDLFlBQVk7WUFDZEMsU0FBUztZQUNUQyxPQUFPO1lBQ1BDLFFBQVE7Z0JBQ05DLGFBQWE7WUFDZjtRQUNGO1FBQ0EsSUFBSUMsU0FBUztRQUNiLElBQUlDLFNBQVM7UUFDYlIsTUFBTVMsU0FBUyxDQUFDWixLQUFLLEdBQUc7WUFDdEJhLFNBQVM7Z0JBQ1A7Z0JBQ0E7b0JBQ0VQLFNBQVM7b0JBQ1RRLFlBQVk7Z0JBQ2Q7YUFDRDtZQUNEQyxPQUFPO2dCQUNMVCxTQUFTO2dCQUNUQyxPQUFPO1lBQ1Q7WUFDQVMsU0FBUztnQkFDUDtvQkFDRSxjQUFjO29CQUNkVixTQUNFO29CQUNGUSxZQUFZO29CQUNaTixRQUFRO3dCQUNOUyxTQUFTO3dCQUNUUCxRQUFRQTt3QkFDUkwsV0FBV0E7d0JBQ1hELFVBQVVBO3dCQUNWTyxRQUFRQTt3QkFDUkYsYUFBYTtvQkFDZjtnQkFDRjtnQkFDQTtvQkFDRSxhQUFhO29CQUNiSCxTQUNFO29CQUNGUSxZQUFZO29CQUNaTixRQUFRO3dCQUNOUyxTQUNFO3dCQUNGUCxRQUFRQTt3QkFDUkwsV0FBV0E7d0JBQ1hELFVBQVVBO3dCQUNWTyxRQUFRQTt3QkFDUk8sVUFBVTtvQkFDWjtnQkFDRjtnQkFDQTtvQkFDRSxlQUFlO29CQUNmWixTQUFTO29CQUNUUSxZQUFZO29CQUNaTixRQUFRO3dCQUNOUyxTQUFTO29CQUNYO2dCQUNGO2dCQUNBO29CQUNFLGNBQWM7b0JBQ2RYLFNBQ0U7b0JBQ0ZRLFlBQVk7b0JBQ1pOLFFBQVE7d0JBQ05TLFNBQVM7d0JBQ1RQLFFBQVFBO3dCQUNSTCxXQUFXQTt3QkFDWEQsVUFBVTs0QkFBQ0E7NEJBQVU7eUJBQWtDO3dCQUN2RE8sUUFBUUE7d0JBQ1JPLFVBQVU7d0JBQ1ZULGFBQWE7b0JBQ2Y7Z0JBQ0Y7Z0JBQ0E7b0JBQ0UsaUJBQWlCO29CQUNqQkgsU0FDRTtvQkFDRlEsWUFBWTtvQkFDWk4sUUFBUTt3QkFDTlMsU0FBUzt3QkFDVFAsUUFBUUE7d0JBQ1JMLFdBQVdBO3dCQUNYVSxPQUFPOzRCQUNMVCxTQUFTOzRCQUNUUSxZQUFZOzRCQUNaUCxPQUFPO3dCQUNUO3dCQUNBSCxVQUFVQTt3QkFDVk8sUUFBUUE7d0JBQ1JPLFVBQVU7b0JBQ1o7Z0JBQ0Y7YUFDRDtZQUNEQSxVQUFVO1lBQ1ZULGFBQWE7UUFDZjtJQUNGLEdBQUdOO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYmF0Y2guanM/ZGEyMiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBiYXRjaFxuYmF0Y2guZGlzcGxheU5hbWUgPSAnYmF0Y2gnXG5iYXRjaC5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGJhdGNoKFByaXNtKSB7XG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIHZhcmlhYmxlID0gLyUlP1t+Olxcd10rJT98IVxcUyshL1xuICAgIHZhciBwYXJhbWV0ZXIgPSB7XG4gICAgICBwYXR0ZXJuOiAvXFwvW2Etej9dKyg/PVsgOl18JCk6P3wtW2Etel1cXGJ8LS1bYS16LV0rXFxiL2ltLFxuICAgICAgYWxpYXM6ICdhdHRyLW5hbWUnLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHB1bmN0dWF0aW9uOiAvOi9cbiAgICAgIH1cbiAgICB9XG4gICAgdmFyIHN0cmluZyA9IC9cIig/OltcXFxcXCJdXCJ8W15cIl0pKlwiKD8hXCIpL1xuICAgIHZhciBudW1iZXIgPSAvKD86XFxifC0pXFxkK1xcYi9cbiAgICBQcmlzbS5sYW5ndWFnZXMuYmF0Y2ggPSB7XG4gICAgICBjb21tZW50OiBbXG4gICAgICAgIC9eOjouKi9tLFxuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogLygoPzpefFsmKF0pWyBcXHRdKilyZW1cXGIoPzpbXl4mKVxcclxcbl18XFxeKD86XFxyXFxufFtcXHNcXFNdKSkqL2ltLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIGxhYmVsOiB7XG4gICAgICAgIHBhdHRlcm46IC9eOi4qL20sXG4gICAgICAgIGFsaWFzOiAncHJvcGVydHknXG4gICAgICB9LFxuICAgICAgY29tbWFuZDogW1xuICAgICAgICB7XG4gICAgICAgICAgLy8gRk9SIGNvbW1hbmRcbiAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgLygoPzpefFsmKF0pWyBcXHRdKilmb3IoPzogXFwvW2Etej9dKD86WyA6XSg/OlwiW15cIl0qXCJ8W15cXHNcIi9dXFxTKikpPykqIFxcUysgaW4gXFwoW14pXStcXCkgZG8vaW0sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIGtleXdvcmQ6IC9cXGIoPzpkb3xpbilcXGJ8XmZvclxcYi9pLFxuICAgICAgICAgICAgc3RyaW5nOiBzdHJpbmcsXG4gICAgICAgICAgICBwYXJhbWV0ZXI6IHBhcmFtZXRlcixcbiAgICAgICAgICAgIHZhcmlhYmxlOiB2YXJpYWJsZSxcbiAgICAgICAgICAgIG51bWJlcjogbnVtYmVyLFxuICAgICAgICAgICAgcHVuY3R1YXRpb246IC9bKCknLF0vXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgLy8gSUYgY29tbWFuZFxuICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAvKCg/Ol58WyYoXSlbIFxcdF0qKWlmKD86IFxcL1thLXo/XSg/OlsgOl0oPzpcIlteXCJdKlwifFteXFxzXCIvXVxcUyopKT8pKiAoPzpub3QgKT8oPzpjbWRleHR2ZXJzaW9uIFxcZCt8ZGVmaW5lZCBcXHcrfGVycm9ybGV2ZWwgXFxkK3xleGlzdCBcXFMrfCg/OlwiW15cIl0qXCJ8KD8hXCIpKD86KD8hPT0pXFxTKSspPyg/Oj09fCAoPzplcXV8Z2VxfGd0cnxsZXF8bHNzfG5lcSkgKSg/OlwiW15cIl0qXCJ8W15cXHNcIl1cXFMqKSkvaW0sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIGtleXdvcmQ6XG4gICAgICAgICAgICAgIC9cXGIoPzpjbWRleHR2ZXJzaW9ufGRlZmluZWR8ZXJyb3JsZXZlbHxleGlzdHxub3QpXFxifF5pZlxcYi9pLFxuICAgICAgICAgICAgc3RyaW5nOiBzdHJpbmcsXG4gICAgICAgICAgICBwYXJhbWV0ZXI6IHBhcmFtZXRlcixcbiAgICAgICAgICAgIHZhcmlhYmxlOiB2YXJpYWJsZSxcbiAgICAgICAgICAgIG51bWJlcjogbnVtYmVyLFxuICAgICAgICAgICAgb3BlcmF0b3I6IC9cXF58PT18XFxiKD86ZXF1fGdlcXxndHJ8bGVxfGxzc3xuZXEpXFxiL2lcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAvLyBFTFNFIGNvbW1hbmRcbiAgICAgICAgICBwYXR0ZXJuOiAvKCg/Ol58WyYoKV0pWyBcXHRdKillbHNlXFxiL2ltLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICBrZXl3b3JkOiAvXmVsc2VcXGIvaVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIC8vIFNFVCBjb21tYW5kXG4gICAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAgIC8oKD86XnxbJihdKVsgXFx0XSopc2V0KD86IFxcL1thLXpdKD86WyA6XSg/OlwiW15cIl0qXCJ8W15cXHNcIi9dXFxTKikpPykqICg/OlteXiYpXFxyXFxuXXxcXF4oPzpcXHJcXG58W1xcc1xcU10pKSovaW0sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIGtleXdvcmQ6IC9ec2V0XFxiL2ksXG4gICAgICAgICAgICBzdHJpbmc6IHN0cmluZyxcbiAgICAgICAgICAgIHBhcmFtZXRlcjogcGFyYW1ldGVyLFxuICAgICAgICAgICAgdmFyaWFibGU6IFt2YXJpYWJsZSwgL1xcdysoPz0oPzpbKlxcLyUrXFwtJl58XXw8PHw+Pik/PSkvXSxcbiAgICAgICAgICAgIG51bWJlcjogbnVtYmVyLFxuICAgICAgICAgICAgb3BlcmF0b3I6IC9bKlxcLyUrXFwtJl58XT0/fDw8PT98Pj49P3xbIX5fPV0vLFxuICAgICAgICAgICAgcHVuY3R1YXRpb246IC9bKCknLF0vXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgLy8gT3RoZXIgY29tbWFuZHNcbiAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgLygoPzpefFsmKF0pWyBcXHRdKkA/KVxcdytcXGIoPzpcIig/OltcXFxcXCJdXCJ8W15cIl0pKlwiKD8hXCIpfFteXCJeJilcXHJcXG5dfFxcXig/OlxcclxcbnxbXFxzXFxTXSkpKi9tLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICBrZXl3b3JkOiAvXlxcdytcXGIvLFxuICAgICAgICAgICAgc3RyaW5nOiBzdHJpbmcsXG4gICAgICAgICAgICBwYXJhbWV0ZXI6IHBhcmFtZXRlcixcbiAgICAgICAgICAgIGxhYmVsOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC8oXlxccyopOlxcUysvbSxcbiAgICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICAgICAgYWxpYXM6ICdwcm9wZXJ0eSdcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB2YXJpYWJsZTogdmFyaWFibGUsXG4gICAgICAgICAgICBudW1iZXI6IG51bWJlcixcbiAgICAgICAgICAgIG9wZXJhdG9yOiAvXFxeL1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIG9wZXJhdG9yOiAvWyZAXS8sXG4gICAgICBwdW5jdHVhdGlvbjogL1soKSddL1xuICAgIH1cbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImJhdGNoIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJ2YXJpYWJsZSIsInBhcmFtZXRlciIsInBhdHRlcm4iLCJhbGlhcyIsImluc2lkZSIsInB1bmN0dWF0aW9uIiwic3RyaW5nIiwibnVtYmVyIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsImxvb2tiZWhpbmQiLCJsYWJlbCIsImNvbW1hbmQiLCJrZXl3b3JkIiwib3BlcmF0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/batch.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/bbcode.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/bbcode.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = bbcode;\nbbcode.displayName = \"bbcode\";\nbbcode.aliases = [\n    \"shortcode\"\n];\nfunction bbcode(Prism) {\n    Prism.languages.bbcode = {\n        tag: {\n            pattern: /\\[\\/?[^\\s=\\]]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+))?(?:\\s+[^\\s=\\]]+\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+))*\\s*\\]/,\n            inside: {\n                tag: {\n                    pattern: /^\\[\\/?[^\\s=\\]]+/,\n                    inside: {\n                        punctuation: /^\\[\\/?/\n                    }\n                },\n                \"attr-value\": {\n                    pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+)/,\n                    inside: {\n                        punctuation: [\n                            /^=/,\n                            {\n                                pattern: /^(\\s*)[\"']|[\"']$/,\n                                lookbehind: true\n                            }\n                        ]\n                    }\n                },\n                punctuation: /\\]/,\n                \"attr-name\": /[^\\s=\\]]+/\n            }\n        }\n    };\n    Prism.languages.shortcode = Prism.languages.bbcode;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYmJjb2RlLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLE9BQU9DLFdBQVcsR0FBRztBQUNyQkQsT0FBT0UsT0FBTyxHQUFHO0lBQUM7Q0FBWTtBQUM5QixTQUFTRixPQUFPRyxLQUFLO0lBQ25CQSxNQUFNQyxTQUFTLENBQUNKLE1BQU0sR0FBRztRQUN2QkssS0FBSztZQUNIQyxTQUNFO1lBQ0ZDLFFBQVE7Z0JBQ05GLEtBQUs7b0JBQ0hDLFNBQVM7b0JBQ1RDLFFBQVE7d0JBQ05DLGFBQWE7b0JBQ2Y7Z0JBQ0Y7Z0JBQ0EsY0FBYztvQkFDWkYsU0FBUztvQkFDVEMsUUFBUTt3QkFDTkMsYUFBYTs0QkFDWDs0QkFDQTtnQ0FDRUYsU0FBUztnQ0FDVEcsWUFBWTs0QkFDZDt5QkFDRDtvQkFDSDtnQkFDRjtnQkFDQUQsYUFBYTtnQkFDYixhQUFhO1lBQ2Y7UUFDRjtJQUNGO0lBQ0FMLE1BQU1DLFNBQVMsQ0FBQ00sU0FBUyxHQUFHUCxNQUFNQyxTQUFTLENBQUNKLE1BQU07QUFDcEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYmJjb2RlLmpzP2E0NzkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gYmJjb2RlXG5iYmNvZGUuZGlzcGxheU5hbWUgPSAnYmJjb2RlJ1xuYmJjb2RlLmFsaWFzZXMgPSBbJ3Nob3J0Y29kZSddXG5mdW5jdGlvbiBiYmNvZGUoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmJiY29kZSA9IHtcbiAgICB0YWc6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC9cXFtcXC8/W15cXHM9XFxdXSsoPzpcXHMqPVxccyooPzpcIlteXCJdKlwifCdbXiddKid8W15cXHMnXCJcXF09XSspKT8oPzpcXHMrW15cXHM9XFxdXStcXHMqPVxccyooPzpcIlteXCJdKlwifCdbXiddKid8W15cXHMnXCJcXF09XSspKSpcXHMqXFxdLyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICB0YWc6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXlxcW1xcLz9bXlxccz1cXF1dKy8sXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICBwdW5jdHVhdGlvbjogL15cXFtcXC8/L1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgJ2F0dHItdmFsdWUnOiB7XG4gICAgICAgICAgcGF0dGVybjogLz1cXHMqKD86XCJbXlwiXSpcInwnW14nXSonfFteXFxzJ1wiXFxdPV0rKS8sXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICBwdW5jdHVhdGlvbjogW1xuICAgICAgICAgICAgICAvXj0vLFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgcGF0dGVybjogL14oXFxzKilbXCInXXxbXCInXSQvLFxuICAgICAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgcHVuY3R1YXRpb246IC9cXF0vLFxuICAgICAgICAnYXR0ci1uYW1lJzogL1teXFxzPVxcXV0rL1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBQcmlzbS5sYW5ndWFnZXMuc2hvcnRjb2RlID0gUHJpc20ubGFuZ3VhZ2VzLmJiY29kZVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJiYmNvZGUiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsInRhZyIsInBhdHRlcm4iLCJpbnNpZGUiLCJwdW5jdHVhdGlvbiIsImxvb2tiZWhpbmQiLCJzaG9ydGNvZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/bbcode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/bicep.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/bicep.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = bicep;\nbicep.displayName = \"bicep\";\nbicep.aliases = [];\nfunction bicep(Prism) {\n    // based loosely upon: https://github.com/Azure/bicep/blob/main/src/textmate/bicep.tmlanguage\n    Prism.languages.bicep = {\n        comment: [\n            {\n                // multiline comments eg /* ASDF */\n                pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n                lookbehind: true,\n                greedy: true\n            },\n            {\n                // singleline comments eg // ASDF\n                pattern: /(^|[^\\\\:])\\/\\/.*/,\n                lookbehind: true,\n                greedy: true\n            }\n        ],\n        property: [\n            {\n                pattern: /([\\r\\n][ \\t]*)[a-z_]\\w*(?=[ \\t]*:)/i,\n                lookbehind: true\n            },\n            {\n                pattern: /([\\r\\n][ \\t]*)'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'(?=[ \\t]*:)/,\n                lookbehind: true,\n                greedy: true\n            }\n        ],\n        string: [\n            {\n                pattern: /'''[^'][\\s\\S]*?'''/,\n                greedy: true\n            },\n            {\n                pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'/,\n                lookbehind: true,\n                greedy: true\n            }\n        ],\n        \"interpolated-string\": {\n            pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?:(?!\\{)|\\{[^{}\\r\\n]*\\})|[^'\\\\\\r\\n$])*'/,\n            lookbehind: true,\n            greedy: true,\n            inside: {\n                interpolation: {\n                    pattern: /\\$\\{[^{}\\r\\n]*\\}/,\n                    inside: {\n                        expression: {\n                            pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n                            lookbehind: true\n                        },\n                        punctuation: /^\\$\\{|\\}$/\n                    }\n                },\n                string: /[\\s\\S]+/\n            }\n        },\n        datatype: {\n            pattern: /(\\b(?:output|param)\\b[ \\t]+\\w+[ \\t]+)\\w+\\b/,\n            lookbehind: true,\n            alias: \"class-name\"\n        },\n        boolean: /\\b(?:false|true)\\b/,\n        // https://github.com/Azure/bicep/blob/114a3251b4e6e30082a58729f19a8cc4e374ffa6/src/textmate/bicep.tmlanguage#L184\n        keyword: /\\b(?:existing|for|if|in|module|null|output|param|resource|targetScope|var)\\b/,\n        decorator: /@\\w+\\b/,\n        function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n        number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n        operator: /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/,\n        punctuation: /[{}[\\];(),.:]/\n    };\n    Prism.languages.bicep[\"interpolated-string\"].inside[\"interpolation\"].inside[\"expression\"].inside = Prism.languages.bicep;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYmljZXAuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsTUFBTUMsV0FBVyxHQUFHO0FBQ3BCRCxNQUFNRSxPQUFPLEdBQUcsRUFBRTtBQUNsQixTQUFTRixNQUFNRyxLQUFLO0lBQ2xCLDZGQUE2RjtJQUM3RkEsTUFBTUMsU0FBUyxDQUFDSixLQUFLLEdBQUc7UUFDdEJLLFNBQVM7WUFDUDtnQkFDRSxtQ0FBbUM7Z0JBQ25DQyxTQUFTO2dCQUNUQyxZQUFZO2dCQUNaQyxRQUFRO1lBQ1Y7WUFDQTtnQkFDRSxpQ0FBaUM7Z0JBQ2pDRixTQUFTO2dCQUNUQyxZQUFZO2dCQUNaQyxRQUFRO1lBQ1Y7U0FDRDtRQUNEQyxVQUFVO1lBQ1I7Z0JBQ0VILFNBQVM7Z0JBQ1RDLFlBQVk7WUFDZDtZQUNBO2dCQUNFRCxTQUFTO2dCQUNUQyxZQUFZO2dCQUNaQyxRQUFRO1lBQ1Y7U0FDRDtRQUNERSxRQUFRO1lBQ047Z0JBQ0VKLFNBQVM7Z0JBQ1RFLFFBQVE7WUFDVjtZQUNBO2dCQUNFRixTQUFTO2dCQUNUQyxZQUFZO2dCQUNaQyxRQUFRO1lBQ1Y7U0FDRDtRQUNELHVCQUF1QjtZQUNyQkYsU0FBUztZQUNUQyxZQUFZO1lBQ1pDLFFBQVE7WUFDUkcsUUFBUTtnQkFDTkMsZUFBZTtvQkFDYk4sU0FBUztvQkFDVEssUUFBUTt3QkFDTkUsWUFBWTs0QkFDVlAsU0FBUzs0QkFDVEMsWUFBWTt3QkFDZDt3QkFDQU8sYUFBYTtvQkFDZjtnQkFDRjtnQkFDQUosUUFBUTtZQUNWO1FBQ0Y7UUFDQUssVUFBVTtZQUNSVCxTQUFTO1lBQ1RDLFlBQVk7WUFDWlMsT0FBTztRQUNUO1FBQ0FDLFNBQVM7UUFDVCxrSEFBa0g7UUFDbEhDLFNBQ0U7UUFDRkMsV0FBVztRQUNYQyxVQUFVO1FBQ1ZDLFFBQVE7UUFDUkMsVUFDRTtRQUNGUixhQUFhO0lBQ2Y7SUFDQVgsTUFBTUMsU0FBUyxDQUFDSixLQUFLLENBQUMsc0JBQXNCLENBQUNXLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQ0EsTUFBTSxDQUN6RSxhQUNELENBQUNBLE1BQU0sR0FBR1IsTUFBTUMsU0FBUyxDQUFDSixLQUFLO0FBQ2xDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2JpY2VwLmpzP2JiODEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gYmljZXBcbmJpY2VwLmRpc3BsYXlOYW1lID0gJ2JpY2VwJ1xuYmljZXAuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBiaWNlcChQcmlzbSkge1xuICAvLyBiYXNlZCBsb29zZWx5IHVwb246IGh0dHBzOi8vZ2l0aHViLmNvbS9BenVyZS9iaWNlcC9ibG9iL21haW4vc3JjL3RleHRtYXRlL2JpY2VwLnRtbGFuZ3VhZ2VcbiAgUHJpc20ubGFuZ3VhZ2VzLmJpY2VwID0ge1xuICAgIGNvbW1lbnQ6IFtcbiAgICAgIHtcbiAgICAgICAgLy8gbXVsdGlsaW5lIGNvbW1lbnRzIGVnIC8qIEFTREYgKi9cbiAgICAgICAgcGF0dGVybjogLyhefFteXFxcXF0pXFwvXFwqW1xcc1xcU10qPyg/OlxcKlxcL3wkKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgLy8gc2luZ2xlbGluZSBjb21tZW50cyBlZyAvLyBBU0RGXG4gICAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFw6XSlcXC9cXC8uKi8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfVxuICAgIF0sXG4gICAgcHJvcGVydHk6IFtcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyhbXFxyXFxuXVsgXFx0XSopW2Etel9dXFx3Kig/PVsgXFx0XSo6KS9pLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvKFtcXHJcXG5dWyBcXHRdKiknKD86XFxcXC58XFwkKD8hXFx7KXxbXidcXFxcXFxyXFxuJF0pKicoPz1bIFxcdF0qOikvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH1cbiAgICBdLFxuICAgIHN0cmluZzogW1xuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvJycnW14nXVtcXHNcXFNdKj8nJycvLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFwnXSknKD86XFxcXC58XFwkKD8hXFx7KXxbXidcXFxcXFxyXFxuJF0pKicvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH1cbiAgICBdLFxuICAgICdpbnRlcnBvbGF0ZWQtc3RyaW5nJzoge1xuICAgICAgcGF0dGVybjogLyhefFteXFxcXCddKScoPzpcXFxcLnxcXCQoPzooPyFcXHspfFxce1tee31cXHJcXG5dKlxcfSl8W14nXFxcXFxcclxcbiRdKSonLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgaW50ZXJwb2xhdGlvbjoge1xuICAgICAgICAgIHBhdHRlcm46IC9cXCRcXHtbXnt9XFxyXFxuXSpcXH0vLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgZXhwcmVzc2lvbjoge1xuICAgICAgICAgICAgICBwYXR0ZXJuOiAvKF5cXCRcXHspW1xcc1xcU10rKD89XFx9JCkvLFxuICAgICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcHVuY3R1YXRpb246IC9eXFwkXFx7fFxcfSQvXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBzdHJpbmc6IC9bXFxzXFxTXSsvXG4gICAgICB9XG4gICAgfSxcbiAgICBkYXRhdHlwZToge1xuICAgICAgcGF0dGVybjogLyhcXGIoPzpvdXRwdXR8cGFyYW0pXFxiWyBcXHRdK1xcdytbIFxcdF0rKVxcdytcXGIvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAnY2xhc3MtbmFtZSdcbiAgICB9LFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL0F6dXJlL2JpY2VwL2Jsb2IvMTE0YTMyNTFiNGU2ZTMwMDgyYTU4NzI5ZjE5YThjYzRlMzc0ZmZhNi9zcmMvdGV4dG1hdGUvYmljZXAudG1sYW5ndWFnZSNMMTg0XG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzpleGlzdGluZ3xmb3J8aWZ8aW58bW9kdWxlfG51bGx8b3V0cHV0fHBhcmFtfHJlc291cmNlfHRhcmdldFNjb3BlfHZhcilcXGIvLFxuICAgIGRlY29yYXRvcjogL0BcXHcrXFxiLyxcbiAgICBmdW5jdGlvbjogL1xcYlthLXpfXVxcdyooPz1bIFxcdF0qXFwoKS9pLFxuICAgIG51bWJlcjogLyg/OlxcYlxcZCsoPzpcXC5cXGQqKT98XFxCXFwuXFxkKykoPzpFWystXT9cXGQrKT8vaSxcbiAgICBvcGVyYXRvcjpcbiAgICAgIC8tLXxcXCtcXCt8XFwqXFwqPT98PT58JiY9P3xcXHxcXHw9P3xbIT1dPT18PDw9P3w+Pj4/PT98Wy0rKi8lJnxeIT08Pl09P3xcXC57M318XFw/XFw/PT98XFw/XFwuP3xbfjpdLyxcbiAgICBwdW5jdHVhdGlvbjogL1t7fVtcXF07KCksLjpdL1xuICB9XG4gIFByaXNtLmxhbmd1YWdlcy5iaWNlcFsnaW50ZXJwb2xhdGVkLXN0cmluZyddLmluc2lkZVsnaW50ZXJwb2xhdGlvbiddLmluc2lkZVtcbiAgICAnZXhwcmVzc2lvbidcbiAgXS5pbnNpZGUgPSBQcmlzbS5sYW5ndWFnZXMuYmljZXBcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiYmljZXAiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImdyZWVkeSIsInByb3BlcnR5Iiwic3RyaW5nIiwiaW5zaWRlIiwiaW50ZXJwb2xhdGlvbiIsImV4cHJlc3Npb24iLCJwdW5jdHVhdGlvbiIsImRhdGF0eXBlIiwiYWxpYXMiLCJib29sZWFuIiwia2V5d29yZCIsImRlY29yYXRvciIsImZ1bmN0aW9uIiwibnVtYmVyIiwib3BlcmF0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/bicep.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/birb.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/birb.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = birb;\nbirb.displayName = \"birb\";\nbirb.aliases = [];\nfunction birb(Prism) {\n    Prism.languages.birb = Prism.languages.extend(\"clike\", {\n        string: {\n            pattern: /r?(\"|')(?:\\\\.|(?!\\1)[^\\\\])*\\1/,\n            greedy: true\n        },\n        \"class-name\": [\n            /\\b[A-Z](?:[\\d_]*[a-zA-Z]\\w*)?\\b/,\n            /\\b(?:[A-Z]\\w*|(?!(?:var|void)\\b)[a-z]\\w*)(?=\\s+\\w+\\s*[;,=()])/\n        ],\n        keyword: /\\b(?:assert|break|case|class|const|default|else|enum|final|follows|for|grab|if|nest|new|next|noSeeb|return|static|switch|throw|var|void|while)\\b/,\n        operator: /\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?|:/,\n        variable: /\\b[a-z_]\\w*\\b/\n    });\n    Prism.languages.insertBefore(\"birb\", \"function\", {\n        metadata: {\n            pattern: /<\\w+>/,\n            greedy: true,\n            alias: \"symbol\"\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYmlyYi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDakJBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHRyxNQUFNQyxTQUFTLENBQUNDLE1BQU0sQ0FBQyxTQUFTO1FBQ3JEQyxRQUFRO1lBQ05DLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0EsY0FBYztZQUNaO1lBQ0E7U0FDRDtRQUNEQyxTQUNFO1FBQ0ZDLFVBQVU7UUFDVkMsVUFBVTtJQUNaO0lBQ0FSLE1BQU1DLFNBQVMsQ0FBQ1EsWUFBWSxDQUFDLFFBQVEsWUFBWTtRQUMvQ0MsVUFBVTtZQUNSTixTQUFTO1lBQ1RDLFFBQVE7WUFDUk0sT0FBTztRQUNUO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9iaXJiLmpzPzQ4MjciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gYmlyYlxuYmlyYi5kaXNwbGF5TmFtZSA9ICdiaXJiJ1xuYmlyYi5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGJpcmIoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmJpcmIgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdjbGlrZScsIHtcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9yPyhcInwnKSg/OlxcXFwufCg/IVxcMSlbXlxcXFxdKSpcXDEvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICAnY2xhc3MtbmFtZSc6IFtcbiAgICAgIC9cXGJbQS1aXSg/OltcXGRfXSpbYS16QS1aXVxcdyopP1xcYi8sIC8vIG1hdGNoZXMgdmFyaWFibGUgYW5kIGZ1bmN0aW9uIHJldHVybiB0eXBlcyAocGFyYW1ldGVycyBhcyB3ZWxsKS5cbiAgICAgIC9cXGIoPzpbQS1aXVxcdyp8KD8hKD86dmFyfHZvaWQpXFxiKVthLXpdXFx3KikoPz1cXHMrXFx3K1xccypbOyw9KCldKS9cbiAgICBdLFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YXNzZXJ0fGJyZWFrfGNhc2V8Y2xhc3N8Y29uc3R8ZGVmYXVsdHxlbHNlfGVudW18ZmluYWx8Zm9sbG93c3xmb3J8Z3JhYnxpZnxuZXN0fG5ld3xuZXh0fG5vU2VlYnxyZXR1cm58c3RhdGljfHN3aXRjaHx0aHJvd3x2YXJ8dm9pZHx3aGlsZSlcXGIvLFxuICAgIG9wZXJhdG9yOiAvXFwrXFwrfC0tfCYmfFxcfFxcfHw8PD0/fD4+PT98fig/OlxcLz0/KT98WytcXC0qXFwvJSZefD0hPD5dPT98XFw/fDovLFxuICAgIHZhcmlhYmxlOiAvXFxiW2Etel9dXFx3KlxcYi9cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnYmlyYicsICdmdW5jdGlvbicsIHtcbiAgICBtZXRhZGF0YToge1xuICAgICAgcGF0dGVybjogLzxcXHcrPi8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBhbGlhczogJ3N5bWJvbCdcbiAgICB9XG4gIH0pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImJpcmIiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImV4dGVuZCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJrZXl3b3JkIiwib3BlcmF0b3IiLCJ2YXJpYWJsZSIsImluc2VydEJlZm9yZSIsIm1ldGFkYXRhIiwiYWxpYXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/birb.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/bison.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/bison.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorC = __webpack_require__(/*! ./c.js */ \"(ssr)/./node_modules/refractor/lang/c.js\");\nmodule.exports = bison;\nbison.displayName = \"bison\";\nbison.aliases = [];\nfunction bison(Prism) {\n    Prism.register(refractorC);\n    Prism.languages.bison = Prism.languages.extend(\"c\", {});\n    Prism.languages.insertBefore(\"bison\", \"comment\", {\n        bison: {\n            // This should match all the beginning of the file\n            // including the prologue(s), the bison declarations and\n            // the grammar rules.\n            pattern: /^(?:[^%]|%(?!%))*%%[\\s\\S]*?%%/,\n            inside: {\n                c: {\n                    // Allow for one level of nested braces\n                    pattern: /%\\{[\\s\\S]*?%\\}|\\{(?:\\{[^}]*\\}|[^{}])*\\}/,\n                    inside: {\n                        delimiter: {\n                            pattern: /^%?\\{|%?\\}$/,\n                            alias: \"punctuation\"\n                        },\n                        \"bison-variable\": {\n                            pattern: /[$@](?:<[^\\s>]+>)?[\\w$]+/,\n                            alias: \"variable\",\n                            inside: {\n                                punctuation: /<|>/\n                            }\n                        },\n                        rest: Prism.languages.c\n                    }\n                },\n                comment: Prism.languages.c.comment,\n                string: Prism.languages.c.string,\n                property: /\\S+(?=:)/,\n                keyword: /%\\w+/,\n                number: {\n                    pattern: /(^|[^@])\\b(?:0x[\\da-f]+|\\d+)/i,\n                    lookbehind: true\n                },\n                punctuation: /%[%?]|[|:;\\[\\]<>]/\n            }\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYmlzb24uanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxJQUFJQSxhQUFhQyxtQkFBT0EsQ0FBQztBQUN6QkMsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsTUFBTUMsV0FBVyxHQUFHO0FBQ3BCRCxNQUFNRSxPQUFPLEdBQUcsRUFBRTtBQUNsQixTQUFTRixNQUFNRyxLQUFLO0lBQ2xCQSxNQUFNQyxRQUFRLENBQUNSO0lBQ2ZPLE1BQU1FLFNBQVMsQ0FBQ0wsS0FBSyxHQUFHRyxNQUFNRSxTQUFTLENBQUNDLE1BQU0sQ0FBQyxLQUFLLENBQUM7SUFDckRILE1BQU1FLFNBQVMsQ0FBQ0UsWUFBWSxDQUFDLFNBQVMsV0FBVztRQUMvQ1AsT0FBTztZQUNMLGtEQUFrRDtZQUNsRCx3REFBd0Q7WUFDeEQscUJBQXFCO1lBQ3JCUSxTQUFTO1lBQ1RDLFFBQVE7Z0JBQ05DLEdBQUc7b0JBQ0QsdUNBQXVDO29CQUN2Q0YsU0FBUztvQkFDVEMsUUFBUTt3QkFDTkUsV0FBVzs0QkFDVEgsU0FBUzs0QkFDVEksT0FBTzt3QkFDVDt3QkFDQSxrQkFBa0I7NEJBQ2hCSixTQUFTOzRCQUNUSSxPQUFPOzRCQUNQSCxRQUFRO2dDQUNOSSxhQUFhOzRCQUNmO3dCQUNGO3dCQUNBQyxNQUFNWCxNQUFNRSxTQUFTLENBQUNLLENBQUM7b0JBQ3pCO2dCQUNGO2dCQUNBSyxTQUFTWixNQUFNRSxTQUFTLENBQUNLLENBQUMsQ0FBQ0ssT0FBTztnQkFDbENDLFFBQVFiLE1BQU1FLFNBQVMsQ0FBQ0ssQ0FBQyxDQUFDTSxNQUFNO2dCQUNoQ0MsVUFBVTtnQkFDVkMsU0FBUztnQkFDVEMsUUFBUTtvQkFDTlgsU0FBUztvQkFDVFksWUFBWTtnQkFDZDtnQkFDQVAsYUFBYTtZQUNmO1FBQ0Y7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2Jpc29uLmpzPzQ5ZWYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG52YXIgcmVmcmFjdG9yQyA9IHJlcXVpcmUoJy4vYy5qcycpXG5tb2R1bGUuZXhwb3J0cyA9IGJpc29uXG5iaXNvbi5kaXNwbGF5TmFtZSA9ICdiaXNvbidcbmJpc29uLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gYmlzb24oUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yQylcbiAgUHJpc20ubGFuZ3VhZ2VzLmJpc29uID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnYycsIHt9KVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdiaXNvbicsICdjb21tZW50Jywge1xuICAgIGJpc29uOiB7XG4gICAgICAvLyBUaGlzIHNob3VsZCBtYXRjaCBhbGwgdGhlIGJlZ2lubmluZyBvZiB0aGUgZmlsZVxuICAgICAgLy8gaW5jbHVkaW5nIHRoZSBwcm9sb2d1ZShzKSwgdGhlIGJpc29uIGRlY2xhcmF0aW9ucyBhbmRcbiAgICAgIC8vIHRoZSBncmFtbWFyIHJ1bGVzLlxuICAgICAgcGF0dGVybjogL14oPzpbXiVdfCUoPyElKSkqJSVbXFxzXFxTXSo/JSUvLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIGM6IHtcbiAgICAgICAgICAvLyBBbGxvdyBmb3Igb25lIGxldmVsIG9mIG5lc3RlZCBicmFjZXNcbiAgICAgICAgICBwYXR0ZXJuOiAvJVxce1tcXHNcXFNdKj8lXFx9fFxceyg/Olxce1tefV0qXFx9fFtee31dKSpcXH0vLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgZGVsaW1pdGVyOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC9eJT9cXHt8JT9cXH0kLyxcbiAgICAgICAgICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbidcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnYmlzb24tdmFyaWFibGUnOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC9bJEBdKD86PFteXFxzPl0rPik/W1xcdyRdKy8sXG4gICAgICAgICAgICAgIGFsaWFzOiAndmFyaWFibGUnLFxuICAgICAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICAgICBwdW5jdHVhdGlvbjogLzx8Pi9cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHJlc3Q6IFByaXNtLmxhbmd1YWdlcy5jXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBjb21tZW50OiBQcmlzbS5sYW5ndWFnZXMuYy5jb21tZW50LFxuICAgICAgICBzdHJpbmc6IFByaXNtLmxhbmd1YWdlcy5jLnN0cmluZyxcbiAgICAgICAgcHJvcGVydHk6IC9cXFMrKD89OikvLFxuICAgICAgICBrZXl3b3JkOiAvJVxcdysvLFxuICAgICAgICBudW1iZXI6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKF58W15AXSlcXGIoPzoweFtcXGRhLWZdK3xcXGQrKS9pLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgcHVuY3R1YXRpb246IC8lWyU/XXxbfDo7XFxbXFxdPD5dL1xuICAgICAgfVxuICAgIH1cbiAgfSlcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JDIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJiaXNvbiIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJpbnNlcnRCZWZvcmUiLCJwYXR0ZXJuIiwiaW5zaWRlIiwiYyIsImRlbGltaXRlciIsImFsaWFzIiwicHVuY3R1YXRpb24iLCJyZXN0IiwiY29tbWVudCIsInN0cmluZyIsInByb3BlcnR5Iiwia2V5d29yZCIsIm51bWJlciIsImxvb2tiZWhpbmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/bison.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/bnf.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/bnf.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = bnf;\nbnf.displayName = \"bnf\";\nbnf.aliases = [\n    \"rbnf\"\n];\nfunction bnf(Prism) {\n    Prism.languages.bnf = {\n        string: {\n            pattern: /\"[^\\r\\n\"]*\"|'[^\\r\\n']*'/\n        },\n        definition: {\n            pattern: /<[^<>\\r\\n\\t]+>(?=\\s*::=)/,\n            alias: [\n                \"rule\",\n                \"keyword\"\n            ],\n            inside: {\n                punctuation: /^<|>$/\n            }\n        },\n        rule: {\n            pattern: /<[^<>\\r\\n\\t]+>/,\n            inside: {\n                punctuation: /^<|>$/\n            }\n        },\n        operator: /::=|[|()[\\]{}*+?]|\\.{3}/\n    };\n    Prism.languages.rbnf = Prism.languages.bnf;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYm5mLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLElBQUlDLFdBQVcsR0FBRztBQUNsQkQsSUFBSUUsT0FBTyxHQUFHO0lBQUM7Q0FBTztBQUN0QixTQUFTRixJQUFJRyxLQUFLO0lBQ2hCQSxNQUFNQyxTQUFTLENBQUNKLEdBQUcsR0FBRztRQUNwQkssUUFBUTtZQUNOQyxTQUFTO1FBQ1g7UUFDQUMsWUFBWTtZQUNWRCxTQUFTO1lBQ1RFLE9BQU87Z0JBQUM7Z0JBQVE7YUFBVTtZQUMxQkMsUUFBUTtnQkFDTkMsYUFBYTtZQUNmO1FBQ0Y7UUFDQUMsTUFBTTtZQUNKTCxTQUFTO1lBQ1RHLFFBQVE7Z0JBQ05DLGFBQWE7WUFDZjtRQUNGO1FBQ0FFLFVBQVU7SUFDWjtJQUNBVCxNQUFNQyxTQUFTLENBQUNTLElBQUksR0FBR1YsTUFBTUMsU0FBUyxDQUFDSixHQUFHO0FBQzVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2JuZi5qcz84NDJmIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGJuZlxuYm5mLmRpc3BsYXlOYW1lID0gJ2JuZidcbmJuZi5hbGlhc2VzID0gWydyYm5mJ11cbmZ1bmN0aW9uIGJuZihQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuYm5mID0ge1xuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1wiW15cXHJcXG5cIl0qXCJ8J1teXFxyXFxuJ10qJy9cbiAgICB9LFxuICAgIGRlZmluaXRpb246IHtcbiAgICAgIHBhdHRlcm46IC88W148PlxcclxcblxcdF0rPig/PVxccyo6Oj0pLyxcbiAgICAgIGFsaWFzOiBbJ3J1bGUnLCAna2V5d29yZCddLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHB1bmN0dWF0aW9uOiAvXjx8PiQvXG4gICAgICB9XG4gICAgfSxcbiAgICBydWxlOiB7XG4gICAgICBwYXR0ZXJuOiAvPFtePD5cXHJcXG5cXHRdKz4vLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHB1bmN0dWF0aW9uOiAvXjx8PiQvXG4gICAgICB9XG4gICAgfSxcbiAgICBvcGVyYXRvcjogLzo6PXxbfCgpW1xcXXt9Kis/XXxcXC57M30vXG4gIH1cbiAgUHJpc20ubGFuZ3VhZ2VzLnJibmYgPSBQcmlzbS5sYW5ndWFnZXMuYm5mXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImJuZiIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwic3RyaW5nIiwicGF0dGVybiIsImRlZmluaXRpb24iLCJhbGlhcyIsImluc2lkZSIsInB1bmN0dWF0aW9uIiwicnVsZSIsIm9wZXJhdG9yIiwicmJuZiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/bnf.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/brainfuck.js":
/*!**************************************************!*\
  !*** ./node_modules/refractor/lang/brainfuck.js ***!
  \**************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = brainfuck;\nbrainfuck.displayName = \"brainfuck\";\nbrainfuck.aliases = [];\nfunction brainfuck(Prism) {\n    Prism.languages.brainfuck = {\n        pointer: {\n            pattern: /<|>/,\n            alias: \"keyword\"\n        },\n        increment: {\n            pattern: /\\+/,\n            alias: \"inserted\"\n        },\n        decrement: {\n            pattern: /-/,\n            alias: \"deleted\"\n        },\n        branching: {\n            pattern: /\\[|\\]/,\n            alias: \"important\"\n        },\n        operator: /[.,]/,\n        comment: /\\S+/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYnJhaW5mdWNrLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLFVBQVVDLFdBQVcsR0FBRztBQUN4QkQsVUFBVUUsT0FBTyxHQUFHLEVBQUU7QUFDdEIsU0FBU0YsVUFBVUcsS0FBSztJQUN0QkEsTUFBTUMsU0FBUyxDQUFDSixTQUFTLEdBQUc7UUFDMUJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxPQUFPO1FBQ1Q7UUFDQUMsV0FBVztZQUNURixTQUFTO1lBQ1RDLE9BQU87UUFDVDtRQUNBRSxXQUFXO1lBQ1RILFNBQVM7WUFDVEMsT0FBTztRQUNUO1FBQ0FHLFdBQVc7WUFDVEosU0FBUztZQUNUQyxPQUFPO1FBQ1Q7UUFDQUksVUFBVTtRQUNWQyxTQUFTO0lBQ1g7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9icmFpbmZ1Y2suanM/ZjliYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBicmFpbmZ1Y2tcbmJyYWluZnVjay5kaXNwbGF5TmFtZSA9ICdicmFpbmZ1Y2snXG5icmFpbmZ1Y2suYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBicmFpbmZ1Y2soUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmJyYWluZnVjayA9IHtcbiAgICBwb2ludGVyOiB7XG4gICAgICBwYXR0ZXJuOiAvPHw+LyxcbiAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICB9LFxuICAgIGluY3JlbWVudDoge1xuICAgICAgcGF0dGVybjogL1xcKy8sXG4gICAgICBhbGlhczogJ2luc2VydGVkJ1xuICAgIH0sXG4gICAgZGVjcmVtZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvLS8sXG4gICAgICBhbGlhczogJ2RlbGV0ZWQnXG4gICAgfSxcbiAgICBicmFuY2hpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cXFt8XFxdLyxcbiAgICAgIGFsaWFzOiAnaW1wb3J0YW50J1xuICAgIH0sXG4gICAgb3BlcmF0b3I6IC9bLixdLyxcbiAgICBjb21tZW50OiAvXFxTKy9cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJicmFpbmZ1Y2siLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsInBvaW50ZXIiLCJwYXR0ZXJuIiwiYWxpYXMiLCJpbmNyZW1lbnQiLCJkZWNyZW1lbnQiLCJicmFuY2hpbmciLCJvcGVyYXRvciIsImNvbW1lbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/brainfuck.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/brightscript.js":
/*!*****************************************************!*\
  !*** ./node_modules/refractor/lang/brightscript.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = brightscript;\nbrightscript.displayName = \"brightscript\";\nbrightscript.aliases = [];\nfunction brightscript(Prism) {\n    Prism.languages.brightscript = {\n        comment: /(?:\\brem|').*/i,\n        \"directive-statement\": {\n            pattern: /(^[\\t ]*)#(?:const|else(?:[\\t ]+if)?|end[\\t ]+if|error|if).*/im,\n            lookbehind: true,\n            alias: \"property\",\n            inside: {\n                \"error-message\": {\n                    pattern: /(^#error).+/,\n                    lookbehind: true\n                },\n                directive: {\n                    pattern: /^#(?:const|else(?:[\\t ]+if)?|end[\\t ]+if|error|if)/,\n                    alias: \"keyword\"\n                },\n                expression: {\n                    pattern: /[\\s\\S]+/,\n                    inside: null // see below\n                }\n            }\n        },\n        property: {\n            pattern: /([\\r\\n{,][\\t ]*)(?:(?!\\d)\\w+|\"(?:[^\"\\r\\n]|\"\")*\"(?!\"))(?=[ \\t]*:)/,\n            lookbehind: true,\n            greedy: true\n        },\n        string: {\n            pattern: /\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n            greedy: true\n        },\n        \"class-name\": {\n            pattern: /(\\bAs[\\t ]+)\\w+/i,\n            lookbehind: true\n        },\n        keyword: /\\b(?:As|Dim|Each|Else|Elseif|End|Exit|For|Function|Goto|If|In|Print|Return|Step|Stop|Sub|Then|To|While)\\b/i,\n        boolean: /\\b(?:false|true)\\b/i,\n        function: /\\b(?!\\d)\\w+(?=[\\t ]*\\()/,\n        number: /(?:\\b\\d+(?:\\.\\d+)?(?:[ed][+-]\\d+)?|&h[a-f\\d]+)\\b[%&!#]?/i,\n        operator: /--|\\+\\+|>>=?|<<=?|<>|[-+*/\\\\<>]=?|[:^=?]|\\b(?:and|mod|not|or)\\b/i,\n        punctuation: /[.,;()[\\]{}]/,\n        constant: /\\b(?:LINE_NUM)\\b/i\n    };\n    Prism.languages.brightscript[\"directive-statement\"].inside.expression.inside = Prism.languages.brightscript;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYnJpZ2h0c2NyaXB0LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLGFBQWFDLFdBQVcsR0FBRztBQUMzQkQsYUFBYUUsT0FBTyxHQUFHLEVBQUU7QUFDekIsU0FBU0YsYUFBYUcsS0FBSztJQUN6QkEsTUFBTUMsU0FBUyxDQUFDSixZQUFZLEdBQUc7UUFDN0JLLFNBQVM7UUFDVCx1QkFBdUI7WUFDckJDLFNBQVM7WUFDVEMsWUFBWTtZQUNaQyxPQUFPO1lBQ1BDLFFBQVE7Z0JBQ04saUJBQWlCO29CQUNmSCxTQUFTO29CQUNUQyxZQUFZO2dCQUNkO2dCQUNBRyxXQUFXO29CQUNUSixTQUFTO29CQUNURSxPQUFPO2dCQUNUO2dCQUNBRyxZQUFZO29CQUNWTCxTQUFTO29CQUNURyxRQUFRLEtBQUssWUFBWTtnQkFDM0I7WUFDRjtRQUNGO1FBQ0FHLFVBQVU7WUFDUk4sU0FDRTtZQUNGQyxZQUFZO1lBQ1pNLFFBQVE7UUFDVjtRQUNBQyxRQUFRO1lBQ05SLFNBQVM7WUFDVE8sUUFBUTtRQUNWO1FBQ0EsY0FBYztZQUNaUCxTQUFTO1lBQ1RDLFlBQVk7UUFDZDtRQUNBUSxTQUNFO1FBQ0ZDLFNBQVM7UUFDVEMsVUFBVTtRQUNWQyxRQUFRO1FBQ1JDLFVBQ0U7UUFDRkMsYUFBYTtRQUNiQyxVQUFVO0lBQ1o7SUFDQWxCLE1BQU1DLFNBQVMsQ0FBQ0osWUFBWSxDQUFDLHNCQUFzQixDQUFDUyxNQUFNLENBQUNFLFVBQVUsQ0FBQ0YsTUFBTSxHQUMxRU4sTUFBTUMsU0FBUyxDQUFDSixZQUFZO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2JyaWdodHNjcmlwdC5qcz83YzQyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGJyaWdodHNjcmlwdFxuYnJpZ2h0c2NyaXB0LmRpc3BsYXlOYW1lID0gJ2JyaWdodHNjcmlwdCdcbmJyaWdodHNjcmlwdC5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGJyaWdodHNjcmlwdChQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuYnJpZ2h0c2NyaXB0ID0ge1xuICAgIGNvbW1lbnQ6IC8oPzpcXGJyZW18JykuKi9pLFxuICAgICdkaXJlY3RpdmUtc3RhdGVtZW50Jzoge1xuICAgICAgcGF0dGVybjogLyheW1xcdCBdKikjKD86Y29uc3R8ZWxzZSg/OltcXHQgXStpZik/fGVuZFtcXHQgXStpZnxlcnJvcnxpZikuKi9pbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ3Byb3BlcnR5JyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICAnZXJyb3ItbWVzc2FnZSc6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKF4jZXJyb3IpLisvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgZGlyZWN0aXZlOiB7XG4gICAgICAgICAgcGF0dGVybjogL14jKD86Y29uc3R8ZWxzZSg/OltcXHQgXStpZik/fGVuZFtcXHQgXStpZnxlcnJvcnxpZikvLFxuICAgICAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICAgICAgfSxcbiAgICAgICAgZXhwcmVzc2lvbjoge1xuICAgICAgICAgIHBhdHRlcm46IC9bXFxzXFxTXSsvLFxuICAgICAgICAgIGluc2lkZTogbnVsbCAvLyBzZWUgYmVsb3dcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgcHJvcGVydHk6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oW1xcclxcbnssXVtcXHQgXSopKD86KD8hXFxkKVxcdyt8XCIoPzpbXlwiXFxyXFxuXXxcIlwiKSpcIig/IVwiKSkoPz1bIFxcdF0qOikvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvXCIoPzpbXlwiXFxyXFxuXXxcIlwiKSpcIig/IVwiKS8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgICdjbGFzcy1uYW1lJzoge1xuICAgICAgcGF0dGVybjogLyhcXGJBc1tcXHQgXSspXFx3Ky9pLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzpBc3xEaW18RWFjaHxFbHNlfEVsc2VpZnxFbmR8RXhpdHxGb3J8RnVuY3Rpb258R290b3xJZnxJbnxQcmludHxSZXR1cm58U3RlcHxTdG9wfFN1YnxUaGVufFRvfFdoaWxlKVxcYi9pLFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi9pLFxuICAgIGZ1bmN0aW9uOiAvXFxiKD8hXFxkKVxcdysoPz1bXFx0IF0qXFwoKS8sXG4gICAgbnVtYmVyOiAvKD86XFxiXFxkKyg/OlxcLlxcZCspPyg/OltlZF1bKy1dXFxkKyk/fCZoW2EtZlxcZF0rKVxcYlslJiEjXT8vaSxcbiAgICBvcGVyYXRvcjpcbiAgICAgIC8tLXxcXCtcXCt8Pj49P3w8PD0/fDw+fFstKyovXFxcXDw+XT0/fFs6Xj0/XXxcXGIoPzphbmR8bW9kfG5vdHxvcilcXGIvaSxcbiAgICBwdW5jdHVhdGlvbjogL1suLDsoKVtcXF17fV0vLFxuICAgIGNvbnN0YW50OiAvXFxiKD86TElORV9OVU0pXFxiL2lcbiAgfVxuICBQcmlzbS5sYW5ndWFnZXMuYnJpZ2h0c2NyaXB0WydkaXJlY3RpdmUtc3RhdGVtZW50J10uaW5zaWRlLmV4cHJlc3Npb24uaW5zaWRlID1cbiAgICBQcmlzbS5sYW5ndWFnZXMuYnJpZ2h0c2NyaXB0XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImJyaWdodHNjcmlwdCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiYWxpYXMiLCJpbnNpZGUiLCJkaXJlY3RpdmUiLCJleHByZXNzaW9uIiwicHJvcGVydHkiLCJncmVlZHkiLCJzdHJpbmciLCJrZXl3b3JkIiwiYm9vbGVhbiIsImZ1bmN0aW9uIiwibnVtYmVyIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiIsImNvbnN0YW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/brightscript.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/bro.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/bro.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = bro;\nbro.displayName = \"bro\";\nbro.aliases = [];\nfunction bro(Prism) {\n    Prism.languages.bro = {\n        comment: {\n            pattern: /(^|[^\\\\$])#.*/,\n            lookbehind: true,\n            inside: {\n                italic: /\\b(?:FIXME|TODO|XXX)\\b/\n            }\n        },\n        string: {\n            pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true\n        },\n        boolean: /\\b[TF]\\b/,\n        function: {\n            pattern: /(\\b(?:event|function|hook)[ \\t]+)\\w+(?:::\\w+)?/,\n            lookbehind: true\n        },\n        builtin: /(?:@(?:load(?:-(?:plugin|sigs))?|unload|prefixes|ifn?def|else|(?:end)?if|DIR|FILENAME))|(?:&?(?:add_func|create_expire|default|delete_func|encrypt|error_handler|expire_func|group|log|mergeable|optional|persistent|priority|raw_output|read_expire|redef|rotate_interval|rotate_size|synchronized|type_column|write_expire))/,\n        constant: {\n            pattern: /(\\bconst[ \\t]+)\\w+/i,\n            lookbehind: true\n        },\n        keyword: /\\b(?:add|addr|alarm|any|bool|break|const|continue|count|delete|double|else|enum|event|export|file|for|function|global|hook|if|in|int|interval|local|module|next|of|opaque|pattern|port|print|record|return|schedule|set|string|subnet|table|time|timeout|using|vector|when)\\b/,\n        operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n        number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n        punctuation: /[{}[\\];(),.:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYnJvLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLElBQUlDLFdBQVcsR0FBRztBQUNsQkQsSUFBSUUsT0FBTyxHQUFHLEVBQUU7QUFDaEIsU0FBU0YsSUFBSUcsS0FBSztJQUNoQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxZQUFZO1lBQ1pDLFFBQVE7Z0JBQ05DLFFBQVE7WUFDVjtRQUNGO1FBQ0FDLFFBQVE7WUFDTkosU0FBUztZQUNUSyxRQUFRO1FBQ1Y7UUFDQUMsU0FBUztRQUNUQyxVQUFVO1lBQ1JQLFNBQVM7WUFDVEMsWUFBWTtRQUNkO1FBQ0FPLFNBQ0U7UUFDRkMsVUFBVTtZQUNSVCxTQUFTO1lBQ1RDLFlBQVk7UUFDZDtRQUNBUyxTQUNFO1FBQ0ZDLFVBQVU7UUFDVkMsUUFBUTtRQUNSQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9icm8uanM/ZDg4MyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBicm9cbmJyby5kaXNwbGF5TmFtZSA9ICdicm8nXG5icm8uYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBicm8oUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmJybyA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvKF58W15cXFxcJF0pIy4qLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgaXRhbGljOiAvXFxiKD86RklYTUV8VE9ET3xYWFgpXFxiL1xuICAgICAgfVxuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvKFtcIiddKSg/OlxcXFwoPzpcXHJcXG58W1xcc1xcU10pfCg/IVxcMSlbXlxcXFxcXHJcXG5dKSpcXDEvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBib29sZWFuOiAvXFxiW1RGXVxcYi8sXG4gICAgZnVuY3Rpb246IHtcbiAgICAgIHBhdHRlcm46IC8oXFxiKD86ZXZlbnR8ZnVuY3Rpb258aG9vaylbIFxcdF0rKVxcdysoPzo6OlxcdyspPy8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBidWlsdGluOlxuICAgICAgLyg/OkAoPzpsb2FkKD86LSg/OnBsdWdpbnxzaWdzKSk/fHVubG9hZHxwcmVmaXhlc3xpZm4/ZGVmfGVsc2V8KD86ZW5kKT9pZnxESVJ8RklMRU5BTUUpKXwoPzomPyg/OmFkZF9mdW5jfGNyZWF0ZV9leHBpcmV8ZGVmYXVsdHxkZWxldGVfZnVuY3xlbmNyeXB0fGVycm9yX2hhbmRsZXJ8ZXhwaXJlX2Z1bmN8Z3JvdXB8bG9nfG1lcmdlYWJsZXxvcHRpb25hbHxwZXJzaXN0ZW50fHByaW9yaXR5fHJhd19vdXRwdXR8cmVhZF9leHBpcmV8cmVkZWZ8cm90YXRlX2ludGVydmFsfHJvdGF0ZV9zaXplfHN5bmNocm9uaXplZHx0eXBlX2NvbHVtbnx3cml0ZV9leHBpcmUpKS8sXG4gICAgY29uc3RhbnQ6IHtcbiAgICAgIHBhdHRlcm46IC8oXFxiY29uc3RbIFxcdF0rKVxcdysvaSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YWRkfGFkZHJ8YWxhcm18YW55fGJvb2x8YnJlYWt8Y29uc3R8Y29udGludWV8Y291bnR8ZGVsZXRlfGRvdWJsZXxlbHNlfGVudW18ZXZlbnR8ZXhwb3J0fGZpbGV8Zm9yfGZ1bmN0aW9ufGdsb2JhbHxob29rfGlmfGlufGludHxpbnRlcnZhbHxsb2NhbHxtb2R1bGV8bmV4dHxvZnxvcGFxdWV8cGF0dGVybnxwb3J0fHByaW50fHJlY29yZHxyZXR1cm58c2NoZWR1bGV8c2V0fHN0cmluZ3xzdWJuZXR8dGFibGV8dGltZXx0aW1lb3V0fHVzaW5nfHZlY3Rvcnx3aGVuKVxcYi8sXG4gICAgb3BlcmF0b3I6IC8tLT98XFwrXFwrP3whPT89P3w8PT98Pj0/fD09Pz0/fCYmfFxcfFxcfD98XFw/fFxcKnxcXC98fnxcXF58JS8sXG4gICAgbnVtYmVyOiAvXFxiMHhbXFxkYS1mXStcXGJ8KD86XFxiXFxkKyg/OlxcLlxcZCopP3xcXEJcXC5cXGQrKSg/OmVbKy1dP1xcZCspPy9pLFxuICAgIHB1bmN0dWF0aW9uOiAvW3t9W1xcXTsoKSwuOl0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiYnJvIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJpbnNpZGUiLCJpdGFsaWMiLCJzdHJpbmciLCJncmVlZHkiLCJib29sZWFuIiwiZnVuY3Rpb24iLCJidWlsdGluIiwiY29uc3RhbnQiLCJrZXl3b3JkIiwib3BlcmF0b3IiLCJudW1iZXIiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/bro.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/bsl.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/bsl.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = bsl;\nbsl.displayName = \"bsl\";\nbsl.aliases = [];\nfunction bsl(Prism) {\n    /* eslint-disable no-misleading-character-class */ // 1C:Enterprise\n    // https://github.com/Diversus23/\n    //\n    Prism.languages.bsl = {\n        comment: /\\/\\/.*/,\n        string: [\n            // Строки\n            // Strings\n            {\n                pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n                greedy: true\n            },\n            // Date & time\n            {\n                pattern: /'(?:[^'\\r\\n\\\\]|\\\\.)*'/\n            }\n        ],\n        keyword: [\n            {\n                // RU\n                pattern: /(^|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:пока|для|новый|прервать|попытка|исключение|вызватьисключение|иначе|конецпопытки|неопределено|функция|перем|возврат|конецфункции|если|иначеесли|процедура|конецпроцедуры|тогда|знач|экспорт|конецесли|из|каждого|истина|ложь|по|цикл|конеццикла|выполнить)(?![\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])/i,\n                lookbehind: true\n            },\n            {\n                // EN\n                pattern: /\\b(?:break|do|each|else|elseif|enddo|endfunction|endif|endprocedure|endtry|except|execute|export|false|for|function|if|in|new|null|procedure|raise|return|then|to|true|try|undefined|val|var|while)\\b/i\n            }\n        ],\n        number: {\n            pattern: /(^(?=\\d)|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:E[+-]?\\d+)?/i,\n            lookbehind: true\n        },\n        operator: [\n            /[<>+\\-*/]=?|[%=]/,\n            {\n                pattern: /(^|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:и|или|не)(?![\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])/i,\n                lookbehind: true\n            },\n            {\n                pattern: /\\b(?:and|not|or)\\b/i\n            }\n        ],\n        punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/,\n        directive: [\n            // Теги препроцессора вида &Клиент, &Сервер, ...\n            // Preprocessor tags of the type &Client, &Server, ...\n            {\n                pattern: /^([ \\t]*)&.*/m,\n                lookbehind: true,\n                greedy: true,\n                alias: \"important\"\n            },\n            // #Если Сервер Тогда\n            // ...\n            // #КонецЕсли\n            // Preprocessor instructions of the form:\n            // #If Server Then\n            // ...\n            // #EndIf\n            {\n                pattern: /^([ \\t]*)#.*/gm,\n                lookbehind: true,\n                greedy: true,\n                alias: \"important\"\n            }\n        ]\n    };\n    Prism.languages.oscript = Prism.languages[\"bsl\"];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYnNsLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLElBQUlDLFdBQVcsR0FBRztBQUNsQkQsSUFBSUUsT0FBTyxHQUFHLEVBQUU7QUFDaEIsU0FBU0YsSUFBSUcsS0FBSztJQUNoQixnREFBZ0QsR0FDaEQsZ0JBQWdCO0lBQ2hCLGlDQUFpQztJQUNqQyxFQUFFO0lBQ0ZBLE1BQU1DLFNBQVMsQ0FBQ0osR0FBRyxHQUFHO1FBQ3BCSyxTQUFTO1FBQ1RDLFFBQVE7WUFDTixTQUFTO1lBQ1QsVUFBVTtZQUNWO2dCQUNFQyxTQUFTO2dCQUNUQyxRQUFRO1lBQ1Y7WUFDQSxjQUFjO1lBQ2Q7Z0JBQ0VELFNBQVM7WUFDWDtTQUNEO1FBQ0RFLFNBQVM7WUFDUDtnQkFDRSxLQUFLO2dCQUNMRixTQUNFO2dCQUNGRyxZQUFZO1lBQ2Q7WUFDQTtnQkFDRSxLQUFLO2dCQUNMSCxTQUNFO1lBQ0o7U0FDRDtRQUNESSxRQUFRO1lBQ05KLFNBQ0U7WUFDRkcsWUFBWTtRQUNkO1FBQ0FFLFVBQVU7WUFDUjtZQUNBO2dCQUNFTCxTQUNFO2dCQUNGRyxZQUFZO1lBQ2Q7WUFDQTtnQkFDRUgsU0FBUztZQUNYO1NBQ0Q7UUFDRE0sYUFBYTtRQUNiQyxXQUFXO1lBQ1QsZ0RBQWdEO1lBQ2hELHNEQUFzRDtZQUN0RDtnQkFDRVAsU0FBUztnQkFDVEcsWUFBWTtnQkFDWkYsUUFBUTtnQkFDUk8sT0FBTztZQUNUO1lBQ0EscUJBQXFCO1lBQ3JCLE1BQU07WUFDTixhQUFhO1lBQ2IseUNBQXlDO1lBQ3pDLGtCQUFrQjtZQUNsQixNQUFNO1lBQ04sU0FBUztZQUNUO2dCQUNFUixTQUFTO2dCQUNURyxZQUFZO2dCQUNaRixRQUFRO2dCQUNSTyxPQUFPO1lBQ1Q7U0FDRDtJQUNIO0lBQ0FaLE1BQU1DLFNBQVMsQ0FBQ1ksT0FBTyxHQUFHYixNQUFNQyxTQUFTLENBQUMsTUFBTTtBQUNsRCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9ic2wuanM/ZTFmYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBic2xcbmJzbC5kaXNwbGF5TmFtZSA9ICdic2wnXG5ic2wuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBic2woUHJpc20pIHtcbiAgLyogZXNsaW50LWRpc2FibGUgbm8tbWlzbGVhZGluZy1jaGFyYWN0ZXItY2xhc3MgKi9cbiAgLy8gMUM6RW50ZXJwcmlzZVxuICAvLyBodHRwczovL2dpdGh1Yi5jb20vRGl2ZXJzdXMyMy9cbiAgLy9cbiAgUHJpc20ubGFuZ3VhZ2VzLmJzbCA9IHtcbiAgICBjb21tZW50OiAvXFwvXFwvLiovLFxuICAgIHN0cmluZzogW1xuICAgICAgLy8g0KHRgtGA0L7QutC4XG4gICAgICAvLyBTdHJpbmdzXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC9cIig/OlteXCJdfFwiXCIpKlwiKD8hXCIpLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LCAvLyDQlNCw0YLQsCDQuCDQstGA0LXQvNGPXG4gICAgICAvLyBEYXRlICYgdGltZVxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvJyg/OlteJ1xcclxcblxcXFxdfFxcXFwuKSonL1xuICAgICAgfVxuICAgIF0sXG4gICAga2V5d29yZDogW1xuICAgICAge1xuICAgICAgICAvLyBSVVxuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXnxbXlxcd1xcdTA0MDAtXFx1MDQ4NFxcdTA0ODctXFx1MDUyZlxcdTFkMmJcXHUxZDc4XFx1MmRlMC1cXHUyZGZmXFx1YTY0MC1cXHVhNjlmXFx1ZmUyZVxcdWZlMmZdKSg/OtC/0L7QutCwfNC00LvRj3zQvdC+0LLRi9C5fNC/0YDQtdGA0LLQsNGC0Yx80L/QvtC/0YvRgtC60LB80LjRgdC60LvRjtGH0LXQvdC40LV80LLRi9C30LLQsNGC0YzQuNGB0LrQu9GO0YfQtdC90LjQtXzQuNC90LDRh9C1fNC60L7QvdC10YbQv9C+0L/Ri9GC0LrQuHzQvdC10L7Qv9GA0LXQtNC10LvQtdC90L580YTRg9C90LrRhtC40Y980L/QtdGA0LXQvHzQstC+0LfQstGA0LDRgnzQutC+0L3QtdGG0YTRg9C90LrRhtC40Lh80LXRgdC70Lh80LjQvdCw0YfQtdC10YHQu9C4fNC/0YDQvtGG0LXQtNGD0YDQsHzQutC+0L3QtdGG0L/RgNC+0YbQtdC00YPRgNGLfNGC0L7Qs9C00LB80LfQvdCw0Yd80Y3QutGB0L/QvtGA0YJ80LrQvtC90LXRhtC10YHQu9C4fNC40Ld80LrQsNC20LTQvtCz0L580LjRgdGC0LjQvdCwfNC70L7QttGMfNC/0L580YbQuNC60Lt80LrQvtC90LXRhtGG0LjQutC70LB80LLRi9C/0L7Qu9C90LjRgtGMKSg/IVtcXHdcXHUwNDAwLVxcdTA0ODRcXHUwNDg3LVxcdTA1MmZcXHUxZDJiXFx1MWQ3OFxcdTJkZTAtXFx1MmRmZlxcdWE2NDAtXFx1YTY5ZlxcdWZlMmVcXHVmZTJmXSkvaSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgLy8gRU5cbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvXFxiKD86YnJlYWt8ZG98ZWFjaHxlbHNlfGVsc2VpZnxlbmRkb3xlbmRmdW5jdGlvbnxlbmRpZnxlbmRwcm9jZWR1cmV8ZW5kdHJ5fGV4Y2VwdHxleGVjdXRlfGV4cG9ydHxmYWxzZXxmb3J8ZnVuY3Rpb258aWZ8aW58bmV3fG51bGx8cHJvY2VkdXJlfHJhaXNlfHJldHVybnx0aGVufHRvfHRydWV8dHJ5fHVuZGVmaW5lZHx2YWx8dmFyfHdoaWxlKVxcYi9pXG4gICAgICB9XG4gICAgXSxcbiAgICBudW1iZXI6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXig/PVxcZCl8W15cXHdcXHUwNDAwLVxcdTA0ODRcXHUwNDg3LVxcdTA1MmZcXHUxZDJiXFx1MWQ3OFxcdTJkZTAtXFx1MmRmZlxcdWE2NDAtXFx1YTY5ZlxcdWZlMmVcXHVmZTJmXSkoPzpcXGQrKD86XFwuXFxkKik/fFxcLlxcZCspKD86RVsrLV0/XFxkKyk/L2ksXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBvcGVyYXRvcjogW1xuICAgICAgL1s8PitcXC0qL109P3xbJT1dLywgLy8gUlVcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKF58W15cXHdcXHUwNDAwLVxcdTA0ODRcXHUwNDg3LVxcdTA1MmZcXHUxZDJiXFx1MWQ3OFxcdTJkZTAtXFx1MmRmZlxcdWE2NDAtXFx1YTY5ZlxcdWZlMmVcXHVmZTJmXSkoPzrQuHzQuNC70Lh80L3QtSkoPyFbXFx3XFx1MDQwMC1cXHUwNDg0XFx1MDQ4Ny1cXHUwNTJmXFx1MWQyYlxcdTFkNzhcXHUyZGUwLVxcdTJkZmZcXHVhNjQwLVxcdWE2OWZcXHVmZTJlXFx1ZmUyZl0pL2ksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sIC8vIEVOXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC9cXGIoPzphbmR8bm90fG9yKVxcYi9pXG4gICAgICB9XG4gICAgXSxcbiAgICBwdW5jdHVhdGlvbjogL1xcKFxcLnxcXC5cXCl8WygpXFxbXFxdOjssLl0vLFxuICAgIGRpcmVjdGl2ZTogW1xuICAgICAgLy8g0KLQtdCz0Lgg0L/RgNC10L/RgNC+0YbQtdGB0YHQvtGA0LAg0LLQuNC00LAgJtCa0LvQuNC10L3RgiwgJtCh0LXRgNCy0LXRgCwgLi4uXG4gICAgICAvLyBQcmVwcm9jZXNzb3IgdGFncyBvZiB0aGUgdHlwZSAmQ2xpZW50LCAmU2VydmVyLCAuLi5cbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogL14oWyBcXHRdKikmLiovbSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBhbGlhczogJ2ltcG9ydGFudCdcbiAgICAgIH0sIC8vINCY0L3RgdGC0YDRg9C60YbQuNC4INC/0YDQtdC/0YDQvtGG0LXRgdGB0L7RgNCwINCy0LjQtNCwOlxuICAgICAgLy8gI9CV0YHQu9C4INCh0LXRgNCy0LXRgCDQotC+0LPQtNCwXG4gICAgICAvLyAuLi5cbiAgICAgIC8vICPQmtC+0L3QtdGG0JXRgdC70LhcbiAgICAgIC8vIFByZXByb2Nlc3NvciBpbnN0cnVjdGlvbnMgb2YgdGhlIGZvcm06XG4gICAgICAvLyAjSWYgU2VydmVyIFRoZW5cbiAgICAgIC8vIC4uLlxuICAgICAgLy8gI0VuZElmXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC9eKFsgXFx0XSopIy4qL2dtLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGFsaWFzOiAnaW1wb3J0YW50J1xuICAgICAgfVxuICAgIF1cbiAgfVxuICBQcmlzbS5sYW5ndWFnZXMub3NjcmlwdCA9IFByaXNtLmxhbmd1YWdlc1snYnNsJ11cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiYnNsIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50Iiwic3RyaW5nIiwicGF0dGVybiIsImdyZWVkeSIsImtleXdvcmQiLCJsb29rYmVoaW5kIiwibnVtYmVyIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiIsImRpcmVjdGl2ZSIsImFsaWFzIiwib3NjcmlwdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/bsl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/c.js":
/*!******************************************!*\
  !*** ./node_modules/refractor/lang/c.js ***!
  \******************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = c;\nc.displayName = \"c\";\nc.aliases = [];\nfunction c(Prism) {\n    Prism.languages.c = Prism.languages.extend(\"clike\", {\n        comment: {\n            pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n            greedy: true\n        },\n        string: {\n            // https://en.cppreference.com/w/c/language/string_literal\n            pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n            greedy: true\n        },\n        \"class-name\": {\n            pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n            lookbehind: true\n        },\n        keyword: /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n        function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        number: /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n        operator: />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n    });\n    Prism.languages.insertBefore(\"c\", \"string\", {\n        char: {\n            // https://en.cppreference.com/w/c/language/character_constant\n            pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n            greedy: true\n        }\n    });\n    Prism.languages.insertBefore(\"c\", \"string\", {\n        macro: {\n            // allow for multiline macro definitions\n            // spaces after the # character compile fine with gcc\n            pattern: /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n            lookbehind: true,\n            greedy: true,\n            alias: \"property\",\n            inside: {\n                string: [\n                    {\n                        // highlight the path of the include statement as a string\n                        pattern: /^(#\\s*include\\s*)<[^>]+>/,\n                        lookbehind: true\n                    },\n                    Prism.languages.c[\"string\"]\n                ],\n                char: Prism.languages.c[\"char\"],\n                comment: Prism.languages.c[\"comment\"],\n                \"macro-name\": [\n                    {\n                        pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n                        lookbehind: true\n                    },\n                    {\n                        pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n                        lookbehind: true,\n                        alias: \"function\"\n                    }\n                ],\n                // highlight macro directives as keywords\n                directive: {\n                    pattern: /^(#\\s*)[a-z]+/,\n                    lookbehind: true,\n                    alias: \"keyword\"\n                },\n                \"directive-hash\": /^#/,\n                punctuation: /##|\\\\(?=[\\r\\n])/,\n                expression: {\n                    pattern: /\\S[\\s\\S]*/,\n                    inside: Prism.languages.c\n                }\n            }\n        }\n    });\n    Prism.languages.insertBefore(\"c\", \"function\", {\n        // highlight predefined macros as constants\n        constant: /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\n    });\n    delete Prism.languages.c[\"boolean\"];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxFQUFFQyxXQUFXLEdBQUc7QUFDaEJELEVBQUVFLE9BQU8sR0FBRyxFQUFFO0FBQ2QsU0FBU0YsRUFBRUcsS0FBSztJQUNkQSxNQUFNQyxTQUFTLENBQUNKLENBQUMsR0FBR0csTUFBTUMsU0FBUyxDQUFDQyxNQUFNLENBQUMsU0FBUztRQUNsREMsU0FBUztZQUNQQyxTQUNFO1lBQ0ZDLFFBQVE7UUFDVjtRQUNBQyxRQUFRO1lBQ04sMERBQTBEO1lBQzFERixTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBLGNBQWM7WUFDWkQsU0FDRTtZQUNGRyxZQUFZO1FBQ2Q7UUFDQUMsU0FDRTtRQUNGQyxVQUFVO1FBQ1ZDLFFBQ0U7UUFDRkMsVUFBVTtJQUNaO0lBQ0FYLE1BQU1DLFNBQVMsQ0FBQ1csWUFBWSxDQUFDLEtBQUssVUFBVTtRQUMxQ0MsTUFBTTtZQUNKLDhEQUE4RDtZQUM5RFQsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7SUFDRjtJQUNBTCxNQUFNQyxTQUFTLENBQUNXLFlBQVksQ0FBQyxLQUFLLFVBQVU7UUFDMUNFLE9BQU87WUFDTCx3Q0FBd0M7WUFDeEMscURBQXFEO1lBQ3JEVixTQUNFO1lBQ0ZHLFlBQVk7WUFDWkYsUUFBUTtZQUNSVSxPQUFPO1lBQ1BDLFFBQVE7Z0JBQ05WLFFBQVE7b0JBQ047d0JBQ0UsMERBQTBEO3dCQUMxREYsU0FBUzt3QkFDVEcsWUFBWTtvQkFDZDtvQkFDQVAsTUFBTUMsU0FBUyxDQUFDSixDQUFDLENBQUMsU0FBUztpQkFDNUI7Z0JBQ0RnQixNQUFNYixNQUFNQyxTQUFTLENBQUNKLENBQUMsQ0FBQyxPQUFPO2dCQUMvQk0sU0FBU0gsTUFBTUMsU0FBUyxDQUFDSixDQUFDLENBQUMsVUFBVTtnQkFDckMsY0FBYztvQkFDWjt3QkFDRU8sU0FBUzt3QkFDVEcsWUFBWTtvQkFDZDtvQkFDQTt3QkFDRUgsU0FBUzt3QkFDVEcsWUFBWTt3QkFDWlEsT0FBTztvQkFDVDtpQkFDRDtnQkFDRCx5Q0FBeUM7Z0JBQ3pDRSxXQUFXO29CQUNUYixTQUFTO29CQUNURyxZQUFZO29CQUNaUSxPQUFPO2dCQUNUO2dCQUNBLGtCQUFrQjtnQkFDbEJHLGFBQWE7Z0JBQ2JDLFlBQVk7b0JBQ1ZmLFNBQVM7b0JBQ1RZLFFBQVFoQixNQUFNQyxTQUFTLENBQUNKLENBQUM7Z0JBQzNCO1lBQ0Y7UUFDRjtJQUNGO0lBQ0FHLE1BQU1DLFNBQVMsQ0FBQ1csWUFBWSxDQUFDLEtBQUssWUFBWTtRQUM1QywyQ0FBMkM7UUFDM0NRLFVBQ0U7SUFDSjtJQUNBLE9BQU9wQixNQUFNQyxTQUFTLENBQUNKLENBQUMsQ0FBQyxVQUFVO0FBQ3JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2MuanM/YmFjYyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBjXG5jLmRpc3BsYXlOYW1lID0gJ2MnXG5jLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gYyhQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuYyA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2NsaWtlJywge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC9cXC9cXC8oPzpbXlxcclxcblxcXFxdfFxcXFwoPzpcXHJcXG4/fFxcbnwoPyFbXFxyXFxuXSkpKSp8XFwvXFwqW1xcc1xcU10qPyg/OlxcKlxcL3wkKS8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgLy8gaHR0cHM6Ly9lbi5jcHByZWZlcmVuY2UuY29tL3cvYy9sYW5ndWFnZS9zdHJpbmdfbGl0ZXJhbFxuICAgICAgcGF0dGVybjogL1wiKD86XFxcXCg/OlxcclxcbnxbXFxzXFxTXSl8W15cIlxcXFxcXHJcXG5dKSpcIi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgICdjbGFzcy1uYW1lJzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhcXGIoPzplbnVtfHN0cnVjdClcXHMrKD86X19hdHRyaWJ1dGVfX1xccypcXChcXChbXFxzXFxTXSo/XFwpXFwpXFxzKik/KVxcdyt8XFxiW2Etel1cXHcqX3RcXGIvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzpfQWxpZ25hc3xfQWxpZ25vZnxfQXRvbWljfF9Cb29sfF9Db21wbGV4fF9HZW5lcmljfF9JbWFnaW5hcnl8X05vcmV0dXJufF9TdGF0aWNfYXNzZXJ0fF9UaHJlYWRfbG9jYWx8X19hdHRyaWJ1dGVfX3xhc218YXV0b3xicmVha3xjYXNlfGNoYXJ8Y29uc3R8Y29udGludWV8ZGVmYXVsdHxkb3xkb3VibGV8ZWxzZXxlbnVtfGV4dGVybnxmbG9hdHxmb3J8Z290b3xpZnxpbmxpbmV8aW50fGxvbmd8cmVnaXN0ZXJ8cmV0dXJufHNob3J0fHNpZ25lZHxzaXplb2Z8c3RhdGljfHN0cnVjdHxzd2l0Y2h8dHlwZWRlZnx0eXBlb2Z8dW5pb258dW5zaWduZWR8dm9pZHx2b2xhdGlsZXx3aGlsZSlcXGIvLFxuICAgIGZ1bmN0aW9uOiAvXFxiW2Etel9dXFx3Kig/PVxccypcXCgpL2ksXG4gICAgbnVtYmVyOlxuICAgICAgLyg/OlxcYjB4KD86W1xcZGEtZl0rKD86XFwuW1xcZGEtZl0qKT98XFwuW1xcZGEtZl0rKSg/OnBbKy1dP1xcZCspP3woPzpcXGJcXGQrKD86XFwuXFxkKik/fFxcQlxcLlxcZCspKD86ZVsrLV0/XFxkKyk/KVtmdWxdezAsNH0vaSxcbiAgICBvcGVyYXRvcjogLz4+PT98PDw9P3wtPnwoWy0rJnw6XSlcXDF8Wz86fl18Wy0rKi8lJnxeIT08Pl09Py9cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnYycsICdzdHJpbmcnLCB7XG4gICAgY2hhcjoge1xuICAgICAgLy8gaHR0cHM6Ly9lbi5jcHByZWZlcmVuY2UuY29tL3cvYy9sYW5ndWFnZS9jaGFyYWN0ZXJfY29uc3RhbnRcbiAgICAgIHBhdHRlcm46IC8nKD86XFxcXCg/OlxcclxcbnxbXFxzXFxTXSl8W14nXFxcXFxcclxcbl0pezAsMzJ9Jy8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9XG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ2MnLCAnc3RyaW5nJywge1xuICAgIG1hY3JvOiB7XG4gICAgICAvLyBhbGxvdyBmb3IgbXVsdGlsaW5lIG1hY3JvIGRlZmluaXRpb25zXG4gICAgICAvLyBzcGFjZXMgYWZ0ZXIgdGhlICMgY2hhcmFjdGVyIGNvbXBpbGUgZmluZSB3aXRoIGdjY1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyheW1xcdCBdKikjXFxzKlthLXpdKD86W15cXHJcXG5cXFxcL118XFwvKD8hXFwqKXxcXC9cXCooPzpbXipdfFxcKig/IVxcLykpKlxcKlxcL3xcXFxcKD86XFxyXFxufFtcXHNcXFNdKSkqL2ltLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGFsaWFzOiAncHJvcGVydHknLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHN0cmluZzogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIC8vIGhpZ2hsaWdodCB0aGUgcGF0aCBvZiB0aGUgaW5jbHVkZSBzdGF0ZW1lbnQgYXMgYSBzdHJpbmdcbiAgICAgICAgICAgIHBhdHRlcm46IC9eKCNcXHMqaW5jbHVkZVxccyopPFtePl0rPi8sXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgICAgfSxcbiAgICAgICAgICBQcmlzbS5sYW5ndWFnZXMuY1snc3RyaW5nJ11cbiAgICAgICAgXSxcbiAgICAgICAgY2hhcjogUHJpc20ubGFuZ3VhZ2VzLmNbJ2NoYXInXSxcbiAgICAgICAgY29tbWVudDogUHJpc20ubGFuZ3VhZ2VzLmNbJ2NvbW1lbnQnXSxcbiAgICAgICAgJ21hY3JvLW5hbWUnOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgcGF0dGVybjogLyheI1xccypkZWZpbmVcXHMrKVxcdytcXGIoPyFcXCgpL2ksXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvKF4jXFxzKmRlZmluZVxccyspXFx3K1xcYig/PVxcKCkvaSxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICBhbGlhczogJ2Z1bmN0aW9uJ1xuICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgLy8gaGlnaGxpZ2h0IG1hY3JvIGRpcmVjdGl2ZXMgYXMga2V5d29yZHNcbiAgICAgICAgZGlyZWN0aXZlOiB7XG4gICAgICAgICAgcGF0dGVybjogL14oI1xccyopW2Etel0rLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICAgICAgfSxcbiAgICAgICAgJ2RpcmVjdGl2ZS1oYXNoJzogL14jLyxcbiAgICAgICAgcHVuY3R1YXRpb246IC8jI3xcXFxcKD89W1xcclxcbl0pLyxcbiAgICAgICAgZXhwcmVzc2lvbjoge1xuICAgICAgICAgIHBhdHRlcm46IC9cXFNbXFxzXFxTXSovLFxuICAgICAgICAgIGluc2lkZTogUHJpc20ubGFuZ3VhZ2VzLmNcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnYycsICdmdW5jdGlvbicsIHtcbiAgICAvLyBoaWdobGlnaHQgcHJlZGVmaW5lZCBtYWNyb3MgYXMgY29uc3RhbnRzXG4gICAgY29uc3RhbnQ6XG4gICAgICAvXFxiKD86RU9GfE5VTEx8U0VFS19DVVJ8U0VFS19FTkR8U0VFS19TRVR8X19EQVRFX198X19GSUxFX198X19MSU5FX198X19USU1FU1RBTVBfX3xfX1RJTUVfX3xfX2Z1bmNfX3xzdGRlcnJ8c3RkaW58c3Rkb3V0KVxcYi9cbiAgfSlcbiAgZGVsZXRlIFByaXNtLmxhbmd1YWdlcy5jWydib29sZWFuJ11cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiYyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwiY29tbWVudCIsInBhdHRlcm4iLCJncmVlZHkiLCJzdHJpbmciLCJsb29rYmVoaW5kIiwia2V5d29yZCIsImZ1bmN0aW9uIiwibnVtYmVyIiwib3BlcmF0b3IiLCJpbnNlcnRCZWZvcmUiLCJjaGFyIiwibWFjcm8iLCJhbGlhcyIsImluc2lkZSIsImRpcmVjdGl2ZSIsInB1bmN0dWF0aW9uIiwiZXhwcmVzc2lvbiIsImNvbnN0YW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/c.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/cfscript.js":
/*!*************************************************!*\
  !*** ./node_modules/refractor/lang/cfscript.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = cfscript;\ncfscript.displayName = \"cfscript\";\ncfscript.aliases = [];\nfunction cfscript(Prism) {\n    // https://cfdocs.org/script\n    Prism.languages.cfscript = Prism.languages.extend(\"clike\", {\n        comment: [\n            {\n                pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n                lookbehind: true,\n                inside: {\n                    annotation: {\n                        pattern: /(?:^|[^.])@[\\w\\.]+/,\n                        alias: \"punctuation\"\n                    }\n                }\n            },\n            {\n                pattern: /(^|[^\\\\:])\\/\\/.*/,\n                lookbehind: true,\n                greedy: true\n            }\n        ],\n        keyword: /\\b(?:abstract|break|catch|component|continue|default|do|else|extends|final|finally|for|function|if|in|include|package|private|property|public|remote|required|rethrow|return|static|switch|throw|try|var|while|xml)\\b(?!\\s*=)/,\n        operator: [\n            /\\+\\+|--|&&|\\|\\||::|=>|[!=]==|<=?|>=?|[-+*/%&|^!=<>]=?|\\?(?:\\.|:)?|[?:]/,\n            /\\b(?:and|contains|eq|equal|eqv|gt|gte|imp|is|lt|lte|mod|not|or|xor)\\b/\n        ],\n        scope: {\n            pattern: /\\b(?:application|arguments|cgi|client|cookie|local|session|super|this|variables)\\b/,\n            alias: \"global\"\n        },\n        type: {\n            pattern: /\\b(?:any|array|binary|boolean|date|guid|numeric|query|string|struct|uuid|void|xml)\\b/,\n            alias: \"builtin\"\n        }\n    });\n    Prism.languages.insertBefore(\"cfscript\", \"keyword\", {\n        // This must be declared before keyword because we use \"function\" inside the lookahead\n        \"function-variable\": {\n            pattern: /[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n            alias: \"function\"\n        }\n    });\n    delete Prism.languages.cfscript[\"class-name\"];\n    Prism.languages.cfc = Prism.languages[\"cfscript\"];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvY2ZzY3JpcHQuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsU0FBU0MsV0FBVyxHQUFHO0FBQ3ZCRCxTQUFTRSxPQUFPLEdBQUcsRUFBRTtBQUNyQixTQUFTRixTQUFTRyxLQUFLO0lBQ3JCLDRCQUE0QjtJQUM1QkEsTUFBTUMsU0FBUyxDQUFDSixRQUFRLEdBQUdHLE1BQU1DLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLFNBQVM7UUFDekRDLFNBQVM7WUFDUDtnQkFDRUMsU0FBUztnQkFDVEMsWUFBWTtnQkFDWkMsUUFBUTtvQkFDTkMsWUFBWTt3QkFDVkgsU0FBUzt3QkFDVEksT0FBTztvQkFDVDtnQkFDRjtZQUNGO1lBQ0E7Z0JBQ0VKLFNBQVM7Z0JBQ1RDLFlBQVk7Z0JBQ1pJLFFBQVE7WUFDVjtTQUNEO1FBQ0RDLFNBQ0U7UUFDRkMsVUFBVTtZQUNSO1lBQ0E7U0FDRDtRQUNEQyxPQUFPO1lBQ0xSLFNBQ0U7WUFDRkksT0FBTztRQUNUO1FBQ0FLLE1BQU07WUFDSlQsU0FDRTtZQUNGSSxPQUFPO1FBQ1Q7SUFDRjtJQUNBUixNQUFNQyxTQUFTLENBQUNhLFlBQVksQ0FBQyxZQUFZLFdBQVc7UUFDbEQsc0ZBQXNGO1FBQ3RGLHFCQUFxQjtZQUNuQlYsU0FDRTtZQUNGSSxPQUFPO1FBQ1Q7SUFDRjtJQUNBLE9BQU9SLE1BQU1DLFNBQVMsQ0FBQ0osUUFBUSxDQUFDLGFBQWE7SUFDN0NHLE1BQU1DLFNBQVMsQ0FBQ2MsR0FBRyxHQUFHZixNQUFNQyxTQUFTLENBQUMsV0FBVztBQUNuRCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jZnNjcmlwdC5qcz80OGE1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNmc2NyaXB0XG5jZnNjcmlwdC5kaXNwbGF5TmFtZSA9ICdjZnNjcmlwdCdcbmNmc2NyaXB0LmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gY2ZzY3JpcHQoUHJpc20pIHtcbiAgLy8gaHR0cHM6Ly9jZmRvY3Mub3JnL3NjcmlwdFxuICBQcmlzbS5sYW5ndWFnZXMuY2ZzY3JpcHQgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdjbGlrZScsIHtcbiAgICBjb21tZW50OiBbXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKVxcL1xcKltcXHNcXFNdKj8oPzpcXCpcXC98JCkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBhbm5vdGF0aW9uOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvKD86XnxbXi5dKUBbXFx3XFwuXSsvLFxuICAgICAgICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbidcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFw6XSlcXC9cXC8uKi8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfVxuICAgIF0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzphYnN0cmFjdHxicmVha3xjYXRjaHxjb21wb25lbnR8Y29udGludWV8ZGVmYXVsdHxkb3xlbHNlfGV4dGVuZHN8ZmluYWx8ZmluYWxseXxmb3J8ZnVuY3Rpb258aWZ8aW58aW5jbHVkZXxwYWNrYWdlfHByaXZhdGV8cHJvcGVydHl8cHVibGljfHJlbW90ZXxyZXF1aXJlZHxyZXRocm93fHJldHVybnxzdGF0aWN8c3dpdGNofHRocm93fHRyeXx2YXJ8d2hpbGV8eG1sKVxcYig/IVxccyo9KS8sXG4gICAgb3BlcmF0b3I6IFtcbiAgICAgIC9cXCtcXCt8LS18JiZ8XFx8XFx8fDo6fD0+fFshPV09PXw8PT98Pj0/fFstKyovJSZ8XiE9PD5dPT98XFw/KD86XFwufDopP3xbPzpdLyxcbiAgICAgIC9cXGIoPzphbmR8Y29udGFpbnN8ZXF8ZXF1YWx8ZXF2fGd0fGd0ZXxpbXB8aXN8bHR8bHRlfG1vZHxub3R8b3J8eG9yKVxcYi9cbiAgICBdLFxuICAgIHNjb3BlOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvXFxiKD86YXBwbGljYXRpb258YXJndW1lbnRzfGNnaXxjbGllbnR8Y29va2llfGxvY2FsfHNlc3Npb258c3VwZXJ8dGhpc3x2YXJpYWJsZXMpXFxiLyxcbiAgICAgIGFsaWFzOiAnZ2xvYmFsJ1xuICAgIH0sXG4gICAgdHlwZToge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL1xcYig/OmFueXxhcnJheXxiaW5hcnl8Ym9vbGVhbnxkYXRlfGd1aWR8bnVtZXJpY3xxdWVyeXxzdHJpbmd8c3RydWN0fHV1aWR8dm9pZHx4bWwpXFxiLyxcbiAgICAgIGFsaWFzOiAnYnVpbHRpbidcbiAgICB9XG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ2Nmc2NyaXB0JywgJ2tleXdvcmQnLCB7XG4gICAgLy8gVGhpcyBtdXN0IGJlIGRlY2xhcmVkIGJlZm9yZSBrZXl3b3JkIGJlY2F1c2Ugd2UgdXNlIFwiZnVuY3Rpb25cIiBpbnNpZGUgdGhlIGxvb2thaGVhZFxuICAgICdmdW5jdGlvbi12YXJpYWJsZSc6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC9bXyRhLXpBLVpcXHhBMC1cXHVGRkZGXSg/Oig/IVxccylbJFxcd1xceEEwLVxcdUZGRkZdKSooPz1cXHMqWz06XVxccyooPzpcXGJmdW5jdGlvblxcYnwoPzpcXCgoPzpbXigpXXxcXChbXigpXSpcXCkpKlxcKXwoPyFcXHMpW18kYS16QS1aXFx4QTAtXFx1RkZGRl0oPzooPyFcXHMpWyRcXHdcXHhBMC1cXHVGRkZGXSkqKVxccyo9PikpLyxcbiAgICAgIGFsaWFzOiAnZnVuY3Rpb24nXG4gICAgfVxuICB9KVxuICBkZWxldGUgUHJpc20ubGFuZ3VhZ2VzLmNmc2NyaXB0WydjbGFzcy1uYW1lJ11cbiAgUHJpc20ubGFuZ3VhZ2VzLmNmYyA9IFByaXNtLmxhbmd1YWdlc1snY2ZzY3JpcHQnXVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJjZnNjcmlwdCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwiY29tbWVudCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiaW5zaWRlIiwiYW5ub3RhdGlvbiIsImFsaWFzIiwiZ3JlZWR5Iiwia2V5d29yZCIsIm9wZXJhdG9yIiwic2NvcGUiLCJ0eXBlIiwiaW5zZXJ0QmVmb3JlIiwiY2ZjIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/cfscript.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/chaiscript.js":
/*!***************************************************!*\
  !*** ./node_modules/refractor/lang/chaiscript.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorCpp = __webpack_require__(/*! ./cpp.js */ \"(ssr)/./node_modules/refractor/lang/cpp.js\");\nmodule.exports = chaiscript;\nchaiscript.displayName = \"chaiscript\";\nchaiscript.aliases = [];\nfunction chaiscript(Prism) {\n    Prism.register(refractorCpp);\n    Prism.languages.chaiscript = Prism.languages.extend(\"clike\", {\n        string: {\n            pattern: /(^|[^\\\\])'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n            lookbehind: true,\n            greedy: true\n        },\n        \"class-name\": [\n            {\n                // e.g. class Rectangle { ... }\n                pattern: /(\\bclass\\s+)\\w+/,\n                lookbehind: true\n            },\n            {\n                // e.g. attr Rectangle::height, def Rectangle::area() { ... }\n                pattern: /(\\b(?:attr|def)\\s+)\\w+(?=\\s*::)/,\n                lookbehind: true\n            }\n        ],\n        keyword: /\\b(?:attr|auto|break|case|catch|class|continue|def|default|else|finally|for|fun|global|if|return|switch|this|try|var|while)\\b/,\n        number: [\n            Prism.languages.cpp.number,\n            /\\b(?:Infinity|NaN)\\b/\n        ],\n        operator: />>=?|<<=?|\\|\\||&&|:[:=]?|--|\\+\\+|[=!<>+\\-*/%|&^]=?|[?~]|`[^`\\r\\n]{1,4}`/\n    });\n    Prism.languages.insertBefore(\"chaiscript\", \"operator\", {\n        \"parameter-type\": {\n            // e.g. def foo(int x, Vector y) {...}\n            pattern: /([,(]\\s*)\\w+(?=\\s+\\w)/,\n            lookbehind: true,\n            alias: \"class-name\"\n        }\n    });\n    Prism.languages.insertBefore(\"chaiscript\", \"string\", {\n        \"string-interpolation\": {\n            pattern: /(^|[^\\\\])\"(?:[^\"$\\\\]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\"/,\n            lookbehind: true,\n            greedy: true,\n            inside: {\n                interpolation: {\n                    pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\}/,\n                    lookbehind: true,\n                    inside: {\n                        \"interpolation-expression\": {\n                            pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n                            lookbehind: true,\n                            inside: Prism.languages.chaiscript\n                        },\n                        \"interpolation-punctuation\": {\n                            pattern: /^\\$\\{|\\}$/,\n                            alias: \"punctuation\"\n                        }\n                    }\n                },\n                string: /[\\s\\S]+/\n            }\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvY2hhaXNjcmlwdC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLElBQUlBLGVBQWVDLG1CQUFPQSxDQUFDO0FBQzNCQyxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxXQUFXQyxXQUFXLEdBQUc7QUFDekJELFdBQVdFLE9BQU8sR0FBRyxFQUFFO0FBQ3ZCLFNBQVNGLFdBQVdHLEtBQUs7SUFDdkJBLE1BQU1DLFFBQVEsQ0FBQ1I7SUFDZk8sTUFBTUUsU0FBUyxDQUFDTCxVQUFVLEdBQUdHLE1BQU1FLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLFNBQVM7UUFDM0RDLFFBQVE7WUFDTkMsU0FBUztZQUNUQyxZQUFZO1lBQ1pDLFFBQVE7UUFDVjtRQUNBLGNBQWM7WUFDWjtnQkFDRSwrQkFBK0I7Z0JBQy9CRixTQUFTO2dCQUNUQyxZQUFZO1lBQ2Q7WUFDQTtnQkFDRSw2REFBNkQ7Z0JBQzdERCxTQUFTO2dCQUNUQyxZQUFZO1lBQ2Q7U0FDRDtRQUNERSxTQUNFO1FBQ0ZDLFFBQVE7WUFBQ1QsTUFBTUUsU0FBUyxDQUFDUSxHQUFHLENBQUNELE1BQU07WUFBRTtTQUF1QjtRQUM1REUsVUFDRTtJQUNKO0lBQ0FYLE1BQU1FLFNBQVMsQ0FBQ1UsWUFBWSxDQUFDLGNBQWMsWUFBWTtRQUNyRCxrQkFBa0I7WUFDaEIsc0NBQXNDO1lBQ3RDUCxTQUFTO1lBQ1RDLFlBQVk7WUFDWk8sT0FBTztRQUNUO0lBQ0Y7SUFDQWIsTUFBTUUsU0FBUyxDQUFDVSxZQUFZLENBQUMsY0FBYyxVQUFVO1FBQ25ELHdCQUF3QjtZQUN0QlAsU0FDRTtZQUNGQyxZQUFZO1lBQ1pDLFFBQVE7WUFDUk8sUUFBUTtnQkFDTkMsZUFBZTtvQkFDYlYsU0FDRTtvQkFDRkMsWUFBWTtvQkFDWlEsUUFBUTt3QkFDTiw0QkFBNEI7NEJBQzFCVCxTQUFTOzRCQUNUQyxZQUFZOzRCQUNaUSxRQUFRZCxNQUFNRSxTQUFTLENBQUNMLFVBQVU7d0JBQ3BDO3dCQUNBLDZCQUE2Qjs0QkFDM0JRLFNBQVM7NEJBQ1RRLE9BQU87d0JBQ1Q7b0JBQ0Y7Z0JBQ0Y7Z0JBQ0FULFFBQVE7WUFDVjtRQUNGO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jaGFpc2NyaXB0LmpzPzA0NjkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG52YXIgcmVmcmFjdG9yQ3BwID0gcmVxdWlyZSgnLi9jcHAuanMnKVxubW9kdWxlLmV4cG9ydHMgPSBjaGFpc2NyaXB0XG5jaGFpc2NyaXB0LmRpc3BsYXlOYW1lID0gJ2NoYWlzY3JpcHQnXG5jaGFpc2NyaXB0LmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gY2hhaXNjcmlwdChQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JDcHApXG4gIFByaXNtLmxhbmd1YWdlcy5jaGFpc2NyaXB0ID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnY2xpa2UnLCB7XG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvKF58W15cXFxcXSknKD86W14nXFxcXF18XFxcXFtcXHNcXFNdKSonLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgICdjbGFzcy1uYW1lJzogW1xuICAgICAge1xuICAgICAgICAvLyBlLmcuIGNsYXNzIFJlY3RhbmdsZSB7IC4uLiB9XG4gICAgICAgIHBhdHRlcm46IC8oXFxiY2xhc3NcXHMrKVxcdysvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAvLyBlLmcuIGF0dHIgUmVjdGFuZ2xlOjpoZWlnaHQsIGRlZiBSZWN0YW5nbGU6OmFyZWEoKSB7IC4uLiB9XG4gICAgICAgIHBhdHRlcm46IC8oXFxiKD86YXR0cnxkZWYpXFxzKylcXHcrKD89XFxzKjo6KS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH1cbiAgICBdLFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YXR0cnxhdXRvfGJyZWFrfGNhc2V8Y2F0Y2h8Y2xhc3N8Y29udGludWV8ZGVmfGRlZmF1bHR8ZWxzZXxmaW5hbGx5fGZvcnxmdW58Z2xvYmFsfGlmfHJldHVybnxzd2l0Y2h8dGhpc3x0cnl8dmFyfHdoaWxlKVxcYi8sXG4gICAgbnVtYmVyOiBbUHJpc20ubGFuZ3VhZ2VzLmNwcC5udW1iZXIsIC9cXGIoPzpJbmZpbml0eXxOYU4pXFxiL10sXG4gICAgb3BlcmF0b3I6XG4gICAgICAvPj49P3w8PD0/fFxcfFxcfHwmJnw6Wzo9XT98LS18XFwrXFwrfFs9ITw+K1xcLSovJXwmXl09P3xbP35dfGBbXmBcXHJcXG5dezEsNH1gL1xuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdjaGFpc2NyaXB0JywgJ29wZXJhdG9yJywge1xuICAgICdwYXJhbWV0ZXItdHlwZSc6IHtcbiAgICAgIC8vIGUuZy4gZGVmIGZvbyhpbnQgeCwgVmVjdG9yIHkpIHsuLi59XG4gICAgICBwYXR0ZXJuOiAvKFssKF1cXHMqKVxcdysoPz1cXHMrXFx3KS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdjbGFzcy1uYW1lJ1xuICAgIH1cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnY2hhaXNjcmlwdCcsICdzdHJpbmcnLCB7XG4gICAgJ3N0cmluZy1pbnRlcnBvbGF0aW9uJzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhefFteXFxcXF0pXCIoPzpbXlwiJFxcXFxdfFxcXFxbXFxzXFxTXXxcXCQoPyFcXHspfFxcJFxceyg/Oltee31dfFxceyg/Oltee31dfFxce1tee31dKlxcfSkqXFx9KSpcXH0pKlwiLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgaW50ZXJwb2xhdGlvbjoge1xuICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAvKCg/Ol58W15cXFxcXSkoPzpcXFxcezJ9KSopXFwkXFx7KD86W157fV18XFx7KD86W157fV18XFx7W157fV0qXFx9KSpcXH0pKlxcfS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICdpbnRlcnBvbGF0aW9uLWV4cHJlc3Npb24nOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC8oXlxcJFxceylbXFxzXFxTXSsoPz1cXH0kKS8sXG4gICAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICAgIGluc2lkZTogUHJpc20ubGFuZ3VhZ2VzLmNoYWlzY3JpcHRcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnaW50ZXJwb2xhdGlvbi1wdW5jdHVhdGlvbic6IHtcbiAgICAgICAgICAgICAgcGF0dGVybjogL15cXCRcXHt8XFx9JC8sXG4gICAgICAgICAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBzdHJpbmc6IC9bXFxzXFxTXSsvXG4gICAgICB9XG4gICAgfVxuICB9KVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3RvckNwcCIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiY2hhaXNjcmlwdCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJzdHJpbmciLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImdyZWVkeSIsImtleXdvcmQiLCJudW1iZXIiLCJjcHAiLCJvcGVyYXRvciIsImluc2VydEJlZm9yZSIsImFsaWFzIiwiaW5zaWRlIiwiaW50ZXJwb2xhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/chaiscript.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/cil.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/cil.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = cil;\ncil.displayName = \"cil\";\ncil.aliases = [];\nfunction cil(Prism) {\n    Prism.languages.cil = {\n        comment: /\\/\\/.*/,\n        string: {\n            pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true\n        },\n        directive: {\n            pattern: /(^|\\W)\\.[a-z]+(?=\\s)/,\n            lookbehind: true,\n            alias: \"class-name\"\n        },\n        // Actually an assembly reference\n        variable: /\\[[\\w\\.]+\\]/,\n        keyword: /\\b(?:abstract|ansi|assembly|auto|autochar|beforefieldinit|bool|bstr|byvalstr|catch|char|cil|class|currency|date|decimal|default|enum|error|explicit|extends|extern|famandassem|family|famorassem|final(?:ly)?|float32|float64|hidebysig|u?int(?:8|16|32|64)?|iant|idispatch|implements|import|initonly|instance|interface|iunknown|literal|lpstr|lpstruct|lptstr|lpwstr|managed|method|native(?:Type)?|nested|newslot|object(?:ref)?|pinvokeimpl|private|privatescope|public|reqsecobj|rtspecialname|runtime|sealed|sequential|serializable|specialname|static|string|struct|syschar|tbstr|unicode|unmanagedexp|unsigned|value(?:type)?|variant|virtual|void)\\b/,\n        function: /\\b(?:(?:constrained|no|readonly|tail|unaligned|volatile)\\.)?(?:conv\\.(?:[iu][1248]?|ovf\\.[iu][1248]?(?:\\.un)?|r\\.un|r4|r8)|ldc\\.(?:i4(?:\\.\\d+|\\.[mM]1|\\.s)?|i8|r4|r8)|ldelem(?:\\.[iu][1248]?|\\.r[48]|\\.ref|a)?|ldind\\.(?:[iu][1248]?|r[48]|ref)|stelem\\.?(?:i[1248]?|r[48]|ref)?|stind\\.(?:i[1248]?|r[48]|ref)?|end(?:fault|filter|finally)|ldarg(?:\\.[0-3s]|a(?:\\.s)?)?|ldloc(?:\\.\\d+|\\.s)?|sub(?:\\.ovf(?:\\.un)?)?|mul(?:\\.ovf(?:\\.un)?)?|add(?:\\.ovf(?:\\.un)?)?|stloc(?:\\.[0-3s])?|refany(?:type|val)|blt(?:\\.un)?(?:\\.s)?|ble(?:\\.un)?(?:\\.s)?|bgt(?:\\.un)?(?:\\.s)?|bge(?:\\.un)?(?:\\.s)?|unbox(?:\\.any)?|init(?:blk|obj)|call(?:i|virt)?|brfalse(?:\\.s)?|bne\\.un(?:\\.s)?|ldloca(?:\\.s)?|brzero(?:\\.s)?|brtrue(?:\\.s)?|brnull(?:\\.s)?|brinst(?:\\.s)?|starg(?:\\.s)?|leave(?:\\.s)?|shr(?:\\.un)?|rem(?:\\.un)?|div(?:\\.un)?|clt(?:\\.un)?|alignment|castclass|ldvirtftn|beq(?:\\.s)?|ckfinite|ldsflda|ldtoken|localloc|mkrefany|rethrow|cgt\\.un|arglist|switch|stsfld|sizeof|newobj|newarr|ldsfld|ldnull|ldflda|isinst|throw|stobj|stfld|ldstr|ldobj|ldlen|ldftn|ldfld|cpobj|cpblk|break|br\\.s|xor|shl|ret|pop|not|nop|neg|jmp|dup|cgt|ceq|box|and|or|br)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        number: /\\b-?(?:0x[0-9a-f]+|\\d+)(?:\\.[0-9a-f]+)?\\b/i,\n        punctuation: /[{}[\\];(),:=]|IL_[0-9A-Za-z]+/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvY2lsLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLElBQUlDLFdBQVcsR0FBRztBQUNsQkQsSUFBSUUsT0FBTyxHQUFHLEVBQUU7QUFDaEIsU0FBU0YsSUFBSUcsS0FBSztJQUNoQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7UUFDVEMsUUFBUTtZQUNOQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBQyxXQUFXO1lBQ1RGLFNBQVM7WUFDVEcsWUFBWTtZQUNaQyxPQUFPO1FBQ1Q7UUFDQSxpQ0FBaUM7UUFDakNDLFVBQVU7UUFDVkMsU0FDRTtRQUNGQyxVQUNFO1FBQ0ZDLFNBQVM7UUFDVEMsUUFBUTtRQUNSQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jaWwuanM/MjlkYyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBjaWxcbmNpbC5kaXNwbGF5TmFtZSA9ICdjaWwnXG5jaWwuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBjaWwoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmNpbCA9IHtcbiAgICBjb21tZW50OiAvXFwvXFwvLiovLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyhbXCInXSkoPzpcXFxcKD86XFxyXFxufFtcXHNcXFNdKXwoPyFcXDEpW15cXFxcXFxyXFxuXSkqXFwxLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgZGlyZWN0aXZlOiB7XG4gICAgICBwYXR0ZXJuOiAvKF58XFxXKVxcLlthLXpdKyg/PVxccykvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAnY2xhc3MtbmFtZSdcbiAgICB9LFxuICAgIC8vIEFjdHVhbGx5IGFuIGFzc2VtYmx5IHJlZmVyZW5jZVxuICAgIHZhcmlhYmxlOiAvXFxbW1xcd1xcLl0rXFxdLyxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OmFic3RyYWN0fGFuc2l8YXNzZW1ibHl8YXV0b3xhdXRvY2hhcnxiZWZvcmVmaWVsZGluaXR8Ym9vbHxic3RyfGJ5dmFsc3RyfGNhdGNofGNoYXJ8Y2lsfGNsYXNzfGN1cnJlbmN5fGRhdGV8ZGVjaW1hbHxkZWZhdWx0fGVudW18ZXJyb3J8ZXhwbGljaXR8ZXh0ZW5kc3xleHRlcm58ZmFtYW5kYXNzZW18ZmFtaWx5fGZhbW9yYXNzZW18ZmluYWwoPzpseSk/fGZsb2F0MzJ8ZmxvYXQ2NHxoaWRlYnlzaWd8dT9pbnQoPzo4fDE2fDMyfDY0KT98aWFudHxpZGlzcGF0Y2h8aW1wbGVtZW50c3xpbXBvcnR8aW5pdG9ubHl8aW5zdGFuY2V8aW50ZXJmYWNlfGl1bmtub3dufGxpdGVyYWx8bHBzdHJ8bHBzdHJ1Y3R8bHB0c3RyfGxwd3N0cnxtYW5hZ2VkfG1ldGhvZHxuYXRpdmUoPzpUeXBlKT98bmVzdGVkfG5ld3Nsb3R8b2JqZWN0KD86cmVmKT98cGludm9rZWltcGx8cHJpdmF0ZXxwcml2YXRlc2NvcGV8cHVibGljfHJlcXNlY29ianxydHNwZWNpYWxuYW1lfHJ1bnRpbWV8c2VhbGVkfHNlcXVlbnRpYWx8c2VyaWFsaXphYmxlfHNwZWNpYWxuYW1lfHN0YXRpY3xzdHJpbmd8c3RydWN0fHN5c2NoYXJ8dGJzdHJ8dW5pY29kZXx1bm1hbmFnZWRleHB8dW5zaWduZWR8dmFsdWUoPzp0eXBlKT98dmFyaWFudHx2aXJ0dWFsfHZvaWQpXFxiLyxcbiAgICBmdW5jdGlvbjpcbiAgICAgIC9cXGIoPzooPzpjb25zdHJhaW5lZHxub3xyZWFkb25seXx0YWlsfHVuYWxpZ25lZHx2b2xhdGlsZSlcXC4pPyg/OmNvbnZcXC4oPzpbaXVdWzEyNDhdP3xvdmZcXC5baXVdWzEyNDhdPyg/OlxcLnVuKT98clxcLnVufHI0fHI4KXxsZGNcXC4oPzppNCg/OlxcLlxcZCt8XFwuW21NXTF8XFwucyk/fGk4fHI0fHI4KXxsZGVsZW0oPzpcXC5baXVdWzEyNDhdP3xcXC5yWzQ4XXxcXC5yZWZ8YSk/fGxkaW5kXFwuKD86W2l1XVsxMjQ4XT98cls0OF18cmVmKXxzdGVsZW1cXC4/KD86aVsxMjQ4XT98cls0OF18cmVmKT98c3RpbmRcXC4oPzppWzEyNDhdP3xyWzQ4XXxyZWYpP3xlbmQoPzpmYXVsdHxmaWx0ZXJ8ZmluYWxseSl8bGRhcmcoPzpcXC5bMC0zc118YSg/OlxcLnMpPyk/fGxkbG9jKD86XFwuXFxkK3xcXC5zKT98c3ViKD86XFwub3ZmKD86XFwudW4pPyk/fG11bCg/OlxcLm92Zig/OlxcLnVuKT8pP3xhZGQoPzpcXC5vdmYoPzpcXC51bik/KT98c3Rsb2MoPzpcXC5bMC0zc10pP3xyZWZhbnkoPzp0eXBlfHZhbCl8Ymx0KD86XFwudW4pPyg/OlxcLnMpP3xibGUoPzpcXC51bik/KD86XFwucyk/fGJndCg/OlxcLnVuKT8oPzpcXC5zKT98YmdlKD86XFwudW4pPyg/OlxcLnMpP3x1bmJveCg/OlxcLmFueSk/fGluaXQoPzpibGt8b2JqKXxjYWxsKD86aXx2aXJ0KT98YnJmYWxzZSg/OlxcLnMpP3xibmVcXC51big/OlxcLnMpP3xsZGxvY2EoPzpcXC5zKT98YnJ6ZXJvKD86XFwucyk/fGJydHJ1ZSg/OlxcLnMpP3xicm51bGwoPzpcXC5zKT98YnJpbnN0KD86XFwucyk/fHN0YXJnKD86XFwucyk/fGxlYXZlKD86XFwucyk/fHNocig/OlxcLnVuKT98cmVtKD86XFwudW4pP3xkaXYoPzpcXC51bik/fGNsdCg/OlxcLnVuKT98YWxpZ25tZW50fGNhc3RjbGFzc3xsZHZpcnRmdG58YmVxKD86XFwucyk/fGNrZmluaXRlfGxkc2ZsZGF8bGR0b2tlbnxsb2NhbGxvY3xta3JlZmFueXxyZXRocm93fGNndFxcLnVufGFyZ2xpc3R8c3dpdGNofHN0c2ZsZHxzaXplb2Z8bmV3b2JqfG5ld2FycnxsZHNmbGR8bGRudWxsfGxkZmxkYXxpc2luc3R8dGhyb3d8c3RvYmp8c3RmbGR8bGRzdHJ8bGRvYmp8bGRsZW58bGRmdG58bGRmbGR8Y3BvYmp8Y3BibGt8YnJlYWt8YnJcXC5zfHhvcnxzaGx8cmV0fHBvcHxub3R8bm9wfG5lZ3xqbXB8ZHVwfGNndHxjZXF8Ym94fGFuZHxvcnxicilcXGIvLFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAgbnVtYmVyOiAvXFxiLT8oPzoweFswLTlhLWZdK3xcXGQrKSg/OlxcLlswLTlhLWZdKyk/XFxiL2ksXG4gICAgcHVuY3R1YXRpb246IC9be31bXFxdOygpLDo9XXxJTF9bMC05QS1aYS16XSsvXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiY2lsIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50Iiwic3RyaW5nIiwicGF0dGVybiIsImdyZWVkeSIsImRpcmVjdGl2ZSIsImxvb2tiZWhpbmQiLCJhbGlhcyIsInZhcmlhYmxlIiwia2V5d29yZCIsImZ1bmN0aW9uIiwiYm9vbGVhbiIsIm51bWJlciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/cil.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/clike.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/clike.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = clike;\nclike.displayName = \"clike\";\nclike.aliases = [];\nfunction clike(Prism) {\n    Prism.languages.clike = {\n        comment: [\n            {\n                pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n                lookbehind: true,\n                greedy: true\n            },\n            {\n                pattern: /(^|[^\\\\:])\\/\\/.*/,\n                lookbehind: true,\n                greedy: true\n            }\n        ],\n        string: {\n            pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true\n        },\n        \"class-name\": {\n            pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n            lookbehind: true,\n            inside: {\n                punctuation: /[.\\\\]/\n            }\n        },\n        keyword: /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        function: /\\b\\w+(?=\\()/,\n        number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n        operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n        punctuation: /[{}[\\];(),.:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvY2xpa2UuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsTUFBTUMsV0FBVyxHQUFHO0FBQ3BCRCxNQUFNRSxPQUFPLEdBQUcsRUFBRTtBQUNsQixTQUFTRixNQUFNRyxLQUFLO0lBQ2xCQSxNQUFNQyxTQUFTLENBQUNKLEtBQUssR0FBRztRQUN0QkssU0FBUztZQUNQO2dCQUNFQyxTQUFTO2dCQUNUQyxZQUFZO2dCQUNaQyxRQUFRO1lBQ1Y7WUFDQTtnQkFDRUYsU0FBUztnQkFDVEMsWUFBWTtnQkFDWkMsUUFBUTtZQUNWO1NBQ0Q7UUFDREMsUUFBUTtZQUNOSCxTQUFTO1lBQ1RFLFFBQVE7UUFDVjtRQUNBLGNBQWM7WUFDWkYsU0FDRTtZQUNGQyxZQUFZO1lBQ1pHLFFBQVE7Z0JBQ05DLGFBQWE7WUFDZjtRQUNGO1FBQ0FDLFNBQ0U7UUFDRkMsU0FBUztRQUNUQyxVQUFVO1FBQ1ZDLFFBQVE7UUFDUkMsVUFBVTtRQUNWTCxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jbGlrZS5qcz80ODE0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNsaWtlXG5jbGlrZS5kaXNwbGF5TmFtZSA9ICdjbGlrZSdcbmNsaWtlLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gY2xpa2UoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmNsaWtlID0ge1xuICAgIGNvbW1lbnQ6IFtcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyhefFteXFxcXF0pXFwvXFwqW1xcc1xcU10qPyg/OlxcKlxcL3wkKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyhefFteXFxcXDpdKVxcL1xcLy4qLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9XG4gICAgXSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC8oW1wiJ10pKD86XFxcXCg/OlxcclxcbnxbXFxzXFxTXSl8KD8hXFwxKVteXFxcXFxcclxcbl0pKlxcMS8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgICdjbGFzcy1uYW1lJzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhcXGIoPzpjbGFzc3xleHRlbmRzfGltcGxlbWVudHN8aW5zdGFuY2VvZnxpbnRlcmZhY2V8bmV3fHRyYWl0KVxccyt8XFxiY2F0Y2hcXHMrXFwoKVtcXHcuXFxcXF0rL2ksXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHB1bmN0dWF0aW9uOiAvWy5cXFxcXS9cbiAgICAgIH1cbiAgICB9LFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YnJlYWt8Y2F0Y2h8Y29udGludWV8ZG98ZWxzZXxmaW5hbGx5fGZvcnxmdW5jdGlvbnxpZnxpbnxpbnN0YW5jZW9mfG5ld3xudWxsfHJldHVybnx0aHJvd3x0cnl8d2hpbGUpXFxiLyxcbiAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvLFxuICAgIGZ1bmN0aW9uOiAvXFxiXFx3Kyg/PVxcKCkvLFxuICAgIG51bWJlcjogL1xcYjB4W1xcZGEtZl0rXFxifCg/OlxcYlxcZCsoPzpcXC5cXGQqKT98XFxCXFwuXFxkKykoPzplWystXT9cXGQrKT8vaSxcbiAgICBvcGVyYXRvcjogL1s8Pl09P3xbIT1dPT89P3wtLT98XFwrXFwrP3wmJj98XFx8XFx8P3xbPyovfl4lXS8sXG4gICAgcHVuY3R1YXRpb246IC9be31bXFxdOygpLC46XS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJjbGlrZSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiZ3JlZWR5Iiwic3RyaW5nIiwiaW5zaWRlIiwicHVuY3R1YXRpb24iLCJrZXl3b3JkIiwiYm9vbGVhbiIsImZ1bmN0aW9uIiwibnVtYmVyIiwib3BlcmF0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/clike.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/clojure.js":
/*!************************************************!*\
  !*** ./node_modules/refractor/lang/clojure.js ***!
  \************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = clojure;\nclojure.displayName = \"clojure\";\nclojure.aliases = [];\nfunction clojure(Prism) {\n    // Copied from https://github.com/jeluard/prism-clojure\n    Prism.languages.clojure = {\n        comment: {\n            pattern: /;.*/,\n            greedy: true\n        },\n        string: {\n            pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n            greedy: true\n        },\n        char: /\\\\\\w+/,\n        symbol: {\n            pattern: /(^|[\\s()\\[\\]{},])::?[\\w*+!?'<>=/.-]+/,\n            lookbehind: true\n        },\n        keyword: {\n            pattern: /(\\()(?:-|->|->>|\\.|\\.\\.|\\*|\\/|\\+|<|<=|=|==|>|>=|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|cond|conj|cons|constantly|construct-proxy|contains\\?|count|create-ns|create-struct|cycle|dec|declare|def|def-|definline|definterface|defmacro|defmethod|defmulti|defn|defn-|defonce|defproject|defprotocol|defrecord|defstruct|deftype|deref|difference|disj|dissoc|distinct|do|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\\?|ensure|eval|every\\?|false\\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|fn|fnseq|for|frest|gensym|get|get-proxy-class|hash-map|hash-set|identical\\?|identity|if|if-let|if-not|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\\?|last|lazy-cat|lazy-cons|left|lefts|let|line-seq|list|list\\*|load|load-file|locking|long|loop|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|monitor-enter|name|namespace|neg\\?|new|newline|next|nil\\?|node|not|not-any\\?|not-every\\?|not=|ns|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|quote|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|recur|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\\?|set|set!|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\\?|split-at|split-with|str|string\\?|struct|struct-map|subs|subvec|symbol|symbol\\?|sync|take|take-nth|take-while|test|throw|time|to-array|to-array-2d|tree-seq|true\\?|try|union|up|update-proxy|val|vals|var|var-get|var-set|var\\?|vector|vector-zip|vector\\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\\?|zipmap|zipper)(?=[\\s)]|$)/,\n            lookbehind: true\n        },\n        boolean: /\\b(?:false|nil|true)\\b/,\n        number: {\n            pattern: /(^|[^\\w$@])(?:\\d+(?:[/.]\\d+)?(?:e[+-]?\\d+)?|0x[a-f0-9]+|[1-9]\\d?r[a-z0-9]+)[lmn]?(?![\\w$@])/i,\n            lookbehind: true\n        },\n        function: {\n            pattern: /((?:^|[^'])\\()[\\w*+!?'<>=/.-]+(?=[\\s)]|$)/,\n            lookbehind: true\n        },\n        operator: /[#@^`~]/,\n        punctuation: /[{}\\[\\](),]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvY2xvanVyZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxRQUFRQyxXQUFXLEdBQUc7QUFDdEJELFFBQVFFLE9BQU8sR0FBRyxFQUFFO0FBQ3BCLFNBQVNGLFFBQVFHLEtBQUs7SUFDcEIsdURBQXVEO0lBQ3ZEQSxNQUFNQyxTQUFTLENBQUNKLE9BQU8sR0FBRztRQUN4QkssU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBQyxRQUFRO1lBQ05GLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FFLE1BQU07UUFDTkMsUUFBUTtZQUNOSixTQUFTO1lBQ1RLLFlBQVk7UUFDZDtRQUNBQyxTQUFTO1lBQ1BOLFNBQ0U7WUFDRkssWUFBWTtRQUNkO1FBQ0FFLFNBQVM7UUFDVEMsUUFBUTtZQUNOUixTQUNFO1lBQ0ZLLFlBQVk7UUFDZDtRQUNBSSxVQUFVO1lBQ1JULFNBQVM7WUFDVEssWUFBWTtRQUNkO1FBQ0FLLFVBQVU7UUFDVkMsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvY2xvanVyZS5qcz81OTU5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNsb2p1cmVcbmNsb2p1cmUuZGlzcGxheU5hbWUgPSAnY2xvanVyZSdcbmNsb2p1cmUuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBjbG9qdXJlKFByaXNtKSB7XG4gIC8vIENvcGllZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9qZWx1YXJkL3ByaXNtLWNsb2p1cmVcbiAgUHJpc20ubGFuZ3VhZ2VzLmNsb2p1cmUgPSB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogLzsuKi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1wiKD86W15cIlxcXFxdfFxcXFwuKSpcIi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGNoYXI6IC9cXFxcXFx3Ky8sXG4gICAgc3ltYm9sOiB7XG4gICAgICBwYXR0ZXJuOiAvKF58W1xccygpXFxbXFxde30sXSk6Oj9bXFx3KishPyc8Pj0vLi1dKy8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBrZXl3b3JkOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKFxcKCkoPzotfC0+fC0+PnxcXC58XFwuXFwufFxcKnxcXC98XFwrfDx8PD18PXw9PXw+fD49fGFjY2Vzc29yfGFnZW50fGFnZW50LWVycm9yc3xhZ2V0fGFsZW5ndGh8YWxsLW5zfGFsdGVyfGFuZHxhcHBlbmQtY2hpbGR8YXBwbHl8YXJyYXktbWFwfGFzZXR8YXNldC1ib29sZWFufGFzZXQtYnl0ZXxhc2V0LWNoYXJ8YXNldC1kb3VibGV8YXNldC1mbG9hdHxhc2V0LWludHxhc2V0LWxvbmd8YXNldC1zaG9ydHxhc3NlcnR8YXNzb2N8YXdhaXR8YXdhaXQtZm9yfGJlYW58YmluZGluZ3xiaXQtYW5kfGJpdC1ub3R8Yml0LW9yfGJpdC1zaGlmdC1sZWZ0fGJpdC1zaGlmdC1yaWdodHxiaXQteG9yfGJvb2xlYW58YnJhbmNoXFw/fGJ1dGxhc3R8Ynl0ZXxjYXN0fGNoYXJ8Y2hpbGRyZW58Y2xhc3N8Y2xlYXItYWdlbnQtZXJyb3JzfGNvbW1lbnR8Y29tbXV0ZXxjb21wfGNvbXBhcmF0b3J8Y29tcGxlbWVudHxjb25jYXR8Y29uZHxjb25qfGNvbnN8Y29uc3RhbnRseXxjb25zdHJ1Y3QtcHJveHl8Y29udGFpbnNcXD98Y291bnR8Y3JlYXRlLW5zfGNyZWF0ZS1zdHJ1Y3R8Y3ljbGV8ZGVjfGRlY2xhcmV8ZGVmfGRlZi18ZGVmaW5saW5lfGRlZmludGVyZmFjZXxkZWZtYWNyb3xkZWZtZXRob2R8ZGVmbXVsdGl8ZGVmbnxkZWZuLXxkZWZvbmNlfGRlZnByb2plY3R8ZGVmcHJvdG9jb2x8ZGVmcmVjb3JkfGRlZnN0cnVjdHxkZWZ0eXBlfGRlcmVmfGRpZmZlcmVuY2V8ZGlzanxkaXNzb2N8ZGlzdGluY3R8ZG98ZG9hbGx8ZG9jfGRvcnVufGRvc2VxfGRvc3luY3xkb3RpbWVzfGRvdG98ZG91YmxlfGRvd258ZHJvcHxkcm9wLXdoaWxlfGVkaXR8ZW5kXFw/fGVuc3VyZXxldmFsfGV2ZXJ5XFw/fGZhbHNlXFw/fGZmaXJzdHxmaWxlLXNlcXxmaWx0ZXJ8ZmluZHxmaW5kLWRvY3xmaW5kLW5zfGZpbmQtdmFyfGZpcnN0fGZsb2F0fGZsdXNofGZufGZuc2VxfGZvcnxmcmVzdHxnZW5zeW18Z2V0fGdldC1wcm94eS1jbGFzc3xoYXNoLW1hcHxoYXNoLXNldHxpZGVudGljYWxcXD98aWRlbnRpdHl8aWZ8aWYtbGV0fGlmLW5vdHxpbXBvcnR8aW4tbnN8aW5jfGluZGV4fGluc2VydC1jaGlsZHxpbnNlcnQtbGVmdHxpbnNlcnQtcmlnaHR8aW5zcGVjdC10YWJsZXxpbnNwZWN0LXRyZWV8aW5zdGFuY2VcXD98aW50fGludGVybGVhdmV8aW50ZXJzZWN0aW9ufGludG98aW50by1hcnJheXxpdGVyYXRlfGpvaW58a2V5fGtleXN8a2V5d29yZHxrZXl3b3JkXFw/fGxhc3R8bGF6eS1jYXR8bGF6eS1jb25zfGxlZnR8bGVmdHN8bGV0fGxpbmUtc2VxfGxpc3R8bGlzdFxcKnxsb2FkfGxvYWQtZmlsZXxsb2NraW5nfGxvbmd8bG9vcHxtYWNyb2V4cGFuZHxtYWNyb2V4cGFuZC0xfG1ha2UtYXJyYXl8bWFrZS1ub2RlfG1hcHxtYXAtaW52ZXJ0fG1hcFxcP3xtYXBjYXR8bWF4fG1heC1rZXl8bWVtZm58bWVyZ2V8bWVyZ2Utd2l0aHxtZXRhfG1pbnxtaW4ta2V5fG1vbml0b3ItZW50ZXJ8bmFtZXxuYW1lc3BhY2V8bmVnXFw/fG5ld3xuZXdsaW5lfG5leHR8bmlsXFw/fG5vZGV8bm90fG5vdC1hbnlcXD98bm90LWV2ZXJ5XFw/fG5vdD18bnN8bnMtaW1wb3J0c3xucy1pbnRlcm5zfG5zLW1hcHxucy1uYW1lfG5zLXB1YmxpY3N8bnMtcmVmZXJzfG5zLXJlc29sdmV8bnMtdW5tYXB8bnRofG50aHJlc3R8b3J8cGFyc2V8cGFydGlhbHxwYXRofHBlZWt8cG9wfHBvc1xcP3xwcnxwci1zdHJ8cHJpbnR8cHJpbnQtc3RyfHByaW50bG58cHJpbnRsbi1zdHJ8cHJufHBybi1zdHJ8cHJvamVjdHxwcm94eXxwcm94eS1tYXBwaW5nc3xxdW90fHF1b3RlfHJhbmR8cmFuZC1pbnR8cmFuZ2V8cmUtZmluZHxyZS1ncm91cHN8cmUtbWF0Y2hlcnxyZS1tYXRjaGVzfHJlLXBhdHRlcm58cmUtc2VxfHJlYWR8cmVhZC1saW5lfHJlY3VyfHJlZHVjZXxyZWZ8cmVmLXNldHxyZWZlcnxyZW18cmVtb3ZlfHJlbW92ZS1tZXRob2R8cmVtb3ZlLW5zfHJlbmFtZXxyZW5hbWUta2V5c3xyZXBlYXR8cmVwbGFjZXxyZXBsaWNhdGV8cmVzb2x2ZXxyZXN0fHJlc3VsdHNldC1zZXF8cmV2ZXJzZXxyZmlyc3R8cmlnaHR8cmlnaHRzfHJvb3R8cnJlc3R8cnNlcXxzZWNvbmR8c2VsZWN0fHNlbGVjdC1rZXlzfHNlbmR8c2VuZC1vZmZ8c2VxfHNlcS16aXB8c2VxXFw/fHNldHxzZXQhfHNob3J0fHNsdXJwfHNvbWV8c29ydHxzb3J0LWJ5fHNvcnRlZC1tYXB8c29ydGVkLW1hcC1ieXxzb3J0ZWQtc2V0fHNwZWNpYWwtc3ltYm9sXFw/fHNwbGl0LWF0fHNwbGl0LXdpdGh8c3RyfHN0cmluZ1xcP3xzdHJ1Y3R8c3RydWN0LW1hcHxzdWJzfHN1YnZlY3xzeW1ib2x8c3ltYm9sXFw/fHN5bmN8dGFrZXx0YWtlLW50aHx0YWtlLXdoaWxlfHRlc3R8dGhyb3d8dGltZXx0by1hcnJheXx0by1hcnJheS0yZHx0cmVlLXNlcXx0cnVlXFw/fHRyeXx1bmlvbnx1cHx1cGRhdGUtcHJveHl8dmFsfHZhbHN8dmFyfHZhci1nZXR8dmFyLXNldHx2YXJcXD98dmVjdG9yfHZlY3Rvci16aXB8dmVjdG9yXFw/fHdoZW58d2hlbi1maXJzdHx3aGVuLWxldHx3aGVuLW5vdHx3aXRoLWxvY2FsLXZhcnN8d2l0aC1tZXRhfHdpdGgtb3Blbnx3aXRoLW91dC1zdHJ8eG1sLXNlcXx4bWwtemlwfHplcm9cXD98emlwbWFwfHppcHBlcikoPz1bXFxzKV18JCkvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfG5pbHx0cnVlKVxcYi8sXG4gICAgbnVtYmVyOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKF58W15cXHckQF0pKD86XFxkKyg/OlsvLl1cXGQrKT8oPzplWystXT9cXGQrKT98MHhbYS1mMC05XSt8WzEtOV1cXGQ/clthLXowLTldKylbbG1uXT8oPyFbXFx3JEBdKS9pLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgZnVuY3Rpb246IHtcbiAgICAgIHBhdHRlcm46IC8oKD86XnxbXiddKVxcKClbXFx3KishPyc8Pj0vLi1dKyg/PVtcXHMpXXwkKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBvcGVyYXRvcjogL1sjQF5gfl0vLFxuICAgIHB1bmN0dWF0aW9uOiAvW3t9XFxbXFxdKCksXS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJjbG9qdXJlIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImdyZWVkeSIsInN0cmluZyIsImNoYXIiLCJzeW1ib2wiLCJsb29rYmVoaW5kIiwia2V5d29yZCIsImJvb2xlYW4iLCJudW1iZXIiLCJmdW5jdGlvbiIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/clojure.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/cmake.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/cmake.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = cmake;\ncmake.displayName = \"cmake\";\ncmake.aliases = [];\nfunction cmake(Prism) {\n    Prism.languages.cmake = {\n        comment: /#.*/,\n        string: {\n            pattern: /\"(?:[^\\\\\"]|\\\\.)*\"/,\n            greedy: true,\n            inside: {\n                interpolation: {\n                    pattern: /\\$\\{(?:[^{}$]|\\$\\{[^{}$]*\\})*\\}/,\n                    inside: {\n                        punctuation: /\\$\\{|\\}/,\n                        variable: /\\w+/\n                    }\n                }\n            }\n        },\n        variable: /\\b(?:CMAKE_\\w+|\\w+_(?:(?:BINARY|SOURCE)_DIR|DESCRIPTION|HOMEPAGE_URL|ROOT|VERSION(?:_MAJOR|_MINOR|_PATCH|_TWEAK)?)|(?:ANDROID|APPLE|BORLAND|BUILD_SHARED_LIBS|CACHE|CPACK_(?:ABSOLUTE_DESTINATION_FILES|COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY|ERROR_ON_ABSOLUTE_INSTALL_DESTINATION|INCLUDE_TOPLEVEL_DIRECTORY|INSTALL_DEFAULT_DIRECTORY_PERMISSIONS|INSTALL_SCRIPT|PACKAGING_INSTALL_PREFIX|SET_DESTDIR|WARN_ON_ABSOLUTE_INSTALL_DESTINATION)|CTEST_(?:BINARY_DIRECTORY|BUILD_COMMAND|BUILD_NAME|BZR_COMMAND|BZR_UPDATE_OPTIONS|CHANGE_ID|CHECKOUT_COMMAND|CONFIGURATION_TYPE|CONFIGURE_COMMAND|COVERAGE_COMMAND|COVERAGE_EXTRA_FLAGS|CURL_OPTIONS|CUSTOM_(?:COVERAGE_EXCLUDE|ERROR_EXCEPTION|ERROR_MATCH|ERROR_POST_CONTEXT|ERROR_PRE_CONTEXT|MAXIMUM_FAILED_TEST_OUTPUT_SIZE|MAXIMUM_NUMBER_OF_(?:ERRORS|WARNINGS)|MAXIMUM_PASSED_TEST_OUTPUT_SIZE|MEMCHECK_IGNORE|POST_MEMCHECK|POST_TEST|PRE_MEMCHECK|PRE_TEST|TESTS_IGNORE|WARNING_EXCEPTION|WARNING_MATCH)|CVS_CHECKOUT|CVS_COMMAND|CVS_UPDATE_OPTIONS|DROP_LOCATION|DROP_METHOD|DROP_SITE|DROP_SITE_CDASH|DROP_SITE_PASSWORD|DROP_SITE_USER|EXTRA_COVERAGE_GLOB|GIT_COMMAND|GIT_INIT_SUBMODULES|GIT_UPDATE_CUSTOM|GIT_UPDATE_OPTIONS|HG_COMMAND|HG_UPDATE_OPTIONS|LABELS_FOR_SUBPROJECTS|MEMORYCHECK_(?:COMMAND|COMMAND_OPTIONS|SANITIZER_OPTIONS|SUPPRESSIONS_FILE|TYPE)|NIGHTLY_START_TIME|P4_CLIENT|P4_COMMAND|P4_OPTIONS|P4_UPDATE_OPTIONS|RUN_CURRENT_SCRIPT|SCP_COMMAND|SITE|SOURCE_DIRECTORY|SUBMIT_URL|SVN_COMMAND|SVN_OPTIONS|SVN_UPDATE_OPTIONS|TEST_LOAD|TEST_TIMEOUT|TRIGGER_SITE|UPDATE_COMMAND|UPDATE_OPTIONS|UPDATE_VERSION_ONLY|USE_LAUNCHERS)|CYGWIN|ENV|EXECUTABLE_OUTPUT_PATH|GHS-MULTI|IOS|LIBRARY_OUTPUT_PATH|MINGW|MSVC(?:10|11|12|14|60|70|71|80|90|_IDE|_TOOLSET_VERSION|_VERSION)?|MSYS|PROJECT_(?:BINARY_DIR|DESCRIPTION|HOMEPAGE_URL|NAME|SOURCE_DIR|VERSION|VERSION_(?:MAJOR|MINOR|PATCH|TWEAK))|UNIX|WIN32|WINCE|WINDOWS_PHONE|WINDOWS_STORE|XCODE|XCODE_VERSION))\\b/,\n        property: /\\b(?:cxx_\\w+|(?:ARCHIVE_OUTPUT_(?:DIRECTORY|NAME)|COMPILE_DEFINITIONS|COMPILE_PDB_NAME|COMPILE_PDB_OUTPUT_DIRECTORY|EXCLUDE_FROM_DEFAULT_BUILD|IMPORTED_(?:IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_LANGUAGES|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|NO_SONAME|OBJECTS|SONAME)|INTERPROCEDURAL_OPTIMIZATION|LIBRARY_OUTPUT_DIRECTORY|LIBRARY_OUTPUT_NAME|LINK_FLAGS|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|MAP_IMPORTED_CONFIG|OSX_ARCHITECTURES|OUTPUT_NAME|PDB_NAME|PDB_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_NAME|STATIC_LIBRARY_FLAGS|VS_CSHARP|VS_DOTNET_REFERENCEPROP|VS_DOTNET_REFERENCE|VS_GLOBAL_SECTION_POST|VS_GLOBAL_SECTION_PRE|VS_GLOBAL|XCODE_ATTRIBUTE)_\\w+|\\w+_(?:CLANG_TIDY|COMPILER_LAUNCHER|CPPCHECK|CPPLINT|INCLUDE_WHAT_YOU_USE|OUTPUT_NAME|POSTFIX|VISIBILITY_PRESET)|ABSTRACT|ADDITIONAL_MAKE_CLEAN_FILES|ADVANCED|ALIASED_TARGET|ALLOW_DUPLICATE_CUSTOM_TARGETS|ANDROID_(?:ANT_ADDITIONAL_OPTIONS|API|API_MIN|ARCH|ASSETS_DIRECTORIES|GUI|JAR_DEPENDENCIES|NATIVE_LIB_DEPENDENCIES|NATIVE_LIB_DIRECTORIES|PROCESS_MAX|PROGUARD|PROGUARD_CONFIG_PATH|SECURE_PROPS_PATH|SKIP_ANT_STEP|STL_TYPE)|ARCHIVE_OUTPUT_DIRECTORY|ATTACHED_FILES|ATTACHED_FILES_ON_FAIL|AUTOGEN_(?:BUILD_DIR|ORIGIN_DEPENDS|PARALLEL|SOURCE_GROUP|TARGETS_FOLDER|TARGET_DEPENDS)|AUTOMOC|AUTOMOC_(?:COMPILER_PREDEFINES|DEPEND_FILTERS|EXECUTABLE|MACRO_NAMES|MOC_OPTIONS|SOURCE_GROUP|TARGETS_FOLDER)|AUTORCC|AUTORCC_EXECUTABLE|AUTORCC_OPTIONS|AUTORCC_SOURCE_GROUP|AUTOUIC|AUTOUIC_EXECUTABLE|AUTOUIC_OPTIONS|AUTOUIC_SEARCH_PATHS|BINARY_DIR|BUILDSYSTEM_TARGETS|BUILD_RPATH|BUILD_RPATH_USE_ORIGIN|BUILD_WITH_INSTALL_NAME_DIR|BUILD_WITH_INSTALL_RPATH|BUNDLE|BUNDLE_EXTENSION|CACHE_VARIABLES|CLEAN_NO_CUSTOM|COMMON_LANGUAGE_RUNTIME|COMPATIBLE_INTERFACE_(?:BOOL|NUMBER_MAX|NUMBER_MIN|STRING)|COMPILE_(?:DEFINITIONS|FEATURES|FLAGS|OPTIONS|PDB_NAME|PDB_OUTPUT_DIRECTORY)|COST|CPACK_DESKTOP_SHORTCUTS|CPACK_NEVER_OVERWRITE|CPACK_PERMANENT|CPACK_STARTUP_SHORTCUTS|CPACK_START_MENU_SHORTCUTS|CPACK_WIX_ACL|CROSSCOMPILING_EMULATOR|CUDA_EXTENSIONS|CUDA_PTX_COMPILATION|CUDA_RESOLVE_DEVICE_SYMBOLS|CUDA_SEPARABLE_COMPILATION|CUDA_STANDARD|CUDA_STANDARD_REQUIRED|CXX_EXTENSIONS|CXX_STANDARD|CXX_STANDARD_REQUIRED|C_EXTENSIONS|C_STANDARD|C_STANDARD_REQUIRED|DEBUG_CONFIGURATIONS|DEFINE_SYMBOL|DEFINITIONS|DEPENDS|DEPLOYMENT_ADDITIONAL_FILES|DEPLOYMENT_REMOTE_DIRECTORY|DISABLED|DISABLED_FEATURES|ECLIPSE_EXTRA_CPROJECT_CONTENTS|ECLIPSE_EXTRA_NATURES|ENABLED_FEATURES|ENABLED_LANGUAGES|ENABLE_EXPORTS|ENVIRONMENT|EXCLUDE_FROM_ALL|EXCLUDE_FROM_DEFAULT_BUILD|EXPORT_NAME|EXPORT_PROPERTIES|EXTERNAL_OBJECT|EchoString|FAIL_REGULAR_EXPRESSION|FIND_LIBRARY_USE_LIB32_PATHS|FIND_LIBRARY_USE_LIB64_PATHS|FIND_LIBRARY_USE_LIBX32_PATHS|FIND_LIBRARY_USE_OPENBSD_VERSIONING|FIXTURES_CLEANUP|FIXTURES_REQUIRED|FIXTURES_SETUP|FOLDER|FRAMEWORK|Fortran_FORMAT|Fortran_MODULE_DIRECTORY|GENERATED|GENERATOR_FILE_NAME|GENERATOR_IS_MULTI_CONFIG|GHS_INTEGRITY_APP|GHS_NO_SOURCE_GROUP_FILE|GLOBAL_DEPENDS_DEBUG_MODE|GLOBAL_DEPENDS_NO_CYCLES|GNUtoMS|HAS_CXX|HEADER_FILE_ONLY|HELPSTRING|IMPLICIT_DEPENDS_INCLUDE_TRANSFORM|IMPORTED|IMPORTED_(?:COMMON_LANGUAGE_RUNTIME|CONFIGURATIONS|GLOBAL|IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_(?:LANGUAGES|LIBRARIES|MULTIPLICITY)|LOCATION|NO_SONAME|OBJECTS|SONAME)|IMPORT_PREFIX|IMPORT_SUFFIX|INCLUDE_DIRECTORIES|INCLUDE_REGULAR_EXPRESSION|INSTALL_NAME_DIR|INSTALL_RPATH|INSTALL_RPATH_USE_LINK_PATH|INTERFACE_(?:AUTOUIC_OPTIONS|COMPILE_DEFINITIONS|COMPILE_FEATURES|COMPILE_OPTIONS|INCLUDE_DIRECTORIES|LINK_DEPENDS|LINK_DIRECTORIES|LINK_LIBRARIES|LINK_OPTIONS|POSITION_INDEPENDENT_CODE|SOURCES|SYSTEM_INCLUDE_DIRECTORIES)|INTERPROCEDURAL_OPTIMIZATION|IN_TRY_COMPILE|IOS_INSTALL_COMBINED|JOB_POOLS|JOB_POOL_COMPILE|JOB_POOL_LINK|KEEP_EXTENSION|LABELS|LANGUAGE|LIBRARY_OUTPUT_DIRECTORY|LINKER_LANGUAGE|LINK_(?:DEPENDS|DEPENDS_NO_SHARED|DIRECTORIES|FLAGS|INTERFACE_LIBRARIES|INTERFACE_MULTIPLICITY|LIBRARIES|OPTIONS|SEARCH_END_STATIC|SEARCH_START_STATIC|WHAT_YOU_USE)|LISTFILE_STACK|LOCATION|MACOSX_BUNDLE|MACOSX_BUNDLE_INFO_PLIST|MACOSX_FRAMEWORK_INFO_PLIST|MACOSX_PACKAGE_LOCATION|MACOSX_RPATH|MACROS|MANUALLY_ADDED_DEPENDENCIES|MEASUREMENT|MODIFIED|NAME|NO_SONAME|NO_SYSTEM_FROM_IMPORTED|OBJECT_DEPENDS|OBJECT_OUTPUTS|OSX_ARCHITECTURES|OUTPUT_NAME|PACKAGES_FOUND|PACKAGES_NOT_FOUND|PARENT_DIRECTORY|PASS_REGULAR_EXPRESSION|PDB_NAME|PDB_OUTPUT_DIRECTORY|POSITION_INDEPENDENT_CODE|POST_INSTALL_SCRIPT|PREDEFINED_TARGETS_FOLDER|PREFIX|PRE_INSTALL_SCRIPT|PRIVATE_HEADER|PROCESSORS|PROCESSOR_AFFINITY|PROJECT_LABEL|PUBLIC_HEADER|REPORT_UNDEFINED_PROPERTIES|REQUIRED_FILES|RESOURCE|RESOURCE_LOCK|RULE_LAUNCH_COMPILE|RULE_LAUNCH_CUSTOM|RULE_LAUNCH_LINK|RULE_MESSAGES|RUNTIME_OUTPUT_DIRECTORY|RUN_SERIAL|SKIP_AUTOGEN|SKIP_AUTOMOC|SKIP_AUTORCC|SKIP_AUTOUIC|SKIP_BUILD_RPATH|SKIP_RETURN_CODE|SOURCES|SOURCE_DIR|SOVERSION|STATIC_LIBRARY_FLAGS|STATIC_LIBRARY_OPTIONS|STRINGS|SUBDIRECTORIES|SUFFIX|SYMBOLIC|TARGET_ARCHIVES_MAY_BE_SHARED_LIBS|TARGET_MESSAGES|TARGET_SUPPORTS_SHARED_LIBS|TESTS|TEST_INCLUDE_FILE|TEST_INCLUDE_FILES|TIMEOUT|TIMEOUT_AFTER_MATCH|TYPE|USE_FOLDERS|VALUE|VARIABLES|VERSION|VISIBILITY_INLINES_HIDDEN|VS_(?:CONFIGURATION_TYPE|COPY_TO_OUT_DIR|DEBUGGER_(?:COMMAND|COMMAND_ARGUMENTS|ENVIRONMENT|WORKING_DIRECTORY)|DEPLOYMENT_CONTENT|DEPLOYMENT_LOCATION|DOTNET_REFERENCES|DOTNET_REFERENCES_COPY_LOCAL|GLOBAL_KEYWORD|GLOBAL_PROJECT_TYPES|GLOBAL_ROOTNAMESPACE|INCLUDE_IN_VSIX|IOT_STARTUP_TASK|KEYWORD|RESOURCE_GENERATOR|SCC_AUXPATH|SCC_LOCALPATH|SCC_PROJECTNAME|SCC_PROVIDER|SDK_REFERENCES|SHADER_(?:DISABLE_OPTIMIZATIONS|ENABLE_DEBUG|ENTRYPOINT|FLAGS|MODEL|OBJECT_FILE_NAME|OUTPUT_HEADER_FILE|TYPE|VARIABLE_NAME)|STARTUP_PROJECT|TOOL_OVERRIDE|USER_PROPS|WINRT_COMPONENT|WINRT_EXTENSIONS|WINRT_REFERENCES|XAML_TYPE)|WILL_FAIL|WIN32_EXECUTABLE|WINDOWS_EXPORT_ALL_SYMBOLS|WORKING_DIRECTORY|WRAP_EXCLUDE|XCODE_(?:EMIT_EFFECTIVE_PLATFORM_NAME|EXPLICIT_FILE_TYPE|FILE_ATTRIBUTES|LAST_KNOWN_FILE_TYPE|PRODUCT_TYPE|SCHEME_(?:ADDRESS_SANITIZER|ADDRESS_SANITIZER_USE_AFTER_RETURN|ARGUMENTS|DISABLE_MAIN_THREAD_CHECKER|DYNAMIC_LIBRARY_LOADS|DYNAMIC_LINKER_API_USAGE|ENVIRONMENT|EXECUTABLE|GUARD_MALLOC|MAIN_THREAD_CHECKER_STOP|MALLOC_GUARD_EDGES|MALLOC_SCRIBBLE|MALLOC_STACK|THREAD_SANITIZER(?:_STOP)?|UNDEFINED_BEHAVIOUR_SANITIZER(?:_STOP)?|ZOMBIE_OBJECTS))|XCTEST)\\b/,\n        keyword: /\\b(?:add_compile_definitions|add_compile_options|add_custom_command|add_custom_target|add_definitions|add_dependencies|add_executable|add_library|add_link_options|add_subdirectory|add_test|aux_source_directory|break|build_command|build_name|cmake_host_system_information|cmake_minimum_required|cmake_parse_arguments|cmake_policy|configure_file|continue|create_test_sourcelist|ctest_build|ctest_configure|ctest_coverage|ctest_empty_binary_directory|ctest_memcheck|ctest_read_custom_files|ctest_run_script|ctest_sleep|ctest_start|ctest_submit|ctest_test|ctest_update|ctest_upload|define_property|else|elseif|enable_language|enable_testing|endforeach|endfunction|endif|endmacro|endwhile|exec_program|execute_process|export|export_library_dependencies|file|find_file|find_library|find_package|find_path|find_program|fltk_wrap_ui|foreach|function|get_cmake_property|get_directory_property|get_filename_component|get_property|get_source_file_property|get_target_property|get_test_property|if|include|include_directories|include_external_msproject|include_guard|include_regular_expression|install|install_files|install_programs|install_targets|link_directories|link_libraries|list|load_cache|load_command|macro|make_directory|mark_as_advanced|math|message|option|output_required_files|project|qt_wrap_cpp|qt_wrap_ui|remove|remove_definitions|return|separate_arguments|set|set_directory_properties|set_property|set_source_files_properties|set_target_properties|set_tests_properties|site_name|source_group|string|subdir_depends|subdirs|target_compile_definitions|target_compile_features|target_compile_options|target_include_directories|target_link_directories|target_link_libraries|target_link_options|target_sources|try_compile|try_run|unset|use_mangled_mesa|utility_source|variable_requires|variable_watch|while|write_file)(?=\\s*\\()\\b/,\n        boolean: /\\b(?:FALSE|OFF|ON|TRUE)\\b/,\n        namespace: /\\b(?:INTERFACE|PRIVATE|PROPERTIES|PUBLIC|SHARED|STATIC|TARGET_OBJECTS)\\b/,\n        operator: /\\b(?:AND|DEFINED|EQUAL|GREATER|LESS|MATCHES|NOT|OR|STREQUAL|STRGREATER|STRLESS|VERSION_EQUAL|VERSION_GREATER|VERSION_LESS)\\b/,\n        inserted: {\n            pattern: /\\b\\w+::\\w+\\b/,\n            alias: \"class-name\"\n        },\n        number: /\\b\\d+(?:\\.\\d+)*\\b/,\n        function: /\\b[a-z_]\\w*(?=\\s*\\()\\b/i,\n        punctuation: /[()>}]|\\$[<{]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/cmake.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/cobol.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/cobol.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = cobol;\ncobol.displayName = \"cobol\";\ncobol.aliases = [];\nfunction cobol(Prism) {\n    Prism.languages.cobol = {\n        comment: {\n            pattern: /\\*>.*|(^[ \\t]*)\\*.*/m,\n            lookbehind: true,\n            greedy: true\n        },\n        string: {\n            pattern: /[xzgn]?(?:\"(?:[^\\r\\n\"]|\"\")*\"(?!\")|'(?:[^\\r\\n']|'')*'(?!'))/i,\n            greedy: true\n        },\n        level: {\n            pattern: /(^[ \\t]*)\\d+\\b/m,\n            lookbehind: true,\n            greedy: true,\n            alias: \"number\"\n        },\n        \"class-name\": {\n            // https://github.com/antlr/grammars-v4/blob/42edd5b687d183b5fa679e858a82297bd27141e7/cobol85/Cobol85.g4#L1015\n            pattern: /(\\bpic(?:ture)?\\s+)(?:(?:[-\\w$/,:*+<>]|\\.(?!\\s|$))(?:\\(\\d+\\))?)+/i,\n            lookbehind: true,\n            inside: {\n                number: {\n                    pattern: /(\\()\\d+/,\n                    lookbehind: true\n                },\n                punctuation: /[()]/\n            }\n        },\n        keyword: {\n            pattern: /(^|[^\\w-])(?:ABORT|ACCEPT|ACCESS|ADD|ADDRESS|ADVANCING|AFTER|ALIGNED|ALL|ALPHABET|ALPHABETIC|ALPHABETIC-LOWER|ALPHABETIC-UPPER|ALPHANUMERIC|ALPHANUMERIC-EDITED|ALSO|ALTER|ALTERNATE|ANY|ARE|AREA|AREAS|AS|ASCENDING|ASCII|ASSIGN|ASSOCIATED-DATA|ASSOCIATED-DATA-LENGTH|AT|ATTRIBUTE|AUTHOR|AUTO|AUTO-SKIP|BACKGROUND-COLOR|BACKGROUND-COLOUR|BASIS|BEEP|BEFORE|BEGINNING|BELL|BINARY|BIT|BLANK|BLINK|BLOCK|BOTTOM|BOUNDS|BY|BYFUNCTION|BYTITLE|CALL|CANCEL|CAPABLE|CCSVERSION|CD|CF|CH|CHAINING|CHANGED|CHANNEL|CHARACTER|CHARACTERS|CLASS|CLASS-ID|CLOCK-UNITS|CLOSE|CLOSE-DISPOSITION|COBOL|CODE|CODE-SET|COL|COLLATING|COLUMN|COM-REG|COMMA|COMMITMENT|COMMON|COMMUNICATION|COMP|COMP-1|COMP-2|COMP-3|COMP-4|COMP-5|COMPUTATIONAL|COMPUTATIONAL-1|COMPUTATIONAL-2|COMPUTATIONAL-3|COMPUTATIONAL-4|COMPUTATIONAL-5|COMPUTE|CONFIGURATION|CONTAINS|CONTENT|CONTINUE|CONTROL|CONTROL-POINT|CONTROLS|CONVENTION|CONVERTING|COPY|CORR|CORRESPONDING|COUNT|CRUNCH|CURRENCY|CURSOR|DATA|DATA-BASE|DATE|DATE-COMPILED|DATE-WRITTEN|DAY|DAY-OF-WEEK|DBCS|DE|DEBUG-CONTENTS|DEBUG-ITEM|DEBUG-LINE|DEBUG-NAME|DEBUG-SUB-1|DEBUG-SUB-2|DEBUG-SUB-3|DEBUGGING|DECIMAL-POINT|DECLARATIVES|DEFAULT|DEFAULT-DISPLAY|DEFINITION|DELETE|DELIMITED|DELIMITER|DEPENDING|DESCENDING|DESTINATION|DETAIL|DFHRESP|DFHVALUE|DISABLE|DISK|DISPLAY|DISPLAY-1|DIVIDE|DIVISION|DONTCARE|DOUBLE|DOWN|DUPLICATES|DYNAMIC|EBCDIC|EGCS|EGI|ELSE|EMI|EMPTY-CHECK|ENABLE|END|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-OF-PAGE|END-PERFORM|END-READ|END-RECEIVE|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ENDING|ENTER|ENTRY|ENTRY-PROCEDURE|ENVIRONMENT|EOL|EOP|EOS|ERASE|ERROR|ESCAPE|ESI|EVALUATE|EVENT|EVERY|EXCEPTION|EXCLUSIVE|EXHIBIT|EXIT|EXPORT|EXTEND|EXTENDED|EXTERNAL|FD|FILE|FILE-CONTROL|FILLER|FINAL|FIRST|FOOTING|FOR|FOREGROUND-COLOR|FOREGROUND-COLOUR|FROM|FULL|FUNCTION|FUNCTION-POINTER|FUNCTIONNAME|GENERATE|GIVING|GLOBAL|GO|GOBACK|GRID|GROUP|HEADING|HIGH-VALUE|HIGH-VALUES|HIGHLIGHT|I-O|I-O-CONTROL|ID|IDENTIFICATION|IF|IMPLICIT|IMPORT|IN|INDEX|INDEXED|INDICATE|INITIAL|INITIALIZE|INITIATE|INPUT|INPUT-OUTPUT|INSPECT|INSTALLATION|INTEGER|INTO|INVALID|INVOKE|IS|JUST|JUSTIFIED|KANJI|KEPT|KEY|KEYBOARD|LABEL|LANGUAGE|LAST|LB|LD|LEADING|LEFT|LEFTLINE|LENGTH|LENGTH-CHECK|LIBACCESS|LIBPARAMETER|LIBRARY|LIMIT|LIMITS|LINAGE|LINAGE-COUNTER|LINE|LINE-COUNTER|LINES|LINKAGE|LIST|LOCAL|LOCAL-STORAGE|LOCK|LONG-DATE|LONG-TIME|LOW-VALUE|LOW-VALUES|LOWER|LOWLIGHT|MEMORY|MERGE|MESSAGE|MMDDYYYY|MODE|MODULES|MORE-LABELS|MOVE|MULTIPLE|MULTIPLY|NAMED|NATIONAL|NATIONAL-EDITED|NATIVE|NEGATIVE|NETWORK|NEXT|NO|NO-ECHO|NULL|NULLS|NUMBER|NUMERIC|NUMERIC-DATE|NUMERIC-EDITED|NUMERIC-TIME|OBJECT-COMPUTER|OCCURS|ODT|OF|OFF|OMITTED|ON|OPEN|OPTIONAL|ORDER|ORDERLY|ORGANIZATION|OTHER|OUTPUT|OVERFLOW|OVERLINE|OWN|PACKED-DECIMAL|PADDING|PAGE|PAGE-COUNTER|PASSWORD|PERFORM|PF|PH|PIC|PICTURE|PLUS|POINTER|PORT|POSITION|POSITIVE|PRINTER|PRINTING|PRIVATE|PROCEDURE|PROCEDURE-POINTER|PROCEDURES|PROCEED|PROCESS|PROGRAM|PROGRAM-ID|PROGRAM-LIBRARY|PROMPT|PURGE|QUEUE|QUOTE|QUOTES|RANDOM|RD|READ|READER|REAL|RECEIVE|RECEIVED|RECORD|RECORDING|RECORDS|RECURSIVE|REDEFINES|REEL|REF|REFERENCE|REFERENCES|RELATIVE|RELEASE|REMAINDER|REMARKS|REMOTE|REMOVAL|REMOVE|RENAMES|REPLACE|REPLACING|REPORT|REPORTING|REPORTS|REQUIRED|RERUN|RESERVE|RESET|RETURN|RETURN-CODE|RETURNING|REVERSE-VIDEO|REVERSED|REWIND|REWRITE|RF|RH|RIGHT|ROUNDED|RUN|SAME|SAVE|SCREEN|SD|SEARCH|SECTION|SECURE|SECURITY|SEGMENT|SEGMENT-LIMIT|SELECT|SEND|SENTENCE|SEPARATE|SEQUENCE|SEQUENTIAL|SET|SHARED|SHAREDBYALL|SHAREDBYRUNUNIT|SHARING|SHIFT-IN|SHIFT-OUT|SHORT-DATE|SIGN|SIZE|SORT|SORT-CONTROL|SORT-CORE-SIZE|SORT-FILE-SIZE|SORT-MERGE|SORT-MESSAGE|SORT-MODE-SIZE|SORT-RETURN|SOURCE|SOURCE-COMPUTER|SPACE|SPACES|SPECIAL-NAMES|STANDARD|STANDARD-1|STANDARD-2|START|STATUS|STOP|STRING|SUB-QUEUE-1|SUB-QUEUE-2|SUB-QUEUE-3|SUBTRACT|SUM|SUPPRESS|SYMBOL|SYMBOLIC|SYNC|SYNCHRONIZED|TABLE|TALLY|TALLYING|TAPE|TASK|TERMINAL|TERMINATE|TEST|TEXT|THEN|THREAD|THREAD-LOCAL|THROUGH|THRU|TIME|TIMER|TIMES|TITLE|TO|TODAYS-DATE|TODAYS-NAME|TOP|TRAILING|TRUNCATED|TYPE|TYPEDEF|UNDERLINE|UNIT|UNSTRING|UNTIL|UP|UPON|USAGE|USE|USING|VALUE|VALUES|VARYING|VIRTUAL|WAIT|WHEN|WHEN-COMPILED|WITH|WORDS|WORKING-STORAGE|WRITE|YEAR|YYYYDDD|YYYYMMDD|ZERO-FILL|ZEROES|ZEROS)(?![\\w-])/i,\n            lookbehind: true\n        },\n        boolean: {\n            pattern: /(^|[^\\w-])(?:false|true)(?![\\w-])/i,\n            lookbehind: true\n        },\n        number: {\n            pattern: /(^|[^\\w-])(?:[+-]?(?:(?:\\d+(?:[.,]\\d+)?|[.,]\\d+)(?:e[+-]?\\d+)?|zero))(?![\\w-])/i,\n            lookbehind: true\n        },\n        operator: [\n            /<>|[<>]=?|[=+*/&]/,\n            {\n                pattern: /(^|[^\\w-])(?:-|and|equal|greater|less|not|or|than)(?![\\w-])/i,\n                lookbehind: true\n            }\n        ],\n        punctuation: /[.:,()]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/cobol.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/coffeescript.js":
/*!*****************************************************!*\
  !*** ./node_modules/refractor/lang/coffeescript.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = coffeescript;\ncoffeescript.displayName = \"coffeescript\";\ncoffeescript.aliases = [\n    \"coffee\"\n];\nfunction coffeescript(Prism) {\n    ;\n    (function(Prism) {\n        // Ignore comments starting with { to privilege string interpolation highlighting\n        var comment = /#(?!\\{).+/;\n        var interpolation = {\n            pattern: /#\\{[^}]+\\}/,\n            alias: \"variable\"\n        };\n        Prism.languages.coffeescript = Prism.languages.extend(\"javascript\", {\n            comment: comment,\n            string: [\n                // Strings are multiline\n                {\n                    pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n                    greedy: true\n                },\n                {\n                    // Strings are multiline\n                    pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n                    greedy: true,\n                    inside: {\n                        interpolation: interpolation\n                    }\n                }\n            ],\n            keyword: /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n            \"class-member\": {\n                pattern: /@(?!\\d)\\w+/,\n                alias: \"variable\"\n            }\n        });\n        Prism.languages.insertBefore(\"coffeescript\", \"comment\", {\n            \"multiline-comment\": {\n                pattern: /###[\\s\\S]+?###/,\n                alias: \"comment\"\n            },\n            // Block regexp can contain comments and interpolation\n            \"block-regex\": {\n                pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n                alias: \"regex\",\n                inside: {\n                    comment: comment,\n                    interpolation: interpolation\n                }\n            }\n        });\n        Prism.languages.insertBefore(\"coffeescript\", \"string\", {\n            \"inline-javascript\": {\n                pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n                inside: {\n                    delimiter: {\n                        pattern: /^`|`$/,\n                        alias: \"punctuation\"\n                    },\n                    script: {\n                        pattern: /[\\s\\S]+/,\n                        alias: \"language-javascript\",\n                        inside: Prism.languages.javascript\n                    }\n                }\n            },\n            // Block strings\n            \"multiline-string\": [\n                {\n                    pattern: /'''[\\s\\S]*?'''/,\n                    greedy: true,\n                    alias: \"string\"\n                },\n                {\n                    pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n                    greedy: true,\n                    alias: \"string\",\n                    inside: {\n                        interpolation: interpolation\n                    }\n                }\n            ]\n        });\n        Prism.languages.insertBefore(\"coffeescript\", \"keyword\", {\n            // Object property\n            property: /(?!\\d)\\w+(?=\\s*:(?!:))/\n        });\n        delete Prism.languages.coffeescript[\"template-string\"];\n        Prism.languages.coffee = Prism.languages.coffeescript;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvY29mZmVlc2NyaXB0LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLGFBQWFDLFdBQVcsR0FBRztBQUMzQkQsYUFBYUUsT0FBTyxHQUFHO0lBQUM7Q0FBUztBQUNqQyxTQUFTRixhQUFhRyxLQUFLOztJQUN2QixVQUFVQSxLQUFLO1FBQ2YsaUZBQWlGO1FBQ2pGLElBQUlDLFVBQVU7UUFDZCxJQUFJQyxnQkFBZ0I7WUFDbEJDLFNBQVM7WUFDVEMsT0FBTztRQUNUO1FBQ0FKLE1BQU1LLFNBQVMsQ0FBQ1IsWUFBWSxHQUFHRyxNQUFNSyxTQUFTLENBQUNDLE1BQU0sQ0FBQyxjQUFjO1lBQ2xFTCxTQUFTQTtZQUNUTSxRQUFRO2dCQUNOLHdCQUF3QjtnQkFDeEI7b0JBQ0VKLFNBQVM7b0JBQ1RLLFFBQVE7Z0JBQ1Y7Z0JBQ0E7b0JBQ0Usd0JBQXdCO29CQUN4QkwsU0FBUztvQkFDVEssUUFBUTtvQkFDUkMsUUFBUTt3QkFDTlAsZUFBZUE7b0JBQ2pCO2dCQUNGO2FBQ0Q7WUFDRFEsU0FDRTtZQUNGLGdCQUFnQjtnQkFDZFAsU0FBUztnQkFDVEMsT0FBTztZQUNUO1FBQ0Y7UUFDQUosTUFBTUssU0FBUyxDQUFDTSxZQUFZLENBQUMsZ0JBQWdCLFdBQVc7WUFDdEQscUJBQXFCO2dCQUNuQlIsU0FBUztnQkFDVEMsT0FBTztZQUNUO1lBQ0Esc0RBQXNEO1lBQ3RELGVBQWU7Z0JBQ2JELFNBQVM7Z0JBQ1RDLE9BQU87Z0JBQ1BLLFFBQVE7b0JBQ05SLFNBQVNBO29CQUNUQyxlQUFlQTtnQkFDakI7WUFDRjtRQUNGO1FBQ0FGLE1BQU1LLFNBQVMsQ0FBQ00sWUFBWSxDQUFDLGdCQUFnQixVQUFVO1lBQ3JELHFCQUFxQjtnQkFDbkJSLFNBQVM7Z0JBQ1RNLFFBQVE7b0JBQ05HLFdBQVc7d0JBQ1RULFNBQVM7d0JBQ1RDLE9BQU87b0JBQ1Q7b0JBQ0FTLFFBQVE7d0JBQ05WLFNBQVM7d0JBQ1RDLE9BQU87d0JBQ1BLLFFBQVFULE1BQU1LLFNBQVMsQ0FBQ1MsVUFBVTtvQkFDcEM7Z0JBQ0Y7WUFDRjtZQUNBLGdCQUFnQjtZQUNoQixvQkFBb0I7Z0JBQ2xCO29CQUNFWCxTQUFTO29CQUNUSyxRQUFRO29CQUNSSixPQUFPO2dCQUNUO2dCQUNBO29CQUNFRCxTQUFTO29CQUNUSyxRQUFRO29CQUNSSixPQUFPO29CQUNQSyxRQUFRO3dCQUNOUCxlQUFlQTtvQkFDakI7Z0JBQ0Y7YUFDRDtRQUNIO1FBQ0FGLE1BQU1LLFNBQVMsQ0FBQ00sWUFBWSxDQUFDLGdCQUFnQixXQUFXO1lBQ3RELGtCQUFrQjtZQUNsQkksVUFBVTtRQUNaO1FBQ0EsT0FBT2YsTUFBTUssU0FBUyxDQUFDUixZQUFZLENBQUMsa0JBQWtCO1FBQ3RERyxNQUFNSyxTQUFTLENBQUNXLE1BQU0sR0FBR2hCLE1BQU1LLFNBQVMsQ0FBQ1IsWUFBWTtJQUN2RCxHQUFHRztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2NvZmZlZXNjcmlwdC5qcz8wODBhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNvZmZlZXNjcmlwdFxuY29mZmVlc2NyaXB0LmRpc3BsYXlOYW1lID0gJ2NvZmZlZXNjcmlwdCdcbmNvZmZlZXNjcmlwdC5hbGlhc2VzID0gWydjb2ZmZWUnXVxuZnVuY3Rpb24gY29mZmVlc2NyaXB0KFByaXNtKSB7XG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgLy8gSWdub3JlIGNvbW1lbnRzIHN0YXJ0aW5nIHdpdGggeyB0byBwcml2aWxlZ2Ugc3RyaW5nIGludGVycG9sYXRpb24gaGlnaGxpZ2h0aW5nXG4gICAgdmFyIGNvbW1lbnQgPSAvIyg/IVxceykuKy9cbiAgICB2YXIgaW50ZXJwb2xhdGlvbiA9IHtcbiAgICAgIHBhdHRlcm46IC8jXFx7W159XStcXH0vLFxuICAgICAgYWxpYXM6ICd2YXJpYWJsZSdcbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzLmNvZmZlZXNjcmlwdCA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2phdmFzY3JpcHQnLCB7XG4gICAgICBjb21tZW50OiBjb21tZW50LFxuICAgICAgc3RyaW5nOiBbXG4gICAgICAgIC8vIFN0cmluZ3MgYXJlIG11bHRpbGluZVxuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogLycoPzpcXFxcW1xcc1xcU118W15cXFxcJ10pKicvLFxuICAgICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgLy8gU3RyaW5ncyBhcmUgbXVsdGlsaW5lXG4gICAgICAgICAgcGF0dGVybjogL1wiKD86XFxcXFtcXHNcXFNdfFteXFxcXFwiXSkqXCIvLFxuICAgICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIGludGVycG9sYXRpb246IGludGVycG9sYXRpb25cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBrZXl3b3JkOlxuICAgICAgICAvXFxiKD86YW5kfGJyZWFrfGJ5fGNhdGNofGNsYXNzfGNvbnRpbnVlfGRlYnVnZ2VyfGRlbGV0ZXxkb3xlYWNofGVsc2V8ZXh0ZW5kfGV4dGVuZHN8ZmFsc2V8ZmluYWxseXxmb3J8aWZ8aW58aW5zdGFuY2VvZnxpc3xpc250fGxldHxsb29wfG5hbWVzcGFjZXxuZXd8bm98bm90fG51bGx8b2Z8b2ZmfG9ufG9yfG93bnxyZXR1cm58c3VwZXJ8c3dpdGNofHRoZW58dGhpc3x0aHJvd3x0cnVlfHRyeXx0eXBlb2Z8dW5kZWZpbmVkfHVubGVzc3x1bnRpbHx3aGVufHdoaWxlfHdpbmRvd3x3aXRofHllc3x5aWVsZClcXGIvLFxuICAgICAgJ2NsYXNzLW1lbWJlcic6IHtcbiAgICAgICAgcGF0dGVybjogL0AoPyFcXGQpXFx3Ky8sXG4gICAgICAgIGFsaWFzOiAndmFyaWFibGUnXG4gICAgICB9XG4gICAgfSlcbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdjb2ZmZWVzY3JpcHQnLCAnY29tbWVudCcsIHtcbiAgICAgICdtdWx0aWxpbmUtY29tbWVudCc6IHtcbiAgICAgICAgcGF0dGVybjogLyMjI1tcXHNcXFNdKz8jIyMvLFxuICAgICAgICBhbGlhczogJ2NvbW1lbnQnXG4gICAgICB9LFxuICAgICAgLy8gQmxvY2sgcmVnZXhwIGNhbiBjb250YWluIGNvbW1lbnRzIGFuZCBpbnRlcnBvbGF0aW9uXG4gICAgICAnYmxvY2stcmVnZXgnOiB7XG4gICAgICAgIHBhdHRlcm46IC9cXC97M31bXFxzXFxTXSo/XFwvezN9LyxcbiAgICAgICAgYWxpYXM6ICdyZWdleCcsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIGNvbW1lbnQ6IGNvbW1lbnQsXG4gICAgICAgICAgaW50ZXJwb2xhdGlvbjogaW50ZXJwb2xhdGlvblxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSlcbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdjb2ZmZWVzY3JpcHQnLCAnc3RyaW5nJywge1xuICAgICAgJ2lubGluZS1qYXZhc2NyaXB0Jzoge1xuICAgICAgICBwYXR0ZXJuOiAvYCg/OlxcXFxbXFxzXFxTXXxbXlxcXFxgXSkqYC8sXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIGRlbGltaXRlcjoge1xuICAgICAgICAgICAgcGF0dGVybjogL15gfGAkLyxcbiAgICAgICAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgICAgICAgfSxcbiAgICAgICAgICBzY3JpcHQ6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC9bXFxzXFxTXSsvLFxuICAgICAgICAgICAgYWxpYXM6ICdsYW5ndWFnZS1qYXZhc2NyaXB0JyxcbiAgICAgICAgICAgIGluc2lkZTogUHJpc20ubGFuZ3VhZ2VzLmphdmFzY3JpcHRcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICAvLyBCbG9jayBzdHJpbmdzXG4gICAgICAnbXVsdGlsaW5lLXN0cmluZyc6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IC8nJydbXFxzXFxTXSo/JycnLyxcbiAgICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgICAgYWxpYXM6ICdzdHJpbmcnXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXCJcIlwiW1xcc1xcU10qP1wiXCJcIi8sXG4gICAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICAgIGFsaWFzOiAnc3RyaW5nJyxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIGludGVycG9sYXRpb246IGludGVycG9sYXRpb25cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIF1cbiAgICB9KVxuICAgIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ2NvZmZlZXNjcmlwdCcsICdrZXl3b3JkJywge1xuICAgICAgLy8gT2JqZWN0IHByb3BlcnR5XG4gICAgICBwcm9wZXJ0eTogLyg/IVxcZClcXHcrKD89XFxzKjooPyE6KSkvXG4gICAgfSlcbiAgICBkZWxldGUgUHJpc20ubGFuZ3VhZ2VzLmNvZmZlZXNjcmlwdFsndGVtcGxhdGUtc3RyaW5nJ11cbiAgICBQcmlzbS5sYW5ndWFnZXMuY29mZmVlID0gUHJpc20ubGFuZ3VhZ2VzLmNvZmZlZXNjcmlwdFxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiY29mZmVlc2NyaXB0IiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJjb21tZW50IiwiaW50ZXJwb2xhdGlvbiIsInBhdHRlcm4iLCJhbGlhcyIsImxhbmd1YWdlcyIsImV4dGVuZCIsInN0cmluZyIsImdyZWVkeSIsImluc2lkZSIsImtleXdvcmQiLCJpbnNlcnRCZWZvcmUiLCJkZWxpbWl0ZXIiLCJzY3JpcHQiLCJqYXZhc2NyaXB0IiwicHJvcGVydHkiLCJjb2ZmZWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/coffeescript.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/concurnas.js":
/*!**************************************************!*\
  !*** ./node_modules/refractor/lang/concurnas.js ***!
  \**************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = concurnas;\nconcurnas.displayName = \"concurnas\";\nconcurnas.aliases = [\n    \"conc\"\n];\nfunction concurnas(Prism) {\n    Prism.languages.concurnas = {\n        comment: {\n            pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\/\\/.*)/,\n            lookbehind: true,\n            greedy: true\n        },\n        langext: {\n            pattern: /\\b\\w+\\s*\\|\\|[\\s\\S]+?\\|\\|/,\n            greedy: true,\n            inside: {\n                \"class-name\": /^\\w+/,\n                string: {\n                    pattern: /(^\\s*\\|\\|)[\\s\\S]+(?=\\|\\|$)/,\n                    lookbehind: true\n                },\n                punctuation: /\\|\\|/\n            }\n        },\n        function: {\n            pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/,\n            lookbehind: true\n        },\n        keyword: /\\b(?:abstract|actor|also|annotation|assert|async|await|bool|boolean|break|byte|case|catch|changed|char|class|closed|constant|continue|def|default|del|double|elif|else|enum|every|extends|false|finally|float|for|from|global|gpudef|gpukernel|if|import|in|init|inject|int|lambda|local|long|loop|match|new|nodefault|null|of|onchange|open|out|override|package|parfor|parforsync|post|pre|private|protected|provide|provider|public|return|shared|short|single|size_t|sizeof|super|sync|this|throw|trait|trans|transient|true|try|typedef|unchecked|using|val|var|void|while|with)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        number: /\\b0b[01][01_]*L?\\b|\\b0x(?:[\\da-f_]*\\.)?[\\da-f_p+-]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfls]?/i,\n        punctuation: /[{}[\\];(),.:]/,\n        operator: /<==|>==|=>|->|<-|<>|&==|&<>|\\?:?|\\.\\?|\\+\\+|--|[-+*/=<>]=?|[!^~]|\\b(?:and|as|band|bor|bxor|comp|is|isnot|mod|or)\\b=?/,\n        annotation: {\n            pattern: /@(?:\\w+:)?(?:\\w+|\\[[^\\]]+\\])?/,\n            alias: \"builtin\"\n        }\n    };\n    Prism.languages.insertBefore(\"concurnas\", \"langext\", {\n        \"regex-literal\": {\n            pattern: /\\br(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true,\n            inside: {\n                interpolation: {\n                    pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n                    lookbehind: true,\n                    inside: Prism.languages.concurnas\n                },\n                regex: /[\\s\\S]+/\n            }\n        },\n        \"string-literal\": {\n            pattern: /(?:\\B|\\bs)(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true,\n            inside: {\n                interpolation: {\n                    pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n                    lookbehind: true,\n                    inside: Prism.languages.concurnas\n                },\n                string: /[\\s\\S]+/\n            }\n        }\n    });\n    Prism.languages.conc = Prism.languages.concurnas;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvY29uY3VybmFzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLFVBQVVDLFdBQVcsR0FBRztBQUN4QkQsVUFBVUUsT0FBTyxHQUFHO0lBQUM7Q0FBTztBQUM1QixTQUFTRixVQUFVRyxLQUFLO0lBQ3RCQSxNQUFNQyxTQUFTLENBQUNKLFNBQVMsR0FBRztRQUMxQkssU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsUUFBUTtRQUNWO1FBQ0FDLFNBQVM7WUFDUEgsU0FBUztZQUNURSxRQUFRO1lBQ1JFLFFBQVE7Z0JBQ04sY0FBYztnQkFDZEMsUUFBUTtvQkFDTkwsU0FBUztvQkFDVEMsWUFBWTtnQkFDZDtnQkFDQUssYUFBYTtZQUNmO1FBQ0Y7UUFDQUMsVUFBVTtZQUNSUCxTQUFTO1lBQ1RDLFlBQVk7UUFDZDtRQUNBTyxTQUNFO1FBQ0ZDLFNBQVM7UUFDVEMsUUFDRTtRQUNGSixhQUFhO1FBQ2JLLFVBQ0U7UUFDRkMsWUFBWTtZQUNWWixTQUFTO1lBQ1RhLE9BQU87UUFDVDtJQUNGO0lBQ0FoQixNQUFNQyxTQUFTLENBQUNnQixZQUFZLENBQUMsYUFBYSxXQUFXO1FBQ25ELGlCQUFpQjtZQUNmZCxTQUFTO1lBQ1RFLFFBQVE7WUFDUkUsUUFBUTtnQkFDTlcsZUFBZTtvQkFDYmYsU0FDRTtvQkFDRkMsWUFBWTtvQkFDWkcsUUFBUVAsTUFBTUMsU0FBUyxDQUFDSixTQUFTO2dCQUNuQztnQkFDQXNCLE9BQU87WUFDVDtRQUNGO1FBQ0Esa0JBQWtCO1lBQ2hCaEIsU0FBUztZQUNURSxRQUFRO1lBQ1JFLFFBQVE7Z0JBQ05XLGVBQWU7b0JBQ2JmLFNBQ0U7b0JBQ0ZDLFlBQVk7b0JBQ1pHLFFBQVFQLE1BQU1DLFNBQVMsQ0FBQ0osU0FBUztnQkFDbkM7Z0JBQ0FXLFFBQVE7WUFDVjtRQUNGO0lBQ0Y7SUFDQVIsTUFBTUMsU0FBUyxDQUFDbUIsSUFBSSxHQUFHcEIsTUFBTUMsU0FBUyxDQUFDSixTQUFTO0FBQ2xEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2NvbmN1cm5hcy5qcz9kNzYxIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbmN1cm5hc1xuY29uY3VybmFzLmRpc3BsYXlOYW1lID0gJ2NvbmN1cm5hcydcbmNvbmN1cm5hcy5hbGlhc2VzID0gWydjb25jJ11cbmZ1bmN0aW9uIGNvbmN1cm5hcyhQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuY29uY3VybmFzID0ge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKSg/OlxcL1xcKltcXHNcXFNdKj8oPzpcXCpcXC98JCl8XFwvXFwvLiopLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGxhbmdleHQ6IHtcbiAgICAgIHBhdHRlcm46IC9cXGJcXHcrXFxzKlxcfFxcfFtcXHNcXFNdKz9cXHxcXHwvLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgICdjbGFzcy1uYW1lJzogL15cXHcrLyxcbiAgICAgICAgc3RyaW5nOiB7XG4gICAgICAgICAgcGF0dGVybjogLyheXFxzKlxcfFxcfClbXFxzXFxTXSsoPz1cXHxcXHwkKS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICBwdW5jdHVhdGlvbjogL1xcfFxcfC9cbiAgICAgIH1cbiAgICB9LFxuICAgIGZ1bmN0aW9uOiB7XG4gICAgICBwYXR0ZXJuOiAvKCg/Ol58XFxzKWRlZlsgXFx0XSspW2EtekEtWl9dXFx3Kig/PVxccypcXCgpLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YWJzdHJhY3R8YWN0b3J8YWxzb3xhbm5vdGF0aW9ufGFzc2VydHxhc3luY3xhd2FpdHxib29sfGJvb2xlYW58YnJlYWt8Ynl0ZXxjYXNlfGNhdGNofGNoYW5nZWR8Y2hhcnxjbGFzc3xjbG9zZWR8Y29uc3RhbnR8Y29udGludWV8ZGVmfGRlZmF1bHR8ZGVsfGRvdWJsZXxlbGlmfGVsc2V8ZW51bXxldmVyeXxleHRlbmRzfGZhbHNlfGZpbmFsbHl8ZmxvYXR8Zm9yfGZyb218Z2xvYmFsfGdwdWRlZnxncHVrZXJuZWx8aWZ8aW1wb3J0fGlufGluaXR8aW5qZWN0fGludHxsYW1iZGF8bG9jYWx8bG9uZ3xsb29wfG1hdGNofG5ld3xub2RlZmF1bHR8bnVsbHxvZnxvbmNoYW5nZXxvcGVufG91dHxvdmVycmlkZXxwYWNrYWdlfHBhcmZvcnxwYXJmb3JzeW5jfHBvc3R8cHJlfHByaXZhdGV8cHJvdGVjdGVkfHByb3ZpZGV8cHJvdmlkZXJ8cHVibGljfHJldHVybnxzaGFyZWR8c2hvcnR8c2luZ2xlfHNpemVfdHxzaXplb2Z8c3VwZXJ8c3luY3x0aGlzfHRocm93fHRyYWl0fHRyYW5zfHRyYW5zaWVudHx0cnVlfHRyeXx0eXBlZGVmfHVuY2hlY2tlZHx1c2luZ3x2YWx8dmFyfHZvaWR8d2hpbGV8d2l0aClcXGIvLFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAgbnVtYmVyOlxuICAgICAgL1xcYjBiWzAxXVswMV9dKkw/XFxifFxcYjB4KD86W1xcZGEtZl9dKlxcLik/W1xcZGEtZl9wKy1dK1xcYnwoPzpcXGJcXGRbXFxkX10qKD86XFwuW1xcZF9dKik/fFxcQlxcLlxcZFtcXGRfXSopKD86ZVsrLV0/XFxkW1xcZF9dKik/W2RmbHNdPy9pLFxuICAgIHB1bmN0dWF0aW9uOiAvW3t9W1xcXTsoKSwuOl0vLFxuICAgIG9wZXJhdG9yOlxuICAgICAgLzw9PXw+PT18PT58LT58PC18PD58Jj09fCY8PnxcXD86P3xcXC5cXD98XFwrXFwrfC0tfFstKyovPTw+XT0/fFshXn5dfFxcYig/OmFuZHxhc3xiYW5kfGJvcnxieG9yfGNvbXB8aXN8aXNub3R8bW9kfG9yKVxcYj0/LyxcbiAgICBhbm5vdGF0aW9uOiB7XG4gICAgICBwYXR0ZXJuOiAvQCg/Olxcdys6KT8oPzpcXHcrfFxcW1teXFxdXStcXF0pPy8sXG4gICAgICBhbGlhczogJ2J1aWx0aW4nXG4gICAgfVxuICB9XG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ2NvbmN1cm5hcycsICdsYW5nZXh0Jywge1xuICAgICdyZWdleC1saXRlcmFsJzoge1xuICAgICAgcGF0dGVybjogL1xcYnIoXCJ8JykoPzpcXFxcLnwoPyFcXDEpW15cXFxcXFxyXFxuXSkqXFwxLyxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBpbnRlcnBvbGF0aW9uOiB7XG4gICAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAgIC8oKD86XnxbXlxcXFxdKSg/OlxcXFx7Mn0pKilcXHsoPzpbXnt9XXxcXHsoPzpbXnt9XXxcXHtbXn1dKlxcfSkqXFx9KStcXH0vLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgaW5zaWRlOiBQcmlzbS5sYW5ndWFnZXMuY29uY3VybmFzXG4gICAgICAgIH0sXG4gICAgICAgIHJlZ2V4OiAvW1xcc1xcU10rL1xuICAgICAgfVxuICAgIH0sXG4gICAgJ3N0cmluZy1saXRlcmFsJzoge1xuICAgICAgcGF0dGVybjogLyg/OlxcQnxcXGJzKShcInwnKSg/OlxcXFwufCg/IVxcMSlbXlxcXFxcXHJcXG5dKSpcXDEvLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIGludGVycG9sYXRpb246IHtcbiAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgLygoPzpefFteXFxcXF0pKD86XFxcXHsyfSkqKVxceyg/Oltee31dfFxceyg/Oltee31dfFxce1tefV0qXFx9KSpcXH0pK1xcfS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy5jb25jdXJuYXNcbiAgICAgICAgfSxcbiAgICAgICAgc3RyaW5nOiAvW1xcc1xcU10rL1xuICAgICAgfVxuICAgIH1cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmNvbmMgPSBQcmlzbS5sYW5ndWFnZXMuY29uY3VybmFzXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImNvbmN1cm5hcyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiZ3JlZWR5IiwibGFuZ2V4dCIsImluc2lkZSIsInN0cmluZyIsInB1bmN0dWF0aW9uIiwiZnVuY3Rpb24iLCJrZXl3b3JkIiwiYm9vbGVhbiIsIm51bWJlciIsIm9wZXJhdG9yIiwiYW5ub3RhdGlvbiIsImFsaWFzIiwiaW5zZXJ0QmVmb3JlIiwiaW50ZXJwb2xhdGlvbiIsInJlZ2V4IiwiY29uYyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/concurnas.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/coq.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/coq.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = coq;\ncoq.displayName = \"coq\";\ncoq.aliases = [];\nfunction coq(Prism) {\n    ;\n    (function(Prism) {\n        // https://github.com/coq/coq\n        var commentSource = /\\(\\*(?:[^(*]|\\((?!\\*)|\\*(?!\\))|<self>)*\\*\\)/.source;\n        for(var i = 0; i < 2; i++){\n            commentSource = commentSource.replace(/<self>/g, function() {\n                return commentSource;\n            });\n        }\n        commentSource = commentSource.replace(/<self>/g, \"[]\");\n        Prism.languages.coq = {\n            comment: RegExp(commentSource),\n            string: {\n                pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n                greedy: true\n            },\n            attribute: [\n                {\n                    pattern: RegExp(/#\\[(?:[^\\[\\](\"]|\"(?:[^\"]|\"\")*\"(?!\")|\\((?!\\*)|<comment>)*\\]/.source.replace(/<comment>/g, function() {\n                        return commentSource;\n                    })),\n                    greedy: true,\n                    alias: \"attr-name\",\n                    inside: {\n                        comment: RegExp(commentSource),\n                        string: {\n                            pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n                            greedy: true\n                        },\n                        operator: /=/,\n                        punctuation: /^#\\[|\\]$|[,()]/\n                    }\n                },\n                {\n                    pattern: /\\b(?:Cumulative|Global|Local|Monomorphic|NonCumulative|Polymorphic|Private|Program)\\b/,\n                    alias: \"attr-name\"\n                }\n            ],\n            keyword: /\\b(?:Abort|About|Add|Admit|Admitted|All|Arguments|As|Assumptions|Axiom|Axioms|Back|BackTo|Backtrace|BinOp|BinOpSpec|BinRel|Bind|Blacklist|Canonical|Case|Cd|Check|Class|Classes|Close|CoFixpoint|CoInductive|Coercion|Coercions|Collection|Combined|Compute|Conjecture|Conjectures|Constant|Constants|Constraint|Constructors|Context|Corollary|Create|CstOp|Custom|Cut|Debug|Declare|Defined|Definition|Delimit|Dependencies|Dependent|Derive|Diffs|Drop|Elimination|End|Entry|Equality|Eval|Example|Existential|Existentials|Existing|Export|Extern|Extraction|Fact|Fail|Field|File|Firstorder|Fixpoint|Flags|Focus|From|Funclass|Function|Functional|GC|Generalizable|Goal|Grab|Grammar|Graph|Guarded|Haskell|Heap|Hide|Hint|HintDb|Hints|Hypotheses|Hypothesis|IF|Identity|Immediate|Implicit|Implicits|Import|Include|Induction|Inductive|Infix|Info|Initial|InjTyp|Inline|Inspect|Instance|Instances|Intro|Intros|Inversion|Inversion_clear|JSON|Language|Left|Lemma|Let|Lia|Libraries|Library|Load|LoadPath|Locate|Ltac|Ltac2|ML|Match|Method|Minimality|Module|Modules|Morphism|Next|NoInline|Notation|Number|OCaml|Obligation|Obligations|Opaque|Open|Optimize|Parameter|Parameters|Parametric|Path|Paths|Prenex|Preterm|Primitive|Print|Profile|Projections|Proof|Prop|PropBinOp|PropOp|PropUOp|Property|Proposition|Pwd|Qed|Quit|Rec|Record|Recursive|Redirect|Reduction|Register|Relation|Remark|Remove|Require|Reserved|Reset|Resolve|Restart|Rewrite|Right|Ring|Rings|SProp|Saturate|Save|Scheme|Scope|Scopes|Search|SearchHead|SearchPattern|SearchRewrite|Section|Separate|Set|Setoid|Show|Signatures|Solve|Solver|Sort|Sortclass|Sorted|Spec|Step|Strategies|Strategy|String|Structure|SubClass|Subgraph|SuchThat|Tactic|Term|TestCompile|Theorem|Time|Timeout|To|Transparent|Type|Typeclasses|Types|Typing|UnOp|UnOpSpec|Undelimit|Undo|Unfocus|Unfocused|Unfold|Universe|Universes|Unshelve|Variable|Variables|Variant|Verbose|View|Visibility|Zify|_|apply|as|at|by|cofix|else|end|exists|exists2|fix|for|forall|fun|if|in|let|match|measure|move|removed|return|struct|then|using|wf|where|with)\\b/,\n            number: /\\b(?:0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]+)?(?:p[+-]?\\d[\\d_]*)?|\\d[\\d_]*(?:\\.[\\d_]+)?(?:e[+-]?\\d[\\d_]*)?)\\b/i,\n            punct: {\n                pattern: /@\\{|\\{\\||\\[=|:>/,\n                alias: \"punctuation\"\n            },\n            operator: /\\/\\\\|\\\\\\/|\\.{2,3}|:{1,2}=|\\*\\*|[-=]>|<(?:->?|[+:=>]|<:)|>(?:=|->)|\\|[-|]?|[-!%&*+/<=>?@^~']/,\n            punctuation: /\\.\\(|`\\(|@\\{|`\\{|\\{\\||\\[=|:>|[:.,;(){}\\[\\]]/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvY29xLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLElBQUlDLFdBQVcsR0FBRztBQUNsQkQsSUFBSUUsT0FBTyxHQUFHLEVBQUU7QUFDaEIsU0FBU0YsSUFBSUcsS0FBSzs7SUFDZCxVQUFVQSxLQUFLO1FBQ2YsNkJBQTZCO1FBQzdCLElBQUlDLGdCQUFnQiw4Q0FBOENDLE1BQU07UUFDeEUsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUksR0FBR0EsSUFBSztZQUMxQkYsZ0JBQWdCQSxjQUFjRyxPQUFPLENBQUMsV0FBVztnQkFDL0MsT0FBT0g7WUFDVDtRQUNGO1FBQ0FBLGdCQUFnQkEsY0FBY0csT0FBTyxDQUFDLFdBQVc7UUFDakRKLE1BQU1LLFNBQVMsQ0FBQ1IsR0FBRyxHQUFHO1lBQ3BCUyxTQUFTQyxPQUFPTjtZQUNoQk8sUUFBUTtnQkFDTkMsU0FBUztnQkFDVEMsUUFBUTtZQUNWO1lBQ0FDLFdBQVc7Z0JBQ1Q7b0JBQ0VGLFNBQVNGLE9BQ1AsNkRBQTZETCxNQUFNLENBQUNFLE9BQU8sQ0FDekUsY0FDQTt3QkFDRSxPQUFPSDtvQkFDVDtvQkFHSlMsUUFBUTtvQkFDUkUsT0FBTztvQkFDUEMsUUFBUTt3QkFDTlAsU0FBU0MsT0FBT047d0JBQ2hCTyxRQUFROzRCQUNOQyxTQUFTOzRCQUNUQyxRQUFRO3dCQUNWO3dCQUNBSSxVQUFVO3dCQUNWQyxhQUFhO29CQUNmO2dCQUNGO2dCQUNBO29CQUNFTixTQUNFO29CQUNGRyxPQUFPO2dCQUNUO2FBQ0Q7WUFDREksU0FDRTtZQUNGQyxRQUNFO1lBQ0ZDLE9BQU87Z0JBQ0xULFNBQVM7Z0JBQ1RHLE9BQU87WUFDVDtZQUNBRSxVQUNFO1lBQ0ZDLGFBQWE7UUFDZjtJQUNGLEdBQUdmO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvY29xLmpzP2MzODQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gY29xXG5jb3EuZGlzcGxheU5hbWUgPSAnY29xJ1xuY29xLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gY29xKFByaXNtKSB7XG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2NvcS9jb3FcbiAgICB2YXIgY29tbWVudFNvdXJjZSA9IC9cXChcXCooPzpbXigqXXxcXCgoPyFcXCopfFxcKig/IVxcKSl8PHNlbGY+KSpcXCpcXCkvLnNvdXJjZVxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMjsgaSsrKSB7XG4gICAgICBjb21tZW50U291cmNlID0gY29tbWVudFNvdXJjZS5yZXBsYWNlKC88c2VsZj4vZywgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gY29tbWVudFNvdXJjZVxuICAgICAgfSlcbiAgICB9XG4gICAgY29tbWVudFNvdXJjZSA9IGNvbW1lbnRTb3VyY2UucmVwbGFjZSgvPHNlbGY+L2csICdbXScpXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmNvcSA9IHtcbiAgICAgIGNvbW1lbnQ6IFJlZ0V4cChjb21tZW50U291cmNlKSxcbiAgICAgIHN0cmluZzoge1xuICAgICAgICBwYXR0ZXJuOiAvXCIoPzpbXlwiXXxcIlwiKSpcIig/IVwiKS8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGF0dHJpYnV0ZTogW1xuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgICAgLyNcXFsoPzpbXlxcW1xcXShcIl18XCIoPzpbXlwiXXxcIlwiKSpcIig/IVwiKXxcXCgoPyFcXCopfDxjb21tZW50PikqXFxdLy5zb3VyY2UucmVwbGFjZShcbiAgICAgICAgICAgICAgLzxjb21tZW50Pi9nLFxuICAgICAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbW1lbnRTb3VyY2VcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKVxuICAgICAgICAgICksXG4gICAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICAgIGFsaWFzOiAnYXR0ci1uYW1lJyxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIGNvbW1lbnQ6IFJlZ0V4cChjb21tZW50U291cmNlKSxcbiAgICAgICAgICAgIHN0cmluZzoge1xuICAgICAgICAgICAgICBwYXR0ZXJuOiAvXCIoPzpbXlwiXXxcIlwiKSpcIig/IVwiKS8sXG4gICAgICAgICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG9wZXJhdG9yOiAvPS8sXG4gICAgICAgICAgICBwdW5jdHVhdGlvbjogL14jXFxbfFxcXSR8WywoKV0vXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAgIC9cXGIoPzpDdW11bGF0aXZlfEdsb2JhbHxMb2NhbHxNb25vbW9ycGhpY3xOb25DdW11bGF0aXZlfFBvbHltb3JwaGljfFByaXZhdGV8UHJvZ3JhbSlcXGIvLFxuICAgICAgICAgIGFsaWFzOiAnYXR0ci1uYW1lJ1xuICAgICAgICB9XG4gICAgICBdLFxuICAgICAga2V5d29yZDpcbiAgICAgICAgL1xcYig/OkFib3J0fEFib3V0fEFkZHxBZG1pdHxBZG1pdHRlZHxBbGx8QXJndW1lbnRzfEFzfEFzc3VtcHRpb25zfEF4aW9tfEF4aW9tc3xCYWNrfEJhY2tUb3xCYWNrdHJhY2V8QmluT3B8QmluT3BTcGVjfEJpblJlbHxCaW5kfEJsYWNrbGlzdHxDYW5vbmljYWx8Q2FzZXxDZHxDaGVja3xDbGFzc3xDbGFzc2VzfENsb3NlfENvRml4cG9pbnR8Q29JbmR1Y3RpdmV8Q29lcmNpb258Q29lcmNpb25zfENvbGxlY3Rpb258Q29tYmluZWR8Q29tcHV0ZXxDb25qZWN0dXJlfENvbmplY3R1cmVzfENvbnN0YW50fENvbnN0YW50c3xDb25zdHJhaW50fENvbnN0cnVjdG9yc3xDb250ZXh0fENvcm9sbGFyeXxDcmVhdGV8Q3N0T3B8Q3VzdG9tfEN1dHxEZWJ1Z3xEZWNsYXJlfERlZmluZWR8RGVmaW5pdGlvbnxEZWxpbWl0fERlcGVuZGVuY2llc3xEZXBlbmRlbnR8RGVyaXZlfERpZmZzfERyb3B8RWxpbWluYXRpb258RW5kfEVudHJ5fEVxdWFsaXR5fEV2YWx8RXhhbXBsZXxFeGlzdGVudGlhbHxFeGlzdGVudGlhbHN8RXhpc3Rpbmd8RXhwb3J0fEV4dGVybnxFeHRyYWN0aW9ufEZhY3R8RmFpbHxGaWVsZHxGaWxlfEZpcnN0b3JkZXJ8Rml4cG9pbnR8RmxhZ3N8Rm9jdXN8RnJvbXxGdW5jbGFzc3xGdW5jdGlvbnxGdW5jdGlvbmFsfEdDfEdlbmVyYWxpemFibGV8R29hbHxHcmFifEdyYW1tYXJ8R3JhcGh8R3VhcmRlZHxIYXNrZWxsfEhlYXB8SGlkZXxIaW50fEhpbnREYnxIaW50c3xIeXBvdGhlc2VzfEh5cG90aGVzaXN8SUZ8SWRlbnRpdHl8SW1tZWRpYXRlfEltcGxpY2l0fEltcGxpY2l0c3xJbXBvcnR8SW5jbHVkZXxJbmR1Y3Rpb258SW5kdWN0aXZlfEluZml4fEluZm98SW5pdGlhbHxJbmpUeXB8SW5saW5lfEluc3BlY3R8SW5zdGFuY2V8SW5zdGFuY2VzfEludHJvfEludHJvc3xJbnZlcnNpb258SW52ZXJzaW9uX2NsZWFyfEpTT058TGFuZ3VhZ2V8TGVmdHxMZW1tYXxMZXR8TGlhfExpYnJhcmllc3xMaWJyYXJ5fExvYWR8TG9hZFBhdGh8TG9jYXRlfEx0YWN8THRhYzJ8TUx8TWF0Y2h8TWV0aG9kfE1pbmltYWxpdHl8TW9kdWxlfE1vZHVsZXN8TW9ycGhpc218TmV4dHxOb0lubGluZXxOb3RhdGlvbnxOdW1iZXJ8T0NhbWx8T2JsaWdhdGlvbnxPYmxpZ2F0aW9uc3xPcGFxdWV8T3BlbnxPcHRpbWl6ZXxQYXJhbWV0ZXJ8UGFyYW1ldGVyc3xQYXJhbWV0cmljfFBhdGh8UGF0aHN8UHJlbmV4fFByZXRlcm18UHJpbWl0aXZlfFByaW50fFByb2ZpbGV8UHJvamVjdGlvbnN8UHJvb2Z8UHJvcHxQcm9wQmluT3B8UHJvcE9wfFByb3BVT3B8UHJvcGVydHl8UHJvcG9zaXRpb258UHdkfFFlZHxRdWl0fFJlY3xSZWNvcmR8UmVjdXJzaXZlfFJlZGlyZWN0fFJlZHVjdGlvbnxSZWdpc3RlcnxSZWxhdGlvbnxSZW1hcmt8UmVtb3ZlfFJlcXVpcmV8UmVzZXJ2ZWR8UmVzZXR8UmVzb2x2ZXxSZXN0YXJ0fFJld3JpdGV8UmlnaHR8UmluZ3xSaW5nc3xTUHJvcHxTYXR1cmF0ZXxTYXZlfFNjaGVtZXxTY29wZXxTY29wZXN8U2VhcmNofFNlYXJjaEhlYWR8U2VhcmNoUGF0dGVybnxTZWFyY2hSZXdyaXRlfFNlY3Rpb258U2VwYXJhdGV8U2V0fFNldG9pZHxTaG93fFNpZ25hdHVyZXN8U29sdmV8U29sdmVyfFNvcnR8U29ydGNsYXNzfFNvcnRlZHxTcGVjfFN0ZXB8U3RyYXRlZ2llc3xTdHJhdGVneXxTdHJpbmd8U3RydWN0dXJlfFN1YkNsYXNzfFN1YmdyYXBofFN1Y2hUaGF0fFRhY3RpY3xUZXJtfFRlc3RDb21waWxlfFRoZW9yZW18VGltZXxUaW1lb3V0fFRvfFRyYW5zcGFyZW50fFR5cGV8VHlwZWNsYXNzZXN8VHlwZXN8VHlwaW5nfFVuT3B8VW5PcFNwZWN8VW5kZWxpbWl0fFVuZG98VW5mb2N1c3xVbmZvY3VzZWR8VW5mb2xkfFVuaXZlcnNlfFVuaXZlcnNlc3xVbnNoZWx2ZXxWYXJpYWJsZXxWYXJpYWJsZXN8VmFyaWFudHxWZXJib3NlfFZpZXd8VmlzaWJpbGl0eXxaaWZ5fF98YXBwbHl8YXN8YXR8Ynl8Y29maXh8ZWxzZXxlbmR8ZXhpc3RzfGV4aXN0czJ8Zml4fGZvcnxmb3JhbGx8ZnVufGlmfGlufGxldHxtYXRjaHxtZWFzdXJlfG1vdmV8cmVtb3ZlZHxyZXR1cm58c3RydWN0fHRoZW58dXNpbmd8d2Z8d2hlcmV8d2l0aClcXGIvLFxuICAgICAgbnVtYmVyOlxuICAgICAgICAvXFxiKD86MHhbYS1mMC05XVthLWYwLTlfXSooPzpcXC5bYS1mMC05X10rKT8oPzpwWystXT9cXGRbXFxkX10qKT98XFxkW1xcZF9dKig/OlxcLltcXGRfXSspPyg/OmVbKy1dP1xcZFtcXGRfXSopPylcXGIvaSxcbiAgICAgIHB1bmN0OiB7XG4gICAgICAgIHBhdHRlcm46IC9AXFx7fFxce1xcfHxcXFs9fDo+LyxcbiAgICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbidcbiAgICAgIH0sXG4gICAgICBvcGVyYXRvcjpcbiAgICAgICAgL1xcL1xcXFx8XFxcXFxcL3xcXC57MiwzfXw6ezEsMn09fFxcKlxcKnxbLT1dPnw8KD86LT4/fFsrOj0+XXw8Oil8Pig/Oj18LT4pfFxcfFstfF0/fFstISUmKisvPD0+P0BefiddLyxcbiAgICAgIHB1bmN0dWF0aW9uOiAvXFwuXFwofGBcXCh8QFxce3xgXFx7fFxce1xcfHxcXFs9fDo+fFs6Liw7KCl7fVxcW1xcXV0vXG4gICAgfVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiY29xIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJjb21tZW50U291cmNlIiwic291cmNlIiwiaSIsInJlcGxhY2UiLCJsYW5ndWFnZXMiLCJjb21tZW50IiwiUmVnRXhwIiwic3RyaW5nIiwicGF0dGVybiIsImdyZWVkeSIsImF0dHJpYnV0ZSIsImFsaWFzIiwiaW5zaWRlIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiIsImtleXdvcmQiLCJudW1iZXIiLCJwdW5jdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/coq.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/cpp.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/cpp.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorC = __webpack_require__(/*! ./c.js */ \"(ssr)/./node_modules/refractor/lang/c.js\");\nmodule.exports = cpp;\ncpp.displayName = \"cpp\";\ncpp.aliases = [];\nfunction cpp(Prism) {\n    Prism.register(refractorC);\n    (function(Prism) {\n        var keyword = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/;\n        var modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(/<keyword>/g, function() {\n            return keyword.source;\n        });\n        Prism.languages.cpp = Prism.languages.extend(\"c\", {\n            \"class-name\": [\n                {\n                    pattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(/<keyword>/g, function() {\n                        return keyword.source;\n                    })),\n                    lookbehind: true\n                },\n                //   void foo::bar() const {}\n                // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n                // it starts with an uppercase letter. This approximation should give decent results.\n                /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/,\n                //   Foo::~Foo() {}\n                /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i,\n                // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n                /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/\n            ],\n            keyword: keyword,\n            number: {\n                pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n                greedy: true\n            },\n            operator: />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n            boolean: /\\b(?:false|true)\\b/\n        });\n        Prism.languages.insertBefore(\"cpp\", \"string\", {\n            module: {\n                // https://en.cppreference.com/w/cpp/language/modules\n                pattern: RegExp(/(\\b(?:import|module)\\s+)/.source + \"(?:\" + // header-name\n                /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source + \"|\" + // module name or partition or both\n                /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(/<mod-name>/g, function() {\n                    return modName;\n                }) + \")\"),\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    string: /^[<\"][\\s\\S]+/,\n                    operator: /:/,\n                    punctuation: /\\./\n                }\n            },\n            \"raw-string\": {\n                pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n                alias: \"string\",\n                greedy: true\n            }\n        });\n        Prism.languages.insertBefore(\"cpp\", \"keyword\", {\n            \"generic-function\": {\n                pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n                inside: {\n                    function: /^\\w+/,\n                    generic: {\n                        pattern: /<[\\s\\S]+/,\n                        alias: \"class-name\",\n                        inside: Prism.languages.cpp\n                    }\n                }\n            }\n        });\n        Prism.languages.insertBefore(\"cpp\", \"operator\", {\n            \"double-colon\": {\n                pattern: /::/,\n                alias: \"punctuation\"\n            }\n        });\n        Prism.languages.insertBefore(\"cpp\", \"class-name\", {\n            // the base clause is an optional list of parent classes\n            // https://en.cppreference.com/w/cpp/language/class\n            \"base-clause\": {\n                pattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n                lookbehind: true,\n                greedy: true,\n                inside: Prism.languages.extend(\"cpp\", {})\n            }\n        });\n        Prism.languages.insertBefore(\"inside\", \"double-colon\", {\n            // All untokenized words that are not namespaces should be class names\n            \"class-name\": /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n        }, Prism.languages.cpp[\"base-clause\"]);\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/cpp.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/crystal.js":
/*!************************************************!*\
  !*** ./node_modules/refractor/lang/crystal.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorRuby = __webpack_require__(/*! ./ruby.js */ \"(ssr)/./node_modules/refractor/lang/ruby.js\");\nmodule.exports = crystal;\ncrystal.displayName = \"crystal\";\ncrystal.aliases = [];\nfunction crystal(Prism) {\n    Prism.register(refractorRuby);\n    (function(Prism) {\n        Prism.languages.crystal = Prism.languages.extend(\"ruby\", {\n            keyword: [\n                /\\b(?:__DIR__|__END_LINE__|__FILE__|__LINE__|abstract|alias|annotation|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|ifdef|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|ptr|require|rescue|return|select|self|sizeof|struct|super|then|type|typeof|undef|uninitialized|union|unless|until|when|while|with|yield)\\b/,\n                {\n                    pattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,\n                    lookbehind: true\n                }\n            ],\n            number: /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/,\n            operator: [\n                /->/,\n                Prism.languages.ruby.operator\n            ],\n            punctuation: /[(){}[\\].,;\\\\]/\n        });\n        Prism.languages.insertBefore(\"crystal\", \"string-literal\", {\n            attribute: {\n                pattern: /@\\[.*?\\]/,\n                inside: {\n                    delimiter: {\n                        pattern: /^@\\[|\\]$/,\n                        alias: \"punctuation\"\n                    },\n                    attribute: {\n                        pattern: /^(\\s*)\\w+/,\n                        lookbehind: true,\n                        alias: \"class-name\"\n                    },\n                    args: {\n                        pattern: /\\S(?:[\\s\\S]*\\S)?/,\n                        inside: Prism.languages.crystal\n                    }\n                }\n            },\n            expansion: {\n                pattern: /\\{(?:\\{.*?\\}|%.*?%)\\}/,\n                inside: {\n                    content: {\n                        pattern: /^(\\{.)[\\s\\S]+(?=.\\}$)/,\n                        lookbehind: true,\n                        inside: Prism.languages.crystal\n                    },\n                    delimiter: {\n                        pattern: /^\\{[\\{%]|[\\}%]\\}$/,\n                        alias: \"operator\"\n                    }\n                }\n            },\n            char: {\n                pattern: /'(?:[^\\\\\\r\\n]{1,2}|\\\\(?:.|u(?:[A-Fa-f0-9]{1,4}|\\{[A-Fa-f0-9]{1,6}\\})))'/,\n                greedy: true\n            }\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvY3J5c3RhbC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLElBQUlBLGdCQUFnQkMsbUJBQU9BLENBQUM7QUFDNUJDLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLFFBQVFDLFdBQVcsR0FBRztBQUN0QkQsUUFBUUUsT0FBTyxHQUFHLEVBQUU7QUFDcEIsU0FBU0YsUUFBUUcsS0FBSztJQUNwQkEsTUFBTUMsUUFBUSxDQUFDUjtJQUNiLFVBQVVPLEtBQUs7UUFDZkEsTUFBTUUsU0FBUyxDQUFDTCxPQUFPLEdBQUdHLE1BQU1FLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLFFBQVE7WUFDdkRDLFNBQVM7Z0JBQ1A7Z0JBQ0E7b0JBQ0VDLFNBQVM7b0JBQ1RDLFlBQVk7Z0JBQ2Q7YUFDRDtZQUNEQyxRQUNFO1lBQ0ZDLFVBQVU7Z0JBQUM7Z0JBQU1SLE1BQU1FLFNBQVMsQ0FBQ08sSUFBSSxDQUFDRCxRQUFRO2FBQUM7WUFDL0NFLGFBQWE7UUFDZjtRQUNBVixNQUFNRSxTQUFTLENBQUNTLFlBQVksQ0FBQyxXQUFXLGtCQUFrQjtZQUN4REMsV0FBVztnQkFDVFAsU0FBUztnQkFDVFEsUUFBUTtvQkFDTkMsV0FBVzt3QkFDVFQsU0FBUzt3QkFDVFUsT0FBTztvQkFDVDtvQkFDQUgsV0FBVzt3QkFDVFAsU0FBUzt3QkFDVEMsWUFBWTt3QkFDWlMsT0FBTztvQkFDVDtvQkFDQUMsTUFBTTt3QkFDSlgsU0FBUzt3QkFDVFEsUUFBUWIsTUFBTUUsU0FBUyxDQUFDTCxPQUFPO29CQUNqQztnQkFDRjtZQUNGO1lBQ0FvQixXQUFXO2dCQUNUWixTQUFTO2dCQUNUUSxRQUFRO29CQUNOSyxTQUFTO3dCQUNQYixTQUFTO3dCQUNUQyxZQUFZO3dCQUNaTyxRQUFRYixNQUFNRSxTQUFTLENBQUNMLE9BQU87b0JBQ2pDO29CQUNBaUIsV0FBVzt3QkFDVFQsU0FBUzt3QkFDVFUsT0FBTztvQkFDVDtnQkFDRjtZQUNGO1lBQ0FJLE1BQU07Z0JBQ0pkLFNBQ0U7Z0JBQ0ZlLFFBQVE7WUFDVjtRQUNGO0lBQ0YsR0FBR3BCO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvY3J5c3RhbC5qcz84MmQ2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xudmFyIHJlZnJhY3RvclJ1YnkgPSByZXF1aXJlKCcuL3J1YnkuanMnKVxubW9kdWxlLmV4cG9ydHMgPSBjcnlzdGFsXG5jcnlzdGFsLmRpc3BsYXlOYW1lID0gJ2NyeXN0YWwnXG5jcnlzdGFsLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gY3J5c3RhbChQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JSdWJ5KVxuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIFByaXNtLmxhbmd1YWdlcy5jcnlzdGFsID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgncnVieScsIHtcbiAgICAgIGtleXdvcmQ6IFtcbiAgICAgICAgL1xcYig/Ol9fRElSX198X19FTkRfTElORV9ffF9fRklMRV9ffF9fTElORV9ffGFic3RyYWN0fGFsaWFzfGFubm90YXRpb258YXN8YXNtfGJlZ2lufGJyZWFrfGNhc2V8Y2xhc3N8ZGVmfGRvfGVsc2V8ZWxzaWZ8ZW5kfGVuc3VyZXxlbnVtfGV4dGVuZHxmb3J8ZnVufGlmfGlmZGVmfGluY2x1ZGV8aW5zdGFuY2Vfc2l6ZW9mfGxpYnxtYWNyb3xtb2R1bGV8bmV4dHxvZnxvdXR8cG9pbnRlcm9mfHByaXZhdGV8cHJvdGVjdGVkfHB0cnxyZXF1aXJlfHJlc2N1ZXxyZXR1cm58c2VsZWN0fHNlbGZ8c2l6ZW9mfHN0cnVjdHxzdXBlcnx0aGVufHR5cGV8dHlwZW9mfHVuZGVmfHVuaW5pdGlhbGl6ZWR8dW5pb258dW5sZXNzfHVudGlsfHdoZW58d2hpbGV8d2l0aHx5aWVsZClcXGIvLFxuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogLyhcXC5cXHMqKSg/OmlzX2F8cmVzcG9uZHNfdG8pXFw/LyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBudW1iZXI6XG4gICAgICAgIC9cXGIoPzowYlswMV9dKlswMV18MG9bMC03X10qWzAtN118MHhbXFxkYS1mQS1GX10qW1xcZGEtZkEtRl18KD86XFxkKD86W1xcZF9dKlxcZCk/KSg/OlxcLltcXGRfXSpcXGQpPyg/OltlRV1bKy1dP1tcXGRfXSpcXGQpPykoPzpfKD86W3VpZl0oPzo4fDE2fDMyfDY0KSk/KT9cXGIvLFxuICAgICAgb3BlcmF0b3I6IFsvLT4vLCBQcmlzbS5sYW5ndWFnZXMucnVieS5vcGVyYXRvcl0sXG4gICAgICBwdW5jdHVhdGlvbjogL1soKXt9W1xcXS4sO1xcXFxdL1xuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnY3J5c3RhbCcsICdzdHJpbmctbGl0ZXJhbCcsIHtcbiAgICAgIGF0dHJpYnV0ZToge1xuICAgICAgICBwYXR0ZXJuOiAvQFxcWy4qP1xcXS8sXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIGRlbGltaXRlcjoge1xuICAgICAgICAgICAgcGF0dGVybjogL15AXFxbfFxcXSQvLFxuICAgICAgICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbidcbiAgICAgICAgICB9LFxuICAgICAgICAgIGF0dHJpYnV0ZToge1xuICAgICAgICAgICAgcGF0dGVybjogL14oXFxzKilcXHcrLyxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICBhbGlhczogJ2NsYXNzLW5hbWUnXG4gICAgICAgICAgfSxcbiAgICAgICAgICBhcmdzOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvXFxTKD86W1xcc1xcU10qXFxTKT8vLFxuICAgICAgICAgICAgaW5zaWRlOiBQcmlzbS5sYW5ndWFnZXMuY3J5c3RhbFxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGV4cGFuc2lvbjoge1xuICAgICAgICBwYXR0ZXJuOiAvXFx7KD86XFx7Lio/XFx9fCUuKj8lKVxcfS8sXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIGNvbnRlbnQ6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC9eKFxcey4pW1xcc1xcU10rKD89LlxcfSQpLyxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy5jcnlzdGFsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkZWxpbWl0ZXI6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC9eXFx7W1xceyVdfFtcXH0lXVxcfSQvLFxuICAgICAgICAgICAgYWxpYXM6ICdvcGVyYXRvcidcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBjaGFyOiB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLycoPzpbXlxcXFxcXHJcXG5dezEsMn18XFxcXCg/Oi58dSg/OltBLUZhLWYwLTldezEsNH18XFx7W0EtRmEtZjAtOV17MSw2fVxcfSkpKScvLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH1cbiAgICB9KVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JSdWJ5IiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJjcnlzdGFsIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImV4dGVuZCIsImtleXdvcmQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsIm51bWJlciIsIm9wZXJhdG9yIiwicnVieSIsInB1bmN0dWF0aW9uIiwiaW5zZXJ0QmVmb3JlIiwiYXR0cmlidXRlIiwiaW5zaWRlIiwiZGVsaW1pdGVyIiwiYWxpYXMiLCJhcmdzIiwiZXhwYW5zaW9uIiwiY29udGVudCIsImNoYXIiLCJncmVlZHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/crystal.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/csharp.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/csharp.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = csharp;\ncsharp.displayName = \"csharp\";\ncsharp.aliases = [\n    \"dotnet\",\n    \"cs\"\n];\nfunction csharp(Prism) {\n    ;\n    (function(Prism) {\n        /**\n     * Replaces all placeholders \"<<n>>\" of given pattern with the n-th replacement (zero based).\n     *\n     * Note: This is a simple text based replacement. Be careful when using backreferences!\n     *\n     * @param {string} pattern the given pattern.\n     * @param {string[]} replacements a list of replacement which can be inserted into the given pattern.\n     * @returns {string} the pattern with all placeholders replaced with their corresponding replacements.\n     * @example replace(/a<<0>>a/.source, [/b+/.source]) === /a(?:b+)a/.source\n     */ function replace(pattern, replacements) {\n            return pattern.replace(/<<(\\d+)>>/g, function(m, index) {\n                return \"(?:\" + replacements[+index] + \")\";\n            });\n        }\n        /**\n     * @param {string} pattern\n     * @param {string[]} replacements\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */ function re(pattern, replacements, flags) {\n            return RegExp(replace(pattern, replacements), flags || \"\");\n        }\n        /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */ function nested(pattern, depthLog2) {\n            for(var i = 0; i < depthLog2; i++){\n                pattern = pattern.replace(/<<self>>/g, function() {\n                    return \"(?:\" + pattern + \")\";\n                });\n            }\n            return pattern.replace(/<<self>>/g, \"[^\\\\s\\\\S]\");\n        } // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/\n        var keywordKinds = {\n            // keywords which represent a return or variable type\n            type: \"bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void\",\n            // keywords which are used to declare a type\n            typeDeclaration: \"class enum interface record struct\",\n            // contextual keywords\n            // (\"var\" and \"dynamic\" are missing because they are used like types)\n            contextual: \"add alias and ascending async await by descending from(?=\\\\s*(?:\\\\w|$)) get global group into init(?=\\\\s*;) join let nameof not notnull on or orderby partial remove select set unmanaged value when where with(?=\\\\s*{)\",\n            // all other keywords\n            other: \"abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield\"\n        } // keywords\n        ;\n        function keywordsToPattern(words) {\n            return \"\\\\b(?:\" + words.trim().replace(/ /g, \"|\") + \")\\\\b\";\n        }\n        var typeDeclarationKeywords = keywordsToPattern(keywordKinds.typeDeclaration);\n        var keywords = RegExp(keywordsToPattern(keywordKinds.type + \" \" + keywordKinds.typeDeclaration + \" \" + keywordKinds.contextual + \" \" + keywordKinds.other));\n        var nonTypeKeywords = keywordsToPattern(keywordKinds.typeDeclaration + \" \" + keywordKinds.contextual + \" \" + keywordKinds.other);\n        var nonContextualKeywords = keywordsToPattern(keywordKinds.type + \" \" + keywordKinds.typeDeclaration + \" \" + keywordKinds.other) // types\n        ;\n        var generic = nested(/<(?:[^<>;=+\\-*/%&|^]|<<self>>)*>/.source, 2) // the idea behind the other forbidden characters is to prevent false positives. Same for tupleElement.\n        ;\n        var nestedRound = nested(/\\((?:[^()]|<<self>>)*\\)/.source, 2);\n        var name = /@?\\b[A-Za-z_]\\w*\\b/.source;\n        var genericName = replace(/<<0>>(?:\\s*<<1>>)?/.source, [\n            name,\n            generic\n        ]);\n        var identifier = replace(/(?!<<0>>)<<1>>(?:\\s*\\.\\s*<<1>>)*/.source, [\n            nonTypeKeywords,\n            genericName\n        ]);\n        var array = /\\[\\s*(?:,\\s*)*\\]/.source;\n        var typeExpressionWithoutTuple = replace(/<<0>>(?:\\s*(?:\\?\\s*)?<<1>>)*(?:\\s*\\?)?/.source, [\n            identifier,\n            array\n        ]);\n        var tupleElement = replace(/[^,()<>[\\];=+\\-*/%&|^]|<<0>>|<<1>>|<<2>>/.source, [\n            generic,\n            nestedRound,\n            array\n        ]);\n        var tuple = replace(/\\(<<0>>+(?:,<<0>>+)+\\)/.source, [\n            tupleElement\n        ]);\n        var typeExpression = replace(/(?:<<0>>|<<1>>)(?:\\s*(?:\\?\\s*)?<<2>>)*(?:\\s*\\?)?/.source, [\n            tuple,\n            identifier,\n            array\n        ]);\n        var typeInside = {\n            keyword: keywords,\n            punctuation: /[<>()?,.:[\\]]/\n        } // strings & characters\n        ;\n        // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#character-literals\n        // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#string-literals\n        var character = /'(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'/.source // simplified pattern\n        ;\n        var regularString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/.source;\n        var verbatimString = /@\"(?:\"\"|\\\\[\\s\\S]|[^\\\\\"])*\"(?!\")/.source;\n        Prism.languages.csharp = Prism.languages.extend(\"clike\", {\n            string: [\n                {\n                    pattern: re(/(^|[^$\\\\])<<0>>/.source, [\n                        verbatimString\n                    ]),\n                    lookbehind: true,\n                    greedy: true\n                },\n                {\n                    pattern: re(/(^|[^@$\\\\])<<0>>/.source, [\n                        regularString\n                    ]),\n                    lookbehind: true,\n                    greedy: true\n                }\n            ],\n            \"class-name\": [\n                {\n                    // Using static\n                    // using static System.Math;\n                    pattern: re(/(\\busing\\s+static\\s+)<<0>>(?=\\s*;)/.source, [\n                        identifier\n                    ]),\n                    lookbehind: true,\n                    inside: typeInside\n                },\n                {\n                    // Using alias (type)\n                    // using Project = PC.MyCompany.Project;\n                    pattern: re(/(\\busing\\s+<<0>>\\s*=\\s*)<<1>>(?=\\s*;)/.source, [\n                        name,\n                        typeExpression\n                    ]),\n                    lookbehind: true,\n                    inside: typeInside\n                },\n                {\n                    // Using alias (alias)\n                    // using Project = PC.MyCompany.Project;\n                    pattern: re(/(\\busing\\s+)<<0>>(?=\\s*=)/.source, [\n                        name\n                    ]),\n                    lookbehind: true\n                },\n                {\n                    // Type declarations\n                    // class Foo<A, B>\n                    // interface Foo<out A, B>\n                    pattern: re(/(\\b<<0>>\\s+)<<1>>/.source, [\n                        typeDeclarationKeywords,\n                        genericName\n                    ]),\n                    lookbehind: true,\n                    inside: typeInside\n                },\n                {\n                    // Single catch exception declaration\n                    // catch(Foo)\n                    // (things like catch(Foo e) is covered by variable declaration)\n                    pattern: re(/(\\bcatch\\s*\\(\\s*)<<0>>/.source, [\n                        identifier\n                    ]),\n                    lookbehind: true,\n                    inside: typeInside\n                },\n                {\n                    // Name of the type parameter of generic constraints\n                    // where Foo : class\n                    pattern: re(/(\\bwhere\\s+)<<0>>/.source, [\n                        name\n                    ]),\n                    lookbehind: true\n                },\n                {\n                    // Casts and checks via as and is.\n                    // as Foo<A>, is Bar<B>\n                    // (things like if(a is Foo b) is covered by variable declaration)\n                    pattern: re(/(\\b(?:is(?:\\s+not)?|as)\\s+)<<0>>/.source, [\n                        typeExpressionWithoutTuple\n                    ]),\n                    lookbehind: true,\n                    inside: typeInside\n                },\n                {\n                    // Variable, field and parameter declaration\n                    // (Foo bar, Bar baz, Foo[,,] bay, Foo<Bar, FooBar<Bar>> bax)\n                    pattern: re(/\\b<<0>>(?=\\s+(?!<<1>>|with\\s*\\{)<<2>>(?:\\s*[=,;:{)\\]]|\\s+(?:in|when)\\b))/.source, [\n                        typeExpression,\n                        nonContextualKeywords,\n                        name\n                    ]),\n                    inside: typeInside\n                }\n            ],\n            keyword: keywords,\n            // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#literals\n            number: /(?:\\b0(?:x[\\da-f_]*[\\da-f]|b[01_]*[01])|(?:\\B\\.\\d+(?:_+\\d+)*|\\b\\d+(?:_+\\d+)*(?:\\.\\d+(?:_+\\d+)*)?)(?:e[-+]?\\d+(?:_+\\d+)*)?)(?:[dflmu]|lu|ul)?\\b/i,\n            operator: />>=?|<<=?|[-=]>|([-+&|])\\1|~|\\?\\?=?|[-+*/%&|^!=<>]=?/,\n            punctuation: /\\?\\.?|::|[{}[\\];(),.:]/\n        });\n        Prism.languages.insertBefore(\"csharp\", \"number\", {\n            range: {\n                pattern: /\\.\\./,\n                alias: \"operator\"\n            }\n        });\n        Prism.languages.insertBefore(\"csharp\", \"punctuation\", {\n            \"named-parameter\": {\n                pattern: re(/([(,]\\s*)<<0>>(?=\\s*:)/.source, [\n                    name\n                ]),\n                lookbehind: true,\n                alias: \"punctuation\"\n            }\n        });\n        Prism.languages.insertBefore(\"csharp\", \"class-name\", {\n            namespace: {\n                // namespace Foo.Bar {}\n                // using Foo.Bar;\n                pattern: re(/(\\b(?:namespace|using)\\s+)<<0>>(?:\\s*\\.\\s*<<0>>)*(?=\\s*[;{])/.source, [\n                    name\n                ]),\n                lookbehind: true,\n                inside: {\n                    punctuation: /\\./\n                }\n            },\n            \"type-expression\": {\n                // default(Foo), typeof(Foo<Bar>), sizeof(int)\n                pattern: re(/(\\b(?:default|sizeof|typeof)\\s*\\(\\s*(?!\\s))(?:[^()\\s]|\\s(?!\\s)|<<0>>)*(?=\\s*\\))/.source, [\n                    nestedRound\n                ]),\n                lookbehind: true,\n                alias: \"class-name\",\n                inside: typeInside\n            },\n            \"return-type\": {\n                // Foo<Bar> ForBar(); Foo IFoo.Bar() => 0\n                // int this[int index] => 0; T IReadOnlyList<T>.this[int index] => this[index];\n                // int Foo => 0; int Foo { get; set } = 0;\n                pattern: re(/<<0>>(?=\\s+(?:<<1>>\\s*(?:=>|[({]|\\.\\s*this\\s*\\[)|this\\s*\\[))/.source, [\n                    typeExpression,\n                    identifier\n                ]),\n                inside: typeInside,\n                alias: \"class-name\"\n            },\n            \"constructor-invocation\": {\n                // new List<Foo<Bar[]>> { }\n                pattern: re(/(\\bnew\\s+)<<0>>(?=\\s*[[({])/.source, [\n                    typeExpression\n                ]),\n                lookbehind: true,\n                inside: typeInside,\n                alias: \"class-name\"\n            },\n            /*'explicit-implementation': {\n// int IFoo<Foo>.Bar => 0; void IFoo<Foo<Foo>>.Foo<T>();\npattern: replace(/\\b<<0>>(?=\\.<<1>>)/, className, methodOrPropertyDeclaration),\ninside: classNameInside,\nalias: 'class-name'\n},*/ \"generic-method\": {\n                // foo<Bar>()\n                pattern: re(/<<0>>\\s*<<1>>(?=\\s*\\()/.source, [\n                    name,\n                    generic\n                ]),\n                inside: {\n                    function: re(/^<<0>>/.source, [\n                        name\n                    ]),\n                    generic: {\n                        pattern: RegExp(generic),\n                        alias: \"class-name\",\n                        inside: typeInside\n                    }\n                }\n            },\n            \"type-list\": {\n                // The list of types inherited or of generic constraints\n                // class Foo<F> : Bar, IList<FooBar>\n                // where F : Bar, IList<int>\n                pattern: re(/\\b((?:<<0>>\\s+<<1>>|record\\s+<<1>>\\s*<<5>>|where\\s+<<2>>)\\s*:\\s*)(?:<<3>>|<<4>>|<<1>>\\s*<<5>>|<<6>>)(?:\\s*,\\s*(?:<<3>>|<<4>>|<<6>>))*(?=\\s*(?:where|[{;]|=>|$))/.source, [\n                    typeDeclarationKeywords,\n                    genericName,\n                    name,\n                    typeExpression,\n                    keywords.source,\n                    nestedRound,\n                    /\\bnew\\s*\\(\\s*\\)/.source\n                ]),\n                lookbehind: true,\n                inside: {\n                    \"record-arguments\": {\n                        pattern: re(/(^(?!new\\s*\\()<<0>>\\s*)<<1>>/.source, [\n                            genericName,\n                            nestedRound\n                        ]),\n                        lookbehind: true,\n                        greedy: true,\n                        inside: Prism.languages.csharp\n                    },\n                    keyword: keywords,\n                    \"class-name\": {\n                        pattern: RegExp(typeExpression),\n                        greedy: true,\n                        inside: typeInside\n                    },\n                    punctuation: /[,()]/\n                }\n            },\n            preprocessor: {\n                pattern: /(^[\\t ]*)#.*/m,\n                lookbehind: true,\n                alias: \"property\",\n                inside: {\n                    // highlight preprocessor directives as keywords\n                    directive: {\n                        pattern: /(#)\\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\\b/,\n                        lookbehind: true,\n                        alias: \"keyword\"\n                    }\n                }\n            }\n        }) // attributes\n        ;\n        var regularStringOrCharacter = regularString + \"|\" + character;\n        var regularStringCharacterOrComment = replace(/\\/(?![*/])|\\/\\/[^\\r\\n]*[\\r\\n]|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>/.source, [\n            regularStringOrCharacter\n        ]);\n        var roundExpression = nested(replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [\n            regularStringCharacterOrComment\n        ]), 2) // https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/attributes/#attribute-targets\n        ;\n        var attrTarget = /\\b(?:assembly|event|field|method|module|param|property|return|type)\\b/.source;\n        var attr = replace(/<<0>>(?:\\s*\\(<<1>>*\\))?/.source, [\n            identifier,\n            roundExpression\n        ]);\n        Prism.languages.insertBefore(\"csharp\", \"class-name\", {\n            attribute: {\n                // Attributes\n                // [Foo], [Foo(1), Bar(2, Prop = \"foo\")], [return: Foo(1), Bar(2)], [assembly: Foo(Bar)]\n                pattern: re(/((?:^|[^\\s\\w>)?])\\s*\\[\\s*)(?:<<0>>\\s*:\\s*)?<<1>>(?:\\s*,\\s*<<1>>)*(?=\\s*\\])/.source, [\n                    attrTarget,\n                    attr\n                ]),\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    target: {\n                        pattern: re(/^<<0>>(?=\\s*:)/.source, [\n                            attrTarget\n                        ]),\n                        alias: \"keyword\"\n                    },\n                    \"attribute-arguments\": {\n                        pattern: re(/\\(<<0>>*\\)/.source, [\n                            roundExpression\n                        ]),\n                        inside: Prism.languages.csharp\n                    },\n                    \"class-name\": {\n                        pattern: RegExp(identifier),\n                        inside: {\n                            punctuation: /\\./\n                        }\n                    },\n                    punctuation: /[:,]/\n                }\n            }\n        }) // string interpolation\n        ;\n        var formatString = /:[^}\\r\\n]+/.source // multi line\n        ;\n        var mInterpolationRound = nested(replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [\n            regularStringCharacterOrComment\n        ]), 2);\n        var mInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\n            mInterpolationRound,\n            formatString\n        ]) // single line\n        ;\n        var sInterpolationRound = nested(replace(/[^\"'/()]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>|\\(<<self>>*\\)/.source, [\n            regularStringOrCharacter\n        ]), 2);\n        var sInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\n            sInterpolationRound,\n            formatString\n        ]);\n        function createInterpolationInside(interpolation, interpolationRound) {\n            return {\n                interpolation: {\n                    pattern: re(/((?:^|[^{])(?:\\{\\{)*)<<0>>/.source, [\n                        interpolation\n                    ]),\n                    lookbehind: true,\n                    inside: {\n                        \"format-string\": {\n                            pattern: re(/(^\\{(?:(?![}:])<<0>>)*)<<1>>(?=\\}$)/.source, [\n                                interpolationRound,\n                                formatString\n                            ]),\n                            lookbehind: true,\n                            inside: {\n                                punctuation: /^:/\n                            }\n                        },\n                        punctuation: /^\\{|\\}$/,\n                        expression: {\n                            pattern: /[\\s\\S]+/,\n                            alias: \"language-csharp\",\n                            inside: Prism.languages.csharp\n                        }\n                    }\n                },\n                string: /[\\s\\S]+/\n            };\n        }\n        Prism.languages.insertBefore(\"csharp\", \"string\", {\n            \"interpolation-string\": [\n                {\n                    pattern: re(/(^|[^\\\\])(?:\\$@|@\\$)\"(?:\"\"|\\\\[\\s\\S]|\\{\\{|<<0>>|[^\\\\{\"])*\"/.source, [\n                        mInterpolation\n                    ]),\n                    lookbehind: true,\n                    greedy: true,\n                    inside: createInterpolationInside(mInterpolation, mInterpolationRound)\n                },\n                {\n                    pattern: re(/(^|[^@\\\\])\\$\"(?:\\\\.|\\{\\{|<<0>>|[^\\\\\"{])*\"/.source, [\n                        sInterpolation\n                    ]),\n                    lookbehind: true,\n                    greedy: true,\n                    inside: createInterpolationInside(sInterpolation, sInterpolationRound)\n                }\n            ],\n            char: {\n                pattern: RegExp(character),\n                greedy: true\n            }\n        });\n        Prism.languages.dotnet = Prism.languages.cs = Prism.languages.csharp;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvY3NoYXJwLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLE9BQU9DLFdBQVcsR0FBRztBQUNyQkQsT0FBT0UsT0FBTyxHQUFHO0lBQUM7SUFBVTtDQUFLO0FBQ2pDLFNBQVNGLE9BQU9HLEtBQUs7O0lBQ2pCLFVBQVVBLEtBQUs7UUFDZjs7Ozs7Ozs7O0tBU0MsR0FDRCxTQUFTQyxRQUFRQyxPQUFPLEVBQUVDLFlBQVk7WUFDcEMsT0FBT0QsUUFBUUQsT0FBTyxDQUFDLGNBQWMsU0FBVUcsQ0FBQyxFQUFFQyxLQUFLO2dCQUNyRCxPQUFPLFFBQVFGLFlBQVksQ0FBQyxDQUFDRSxNQUFNLEdBQUc7WUFDeEM7UUFDRjtRQUNBOzs7OztLQUtDLEdBQ0QsU0FBU0MsR0FBR0osT0FBTyxFQUFFQyxZQUFZLEVBQUVJLEtBQUs7WUFDdEMsT0FBT0MsT0FBT1AsUUFBUUMsU0FBU0MsZUFBZUksU0FBUztRQUN6RDtRQUNBOzs7Ozs7S0FNQyxHQUNELFNBQVNFLE9BQU9QLE9BQU8sRUFBRVEsU0FBUztZQUNoQyxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUQsV0FBV0MsSUFBSztnQkFDbENULFVBQVVBLFFBQVFELE9BQU8sQ0FBQyxhQUFhO29CQUNyQyxPQUFPLFFBQVFDLFVBQVU7Z0JBQzNCO1lBQ0Y7WUFDQSxPQUFPQSxRQUFRRCxPQUFPLENBQUMsYUFBYTtRQUN0QyxFQUFFLDhFQUE4RTtRQUNoRixJQUFJVyxlQUFlO1lBQ2pCLHFEQUFxRDtZQUNyREMsTUFBTTtZQUNOLDRDQUE0QztZQUM1Q0MsaUJBQWlCO1lBQ2pCLHNCQUFzQjtZQUN0QixxRUFBcUU7WUFDckVDLFlBQ0U7WUFDRixxQkFBcUI7WUFDckJDLE9BQ0U7UUFDSixFQUFFLFdBQVc7O1FBQ2IsU0FBU0Msa0JBQWtCQyxLQUFLO1lBQzlCLE9BQU8sV0FBV0EsTUFBTUMsSUFBSSxHQUFHbEIsT0FBTyxDQUFDLE1BQU0sT0FBTztRQUN0RDtRQUNBLElBQUltQiwwQkFBMEJILGtCQUM1QkwsYUFBYUUsZUFBZTtRQUU5QixJQUFJTyxXQUFXYixPQUNiUyxrQkFDRUwsYUFBYUMsSUFBSSxHQUNmLE1BQ0FELGFBQWFFLGVBQWUsR0FDNUIsTUFDQUYsYUFBYUcsVUFBVSxHQUN2QixNQUNBSCxhQUFhSSxLQUFLO1FBR3hCLElBQUlNLGtCQUFrQkwsa0JBQ3BCTCxhQUFhRSxlQUFlLEdBQzFCLE1BQ0FGLGFBQWFHLFVBQVUsR0FDdkIsTUFDQUgsYUFBYUksS0FBSztRQUV0QixJQUFJTyx3QkFBd0JOLGtCQUMxQkwsYUFBYUMsSUFBSSxHQUNmLE1BQ0FELGFBQWFFLGVBQWUsR0FDNUIsTUFDQUYsYUFBYUksS0FBSyxFQUNwQixRQUFROztRQUNWLElBQUlRLFVBQVVmLE9BQU8sbUNBQW1DZ0IsTUFBTSxFQUFFLEdBQUcsdUdBQXVHOztRQUMxSyxJQUFJQyxjQUFjakIsT0FBTywwQkFBMEJnQixNQUFNLEVBQUU7UUFDM0QsSUFBSUUsT0FBTyxxQkFBcUJGLE1BQU07UUFDdEMsSUFBSUcsY0FBYzNCLFFBQVEscUJBQXFCd0IsTUFBTSxFQUFFO1lBQUNFO1lBQU1IO1NBQVE7UUFDdEUsSUFBSUssYUFBYTVCLFFBQVEsbUNBQW1Dd0IsTUFBTSxFQUFFO1lBQ2xFSDtZQUNBTTtTQUNEO1FBQ0QsSUFBSUUsUUFBUSxtQkFBbUJMLE1BQU07UUFDckMsSUFBSU0sNkJBQTZCOUIsUUFDL0IseUNBQXlDd0IsTUFBTSxFQUMvQztZQUFDSTtZQUFZQztTQUFNO1FBRXJCLElBQUlFLGVBQWUvQixRQUNqQiwyQ0FBMkN3QixNQUFNLEVBQ2pEO1lBQUNEO1lBQVNFO1lBQWFJO1NBQU07UUFFL0IsSUFBSUcsUUFBUWhDLFFBQVEseUJBQXlCd0IsTUFBTSxFQUFFO1lBQUNPO1NBQWE7UUFDbkUsSUFBSUUsaUJBQWlCakMsUUFDbkIsbURBQW1Ed0IsTUFBTSxFQUN6RDtZQUFDUTtZQUFPSjtZQUFZQztTQUFNO1FBRTVCLElBQUlLLGFBQWE7WUFDZkMsU0FBU2Y7WUFDVGdCLGFBQWE7UUFDZixFQUFFLHVCQUF1Qjs7UUFDekIsZ0lBQWdJO1FBQ2hJLDZIQUE2SDtRQUM3SCxJQUFJQyxZQUFZLDhDQUE4Q2IsTUFBTSxDQUFDLHFCQUFxQjs7UUFDMUYsSUFBSWMsZ0JBQWdCLHdCQUF3QmQsTUFBTTtRQUNsRCxJQUFJZSxpQkFBaUIsa0NBQWtDZixNQUFNO1FBQzdEekIsTUFBTXlDLFNBQVMsQ0FBQzVDLE1BQU0sR0FBR0csTUFBTXlDLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLFNBQVM7WUFDdkRDLFFBQVE7Z0JBQ047b0JBQ0V6QyxTQUFTSSxHQUFHLGtCQUFrQm1CLE1BQU0sRUFBRTt3QkFBQ2U7cUJBQWU7b0JBQ3RESSxZQUFZO29CQUNaQyxRQUFRO2dCQUNWO2dCQUNBO29CQUNFM0MsU0FBU0ksR0FBRyxtQkFBbUJtQixNQUFNLEVBQUU7d0JBQUNjO3FCQUFjO29CQUN0REssWUFBWTtvQkFDWkMsUUFBUTtnQkFDVjthQUNEO1lBQ0QsY0FBYztnQkFDWjtvQkFDRSxlQUFlO29CQUNmLDRCQUE0QjtvQkFDNUIzQyxTQUFTSSxHQUFHLHFDQUFxQ21CLE1BQU0sRUFBRTt3QkFDdkRJO3FCQUNEO29CQUNEZSxZQUFZO29CQUNaRSxRQUFRWDtnQkFDVjtnQkFDQTtvQkFDRSxxQkFBcUI7b0JBQ3JCLHdDQUF3QztvQkFDeENqQyxTQUFTSSxHQUFHLHdDQUF3Q21CLE1BQU0sRUFBRTt3QkFDMURFO3dCQUNBTztxQkFDRDtvQkFDRFUsWUFBWTtvQkFDWkUsUUFBUVg7Z0JBQ1Y7Z0JBQ0E7b0JBQ0Usc0JBQXNCO29CQUN0Qix3Q0FBd0M7b0JBQ3hDakMsU0FBU0ksR0FBRyw0QkFBNEJtQixNQUFNLEVBQUU7d0JBQUNFO3FCQUFLO29CQUN0RGlCLFlBQVk7Z0JBQ2Q7Z0JBQ0E7b0JBQ0Usb0JBQW9CO29CQUNwQixrQkFBa0I7b0JBQ2xCLDBCQUEwQjtvQkFDMUIxQyxTQUFTSSxHQUFHLG9CQUFvQm1CLE1BQU0sRUFBRTt3QkFDdENMO3dCQUNBUTtxQkFDRDtvQkFDRGdCLFlBQVk7b0JBQ1pFLFFBQVFYO2dCQUNWO2dCQUNBO29CQUNFLHFDQUFxQztvQkFDckMsYUFBYTtvQkFDYixnRUFBZ0U7b0JBQ2hFakMsU0FBU0ksR0FBRyx5QkFBeUJtQixNQUFNLEVBQUU7d0JBQUNJO3FCQUFXO29CQUN6RGUsWUFBWTtvQkFDWkUsUUFBUVg7Z0JBQ1Y7Z0JBQ0E7b0JBQ0Usb0RBQW9EO29CQUNwRCxvQkFBb0I7b0JBQ3BCakMsU0FBU0ksR0FBRyxvQkFBb0JtQixNQUFNLEVBQUU7d0JBQUNFO3FCQUFLO29CQUM5Q2lCLFlBQVk7Z0JBQ2Q7Z0JBQ0E7b0JBQ0Usa0NBQWtDO29CQUNsQyx1QkFBdUI7b0JBQ3ZCLGtFQUFrRTtvQkFDbEUxQyxTQUFTSSxHQUFHLG1DQUFtQ21CLE1BQU0sRUFBRTt3QkFDckRNO3FCQUNEO29CQUNEYSxZQUFZO29CQUNaRSxRQUFRWDtnQkFDVjtnQkFDQTtvQkFDRSw0Q0FBNEM7b0JBQzVDLDZEQUE2RDtvQkFDN0RqQyxTQUFTSSxHQUNQLDJFQUNHbUIsTUFBTSxFQUNUO3dCQUFDUzt3QkFBZ0JYO3dCQUF1Qkk7cUJBQUs7b0JBRS9DbUIsUUFBUVg7Z0JBQ1Y7YUFDRDtZQUNEQyxTQUFTZjtZQUNULHNIQUFzSDtZQUN0SDBCLFFBQ0U7WUFDRkMsVUFBVTtZQUNWWCxhQUFhO1FBQ2Y7UUFDQXJDLE1BQU15QyxTQUFTLENBQUNRLFlBQVksQ0FBQyxVQUFVLFVBQVU7WUFDL0NDLE9BQU87Z0JBQ0xoRCxTQUFTO2dCQUNUaUQsT0FBTztZQUNUO1FBQ0Y7UUFDQW5ELE1BQU15QyxTQUFTLENBQUNRLFlBQVksQ0FBQyxVQUFVLGVBQWU7WUFDcEQsbUJBQW1CO2dCQUNqQi9DLFNBQVNJLEdBQUcseUJBQXlCbUIsTUFBTSxFQUFFO29CQUFDRTtpQkFBSztnQkFDbkRpQixZQUFZO2dCQUNaTyxPQUFPO1lBQ1Q7UUFDRjtRQUNBbkQsTUFBTXlDLFNBQVMsQ0FBQ1EsWUFBWSxDQUFDLFVBQVUsY0FBYztZQUNuREcsV0FBVztnQkFDVCx1QkFBdUI7Z0JBQ3ZCLGlCQUFpQjtnQkFDakJsRCxTQUFTSSxHQUNQLCtEQUErRG1CLE1BQU0sRUFDckU7b0JBQUNFO2lCQUFLO2dCQUVSaUIsWUFBWTtnQkFDWkUsUUFBUTtvQkFDTlQsYUFBYTtnQkFDZjtZQUNGO1lBQ0EsbUJBQW1CO2dCQUNqQiw4Q0FBOEM7Z0JBQzlDbkMsU0FBU0ksR0FDUCxrRkFDR21CLE1BQU0sRUFDVDtvQkFBQ0M7aUJBQVk7Z0JBRWZrQixZQUFZO2dCQUNaTyxPQUFPO2dCQUNQTCxRQUFRWDtZQUNWO1lBQ0EsZUFBZTtnQkFDYix5Q0FBeUM7Z0JBQ3pDLCtFQUErRTtnQkFDL0UsMENBQTBDO2dCQUMxQ2pDLFNBQVNJLEdBQ1AsK0RBQStEbUIsTUFBTSxFQUNyRTtvQkFBQ1M7b0JBQWdCTDtpQkFBVztnQkFFOUJpQixRQUFRWDtnQkFDUmdCLE9BQU87WUFDVDtZQUNBLDBCQUEwQjtnQkFDeEIsMkJBQTJCO2dCQUMzQmpELFNBQVNJLEdBQUcsOEJBQThCbUIsTUFBTSxFQUFFO29CQUFDUztpQkFBZTtnQkFDbEVVLFlBQVk7Z0JBQ1pFLFFBQVFYO2dCQUNSZ0IsT0FBTztZQUNUO1lBQ0E7Ozs7O0VBS0osR0FDSSxrQkFBa0I7Z0JBQ2hCLGFBQWE7Z0JBQ2JqRCxTQUFTSSxHQUFHLHlCQUF5Qm1CLE1BQU0sRUFBRTtvQkFBQ0U7b0JBQU1IO2lCQUFRO2dCQUM1RHNCLFFBQVE7b0JBQ05PLFVBQVUvQyxHQUFHLFNBQVNtQixNQUFNLEVBQUU7d0JBQUNFO3FCQUFLO29CQUNwQ0gsU0FBUzt3QkFDUHRCLFNBQVNNLE9BQU9nQjt3QkFDaEIyQixPQUFPO3dCQUNQTCxRQUFRWDtvQkFDVjtnQkFDRjtZQUNGO1lBQ0EsYUFBYTtnQkFDWCx3REFBd0Q7Z0JBQ3hELG9DQUFvQztnQkFDcEMsNEJBQTRCO2dCQUM1QmpDLFNBQVNJLEdBQ1Asa0tBQ0dtQixNQUFNLEVBQ1Q7b0JBQ0VMO29CQUNBUTtvQkFDQUQ7b0JBQ0FPO29CQUNBYixTQUFTSSxNQUFNO29CQUNmQztvQkFDQSxrQkFBa0JELE1BQU07aUJBQ3pCO2dCQUVIbUIsWUFBWTtnQkFDWkUsUUFBUTtvQkFDTixvQkFBb0I7d0JBQ2xCNUMsU0FBU0ksR0FBRywrQkFBK0JtQixNQUFNLEVBQUU7NEJBQ2pERzs0QkFDQUY7eUJBQ0Q7d0JBQ0RrQixZQUFZO3dCQUNaQyxRQUFRO3dCQUNSQyxRQUFROUMsTUFBTXlDLFNBQVMsQ0FBQzVDLE1BQU07b0JBQ2hDO29CQUNBdUMsU0FBU2Y7b0JBQ1QsY0FBYzt3QkFDWm5CLFNBQVNNLE9BQU8wQjt3QkFDaEJXLFFBQVE7d0JBQ1JDLFFBQVFYO29CQUNWO29CQUNBRSxhQUFhO2dCQUNmO1lBQ0Y7WUFDQWlCLGNBQWM7Z0JBQ1pwRCxTQUFTO2dCQUNUMEMsWUFBWTtnQkFDWk8sT0FBTztnQkFDUEwsUUFBUTtvQkFDTixnREFBZ0Q7b0JBQ2hEUyxXQUFXO3dCQUNUckQsU0FDRTt3QkFDRjBDLFlBQVk7d0JBQ1pPLE9BQU87b0JBQ1Q7Z0JBQ0Y7WUFDRjtRQUNGLEdBQUcsYUFBYTs7UUFDaEIsSUFBSUssMkJBQTJCakIsZ0JBQWdCLE1BQU1EO1FBQ3JELElBQUltQixrQ0FBa0N4RCxRQUNwQyxpRUFBaUV3QixNQUFNLEVBQ3ZFO1lBQUMrQjtTQUF5QjtRQUU1QixJQUFJRSxrQkFBa0JqRCxPQUNwQlIsUUFBUSwrQkFBK0J3QixNQUFNLEVBQUU7WUFDN0NnQztTQUNELEdBQ0QsR0FDQSwwR0FBMEc7O1FBQzVHLElBQUlFLGFBQ0Ysd0VBQ0dsQyxNQUFNO1FBQ1gsSUFBSW1DLE9BQU8zRCxRQUFRLDBCQUEwQndCLE1BQU0sRUFBRTtZQUNuREk7WUFDQTZCO1NBQ0Q7UUFDRDFELE1BQU15QyxTQUFTLENBQUNRLFlBQVksQ0FBQyxVQUFVLGNBQWM7WUFDbkRZLFdBQVc7Z0JBQ1QsYUFBYTtnQkFDYix3RkFBd0Y7Z0JBQ3hGM0QsU0FBU0ksR0FDUCw2RUFDR21CLE1BQU0sRUFDVDtvQkFBQ2tDO29CQUFZQztpQkFBSztnQkFFcEJoQixZQUFZO2dCQUNaQyxRQUFRO2dCQUNSQyxRQUFRO29CQUNOZ0IsUUFBUTt3QkFDTjVELFNBQVNJLEdBQUcsaUJBQWlCbUIsTUFBTSxFQUFFOzRCQUFDa0M7eUJBQVc7d0JBQ2pEUixPQUFPO29CQUNUO29CQUNBLHVCQUF1Qjt3QkFDckJqRCxTQUFTSSxHQUFHLGFBQWFtQixNQUFNLEVBQUU7NEJBQUNpQzt5QkFBZ0I7d0JBQ2xEWixRQUFROUMsTUFBTXlDLFNBQVMsQ0FBQzVDLE1BQU07b0JBQ2hDO29CQUNBLGNBQWM7d0JBQ1pLLFNBQVNNLE9BQU9xQjt3QkFDaEJpQixRQUFROzRCQUNOVCxhQUFhO3dCQUNmO29CQUNGO29CQUNBQSxhQUFhO2dCQUNmO1lBQ0Y7UUFDRixHQUFHLHVCQUF1Qjs7UUFDMUIsSUFBSTBCLGVBQWUsYUFBYXRDLE1BQU0sQ0FBQyxhQUFhOztRQUNwRCxJQUFJdUMsc0JBQXNCdkQsT0FDeEJSLFFBQVEsK0JBQStCd0IsTUFBTSxFQUFFO1lBQzdDZ0M7U0FDRCxHQUNEO1FBRUYsSUFBSVEsaUJBQWlCaEUsUUFBUSxxQ0FBcUN3QixNQUFNLEVBQUU7WUFDeEV1QztZQUNBRDtTQUNELEVBQUUsY0FBYzs7UUFDakIsSUFBSUcsc0JBQXNCekQsT0FDeEJSLFFBQ0UsbUVBQ0d3QixNQUFNLEVBQ1Q7WUFBQytCO1NBQXlCLEdBRTVCO1FBRUYsSUFBSVcsaUJBQWlCbEUsUUFBUSxxQ0FBcUN3QixNQUFNLEVBQUU7WUFDeEV5QztZQUNBSDtTQUNEO1FBQ0QsU0FBU0ssMEJBQTBCQyxhQUFhLEVBQUVDLGtCQUFrQjtZQUNsRSxPQUFPO2dCQUNMRCxlQUFlO29CQUNibkUsU0FBU0ksR0FBRyw2QkFBNkJtQixNQUFNLEVBQUU7d0JBQUM0QztxQkFBYztvQkFDaEV6QixZQUFZO29CQUNaRSxRQUFRO3dCQUNOLGlCQUFpQjs0QkFDZjVDLFNBQVNJLEdBQUcsc0NBQXNDbUIsTUFBTSxFQUFFO2dDQUN4RDZDO2dDQUNBUDs2QkFDRDs0QkFDRG5CLFlBQVk7NEJBQ1pFLFFBQVE7Z0NBQ05ULGFBQWE7NEJBQ2Y7d0JBQ0Y7d0JBQ0FBLGFBQWE7d0JBQ2JrQyxZQUFZOzRCQUNWckUsU0FBUzs0QkFDVGlELE9BQU87NEJBQ1BMLFFBQVE5QyxNQUFNeUMsU0FBUyxDQUFDNUMsTUFBTTt3QkFDaEM7b0JBQ0Y7Z0JBQ0Y7Z0JBQ0E4QyxRQUFRO1lBQ1Y7UUFDRjtRQUNBM0MsTUFBTXlDLFNBQVMsQ0FBQ1EsWUFBWSxDQUFDLFVBQVUsVUFBVTtZQUMvQyx3QkFBd0I7Z0JBQ3RCO29CQUNFL0MsU0FBU0ksR0FDUCw0REFBNERtQixNQUFNLEVBQ2xFO3dCQUFDd0M7cUJBQWU7b0JBRWxCckIsWUFBWTtvQkFDWkMsUUFBUTtvQkFDUkMsUUFBUXNCLDBCQUEwQkgsZ0JBQWdCRDtnQkFDcEQ7Z0JBQ0E7b0JBQ0U5RCxTQUFTSSxHQUFHLDRDQUE0Q21CLE1BQU0sRUFBRTt3QkFDOUQwQztxQkFDRDtvQkFDRHZCLFlBQVk7b0JBQ1pDLFFBQVE7b0JBQ1JDLFFBQVFzQiwwQkFBMEJELGdCQUFnQkQ7Z0JBQ3BEO2FBQ0Q7WUFDRE0sTUFBTTtnQkFDSnRFLFNBQVNNLE9BQU84QjtnQkFDaEJPLFFBQVE7WUFDVjtRQUNGO1FBQ0E3QyxNQUFNeUMsU0FBUyxDQUFDZ0MsTUFBTSxHQUFHekUsTUFBTXlDLFNBQVMsQ0FBQ2lDLEVBQUUsR0FBRzFFLE1BQU15QyxTQUFTLENBQUM1QyxNQUFNO0lBQ3RFLEdBQUdHO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvY3NoYXJwLmpzP2ExZTciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gY3NoYXJwXG5jc2hhcnAuZGlzcGxheU5hbWUgPSAnY3NoYXJwJ1xuY3NoYXJwLmFsaWFzZXMgPSBbJ2RvdG5ldCcsICdjcyddXG5mdW5jdGlvbiBjc2hhcnAoUHJpc20pIHtcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICAvKipcbiAgICAgKiBSZXBsYWNlcyBhbGwgcGxhY2Vob2xkZXJzIFwiPDxuPj5cIiBvZiBnaXZlbiBwYXR0ZXJuIHdpdGggdGhlIG4tdGggcmVwbGFjZW1lbnQgKHplcm8gYmFzZWQpLlxuICAgICAqXG4gICAgICogTm90ZTogVGhpcyBpcyBhIHNpbXBsZSB0ZXh0IGJhc2VkIHJlcGxhY2VtZW50LiBCZSBjYXJlZnVsIHdoZW4gdXNpbmcgYmFja3JlZmVyZW5jZXMhXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gcGF0dGVybiB0aGUgZ2l2ZW4gcGF0dGVybi5cbiAgICAgKiBAcGFyYW0ge3N0cmluZ1tdfSByZXBsYWNlbWVudHMgYSBsaXN0IG9mIHJlcGxhY2VtZW50IHdoaWNoIGNhbiBiZSBpbnNlcnRlZCBpbnRvIHRoZSBnaXZlbiBwYXR0ZXJuLlxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IHRoZSBwYXR0ZXJuIHdpdGggYWxsIHBsYWNlaG9sZGVycyByZXBsYWNlZCB3aXRoIHRoZWlyIGNvcnJlc3BvbmRpbmcgcmVwbGFjZW1lbnRzLlxuICAgICAqIEBleGFtcGxlIHJlcGxhY2UoL2E8PDA+PmEvLnNvdXJjZSwgWy9iKy8uc291cmNlXSkgPT09IC9hKD86YispYS8uc291cmNlXG4gICAgICovXG4gICAgZnVuY3Rpb24gcmVwbGFjZShwYXR0ZXJuLCByZXBsYWNlbWVudHMpIHtcbiAgICAgIHJldHVybiBwYXR0ZXJuLnJlcGxhY2UoLzw8KFxcZCspPj4vZywgZnVuY3Rpb24gKG0sIGluZGV4KSB7XG4gICAgICAgIHJldHVybiAnKD86JyArIHJlcGxhY2VtZW50c1sraW5kZXhdICsgJyknXG4gICAgICB9KVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gcGF0dGVyblxuICAgICAqIEBwYXJhbSB7c3RyaW5nW119IHJlcGxhY2VtZW50c1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBbZmxhZ3NdXG4gICAgICogQHJldHVybnMge1JlZ0V4cH1cbiAgICAgKi9cbiAgICBmdW5jdGlvbiByZShwYXR0ZXJuLCByZXBsYWNlbWVudHMsIGZsYWdzKSB7XG4gICAgICByZXR1cm4gUmVnRXhwKHJlcGxhY2UocGF0dGVybiwgcmVwbGFjZW1lbnRzKSwgZmxhZ3MgfHwgJycpXG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXN0ZWQgcGF0dGVybiB3aGVyZSBhbGwgb2NjdXJyZW5jZXMgb2YgdGhlIHN0cmluZyBgPDxzZWxmPj5gIGFyZSByZXBsYWNlZCB3aXRoIHRoZSBwYXR0ZXJuIGl0c2VsZi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBwYXR0ZXJuXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGRlcHRoTG9nMlxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAgICovXG4gICAgZnVuY3Rpb24gbmVzdGVkKHBhdHRlcm4sIGRlcHRoTG9nMikge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkZXB0aExvZzI7IGkrKykge1xuICAgICAgICBwYXR0ZXJuID0gcGF0dGVybi5yZXBsYWNlKC88PHNlbGY+Pi9nLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuICcoPzonICsgcGF0dGVybiArICcpJ1xuICAgICAgICB9KVxuICAgICAgfVxuICAgICAgcmV0dXJuIHBhdHRlcm4ucmVwbGFjZSgvPDxzZWxmPj4vZywgJ1teXFxcXHNcXFxcU10nKVxuICAgIH0gLy8gaHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvZG90bmV0L2NzaGFycC9sYW5ndWFnZS1yZWZlcmVuY2Uva2V5d29yZHMvXG4gICAgdmFyIGtleXdvcmRLaW5kcyA9IHtcbiAgICAgIC8vIGtleXdvcmRzIHdoaWNoIHJlcHJlc2VudCBhIHJldHVybiBvciB2YXJpYWJsZSB0eXBlXG4gICAgICB0eXBlOiAnYm9vbCBieXRlIGNoYXIgZGVjaW1hbCBkb3VibGUgZHluYW1pYyBmbG9hdCBpbnQgbG9uZyBvYmplY3Qgc2J5dGUgc2hvcnQgc3RyaW5nIHVpbnQgdWxvbmcgdXNob3J0IHZhciB2b2lkJyxcbiAgICAgIC8vIGtleXdvcmRzIHdoaWNoIGFyZSB1c2VkIHRvIGRlY2xhcmUgYSB0eXBlXG4gICAgICB0eXBlRGVjbGFyYXRpb246ICdjbGFzcyBlbnVtIGludGVyZmFjZSByZWNvcmQgc3RydWN0JyxcbiAgICAgIC8vIGNvbnRleHR1YWwga2V5d29yZHNcbiAgICAgIC8vIChcInZhclwiIGFuZCBcImR5bmFtaWNcIiBhcmUgbWlzc2luZyBiZWNhdXNlIHRoZXkgYXJlIHVzZWQgbGlrZSB0eXBlcylcbiAgICAgIGNvbnRleHR1YWw6XG4gICAgICAgICdhZGQgYWxpYXMgYW5kIGFzY2VuZGluZyBhc3luYyBhd2FpdCBieSBkZXNjZW5kaW5nIGZyb20oPz1cXFxccyooPzpcXFxcd3wkKSkgZ2V0IGdsb2JhbCBncm91cCBpbnRvIGluaXQoPz1cXFxccyo7KSBqb2luIGxldCBuYW1lb2Ygbm90IG5vdG51bGwgb24gb3Igb3JkZXJieSBwYXJ0aWFsIHJlbW92ZSBzZWxlY3Qgc2V0IHVubWFuYWdlZCB2YWx1ZSB3aGVuIHdoZXJlIHdpdGgoPz1cXFxccyp7KScsXG4gICAgICAvLyBhbGwgb3RoZXIga2V5d29yZHNcbiAgICAgIG90aGVyOlxuICAgICAgICAnYWJzdHJhY3QgYXMgYmFzZSBicmVhayBjYXNlIGNhdGNoIGNoZWNrZWQgY29uc3QgY29udGludWUgZGVmYXVsdCBkZWxlZ2F0ZSBkbyBlbHNlIGV2ZW50IGV4cGxpY2l0IGV4dGVybiBmaW5hbGx5IGZpeGVkIGZvciBmb3JlYWNoIGdvdG8gaWYgaW1wbGljaXQgaW4gaW50ZXJuYWwgaXMgbG9jayBuYW1lc3BhY2UgbmV3IG51bGwgb3BlcmF0b3Igb3V0IG92ZXJyaWRlIHBhcmFtcyBwcml2YXRlIHByb3RlY3RlZCBwdWJsaWMgcmVhZG9ubHkgcmVmIHJldHVybiBzZWFsZWQgc2l6ZW9mIHN0YWNrYWxsb2Mgc3RhdGljIHN3aXRjaCB0aGlzIHRocm93IHRyeSB0eXBlb2YgdW5jaGVja2VkIHVuc2FmZSB1c2luZyB2aXJ0dWFsIHZvbGF0aWxlIHdoaWxlIHlpZWxkJ1xuICAgIH0gLy8ga2V5d29yZHNcbiAgICBmdW5jdGlvbiBrZXl3b3Jkc1RvUGF0dGVybih3b3Jkcykge1xuICAgICAgcmV0dXJuICdcXFxcYig/OicgKyB3b3Jkcy50cmltKCkucmVwbGFjZSgvIC9nLCAnfCcpICsgJylcXFxcYidcbiAgICB9XG4gICAgdmFyIHR5cGVEZWNsYXJhdGlvbktleXdvcmRzID0ga2V5d29yZHNUb1BhdHRlcm4oXG4gICAgICBrZXl3b3JkS2luZHMudHlwZURlY2xhcmF0aW9uXG4gICAgKVxuICAgIHZhciBrZXl3b3JkcyA9IFJlZ0V4cChcbiAgICAgIGtleXdvcmRzVG9QYXR0ZXJuKFxuICAgICAgICBrZXl3b3JkS2luZHMudHlwZSArXG4gICAgICAgICAgJyAnICtcbiAgICAgICAgICBrZXl3b3JkS2luZHMudHlwZURlY2xhcmF0aW9uICtcbiAgICAgICAgICAnICcgK1xuICAgICAgICAgIGtleXdvcmRLaW5kcy5jb250ZXh0dWFsICtcbiAgICAgICAgICAnICcgK1xuICAgICAgICAgIGtleXdvcmRLaW5kcy5vdGhlclxuICAgICAgKVxuICAgIClcbiAgICB2YXIgbm9uVHlwZUtleXdvcmRzID0ga2V5d29yZHNUb1BhdHRlcm4oXG4gICAgICBrZXl3b3JkS2luZHMudHlwZURlY2xhcmF0aW9uICtcbiAgICAgICAgJyAnICtcbiAgICAgICAga2V5d29yZEtpbmRzLmNvbnRleHR1YWwgK1xuICAgICAgICAnICcgK1xuICAgICAgICBrZXl3b3JkS2luZHMub3RoZXJcbiAgICApXG4gICAgdmFyIG5vbkNvbnRleHR1YWxLZXl3b3JkcyA9IGtleXdvcmRzVG9QYXR0ZXJuKFxuICAgICAga2V5d29yZEtpbmRzLnR5cGUgK1xuICAgICAgICAnICcgK1xuICAgICAgICBrZXl3b3JkS2luZHMudHlwZURlY2xhcmF0aW9uICtcbiAgICAgICAgJyAnICtcbiAgICAgICAga2V5d29yZEtpbmRzLm90aGVyXG4gICAgKSAvLyB0eXBlc1xuICAgIHZhciBnZW5lcmljID0gbmVzdGVkKC88KD86W148Pjs9K1xcLSovJSZ8Xl18PDxzZWxmPj4pKj4vLnNvdXJjZSwgMikgLy8gdGhlIGlkZWEgYmVoaW5kIHRoZSBvdGhlciBmb3JiaWRkZW4gY2hhcmFjdGVycyBpcyB0byBwcmV2ZW50IGZhbHNlIHBvc2l0aXZlcy4gU2FtZSBmb3IgdHVwbGVFbGVtZW50LlxuICAgIHZhciBuZXN0ZWRSb3VuZCA9IG5lc3RlZCgvXFwoKD86W14oKV18PDxzZWxmPj4pKlxcKS8uc291cmNlLCAyKVxuICAgIHZhciBuYW1lID0gL0A/XFxiW0EtWmEtel9dXFx3KlxcYi8uc291cmNlXG4gICAgdmFyIGdlbmVyaWNOYW1lID0gcmVwbGFjZSgvPDwwPj4oPzpcXHMqPDwxPj4pPy8uc291cmNlLCBbbmFtZSwgZ2VuZXJpY10pXG4gICAgdmFyIGlkZW50aWZpZXIgPSByZXBsYWNlKC8oPyE8PDA+Pik8PDE+Pig/OlxccypcXC5cXHMqPDwxPj4pKi8uc291cmNlLCBbXG4gICAgICBub25UeXBlS2V5d29yZHMsXG4gICAgICBnZW5lcmljTmFtZVxuICAgIF0pXG4gICAgdmFyIGFycmF5ID0gL1xcW1xccyooPzosXFxzKikqXFxdLy5zb3VyY2VcbiAgICB2YXIgdHlwZUV4cHJlc3Npb25XaXRob3V0VHVwbGUgPSByZXBsYWNlKFxuICAgICAgLzw8MD4+KD86XFxzKig/OlxcP1xccyopPzw8MT4+KSooPzpcXHMqXFw/KT8vLnNvdXJjZSxcbiAgICAgIFtpZGVudGlmaWVyLCBhcnJheV1cbiAgICApXG4gICAgdmFyIHR1cGxlRWxlbWVudCA9IHJlcGxhY2UoXG4gICAgICAvW14sKCk8PltcXF07PStcXC0qLyUmfF5dfDw8MD4+fDw8MT4+fDw8Mj4+Ly5zb3VyY2UsXG4gICAgICBbZ2VuZXJpYywgbmVzdGVkUm91bmQsIGFycmF5XVxuICAgIClcbiAgICB2YXIgdHVwbGUgPSByZXBsYWNlKC9cXCg8PDA+PisoPzosPDwwPj4rKStcXCkvLnNvdXJjZSwgW3R1cGxlRWxlbWVudF0pXG4gICAgdmFyIHR5cGVFeHByZXNzaW9uID0gcmVwbGFjZShcbiAgICAgIC8oPzo8PDA+Pnw8PDE+PikoPzpcXHMqKD86XFw/XFxzKik/PDwyPj4pKig/OlxccypcXD8pPy8uc291cmNlLFxuICAgICAgW3R1cGxlLCBpZGVudGlmaWVyLCBhcnJheV1cbiAgICApXG4gICAgdmFyIHR5cGVJbnNpZGUgPSB7XG4gICAgICBrZXl3b3JkOiBrZXl3b3JkcyxcbiAgICAgIHB1bmN0dWF0aW9uOiAvWzw+KCk/LC46W1xcXV0vXG4gICAgfSAvLyBzdHJpbmdzICYgY2hhcmFjdGVyc1xuICAgIC8vIGh0dHBzOi8vZG9jcy5taWNyb3NvZnQuY29tL2VuLXVzL2RvdG5ldC9jc2hhcnAvbGFuZ3VhZ2UtcmVmZXJlbmNlL2xhbmd1YWdlLXNwZWNpZmljYXRpb24vbGV4aWNhbC1zdHJ1Y3R1cmUjY2hhcmFjdGVyLWxpdGVyYWxzXG4gICAgLy8gaHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvZG90bmV0L2NzaGFycC9sYW5ndWFnZS1yZWZlcmVuY2UvbGFuZ3VhZ2Utc3BlY2lmaWNhdGlvbi9sZXhpY2FsLXN0cnVjdHVyZSNzdHJpbmctbGl0ZXJhbHNcbiAgICB2YXIgY2hhcmFjdGVyID0gLycoPzpbXlxcclxcbidcXFxcXXxcXFxcLnxcXFxcW1V1eF1bXFxkYS1mQS1GXXsxLDh9KScvLnNvdXJjZSAvLyBzaW1wbGlmaWVkIHBhdHRlcm5cbiAgICB2YXIgcmVndWxhclN0cmluZyA9IC9cIig/OlxcXFwufFteXFxcXFwiXFxyXFxuXSkqXCIvLnNvdXJjZVxuICAgIHZhciB2ZXJiYXRpbVN0cmluZyA9IC9AXCIoPzpcIlwifFxcXFxbXFxzXFxTXXxbXlxcXFxcIl0pKlwiKD8hXCIpLy5zb3VyY2VcbiAgICBQcmlzbS5sYW5ndWFnZXMuY3NoYXJwID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnY2xpa2UnLCB7XG4gICAgICBzdHJpbmc6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IHJlKC8oXnxbXiRcXFxcXSk8PDA+Pi8uc291cmNlLCBbdmVyYmF0aW1TdHJpbmddKSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogcmUoLyhefFteQCRcXFxcXSk8PDA+Pi8uc291cmNlLCBbcmVndWxhclN0cmluZ10pLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICAnY2xhc3MtbmFtZSc6IFtcbiAgICAgICAge1xuICAgICAgICAgIC8vIFVzaW5nIHN0YXRpY1xuICAgICAgICAgIC8vIHVzaW5nIHN0YXRpYyBTeXN0ZW0uTWF0aDtcbiAgICAgICAgICBwYXR0ZXJuOiByZSgvKFxcYnVzaW5nXFxzK3N0YXRpY1xccyspPDwwPj4oPz1cXHMqOykvLnNvdXJjZSwgW1xuICAgICAgICAgICAgaWRlbnRpZmllclxuICAgICAgICAgIF0pLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgaW5zaWRlOiB0eXBlSW5zaWRlXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAvLyBVc2luZyBhbGlhcyAodHlwZSlcbiAgICAgICAgICAvLyB1c2luZyBQcm9qZWN0ID0gUEMuTXlDb21wYW55LlByb2plY3Q7XG4gICAgICAgICAgcGF0dGVybjogcmUoLyhcXGJ1c2luZ1xccys8PDA+Plxccyo9XFxzKik8PDE+Pig/PVxccyo7KS8uc291cmNlLCBbXG4gICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgdHlwZUV4cHJlc3Npb25cbiAgICAgICAgICBdKSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGluc2lkZTogdHlwZUluc2lkZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgLy8gVXNpbmcgYWxpYXMgKGFsaWFzKVxuICAgICAgICAgIC8vIHVzaW5nIFByb2plY3QgPSBQQy5NeUNvbXBhbnkuUHJvamVjdDtcbiAgICAgICAgICBwYXR0ZXJuOiByZSgvKFxcYnVzaW5nXFxzKyk8PDA+Pig/PVxccyo9KS8uc291cmNlLCBbbmFtZV0pLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIC8vIFR5cGUgZGVjbGFyYXRpb25zXG4gICAgICAgICAgLy8gY2xhc3MgRm9vPEEsIEI+XG4gICAgICAgICAgLy8gaW50ZXJmYWNlIEZvbzxvdXQgQSwgQj5cbiAgICAgICAgICBwYXR0ZXJuOiByZSgvKFxcYjw8MD4+XFxzKyk8PDE+Pi8uc291cmNlLCBbXG4gICAgICAgICAgICB0eXBlRGVjbGFyYXRpb25LZXl3b3JkcyxcbiAgICAgICAgICAgIGdlbmVyaWNOYW1lXG4gICAgICAgICAgXSksXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHR5cGVJbnNpZGVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIC8vIFNpbmdsZSBjYXRjaCBleGNlcHRpb24gZGVjbGFyYXRpb25cbiAgICAgICAgICAvLyBjYXRjaChGb28pXG4gICAgICAgICAgLy8gKHRoaW5ncyBsaWtlIGNhdGNoKEZvbyBlKSBpcyBjb3ZlcmVkIGJ5IHZhcmlhYmxlIGRlY2xhcmF0aW9uKVxuICAgICAgICAgIHBhdHRlcm46IHJlKC8oXFxiY2F0Y2hcXHMqXFwoXFxzKik8PDA+Pi8uc291cmNlLCBbaWRlbnRpZmllcl0pLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgaW5zaWRlOiB0eXBlSW5zaWRlXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAvLyBOYW1lIG9mIHRoZSB0eXBlIHBhcmFtZXRlciBvZiBnZW5lcmljIGNvbnN0cmFpbnRzXG4gICAgICAgICAgLy8gd2hlcmUgRm9vIDogY2xhc3NcbiAgICAgICAgICBwYXR0ZXJuOiByZSgvKFxcYndoZXJlXFxzKyk8PDA+Pi8uc291cmNlLCBbbmFtZV0pLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIC8vIENhc3RzIGFuZCBjaGVja3MgdmlhIGFzIGFuZCBpcy5cbiAgICAgICAgICAvLyBhcyBGb288QT4sIGlzIEJhcjxCPlxuICAgICAgICAgIC8vICh0aGluZ3MgbGlrZSBpZihhIGlzIEZvbyBiKSBpcyBjb3ZlcmVkIGJ5IHZhcmlhYmxlIGRlY2xhcmF0aW9uKVxuICAgICAgICAgIHBhdHRlcm46IHJlKC8oXFxiKD86aXMoPzpcXHMrbm90KT98YXMpXFxzKyk8PDA+Pi8uc291cmNlLCBbXG4gICAgICAgICAgICB0eXBlRXhwcmVzc2lvbldpdGhvdXRUdXBsZVxuICAgICAgICAgIF0pLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgaW5zaWRlOiB0eXBlSW5zaWRlXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAvLyBWYXJpYWJsZSwgZmllbGQgYW5kIHBhcmFtZXRlciBkZWNsYXJhdGlvblxuICAgICAgICAgIC8vIChGb28gYmFyLCBCYXIgYmF6LCBGb29bLCxdIGJheSwgRm9vPEJhciwgRm9vQmFyPEJhcj4+IGJheClcbiAgICAgICAgICBwYXR0ZXJuOiByZShcbiAgICAgICAgICAgIC9cXGI8PDA+Pig/PVxccysoPyE8PDE+Pnx3aXRoXFxzKlxceyk8PDI+Pig/OlxccypbPSw7OnspXFxdXXxcXHMrKD86aW58d2hlbilcXGIpKS9cbiAgICAgICAgICAgICAgLnNvdXJjZSxcbiAgICAgICAgICAgIFt0eXBlRXhwcmVzc2lvbiwgbm9uQ29udGV4dHVhbEtleXdvcmRzLCBuYW1lXVxuICAgICAgICAgICksXG4gICAgICAgICAgaW5zaWRlOiB0eXBlSW5zaWRlXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBrZXl3b3JkOiBrZXl3b3JkcyxcbiAgICAgIC8vIGh0dHBzOi8vZG9jcy5taWNyb3NvZnQuY29tL2VuLXVzL2RvdG5ldC9jc2hhcnAvbGFuZ3VhZ2UtcmVmZXJlbmNlL2xhbmd1YWdlLXNwZWNpZmljYXRpb24vbGV4aWNhbC1zdHJ1Y3R1cmUjbGl0ZXJhbHNcbiAgICAgIG51bWJlcjpcbiAgICAgICAgLyg/OlxcYjAoPzp4W1xcZGEtZl9dKltcXGRhLWZdfGJbMDFfXSpbMDFdKXwoPzpcXEJcXC5cXGQrKD86XytcXGQrKSp8XFxiXFxkKyg/Ol8rXFxkKykqKD86XFwuXFxkKyg/Ol8rXFxkKykqKT8pKD86ZVstK10/XFxkKyg/Ol8rXFxkKykqKT8pKD86W2RmbG11XXxsdXx1bCk/XFxiL2ksXG4gICAgICBvcGVyYXRvcjogLz4+PT98PDw9P3xbLT1dPnwoWy0rJnxdKVxcMXx+fFxcP1xcPz0/fFstKyovJSZ8XiE9PD5dPT8vLFxuICAgICAgcHVuY3R1YXRpb246IC9cXD9cXC4/fDo6fFt7fVtcXF07KCksLjpdL1xuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnY3NoYXJwJywgJ251bWJlcicsIHtcbiAgICAgIHJhbmdlOiB7XG4gICAgICAgIHBhdHRlcm46IC9cXC5cXC4vLFxuICAgICAgICBhbGlhczogJ29wZXJhdG9yJ1xuICAgICAgfVxuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnY3NoYXJwJywgJ3B1bmN0dWF0aW9uJywge1xuICAgICAgJ25hbWVkLXBhcmFtZXRlcic6IHtcbiAgICAgICAgcGF0dGVybjogcmUoLyhbKCxdXFxzKik8PDA+Pig/PVxccyo6KS8uc291cmNlLCBbbmFtZV0pLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgfVxuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnY3NoYXJwJywgJ2NsYXNzLW5hbWUnLCB7XG4gICAgICBuYW1lc3BhY2U6IHtcbiAgICAgICAgLy8gbmFtZXNwYWNlIEZvby5CYXIge31cbiAgICAgICAgLy8gdXNpbmcgRm9vLkJhcjtcbiAgICAgICAgcGF0dGVybjogcmUoXG4gICAgICAgICAgLyhcXGIoPzpuYW1lc3BhY2V8dXNpbmcpXFxzKyk8PDA+Pig/OlxccypcXC5cXHMqPDwwPj4pKig/PVxccypbO3tdKS8uc291cmNlLFxuICAgICAgICAgIFtuYW1lXVxuICAgICAgICApLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjogL1xcLi9cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgICd0eXBlLWV4cHJlc3Npb24nOiB7XG4gICAgICAgIC8vIGRlZmF1bHQoRm9vKSwgdHlwZW9mKEZvbzxCYXI+KSwgc2l6ZW9mKGludClcbiAgICAgICAgcGF0dGVybjogcmUoXG4gICAgICAgICAgLyhcXGIoPzpkZWZhdWx0fHNpemVvZnx0eXBlb2YpXFxzKlxcKFxccyooPyFcXHMpKSg/OlteKClcXHNdfFxccyg/IVxccyl8PDwwPj4pKig/PVxccypcXCkpL1xuICAgICAgICAgICAgLnNvdXJjZSxcbiAgICAgICAgICBbbmVzdGVkUm91bmRdXG4gICAgICAgICksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiAnY2xhc3MtbmFtZScsXG4gICAgICAgIGluc2lkZTogdHlwZUluc2lkZVxuICAgICAgfSxcbiAgICAgICdyZXR1cm4tdHlwZSc6IHtcbiAgICAgICAgLy8gRm9vPEJhcj4gRm9yQmFyKCk7IEZvbyBJRm9vLkJhcigpID0+IDBcbiAgICAgICAgLy8gaW50IHRoaXNbaW50IGluZGV4XSA9PiAwOyBUIElSZWFkT25seUxpc3Q8VD4udGhpc1tpbnQgaW5kZXhdID0+IHRoaXNbaW5kZXhdO1xuICAgICAgICAvLyBpbnQgRm9vID0+IDA7IGludCBGb28geyBnZXQ7IHNldCB9ID0gMDtcbiAgICAgICAgcGF0dGVybjogcmUoXG4gICAgICAgICAgLzw8MD4+KD89XFxzKyg/Ojw8MT4+XFxzKig/Oj0+fFsoe118XFwuXFxzKnRoaXNcXHMqXFxbKXx0aGlzXFxzKlxcWykpLy5zb3VyY2UsXG4gICAgICAgICAgW3R5cGVFeHByZXNzaW9uLCBpZGVudGlmaWVyXVxuICAgICAgICApLFxuICAgICAgICBpbnNpZGU6IHR5cGVJbnNpZGUsXG4gICAgICAgIGFsaWFzOiAnY2xhc3MtbmFtZSdcbiAgICAgIH0sXG4gICAgICAnY29uc3RydWN0b3ItaW52b2NhdGlvbic6IHtcbiAgICAgICAgLy8gbmV3IExpc3Q8Rm9vPEJhcltdPj4geyB9XG4gICAgICAgIHBhdHRlcm46IHJlKC8oXFxibmV3XFxzKyk8PDA+Pig/PVxccypbWyh7XSkvLnNvdXJjZSwgW3R5cGVFeHByZXNzaW9uXSksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGluc2lkZTogdHlwZUluc2lkZSxcbiAgICAgICAgYWxpYXM6ICdjbGFzcy1uYW1lJ1xuICAgICAgfSxcbiAgICAgIC8qJ2V4cGxpY2l0LWltcGxlbWVudGF0aW9uJzoge1xuLy8gaW50IElGb288Rm9vPi5CYXIgPT4gMDsgdm9pZCBJRm9vPEZvbzxGb28+Pi5Gb288VD4oKTtcbnBhdHRlcm46IHJlcGxhY2UoL1xcYjw8MD4+KD89XFwuPDwxPj4pLywgY2xhc3NOYW1lLCBtZXRob2RPclByb3BlcnR5RGVjbGFyYXRpb24pLFxuaW5zaWRlOiBjbGFzc05hbWVJbnNpZGUsXG5hbGlhczogJ2NsYXNzLW5hbWUnXG59LCovXG4gICAgICAnZ2VuZXJpYy1tZXRob2QnOiB7XG4gICAgICAgIC8vIGZvbzxCYXI+KClcbiAgICAgICAgcGF0dGVybjogcmUoLzw8MD4+XFxzKjw8MT4+KD89XFxzKlxcKCkvLnNvdXJjZSwgW25hbWUsIGdlbmVyaWNdKSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgZnVuY3Rpb246IHJlKC9ePDwwPj4vLnNvdXJjZSwgW25hbWVdKSxcbiAgICAgICAgICBnZW5lcmljOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoZ2VuZXJpYyksXG4gICAgICAgICAgICBhbGlhczogJ2NsYXNzLW5hbWUnLFxuICAgICAgICAgICAgaW5zaWRlOiB0eXBlSW5zaWRlXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgJ3R5cGUtbGlzdCc6IHtcbiAgICAgICAgLy8gVGhlIGxpc3Qgb2YgdHlwZXMgaW5oZXJpdGVkIG9yIG9mIGdlbmVyaWMgY29uc3RyYWludHNcbiAgICAgICAgLy8gY2xhc3MgRm9vPEY+IDogQmFyLCBJTGlzdDxGb29CYXI+XG4gICAgICAgIC8vIHdoZXJlIEYgOiBCYXIsIElMaXN0PGludD5cbiAgICAgICAgcGF0dGVybjogcmUoXG4gICAgICAgICAgL1xcYigoPzo8PDA+Plxccys8PDE+PnxyZWNvcmRcXHMrPDwxPj5cXHMqPDw1Pj58d2hlcmVcXHMrPDwyPj4pXFxzKjpcXHMqKSg/Ojw8Mz4+fDw8ND4+fDw8MT4+XFxzKjw8NT4+fDw8Nj4+KSg/OlxccyosXFxzKig/Ojw8Mz4+fDw8ND4+fDw8Nj4+KSkqKD89XFxzKig/OndoZXJlfFt7O118PT58JCkpL1xuICAgICAgICAgICAgLnNvdXJjZSxcbiAgICAgICAgICBbXG4gICAgICAgICAgICB0eXBlRGVjbGFyYXRpb25LZXl3b3JkcyxcbiAgICAgICAgICAgIGdlbmVyaWNOYW1lLFxuICAgICAgICAgICAgbmFtZSxcbiAgICAgICAgICAgIHR5cGVFeHByZXNzaW9uLFxuICAgICAgICAgICAga2V5d29yZHMuc291cmNlLFxuICAgICAgICAgICAgbmVzdGVkUm91bmQsXG4gICAgICAgICAgICAvXFxibmV3XFxzKlxcKFxccypcXCkvLnNvdXJjZVxuICAgICAgICAgIF1cbiAgICAgICAgKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgJ3JlY29yZC1hcmd1bWVudHMnOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiByZSgvKF4oPyFuZXdcXHMqXFwoKTw8MD4+XFxzKik8PDE+Pi8uc291cmNlLCBbXG4gICAgICAgICAgICAgIGdlbmVyaWNOYW1lLFxuICAgICAgICAgICAgICBuZXN0ZWRSb3VuZFxuICAgICAgICAgICAgXSksXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICAgICAgaW5zaWRlOiBQcmlzbS5sYW5ndWFnZXMuY3NoYXJwXG4gICAgICAgICAgfSxcbiAgICAgICAgICBrZXl3b3JkOiBrZXl3b3JkcyxcbiAgICAgICAgICAnY2xhc3MtbmFtZSc6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IFJlZ0V4cCh0eXBlRXhwcmVzc2lvbiksXG4gICAgICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgICAgICBpbnNpZGU6IHR5cGVJbnNpZGVcbiAgICAgICAgICB9LFxuICAgICAgICAgIHB1bmN0dWF0aW9uOiAvWywoKV0vXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBwcmVwcm9jZXNzb3I6IHtcbiAgICAgICAgcGF0dGVybjogLyheW1xcdCBdKikjLiovbSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdwcm9wZXJ0eScsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIC8vIGhpZ2hsaWdodCBwcmVwcm9jZXNzb3IgZGlyZWN0aXZlcyBhcyBrZXl3b3Jkc1xuICAgICAgICAgIGRpcmVjdGl2ZToge1xuICAgICAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAgICAgLygjKVxcYig/OmRlZmluZXxlbGlmfGVsc2V8ZW5kaWZ8ZW5kcmVnaW9ufGVycm9yfGlmfGxpbmV8bnVsbGFibGV8cHJhZ21hfHJlZ2lvbnx1bmRlZnx3YXJuaW5nKVxcYi8sXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pIC8vIGF0dHJpYnV0ZXNcbiAgICB2YXIgcmVndWxhclN0cmluZ09yQ2hhcmFjdGVyID0gcmVndWxhclN0cmluZyArICd8JyArIGNoYXJhY3RlclxuICAgIHZhciByZWd1bGFyU3RyaW5nQ2hhcmFjdGVyT3JDb21tZW50ID0gcmVwbGFjZShcbiAgICAgIC9cXC8oPyFbKi9dKXxcXC9cXC9bXlxcclxcbl0qW1xcclxcbl18XFwvXFwqKD86W14qXXxcXCooPyFcXC8pKSpcXCpcXC98PDwwPj4vLnNvdXJjZSxcbiAgICAgIFtyZWd1bGFyU3RyaW5nT3JDaGFyYWN0ZXJdXG4gICAgKVxuICAgIHZhciByb3VuZEV4cHJlc3Npb24gPSBuZXN0ZWQoXG4gICAgICByZXBsYWNlKC9bXlwiJy8oKV18PDwwPj58XFwoPDxzZWxmPj4qXFwpLy5zb3VyY2UsIFtcbiAgICAgICAgcmVndWxhclN0cmluZ0NoYXJhY3Rlck9yQ29tbWVudFxuICAgICAgXSksXG4gICAgICAyXG4gICAgKSAvLyBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi11cy9kb3RuZXQvY3NoYXJwL3Byb2dyYW1taW5nLWd1aWRlL2NvbmNlcHRzL2F0dHJpYnV0ZXMvI2F0dHJpYnV0ZS10YXJnZXRzXG4gICAgdmFyIGF0dHJUYXJnZXQgPVxuICAgICAgL1xcYig/OmFzc2VtYmx5fGV2ZW50fGZpZWxkfG1ldGhvZHxtb2R1bGV8cGFyYW18cHJvcGVydHl8cmV0dXJufHR5cGUpXFxiL1xuICAgICAgICAuc291cmNlXG4gICAgdmFyIGF0dHIgPSByZXBsYWNlKC88PDA+Pig/OlxccypcXCg8PDE+PipcXCkpPy8uc291cmNlLCBbXG4gICAgICBpZGVudGlmaWVyLFxuICAgICAgcm91bmRFeHByZXNzaW9uXG4gICAgXSlcbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdjc2hhcnAnLCAnY2xhc3MtbmFtZScsIHtcbiAgICAgIGF0dHJpYnV0ZToge1xuICAgICAgICAvLyBBdHRyaWJ1dGVzXG4gICAgICAgIC8vIFtGb29dLCBbRm9vKDEpLCBCYXIoMiwgUHJvcCA9IFwiZm9vXCIpXSwgW3JldHVybjogRm9vKDEpLCBCYXIoMildLCBbYXNzZW1ibHk6IEZvbyhCYXIpXVxuICAgICAgICBwYXR0ZXJuOiByZShcbiAgICAgICAgICAvKCg/Ol58W15cXHNcXHc+KT9dKVxccypcXFtcXHMqKSg/Ojw8MD4+XFxzKjpcXHMqKT88PDE+Pig/OlxccyosXFxzKjw8MT4+KSooPz1cXHMqXFxdKS9cbiAgICAgICAgICAgIC5zb3VyY2UsXG4gICAgICAgICAgW2F0dHJUYXJnZXQsIGF0dHJdXG4gICAgICAgICksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgdGFyZ2V0OiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiByZSgvXjw8MD4+KD89XFxzKjopLy5zb3VyY2UsIFthdHRyVGFyZ2V0XSksXG4gICAgICAgICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgICAgICAgfSxcbiAgICAgICAgICAnYXR0cmlidXRlLWFyZ3VtZW50cyc6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IHJlKC9cXCg8PDA+PipcXCkvLnNvdXJjZSwgW3JvdW5kRXhwcmVzc2lvbl0pLFxuICAgICAgICAgICAgaW5zaWRlOiBQcmlzbS5sYW5ndWFnZXMuY3NoYXJwXG4gICAgICAgICAgfSxcbiAgICAgICAgICAnY2xhc3MtbmFtZSc6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IFJlZ0V4cChpZGVudGlmaWVyKSxcbiAgICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgICBwdW5jdHVhdGlvbjogL1xcLi9cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHB1bmN0dWF0aW9uOiAvWzosXS9cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pIC8vIHN0cmluZyBpbnRlcnBvbGF0aW9uXG4gICAgdmFyIGZvcm1hdFN0cmluZyA9IC86W159XFxyXFxuXSsvLnNvdXJjZSAvLyBtdWx0aSBsaW5lXG4gICAgdmFyIG1JbnRlcnBvbGF0aW9uUm91bmQgPSBuZXN0ZWQoXG4gICAgICByZXBsYWNlKC9bXlwiJy8oKV18PDwwPj58XFwoPDxzZWxmPj4qXFwpLy5zb3VyY2UsIFtcbiAgICAgICAgcmVndWxhclN0cmluZ0NoYXJhY3Rlck9yQ29tbWVudFxuICAgICAgXSksXG4gICAgICAyXG4gICAgKVxuICAgIHZhciBtSW50ZXJwb2xhdGlvbiA9IHJlcGxhY2UoL1xceyg/IVxceykoPzooPyFbfTpdKTw8MD4+KSo8PDE+Pj9cXH0vLnNvdXJjZSwgW1xuICAgICAgbUludGVycG9sYXRpb25Sb3VuZCxcbiAgICAgIGZvcm1hdFN0cmluZ1xuICAgIF0pIC8vIHNpbmdsZSBsaW5lXG4gICAgdmFyIHNJbnRlcnBvbGF0aW9uUm91bmQgPSBuZXN0ZWQoXG4gICAgICByZXBsYWNlKFxuICAgICAgICAvW15cIicvKCldfFxcLyg/IVxcKil8XFwvXFwqKD86W14qXXxcXCooPyFcXC8pKSpcXCpcXC98PDwwPj58XFwoPDxzZWxmPj4qXFwpL1xuICAgICAgICAgIC5zb3VyY2UsXG4gICAgICAgIFtyZWd1bGFyU3RyaW5nT3JDaGFyYWN0ZXJdXG4gICAgICApLFxuICAgICAgMlxuICAgIClcbiAgICB2YXIgc0ludGVycG9sYXRpb24gPSByZXBsYWNlKC9cXHsoPyFcXHspKD86KD8hW306XSk8PDA+PikqPDwxPj4/XFx9Ly5zb3VyY2UsIFtcbiAgICAgIHNJbnRlcnBvbGF0aW9uUm91bmQsXG4gICAgICBmb3JtYXRTdHJpbmdcbiAgICBdKVxuICAgIGZ1bmN0aW9uIGNyZWF0ZUludGVycG9sYXRpb25JbnNpZGUoaW50ZXJwb2xhdGlvbiwgaW50ZXJwb2xhdGlvblJvdW5kKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBpbnRlcnBvbGF0aW9uOiB7XG4gICAgICAgICAgcGF0dGVybjogcmUoLygoPzpefFtee10pKD86XFx7XFx7KSopPDwwPj4vLnNvdXJjZSwgW2ludGVycG9sYXRpb25dKSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgJ2Zvcm1hdC1zdHJpbmcnOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IHJlKC8oXlxceyg/Oig/IVt9Ol0pPDwwPj4pKik8PDE+Pig/PVxcfSQpLy5zb3VyY2UsIFtcbiAgICAgICAgICAgICAgICBpbnRlcnBvbGF0aW9uUm91bmQsXG4gICAgICAgICAgICAgICAgZm9ybWF0U3RyaW5nXG4gICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICAgICBwdW5jdHVhdGlvbjogL146L1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcHVuY3R1YXRpb246IC9eXFx7fFxcfSQvLFxuICAgICAgICAgICAgZXhwcmVzc2lvbjoge1xuICAgICAgICAgICAgICBwYXR0ZXJuOiAvW1xcc1xcU10rLyxcbiAgICAgICAgICAgICAgYWxpYXM6ICdsYW5ndWFnZS1jc2hhcnAnLFxuICAgICAgICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy5jc2hhcnBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHN0cmluZzogL1tcXHNcXFNdKy9cbiAgICAgIH1cbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnY3NoYXJwJywgJ3N0cmluZycsIHtcbiAgICAgICdpbnRlcnBvbGF0aW9uLXN0cmluZyc6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IHJlKFxuICAgICAgICAgICAgLyhefFteXFxcXF0pKD86XFwkQHxAXFwkKVwiKD86XCJcInxcXFxcW1xcc1xcU118XFx7XFx7fDw8MD4+fFteXFxcXHtcIl0pKlwiLy5zb3VyY2UsXG4gICAgICAgICAgICBbbUludGVycG9sYXRpb25dXG4gICAgICAgICAgKSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IGNyZWF0ZUludGVycG9sYXRpb25JbnNpZGUobUludGVycG9sYXRpb24sIG1JbnRlcnBvbGF0aW9uUm91bmQpXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOiByZSgvKF58W15AXFxcXF0pXFwkXCIoPzpcXFxcLnxcXHtcXHt8PDwwPj58W15cXFxcXCJ7XSkqXCIvLnNvdXJjZSwgW1xuICAgICAgICAgICAgc0ludGVycG9sYXRpb25cbiAgICAgICAgICBdKSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IGNyZWF0ZUludGVycG9sYXRpb25JbnNpZGUoc0ludGVycG9sYXRpb24sIHNJbnRlcnBvbGF0aW9uUm91bmQpXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBjaGFyOiB7XG4gICAgICAgIHBhdHRlcm46IFJlZ0V4cChjaGFyYWN0ZXIpLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH1cbiAgICB9KVxuICAgIFByaXNtLmxhbmd1YWdlcy5kb3RuZXQgPSBQcmlzbS5sYW5ndWFnZXMuY3MgPSBQcmlzbS5sYW5ndWFnZXMuY3NoYXJwXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJjc2hhcnAiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlcGxhY2UiLCJwYXR0ZXJuIiwicmVwbGFjZW1lbnRzIiwibSIsImluZGV4IiwicmUiLCJmbGFncyIsIlJlZ0V4cCIsIm5lc3RlZCIsImRlcHRoTG9nMiIsImkiLCJrZXl3b3JkS2luZHMiLCJ0eXBlIiwidHlwZURlY2xhcmF0aW9uIiwiY29udGV4dHVhbCIsIm90aGVyIiwia2V5d29yZHNUb1BhdHRlcm4iLCJ3b3JkcyIsInRyaW0iLCJ0eXBlRGVjbGFyYXRpb25LZXl3b3JkcyIsImtleXdvcmRzIiwibm9uVHlwZUtleXdvcmRzIiwibm9uQ29udGV4dHVhbEtleXdvcmRzIiwiZ2VuZXJpYyIsInNvdXJjZSIsIm5lc3RlZFJvdW5kIiwibmFtZSIsImdlbmVyaWNOYW1lIiwiaWRlbnRpZmllciIsImFycmF5IiwidHlwZUV4cHJlc3Npb25XaXRob3V0VHVwbGUiLCJ0dXBsZUVsZW1lbnQiLCJ0dXBsZSIsInR5cGVFeHByZXNzaW9uIiwidHlwZUluc2lkZSIsImtleXdvcmQiLCJwdW5jdHVhdGlvbiIsImNoYXJhY3RlciIsInJlZ3VsYXJTdHJpbmciLCJ2ZXJiYXRpbVN0cmluZyIsImxhbmd1YWdlcyIsImV4dGVuZCIsInN0cmluZyIsImxvb2tiZWhpbmQiLCJncmVlZHkiLCJpbnNpZGUiLCJudW1iZXIiLCJvcGVyYXRvciIsImluc2VydEJlZm9yZSIsInJhbmdlIiwiYWxpYXMiLCJuYW1lc3BhY2UiLCJmdW5jdGlvbiIsInByZXByb2Nlc3NvciIsImRpcmVjdGl2ZSIsInJlZ3VsYXJTdHJpbmdPckNoYXJhY3RlciIsInJlZ3VsYXJTdHJpbmdDaGFyYWN0ZXJPckNvbW1lbnQiLCJyb3VuZEV4cHJlc3Npb24iLCJhdHRyVGFyZ2V0IiwiYXR0ciIsImF0dHJpYnV0ZSIsInRhcmdldCIsImZvcm1hdFN0cmluZyIsIm1JbnRlcnBvbGF0aW9uUm91bmQiLCJtSW50ZXJwb2xhdGlvbiIsInNJbnRlcnBvbGF0aW9uUm91bmQiLCJzSW50ZXJwb2xhdGlvbiIsImNyZWF0ZUludGVycG9sYXRpb25JbnNpZGUiLCJpbnRlcnBvbGF0aW9uIiwiaW50ZXJwb2xhdGlvblJvdW5kIiwiZXhwcmVzc2lvbiIsImNoYXIiLCJkb3RuZXQiLCJjcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/csharp.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/cshtml.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/cshtml.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorCsharp = __webpack_require__(/*! ./csharp.js */ \"(ssr)/./node_modules/refractor/lang/csharp.js\");\nmodule.exports = cshtml;\ncshtml.displayName = \"cshtml\";\ncshtml.aliases = [\n    \"razor\"\n];\nfunction cshtml(Prism) {\n    Prism.register(refractorCsharp);\n    (function(Prism) {\n        var commentLike = /\\/(?![/*])|\\/\\/.*[\\r\\n]|\\/\\*[^*]*(?:\\*(?!\\/)[^*]*)*\\*\\//.source;\n        var stringLike = /@(?!\")|\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|@\"(?:[^\\\\\"]|\"\"|\\\\[\\s\\S])*\"(?!\")/.source + \"|\" + /'(?:(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'|(?=[^\\\\](?!')))/.source;\n        /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */ function nested(pattern, depthLog2) {\n            for(var i = 0; i < depthLog2; i++){\n                pattern = pattern.replace(/<self>/g, function() {\n                    return \"(?:\" + pattern + \")\";\n                });\n            }\n            return pattern.replace(/<self>/g, \"[^\\\\s\\\\S]\").replace(/<str>/g, \"(?:\" + stringLike + \")\").replace(/<comment>/g, \"(?:\" + commentLike + \")\");\n        }\n        var round = nested(/\\((?:[^()'\"@/]|<str>|<comment>|<self>)*\\)/.source, 2);\n        var square = nested(/\\[(?:[^\\[\\]'\"@/]|<str>|<comment>|<self>)*\\]/.source, 2);\n        var curly = nested(/\\{(?:[^{}'\"@/]|<str>|<comment>|<self>)*\\}/.source, 2);\n        var angle = nested(/<(?:[^<>'\"@/]|<str>|<comment>|<self>)*>/.source, 2) // Note about the above bracket patterns:\n        ;\n        // They all ignore HTML expressions that might be in the C# code. This is a problem because HTML (like strings and\n        // comments) is parsed differently. This is a huge problem because HTML might contain brackets and quotes which\n        // messes up the bracket and string counting implemented by the above patterns.\n        //\n        // This problem is not fixable because 1) HTML expression are highly context sensitive and very difficult to detect\n        // and 2) they require one capturing group at every nested level. See the `tagRegion` pattern to admire the\n        // complexity of an HTML expression.\n        //\n        // To somewhat alleviate the problem a bit, the patterns for characters (e.g. 'a') is very permissive, it also\n        // allows invalid characters to support HTML expressions like this: <p>That's it!</p>.\n        var tagAttrs = /(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?/.source;\n        var tagContent = /(?!\\d)[^\\s>\\/=$<%]+/.source + tagAttrs + /\\s*\\/?>/.source;\n        var tagRegion = /\\B@?/.source + \"(?:\" + /<([a-zA-Z][\\w:]*)/.source + tagAttrs + /\\s*>/.source + \"(?:\" + (/[^<]/.source + \"|\" + // all tags that are not the start tag\n        // eslint-disable-next-line regexp/strict\n        /<\\/?(?!\\1\\b)/.source + tagContent + \"|\" + // nested start tag\n        nested(// eslint-disable-next-line regexp/strict\n        /<\\1/.source + tagAttrs + /\\s*>/.source + \"(?:\" + (/[^<]/.source + \"|\" + // all tags that are not the start tag\n        // eslint-disable-next-line regexp/strict\n        /<\\/?(?!\\1\\b)/.source + tagContent + \"|\" + \"<self>\") + \")*\" + // eslint-disable-next-line regexp/strict\n        /<\\/\\1\\s*>/.source, 2)) + \")*\" + // eslint-disable-next-line regexp/strict\n        /<\\/\\1\\s*>/.source + \"|\" + /</.source + tagContent + \")\" // Now for the actual language definition(s):\n        ;\n        //\n        // Razor as a language has 2 parts:\n        //  1) CSHTML: A markup-like language that has been extended with inline C# code expressions and blocks.\n        //  2) C#+HTML: A variant of C# that can contain CSHTML tags as expressions.\n        //\n        // In the below code, both CSHTML and C#+HTML will be create as separate language definitions that reference each\n        // other. However, only CSHTML will be exported via `Prism.languages`.\n        Prism.languages.cshtml = Prism.languages.extend(\"markup\", {});\n        var csharpWithHtml = Prism.languages.insertBefore(\"csharp\", \"string\", {\n            html: {\n                pattern: RegExp(tagRegion),\n                greedy: true,\n                inside: Prism.languages.cshtml\n            }\n        }, {\n            csharp: Prism.languages.extend(\"csharp\", {})\n        });\n        var cs = {\n            pattern: /\\S[\\s\\S]*/,\n            alias: \"language-csharp\",\n            inside: csharpWithHtml\n        };\n        Prism.languages.insertBefore(\"cshtml\", \"prolog\", {\n            \"razor-comment\": {\n                pattern: /@\\*[\\s\\S]*?\\*@/,\n                greedy: true,\n                alias: \"comment\"\n            },\n            block: {\n                pattern: RegExp(/(^|[^@])@/.source + \"(?:\" + [\n                    // @{ ... }\n                    curly,\n                    /(?:code|functions)\\s*/.source + curly,\n                    /(?:for|foreach|lock|switch|using|while)\\s*/.source + round + /\\s*/.source + curly,\n                    /do\\s*/.source + curly + /\\s*while\\s*/.source + round + /(?:\\s*;)?/.source,\n                    /try\\s*/.source + curly + /\\s*catch\\s*/.source + round + /\\s*/.source + curly + /\\s*finally\\s*/.source + curly,\n                    /if\\s*/.source + round + /\\s*/.source + curly + \"(?:\" + /\\s*else/.source + \"(?:\" + /\\s+if\\s*/.source + round + \")?\" + /\\s*/.source + curly + \")*\"\n                ].join(\"|\") + \")\"),\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    keyword: /^@\\w*/,\n                    csharp: cs\n                }\n            },\n            directive: {\n                pattern: /^([ \\t]*)@(?:addTagHelper|attribute|implements|inherits|inject|layout|model|namespace|page|preservewhitespace|removeTagHelper|section|tagHelperPrefix|using)(?=\\s).*/m,\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    keyword: /^@\\w+/,\n                    csharp: cs\n                }\n            },\n            value: {\n                pattern: RegExp(/(^|[^@])@/.source + /(?:await\\b\\s*)?/.source + \"(?:\" + /\\w+\\b/.source + \"|\" + round + \")\" + \"(?:\" + /[?!]?\\.\\w+\\b/.source + \"|\" + round + \"|\" + square + \"|\" + angle + round + \")*\"),\n                lookbehind: true,\n                greedy: true,\n                alias: \"variable\",\n                inside: {\n                    keyword: /^@/,\n                    csharp: cs\n                }\n            },\n            \"delegate-operator\": {\n                pattern: /(^|[^@])@(?=<)/,\n                lookbehind: true,\n                alias: \"operator\"\n            }\n        });\n        Prism.languages.razor = Prism.languages.cshtml;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/cshtml.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/csp.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/csp.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = csp;\ncsp.displayName = \"csp\";\ncsp.aliases = [];\nfunction csp(Prism) {\n    ;\n    (function(Prism) {\n        /**\n     * @param {string} source\n     * @returns {RegExp}\n     */ function value(source) {\n            return RegExp(/([ \\t])/.source + \"(?:\" + source + \")\" + /(?=[\\s;]|$)/.source, \"i\");\n        }\n        Prism.languages.csp = {\n            directive: {\n                pattern: /(^|[\\s;])(?:base-uri|block-all-mixed-content|(?:child|connect|default|font|frame|img|manifest|media|object|prefetch|script|style|worker)-src|disown-opener|form-action|frame-(?:ancestors|options)|input-protection(?:-(?:clip|selectors))?|navigate-to|plugin-types|policy-uri|referrer|reflected-xss|report-(?:to|uri)|require-sri-for|sandbox|(?:script|style)-src-(?:attr|elem)|upgrade-insecure-requests)(?=[\\s;]|$)/i,\n                lookbehind: true,\n                alias: \"property\"\n            },\n            scheme: {\n                pattern: value(/[a-z][a-z0-9.+-]*:/.source),\n                lookbehind: true\n            },\n            none: {\n                pattern: value(/'none'/.source),\n                lookbehind: true,\n                alias: \"keyword\"\n            },\n            nonce: {\n                pattern: value(/'nonce-[-+/\\w=]+'/.source),\n                lookbehind: true,\n                alias: \"number\"\n            },\n            hash: {\n                pattern: value(/'sha(?:256|384|512)-[-+/\\w=]+'/.source),\n                lookbehind: true,\n                alias: \"number\"\n            },\n            host: {\n                pattern: value(/[a-z][a-z0-9.+-]*:\\/\\/[^\\s;,']*/.source + \"|\" + /\\*[^\\s;,']*/.source + \"|\" + /[a-z0-9-]+(?:\\.[a-z0-9-]+)+(?::[\\d*]+)?(?:\\/[^\\s;,']*)?/.source),\n                lookbehind: true,\n                alias: \"url\",\n                inside: {\n                    important: /\\*/\n                }\n            },\n            keyword: [\n                {\n                    pattern: value(/'unsafe-[a-z-]+'/.source),\n                    lookbehind: true,\n                    alias: \"unsafe\"\n                },\n                {\n                    pattern: value(/'[a-z-]+'/.source),\n                    lookbehind: true,\n                    alias: \"safe\"\n                }\n            ],\n            punctuation: /;/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvY3NwLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLElBQUlDLFdBQVcsR0FBRztBQUNsQkQsSUFBSUUsT0FBTyxHQUFHLEVBQUU7QUFDaEIsU0FBU0YsSUFBSUcsS0FBSzs7SUFXZCxVQUFVQSxLQUFLO1FBQ2Y7OztLQUdDLEdBQ0QsU0FBU0MsTUFBTUMsTUFBTTtZQUNuQixPQUFPQyxPQUNMLFVBQVVELE1BQU0sR0FBRyxRQUFRQSxTQUFTLE1BQU0sY0FBY0EsTUFBTSxFQUM5RDtRQUVKO1FBQ0FGLE1BQU1JLFNBQVMsQ0FBQ1AsR0FBRyxHQUFHO1lBQ3BCUSxXQUFXO2dCQUNUQyxTQUNFO2dCQUNGQyxZQUFZO2dCQUNaQyxPQUFPO1lBQ1Q7WUFDQUMsUUFBUTtnQkFDTkgsU0FBU0wsTUFBTSxxQkFBcUJDLE1BQU07Z0JBQzFDSyxZQUFZO1lBQ2Q7WUFDQUcsTUFBTTtnQkFDSkosU0FBU0wsTUFBTSxTQUFTQyxNQUFNO2dCQUM5QkssWUFBWTtnQkFDWkMsT0FBTztZQUNUO1lBQ0FHLE9BQU87Z0JBQ0xMLFNBQVNMLE1BQU0sb0JBQW9CQyxNQUFNO2dCQUN6Q0ssWUFBWTtnQkFDWkMsT0FBTztZQUNUO1lBQ0FJLE1BQU07Z0JBQ0pOLFNBQVNMLE1BQU0saUNBQWlDQyxNQUFNO2dCQUN0REssWUFBWTtnQkFDWkMsT0FBTztZQUNUO1lBQ0FLLE1BQU07Z0JBQ0pQLFNBQVNMLE1BQ1Asa0NBQWtDQyxNQUFNLEdBQ3RDLE1BQ0EsY0FBY0EsTUFBTSxHQUNwQixNQUNBLDBEQUEwREEsTUFBTTtnQkFFcEVLLFlBQVk7Z0JBQ1pDLE9BQU87Z0JBQ1BNLFFBQVE7b0JBQ05DLFdBQVc7Z0JBQ2I7WUFDRjtZQUNBQyxTQUFTO2dCQUNQO29CQUNFVixTQUFTTCxNQUFNLG1CQUFtQkMsTUFBTTtvQkFDeENLLFlBQVk7b0JBQ1pDLE9BQU87Z0JBQ1Q7Z0JBQ0E7b0JBQ0VGLFNBQVNMLE1BQU0sWUFBWUMsTUFBTTtvQkFDakNLLFlBQVk7b0JBQ1pDLE9BQU87Z0JBQ1Q7YUFDRDtZQUNEUyxhQUFhO1FBQ2Y7SUFDRixHQUFHakI7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jc3AuanM/YWVkYyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBjc3BcbmNzcC5kaXNwbGF5TmFtZSA9ICdjc3AnXG5jc3AuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBjc3AoUHJpc20pIHtcbiAgLyoqXG4gICAqIE9yaWdpbmFsIGJ5IFNjb3R0IEhlbG1lLlxuICAgKlxuICAgKiBSZWZlcmVuY2U6IGh0dHBzOi8vc2NvdHRoZWxtZS5jby51ay9jc3AtY2hlYXQtc2hlZXQvXG4gICAqXG4gICAqIFN1cHBvcnRzIHRoZSBmb2xsb3dpbmc6XG4gICAqICAtIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9DU1AxL1xuICAgKiAgLSBodHRwczovL3d3dy53My5vcmcvVFIvQ1NQMi9cbiAgICogIC0gaHR0cHM6Ly93d3cudzMub3JnL1RSL0NTUDMvXG4gICAqL1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzb3VyY2VcbiAgICAgKiBAcmV0dXJucyB7UmVnRXhwfVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHZhbHVlKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFJlZ0V4cChcbiAgICAgICAgLyhbIFxcdF0pLy5zb3VyY2UgKyAnKD86JyArIHNvdXJjZSArICcpJyArIC8oPz1bXFxzO118JCkvLnNvdXJjZSxcbiAgICAgICAgJ2knXG4gICAgICApXG4gICAgfVxuICAgIFByaXNtLmxhbmd1YWdlcy5jc3AgPSB7XG4gICAgICBkaXJlY3RpdmU6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKF58W1xccztdKSg/OmJhc2UtdXJpfGJsb2NrLWFsbC1taXhlZC1jb250ZW50fCg/OmNoaWxkfGNvbm5lY3R8ZGVmYXVsdHxmb250fGZyYW1lfGltZ3xtYW5pZmVzdHxtZWRpYXxvYmplY3R8cHJlZmV0Y2h8c2NyaXB0fHN0eWxlfHdvcmtlciktc3JjfGRpc293bi1vcGVuZXJ8Zm9ybS1hY3Rpb258ZnJhbWUtKD86YW5jZXN0b3JzfG9wdGlvbnMpfGlucHV0LXByb3RlY3Rpb24oPzotKD86Y2xpcHxzZWxlY3RvcnMpKT98bmF2aWdhdGUtdG98cGx1Z2luLXR5cGVzfHBvbGljeS11cml8cmVmZXJyZXJ8cmVmbGVjdGVkLXhzc3xyZXBvcnQtKD86dG98dXJpKXxyZXF1aXJlLXNyaS1mb3J8c2FuZGJveHwoPzpzY3JpcHR8c3R5bGUpLXNyYy0oPzphdHRyfGVsZW0pfHVwZ3JhZGUtaW5zZWN1cmUtcmVxdWVzdHMpKD89W1xccztdfCQpL2ksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiAncHJvcGVydHknXG4gICAgICB9LFxuICAgICAgc2NoZW1lOiB7XG4gICAgICAgIHBhdHRlcm46IHZhbHVlKC9bYS16XVthLXowLTkuKy1dKjovLnNvdXJjZSksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBub25lOiB7XG4gICAgICAgIHBhdHRlcm46IHZhbHVlKC8nbm9uZScvLnNvdXJjZSksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICAgIH0sXG4gICAgICBub25jZToge1xuICAgICAgICBwYXR0ZXJuOiB2YWx1ZSgvJ25vbmNlLVstKy9cXHc9XSsnLy5zb3VyY2UpLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogJ251bWJlcidcbiAgICAgIH0sXG4gICAgICBoYXNoOiB7XG4gICAgICAgIHBhdHRlcm46IHZhbHVlKC8nc2hhKD86MjU2fDM4NHw1MTIpLVstKy9cXHc9XSsnLy5zb3VyY2UpLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogJ251bWJlcidcbiAgICAgIH0sXG4gICAgICBob3N0OiB7XG4gICAgICAgIHBhdHRlcm46IHZhbHVlKFxuICAgICAgICAgIC9bYS16XVthLXowLTkuKy1dKjpcXC9cXC9bXlxcczssJ10qLy5zb3VyY2UgK1xuICAgICAgICAgICAgJ3wnICtcbiAgICAgICAgICAgIC9cXCpbXlxcczssJ10qLy5zb3VyY2UgK1xuICAgICAgICAgICAgJ3wnICtcbiAgICAgICAgICAgIC9bYS16MC05LV0rKD86XFwuW2EtejAtOS1dKykrKD86OltcXGQqXSspPyg/OlxcL1teXFxzOywnXSopPy8uc291cmNlXG4gICAgICAgICksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiAndXJsJyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgaW1wb3J0YW50OiAvXFwqL1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAga2V5d29yZDogW1xuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogdmFsdWUoLyd1bnNhZmUtW2Etei1dKycvLnNvdXJjZSksXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBhbGlhczogJ3Vuc2FmZSdcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IHZhbHVlKC8nW2Etei1dKycvLnNvdXJjZSksXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBhbGlhczogJ3NhZmUnXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBwdW5jdHVhdGlvbjogLzsvXG4gICAgfVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiY3NwIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJ2YWx1ZSIsInNvdXJjZSIsIlJlZ0V4cCIsImxhbmd1YWdlcyIsImRpcmVjdGl2ZSIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiYWxpYXMiLCJzY2hlbWUiLCJub25lIiwibm9uY2UiLCJoYXNoIiwiaG9zdCIsImluc2lkZSIsImltcG9ydGFudCIsImtleXdvcmQiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/csp.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/css-extras.js":
/*!***************************************************!*\
  !*** ./node_modules/refractor/lang/css-extras.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = cssExtras;\ncssExtras.displayName = \"cssExtras\";\ncssExtras.aliases = [];\nfunction cssExtras(Prism) {\n    ;\n    (function(Prism) {\n        var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n        var selectorInside;\n        Prism.languages.css.selector = {\n            pattern: Prism.languages.css.selector.pattern,\n            lookbehind: true,\n            inside: selectorInside = {\n                \"pseudo-element\": /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n                \"pseudo-class\": /:[-\\w]+/,\n                class: /\\.[-\\w]+/,\n                id: /#[-\\w]+/,\n                attribute: {\n                    pattern: RegExp(\"\\\\[(?:[^[\\\\]\\\"']|\" + string.source + \")*\\\\]\"),\n                    greedy: true,\n                    inside: {\n                        punctuation: /^\\[|\\]$/,\n                        \"case-sensitivity\": {\n                            pattern: /(\\s)[si]$/i,\n                            lookbehind: true,\n                            alias: \"keyword\"\n                        },\n                        namespace: {\n                            pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n                            lookbehind: true,\n                            inside: {\n                                punctuation: /\\|$/\n                            }\n                        },\n                        \"attr-name\": {\n                            pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n                            lookbehind: true\n                        },\n                        \"attr-value\": [\n                            string,\n                            {\n                                pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n                                lookbehind: true\n                            }\n                        ],\n                        operator: /[|~*^$]?=/\n                    }\n                },\n                \"n-th\": [\n                    {\n                        pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n                        lookbehind: true,\n                        inside: {\n                            number: /[\\dn]+/,\n                            operator: /[+-]/\n                        }\n                    },\n                    {\n                        pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n                        lookbehind: true\n                    }\n                ],\n                combinator: />|\\+|~|\\|\\|/,\n                // the `tag` token has been existed and removed.\n                // because we can't find a perfect tokenize to match it.\n                // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n                punctuation: /[(),]/\n            }\n        };\n        Prism.languages.css[\"atrule\"].inside[\"selector-function-argument\"].inside = selectorInside;\n        Prism.languages.insertBefore(\"css\", \"property\", {\n            variable: {\n                pattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n                lookbehind: true\n            }\n        });\n        var unit = {\n            pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n            lookbehind: true\n        } // 123 -123 .123 -.123 12.3 -12.3\n        ;\n        var number = {\n            pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n            lookbehind: true\n        };\n        Prism.languages.insertBefore(\"css\", \"function\", {\n            operator: {\n                pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n                lookbehind: true\n            },\n            // CAREFUL!\n            // Previewers and Inline color use hexcode and color.\n            hexcode: {\n                pattern: /\\B#[\\da-f]{3,8}\\b/i,\n                alias: \"color\"\n            },\n            color: [\n                {\n                    pattern: /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n                    lookbehind: true\n                },\n                {\n                    pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n                    inside: {\n                        unit: unit,\n                        number: number,\n                        function: /[\\w-]+(?=\\()/,\n                        punctuation: /[(),]/\n                    }\n                }\n            ],\n            // it's important that there is no boundary assertion after the hex digits\n            entity: /\\\\[\\da-f]{1,8}/i,\n            unit: unit,\n            number: number\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/css-extras.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/css.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/css.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = css;\ncss.displayName = \"css\";\ncss.aliases = [];\nfunction css(Prism) {\n    ;\n    (function(Prism) {\n        var string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n        Prism.languages.css = {\n            comment: /\\/\\*[\\s\\S]*?\\*\\//,\n            atrule: {\n                pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n                inside: {\n                    rule: /^@[\\w-]+/,\n                    \"selector-function-argument\": {\n                        pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n                        lookbehind: true,\n                        alias: \"selector\"\n                    },\n                    keyword: {\n                        pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n                        lookbehind: true\n                    } // See rest below\n                }\n            },\n            url: {\n                // https://drafts.csswg.org/css-values-3/#urls\n                pattern: RegExp(\"\\\\burl\\\\((?:\" + string.source + \"|\" + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + \")\\\\)\", \"i\"),\n                greedy: true,\n                inside: {\n                    function: /^url/i,\n                    punctuation: /^\\(|\\)$/,\n                    string: {\n                        pattern: RegExp(\"^\" + string.source + \"$\"),\n                        alias: \"url\"\n                    }\n                }\n            },\n            selector: {\n                pattern: RegExp(\"(^|[{}\\\\s])[^{}\\\\s](?:[^{};\\\"'\\\\s]|\\\\s+(?![\\\\s{])|\" + string.source + \")*(?=\\\\s*\\\\{)\"),\n                lookbehind: true\n            },\n            string: {\n                pattern: string,\n                greedy: true\n            },\n            property: {\n                pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n                lookbehind: true\n            },\n            important: /!important\\b/i,\n            function: {\n                pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n                lookbehind: true\n            },\n            punctuation: /[(){};:,]/\n        };\n        Prism.languages.css[\"atrule\"].inside.rest = Prism.languages.css;\n        var markup = Prism.languages.markup;\n        if (markup) {\n            markup.tag.addInlined(\"style\", \"css\");\n            markup.tag.addAttribute(\"style\", \"css\");\n        }\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvY3NzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLElBQUlDLFdBQVcsR0FBRztBQUNsQkQsSUFBSUUsT0FBTyxHQUFHLEVBQUU7QUFDaEIsU0FBU0YsSUFBSUcsS0FBSzs7SUFDZCxVQUFVQSxLQUFLO1FBQ2YsSUFBSUMsU0FDRjtRQUNGRCxNQUFNRSxTQUFTLENBQUNMLEdBQUcsR0FBRztZQUNwQk0sU0FBUztZQUNUQyxRQUFRO2dCQUNOQyxTQUFTO2dCQUNUQyxRQUFRO29CQUNOQyxNQUFNO29CQUNOLDhCQUE4Qjt3QkFDNUJGLFNBQ0U7d0JBQ0ZHLFlBQVk7d0JBQ1pDLE9BQU87b0JBQ1Q7b0JBQ0FDLFNBQVM7d0JBQ1BMLFNBQVM7d0JBQ1RHLFlBQVk7b0JBQ2QsRUFBRSxpQkFBaUI7Z0JBQ3JCO1lBQ0Y7WUFDQUcsS0FBSztnQkFDSCw4Q0FBOEM7Z0JBQzlDTixTQUFTTyxPQUNQLGlCQUNFWCxPQUFPWSxNQUFNLEdBQ2IsTUFDQSw4QkFBOEJBLE1BQU0sR0FDcEMsUUFDRjtnQkFFRkMsUUFBUTtnQkFDUlIsUUFBUTtvQkFDTlMsVUFBVTtvQkFDVkMsYUFBYTtvQkFDYmYsUUFBUTt3QkFDTkksU0FBU08sT0FBTyxNQUFNWCxPQUFPWSxNQUFNLEdBQUc7d0JBQ3RDSixPQUFPO29CQUNUO2dCQUNGO1lBQ0Y7WUFDQVEsVUFBVTtnQkFDUlosU0FBU08sT0FDUCx1REFDRVgsT0FBT1ksTUFBTSxHQUNiO2dCQUVKTCxZQUFZO1lBQ2Q7WUFDQVAsUUFBUTtnQkFDTkksU0FBU0o7Z0JBQ1RhLFFBQVE7WUFDVjtZQUNBSSxVQUFVO2dCQUNSYixTQUNFO2dCQUNGRyxZQUFZO1lBQ2Q7WUFDQVcsV0FBVztZQUNYSixVQUFVO2dCQUNSVixTQUFTO2dCQUNURyxZQUFZO1lBQ2Q7WUFDQVEsYUFBYTtRQUNmO1FBQ0FoQixNQUFNRSxTQUFTLENBQUNMLEdBQUcsQ0FBQyxTQUFTLENBQUNTLE1BQU0sQ0FBQ2MsSUFBSSxHQUFHcEIsTUFBTUUsU0FBUyxDQUFDTCxHQUFHO1FBQy9ELElBQUl3QixTQUFTckIsTUFBTUUsU0FBUyxDQUFDbUIsTUFBTTtRQUNuQyxJQUFJQSxRQUFRO1lBQ1ZBLE9BQU9DLEdBQUcsQ0FBQ0MsVUFBVSxDQUFDLFNBQVM7WUFDL0JGLE9BQU9DLEdBQUcsQ0FBQ0UsWUFBWSxDQUFDLFNBQVM7UUFDbkM7SUFDRixHQUFHeEI7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jc3MuanM/N2JjNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBjc3NcbmNzcy5kaXNwbGF5TmFtZSA9ICdjc3MnXG5jc3MuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBjc3MoUHJpc20pIHtcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIgc3RyaW5nID1cbiAgICAgIC8oPzpcIig/OlxcXFwoPzpcXHJcXG58W1xcc1xcU10pfFteXCJcXFxcXFxyXFxuXSkqXCJ8Jyg/OlxcXFwoPzpcXHJcXG58W1xcc1xcU10pfFteJ1xcXFxcXHJcXG5dKSonKS9cbiAgICBQcmlzbS5sYW5ndWFnZXMuY3NzID0ge1xuICAgICAgY29tbWVudDogL1xcL1xcKltcXHNcXFNdKj9cXCpcXC8vLFxuICAgICAgYXRydWxlOiB7XG4gICAgICAgIHBhdHRlcm46IC9AW1xcdy1dKD86W147e1xcc118XFxzKyg/IVtcXHN7XSkpKig/Ojt8KD89XFxzKlxceykpLyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgcnVsZTogL15AW1xcdy1dKy8sXG4gICAgICAgICAgJ3NlbGVjdG9yLWZ1bmN0aW9uLWFyZ3VtZW50Jzoge1xuICAgICAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAgICAgLyhcXGJzZWxlY3RvclxccypcXChcXHMqKD8hW1xccyldKSkoPzpbXigpXFxzXXxcXHMrKD8hW1xccyldKXxcXCgoPzpbXigpXXxcXChbXigpXSpcXCkpKlxcKSkrKD89XFxzKlxcKSkvLFxuICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICAgIGFsaWFzOiAnc2VsZWN0b3InXG4gICAgICAgICAgfSxcbiAgICAgICAgICBrZXl3b3JkOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvKF58W15cXHctXSkoPzphbmR8bm90fG9ubHl8b3IpKD8hW1xcdy1dKS8sXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgICAgfSAvLyBTZWUgcmVzdCBiZWxvd1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgdXJsOiB7XG4gICAgICAgIC8vIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3MtdmFsdWVzLTMvI3VybHNcbiAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgICdcXFxcYnVybFxcXFwoKD86JyArXG4gICAgICAgICAgICBzdHJpbmcuc291cmNlICtcbiAgICAgICAgICAgICd8JyArXG4gICAgICAgICAgICAvKD86W15cXFxcXFxyXFxuKClcIiddfFxcXFxbXFxzXFxTXSkqLy5zb3VyY2UgK1xuICAgICAgICAgICAgJylcXFxcKScsXG4gICAgICAgICAgJ2knXG4gICAgICAgICksXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgZnVuY3Rpb246IC9edXJsL2ksXG4gICAgICAgICAgcHVuY3R1YXRpb246IC9eXFwofFxcKSQvLFxuICAgICAgICAgIHN0cmluZzoge1xuICAgICAgICAgICAgcGF0dGVybjogUmVnRXhwKCdeJyArIHN0cmluZy5zb3VyY2UgKyAnJCcpLFxuICAgICAgICAgICAgYWxpYXM6ICd1cmwnXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgc2VsZWN0b3I6IHtcbiAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgICcoXnxbe31cXFxcc10pW157fVxcXFxzXSg/Oltee307XCJcXCdcXFxcc118XFxcXHMrKD8hW1xcXFxze10pfCcgK1xuICAgICAgICAgICAgc3RyaW5nLnNvdXJjZSArXG4gICAgICAgICAgICAnKSooPz1cXFxccypcXFxceyknXG4gICAgICAgICksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBzdHJpbmc6IHtcbiAgICAgICAgcGF0dGVybjogc3RyaW5nLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICBwcm9wZXJ0eToge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXnxbXi1cXHdcXHhBMC1cXHVGRkZGXSkoPyFcXHMpWy1fYS16XFx4QTAtXFx1RkZGRl0oPzooPyFcXHMpWy1cXHdcXHhBMC1cXHVGRkZGXSkqKD89XFxzKjopL2ksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBpbXBvcnRhbnQ6IC8haW1wb3J0YW50XFxiL2ksXG4gICAgICBmdW5jdGlvbjoge1xuICAgICAgICBwYXR0ZXJuOiAvKF58W14tYS16MC05XSlbLWEtejAtOV0rKD89XFwoKS9pLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAgcHVuY3R1YXRpb246IC9bKCl7fTs6LF0vXG4gICAgfVxuICAgIFByaXNtLmxhbmd1YWdlcy5jc3NbJ2F0cnVsZSddLmluc2lkZS5yZXN0ID0gUHJpc20ubGFuZ3VhZ2VzLmNzc1xuICAgIHZhciBtYXJrdXAgPSBQcmlzbS5sYW5ndWFnZXMubWFya3VwXG4gICAgaWYgKG1hcmt1cCkge1xuICAgICAgbWFya3VwLnRhZy5hZGRJbmxpbmVkKCdzdHlsZScsICdjc3MnKVxuICAgICAgbWFya3VwLnRhZy5hZGRBdHRyaWJ1dGUoJ3N0eWxlJywgJ2NzcycpXG4gICAgfVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiY3NzIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJzdHJpbmciLCJsYW5ndWFnZXMiLCJjb21tZW50IiwiYXRydWxlIiwicGF0dGVybiIsImluc2lkZSIsInJ1bGUiLCJsb29rYmVoaW5kIiwiYWxpYXMiLCJrZXl3b3JkIiwidXJsIiwiUmVnRXhwIiwic291cmNlIiwiZ3JlZWR5IiwiZnVuY3Rpb24iLCJwdW5jdHVhdGlvbiIsInNlbGVjdG9yIiwicHJvcGVydHkiLCJpbXBvcnRhbnQiLCJyZXN0IiwibWFya3VwIiwidGFnIiwiYWRkSW5saW5lZCIsImFkZEF0dHJpYnV0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/css.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/csv.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/csv.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = csv;\ncsv.displayName = \"csv\";\ncsv.aliases = [];\nfunction csv(Prism) {\n    // https://tools.ietf.org/html/rfc4180\n    Prism.languages.csv = {\n        value: /[^\\r\\n,\"]+|\"(?:[^\"]|\"\")*\"(?!\")/,\n        punctuation: /,/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvY3N2LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLElBQUlDLFdBQVcsR0FBRztBQUNsQkQsSUFBSUUsT0FBTyxHQUFHLEVBQUU7QUFDaEIsU0FBU0YsSUFBSUcsS0FBSztJQUNoQixzQ0FBc0M7SUFDdENBLE1BQU1DLFNBQVMsQ0FBQ0osR0FBRyxHQUFHO1FBQ3BCSyxPQUFPO1FBQ1BDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2Nzdi5qcz8wZTExIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNzdlxuY3N2LmRpc3BsYXlOYW1lID0gJ2NzdidcbmNzdi5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGNzdihQcmlzbSkge1xuICAvLyBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNDE4MFxuICBQcmlzbS5sYW5ndWFnZXMuY3N2ID0ge1xuICAgIHZhbHVlOiAvW15cXHJcXG4sXCJdK3xcIig/OlteXCJdfFwiXCIpKlwiKD8hXCIpLyxcbiAgICBwdW5jdHVhdGlvbjogLywvXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiY3N2IiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJ2YWx1ZSIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/csv.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/cypher.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/cypher.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = cypher;\ncypher.displayName = \"cypher\";\ncypher.aliases = [];\nfunction cypher(Prism) {\n    Prism.languages.cypher = {\n        // https://neo4j.com/docs/cypher-manual/current/syntax/comments/\n        comment: /\\/\\/.*/,\n        string: {\n            pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n            greedy: true\n        },\n        \"class-name\": {\n            pattern: /(:\\s*)(?:\\w+|`(?:[^`\\\\\\r\\n])*`)(?=\\s*[{):])/,\n            lookbehind: true,\n            greedy: true\n        },\n        relationship: {\n            pattern: /(-\\[\\s*(?:\\w+\\s*|`(?:[^`\\\\\\r\\n])*`\\s*)?:\\s*|\\|\\s*:\\s*)(?:\\w+|`(?:[^`\\\\\\r\\n])*`)/,\n            lookbehind: true,\n            greedy: true,\n            alias: \"property\"\n        },\n        identifier: {\n            pattern: /`(?:[^`\\\\\\r\\n])*`/,\n            greedy: true\n        },\n        variable: /\\$\\w+/,\n        // https://neo4j.com/docs/cypher-manual/current/syntax/reserved/\n        keyword: /\\b(?:ADD|ALL|AND|AS|ASC|ASCENDING|ASSERT|BY|CALL|CASE|COMMIT|CONSTRAINT|CONTAINS|CREATE|CSV|DELETE|DESC|DESCENDING|DETACH|DISTINCT|DO|DROP|ELSE|END|ENDS|EXISTS|FOR|FOREACH|IN|INDEX|IS|JOIN|KEY|LIMIT|LOAD|MANDATORY|MATCH|MERGE|NODE|NOT|OF|ON|OPTIONAL|OR|ORDER(?=\\s+BY)|PERIODIC|REMOVE|REQUIRE|RETURN|SCALAR|SCAN|SET|SKIP|START|STARTS|THEN|UNION|UNIQUE|UNWIND|USING|WHEN|WHERE|WITH|XOR|YIELD)\\b/i,\n        function: /\\b\\w+\\b(?=\\s*\\()/,\n        boolean: /\\b(?:false|null|true)\\b/i,\n        number: /\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)\\b/,\n        // https://neo4j.com/docs/cypher-manual/current/syntax/operators/\n        operator: /:|<--?|--?>?|<>|=~?|[<>]=?|[+*/%^|]|\\.\\.\\.?/,\n        punctuation: /[()[\\]{},;.]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvY3lwaGVyLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLE9BQU9DLFdBQVcsR0FBRztBQUNyQkQsT0FBT0UsT0FBTyxHQUFHLEVBQUU7QUFDbkIsU0FBU0YsT0FBT0csS0FBSztJQUNuQkEsTUFBTUMsU0FBUyxDQUFDSixNQUFNLEdBQUc7UUFDdkIsZ0VBQWdFO1FBQ2hFSyxTQUFTO1FBQ1RDLFFBQVE7WUFDTkMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQSxjQUFjO1lBQ1pELFNBQVM7WUFDVEUsWUFBWTtZQUNaRCxRQUFRO1FBQ1Y7UUFDQUUsY0FBYztZQUNaSCxTQUNFO1lBQ0ZFLFlBQVk7WUFDWkQsUUFBUTtZQUNSRyxPQUFPO1FBQ1Q7UUFDQUMsWUFBWTtZQUNWTCxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBSyxVQUFVO1FBQ1YsZ0VBQWdFO1FBQ2hFQyxTQUNFO1FBQ0ZDLFVBQVU7UUFDVkMsU0FBUztRQUNUQyxRQUFRO1FBQ1IsaUVBQWlFO1FBQ2pFQyxVQUFVO1FBQ1ZDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2N5cGhlci5qcz82ZjZkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGN5cGhlclxuY3lwaGVyLmRpc3BsYXlOYW1lID0gJ2N5cGhlcidcbmN5cGhlci5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGN5cGhlcihQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuY3lwaGVyID0ge1xuICAgIC8vIGh0dHBzOi8vbmVvNGouY29tL2RvY3MvY3lwaGVyLW1hbnVhbC9jdXJyZW50L3N5bnRheC9jb21tZW50cy9cbiAgICBjb21tZW50OiAvXFwvXFwvLiovLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1wiKD86W15cIlxcXFxcXHJcXG5dfFxcXFwuKSpcInwnKD86W14nXFxcXFxcclxcbl18XFxcXC4pKicvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICAnY2xhc3MtbmFtZSc6IHtcbiAgICAgIHBhdHRlcm46IC8oOlxccyopKD86XFx3K3xgKD86W15gXFxcXFxcclxcbl0pKmApKD89XFxzKlt7KTpdKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICByZWxhdGlvbnNoaXA6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oLVxcW1xccyooPzpcXHcrXFxzKnxgKD86W15gXFxcXFxcclxcbl0pKmBcXHMqKT86XFxzKnxcXHxcXHMqOlxccyopKD86XFx3K3xgKD86W15gXFxcXFxcclxcbl0pKmApLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBhbGlhczogJ3Byb3BlcnR5J1xuICAgIH0sXG4gICAgaWRlbnRpZmllcjoge1xuICAgICAgcGF0dGVybjogL2AoPzpbXmBcXFxcXFxyXFxuXSkqYC8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHZhcmlhYmxlOiAvXFwkXFx3Ky8sXG4gICAgLy8gaHR0cHM6Ly9uZW80ai5jb20vZG9jcy9jeXBoZXItbWFudWFsL2N1cnJlbnQvc3ludGF4L3Jlc2VydmVkL1xuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86QUREfEFMTHxBTkR8QVN8QVNDfEFTQ0VORElOR3xBU1NFUlR8Qll8Q0FMTHxDQVNFfENPTU1JVHxDT05TVFJBSU5UfENPTlRBSU5TfENSRUFURXxDU1Z8REVMRVRFfERFU0N8REVTQ0VORElOR3xERVRBQ0h8RElTVElOQ1R8RE98RFJPUHxFTFNFfEVORHxFTkRTfEVYSVNUU3xGT1J8Rk9SRUFDSHxJTnxJTkRFWHxJU3xKT0lOfEtFWXxMSU1JVHxMT0FEfE1BTkRBVE9SWXxNQVRDSHxNRVJHRXxOT0RFfE5PVHxPRnxPTnxPUFRJT05BTHxPUnxPUkRFUig/PVxccytCWSl8UEVSSU9ESUN8UkVNT1ZFfFJFUVVJUkV8UkVUVVJOfFNDQUxBUnxTQ0FOfFNFVHxTS0lQfFNUQVJUfFNUQVJUU3xUSEVOfFVOSU9OfFVOSVFVRXxVTldJTkR8VVNJTkd8V0hFTnxXSEVSRXxXSVRIfFhPUnxZSUVMRClcXGIvaSxcbiAgICBmdW5jdGlvbjogL1xcYlxcdytcXGIoPz1cXHMqXFwoKS8sXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfG51bGx8dHJ1ZSlcXGIvaSxcbiAgICBudW1iZXI6IC9cXGIoPzoweFtcXGRhLWZBLUZdK3xcXGQrKD86XFwuXFxkKyk/KD86W2VFXVsrLV0/XFxkKyk/KVxcYi8sXG4gICAgLy8gaHR0cHM6Ly9uZW80ai5jb20vZG9jcy9jeXBoZXItbWFudWFsL2N1cnJlbnQvc3ludGF4L29wZXJhdG9ycy9cbiAgICBvcGVyYXRvcjogLzp8PC0tP3wtLT8+P3w8Pnw9fj98Wzw+XT0/fFsrKi8lXnxdfFxcLlxcLlxcLj8vLFxuICAgIHB1bmN0dWF0aW9uOiAvWygpW1xcXXt9LDsuXS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJjeXBoZXIiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZ3JlZWR5IiwibG9va2JlaGluZCIsInJlbGF0aW9uc2hpcCIsImFsaWFzIiwiaWRlbnRpZmllciIsInZhcmlhYmxlIiwia2V5d29yZCIsImZ1bmN0aW9uIiwiYm9vbGVhbiIsIm51bWJlciIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/cypher.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/d.js":
/*!******************************************!*\
  !*** ./node_modules/refractor/lang/d.js ***!
  \******************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = d;\nd.displayName = \"d\";\nd.aliases = [];\nfunction d(Prism) {\n    Prism.languages.d = Prism.languages.extend(\"clike\", {\n        comment: [\n            {\n                // Shebang\n                pattern: /^\\s*#!.+/,\n                greedy: true\n            },\n            {\n                pattern: RegExp(/(^|[^\\\\])/.source + \"(?:\" + [\n                    // /+ comment +/\n                    // Allow one level of nesting\n                    /\\/\\+(?:\\/\\+(?:[^+]|\\+(?!\\/))*\\+\\/|(?!\\/\\+)[\\s\\S])*?\\+\\//.source,\n                    /\\/\\/.*/.source,\n                    /\\/\\*[\\s\\S]*?\\*\\//.source\n                ].join(\"|\") + \")\"),\n                lookbehind: true,\n                greedy: true\n            }\n        ],\n        string: [\n            {\n                pattern: RegExp([\n                    // r\"\", x\"\"\n                    /\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/.source,\n                    /\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/.source,\n                    // ...\n                    // IDENT\"\n                    /\\bq\"((?!\\d)\\w+)$[\\s\\S]*?^\\1\"/.source,\n                    // eslint-disable-next-line regexp/strict\n                    /\\bq\"(.)[\\s\\S]*?\\2\"/.source,\n                    /([\"`])(?:\\\\[\\s\\S]|(?!\\3)[^\\\\])*\\3[cwd]?/.source\n                ].join(\"|\"), \"m\"),\n                greedy: true\n            },\n            {\n                pattern: /\\bq\\{(?:\\{[^{}]*\\}|[^{}])*\\}/,\n                greedy: true,\n                alias: \"token-string\"\n            }\n        ],\n        // In order: $, keywords and special tokens, globally defined symbols\n        keyword: /\\$|\\b(?:__(?:(?:DATE|EOF|FILE|FUNCTION|LINE|MODULE|PRETTY_FUNCTION|TIMESTAMP|TIME|VENDOR|VERSION)__|gshared|parameters|traits|vector)|abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|dstring|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|ptrdiff_t|public|pure|real|ref|return|scope|shared|short|size_t|static|string|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|wstring)\\b/,\n        number: [\n            // The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator\n            // Hexadecimal numbers must be handled separately to avoid problems with exponent \"e\"\n            /\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]{0,4}/i,\n            {\n                pattern: /((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]{0,4}/i,\n                lookbehind: true\n            }\n        ],\n        operator: /\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/\n    });\n    Prism.languages.insertBefore(\"d\", \"string\", {\n        // Characters\n        // 'a', '\\\\', '\\n', '\\xFF', '\\377', '\\uFFFF', '\\U0010FFFF', '\\quot'\n        char: /'(?:\\\\(?:\\W|\\w+)|[^\\\\])'/\n    });\n    Prism.languages.insertBefore(\"d\", \"keyword\", {\n        property: /\\B@\\w*/\n    });\n    Prism.languages.insertBefore(\"d\", \"function\", {\n        register: {\n            // Iasm registers\n            pattern: /\\b(?:[ABCD][LHX]|E?(?:BP|DI|SI|SP)|[BS]PL|[ECSDGF]S|CR[0234]|[DS]IL|DR[012367]|E[ABCD]X|X?MM[0-7]|R(?:1[0-5]|[89])[BWD]?|R[ABCD]X|R[BS]P|R[DS]I|TR[3-7]|XMM(?:1[0-5]|[89])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,\n            alias: \"variable\"\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxFQUFFQyxXQUFXLEdBQUc7QUFDaEJELEVBQUVFLE9BQU8sR0FBRyxFQUFFO0FBQ2QsU0FBU0YsRUFBRUcsS0FBSztJQUNkQSxNQUFNQyxTQUFTLENBQUNKLENBQUMsR0FBR0csTUFBTUMsU0FBUyxDQUFDQyxNQUFNLENBQUMsU0FBUztRQUNsREMsU0FBUztZQUNQO2dCQUNFLFVBQVU7Z0JBQ1ZDLFNBQVM7Z0JBQ1RDLFFBQVE7WUFDVjtZQUNBO2dCQUNFRCxTQUFTRSxPQUNQLFlBQVlDLE1BQU0sR0FDaEIsUUFDQTtvQkFDRSxnQkFBZ0I7b0JBQ2hCLDZCQUE2QjtvQkFDN0IsMERBQTBEQSxNQUFNO29CQUNoRSxTQUFTQSxNQUFNO29CQUNmLG1CQUFtQkEsTUFBTTtpQkFDMUIsQ0FBQ0MsSUFBSSxDQUFDLE9BQ1A7Z0JBRUpDLFlBQVk7Z0JBQ1pKLFFBQVE7WUFDVjtTQUNEO1FBQ0RLLFFBQVE7WUFDTjtnQkFDRU4sU0FBU0UsT0FDUDtvQkFDRSxXQUFXO29CQUNYLHFDQUFxQ0MsTUFBTTtvQkFDM0MsNkRBQTZEQSxNQUFNO29CQUNuRSxNQUFNO29CQUNOLFNBQVM7b0JBQ1QsK0JBQStCQSxNQUFNO29CQUNyQyx5Q0FBeUM7b0JBQ3pDLHFCQUFxQkEsTUFBTTtvQkFDM0IsMENBQTBDQSxNQUFNO2lCQUNqRCxDQUFDQyxJQUFJLENBQUMsTUFDUDtnQkFFRkgsUUFBUTtZQUNWO1lBQ0E7Z0JBQ0VELFNBQVM7Z0JBQ1RDLFFBQVE7Z0JBQ1JNLE9BQU87WUFDVDtTQUNEO1FBQ0QscUVBQXFFO1FBQ3JFQyxTQUNFO1FBQ0ZDLFFBQVE7WUFDTixnR0FBZ0c7WUFDaEcscUZBQXFGO1lBQ3JGO1lBQ0E7Z0JBQ0VULFNBQ0U7Z0JBQ0ZLLFlBQVk7WUFDZDtTQUNEO1FBQ0RLLFVBQ0U7SUFDSjtJQUNBZCxNQUFNQyxTQUFTLENBQUNjLFlBQVksQ0FBQyxLQUFLLFVBQVU7UUFDMUMsYUFBYTtRQUNiLG1FQUFtRTtRQUNuRUMsTUFBTTtJQUNSO0lBQ0FoQixNQUFNQyxTQUFTLENBQUNjLFlBQVksQ0FBQyxLQUFLLFdBQVc7UUFDM0NFLFVBQVU7SUFDWjtJQUNBakIsTUFBTUMsU0FBUyxDQUFDYyxZQUFZLENBQUMsS0FBSyxZQUFZO1FBQzVDRyxVQUFVO1lBQ1IsaUJBQWlCO1lBQ2pCZCxTQUNFO1lBQ0ZPLE9BQU87UUFDVDtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZC5qcz83NjZkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGRcbmQuZGlzcGxheU5hbWUgPSAnZCdcbmQuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBkKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5kID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnY2xpa2UnLCB7XG4gICAgY29tbWVudDogW1xuICAgICAge1xuICAgICAgICAvLyBTaGViYW5nXG4gICAgICAgIHBhdHRlcm46IC9eXFxzKiMhLisvLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICAvKF58W15cXFxcXSkvLnNvdXJjZSArXG4gICAgICAgICAgICAnKD86JyArXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgIC8vIC8rIGNvbW1lbnQgKy9cbiAgICAgICAgICAgICAgLy8gQWxsb3cgb25lIGxldmVsIG9mIG5lc3RpbmdcbiAgICAgICAgICAgICAgL1xcL1xcKyg/OlxcL1xcKyg/OlteK118XFwrKD8hXFwvKSkqXFwrXFwvfCg/IVxcL1xcKylbXFxzXFxTXSkqP1xcK1xcLy8uc291cmNlLCAvLyAvLyBjb21tZW50XG4gICAgICAgICAgICAgIC9cXC9cXC8uKi8uc291cmNlLCAvLyAvKiBjb21tZW50ICovXG4gICAgICAgICAgICAgIC9cXC9cXCpbXFxzXFxTXSo/XFwqXFwvLy5zb3VyY2VcbiAgICAgICAgICAgIF0uam9pbignfCcpICtcbiAgICAgICAgICAgICcpJ1xuICAgICAgICApLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH1cbiAgICBdLFxuICAgIHN0cmluZzogW1xuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoXG4gICAgICAgICAgW1xuICAgICAgICAgICAgLy8gclwiXCIsIHhcIlwiXG4gICAgICAgICAgICAvXFxiW3J4XVwiKD86XFxcXFtcXHNcXFNdfFteXFxcXFwiXSkqXCJbY3dkXT8vLnNvdXJjZSwgLy8gcVwiW11cIiwgcVwiKClcIiwgcVwiPD5cIiwgcVwie31cIlxuICAgICAgICAgICAgL1xcYnFcIig/OlxcW1tcXHNcXFNdKj9cXF18XFwoW1xcc1xcU10qP1xcKXw8W1xcc1xcU10qPz58XFx7W1xcc1xcU10qP1xcfSlcIi8uc291cmNlLCAvLyBxXCJJREVOVFxuICAgICAgICAgICAgLy8gLi4uXG4gICAgICAgICAgICAvLyBJREVOVFwiXG4gICAgICAgICAgICAvXFxicVwiKCg/IVxcZClcXHcrKSRbXFxzXFxTXSo/XlxcMVwiLy5zb3VyY2UsIC8vIHFcIi8vXCIsIHFcInx8XCIsIGV0Yy5cbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWdleHAvc3RyaWN0XG4gICAgICAgICAgICAvXFxicVwiKC4pW1xcc1xcU10qP1xcMlwiLy5zb3VyY2UsIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWdleHAvc3RyaWN0XG4gICAgICAgICAgICAvKFtcImBdKSg/OlxcXFxbXFxzXFxTXXwoPyFcXDMpW15cXFxcXSkqXFwzW2N3ZF0/Ly5zb3VyY2VcbiAgICAgICAgICBdLmpvaW4oJ3wnKSxcbiAgICAgICAgICAnbSdcbiAgICAgICAgKSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvXFxicVxceyg/Olxce1tee31dKlxcfXxbXnt9XSkqXFx9LyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBhbGlhczogJ3Rva2VuLXN0cmluZydcbiAgICAgIH1cbiAgICBdLFxuICAgIC8vIEluIG9yZGVyOiAkLCBrZXl3b3JkcyBhbmQgc3BlY2lhbCB0b2tlbnMsIGdsb2JhbGx5IGRlZmluZWQgc3ltYm9sc1xuICAgIGtleXdvcmQ6XG4gICAgICAvXFwkfFxcYig/Ol9fKD86KD86REFURXxFT0Z8RklMRXxGVU5DVElPTnxMSU5FfE1PRFVMRXxQUkVUVFlfRlVOQ1RJT058VElNRVNUQU1QfFRJTUV8VkVORE9SfFZFUlNJT04pX198Z3NoYXJlZHxwYXJhbWV0ZXJzfHRyYWl0c3x2ZWN0b3IpfGFic3RyYWN0fGFsaWFzfGFsaWdufGFzbXxhc3NlcnR8YXV0b3xib2R5fGJvb2x8YnJlYWt8Ynl0ZXxjYXNlfGNhc3R8Y2F0Y2h8Y2RvdWJsZXxjZW50fGNmbG9hdHxjaGFyfGNsYXNzfGNvbnN0fGNvbnRpbnVlfGNyZWFsfGRjaGFyfGRlYnVnfGRlZmF1bHR8ZGVsZWdhdGV8ZGVsZXRlfGRlcHJlY2F0ZWR8ZG98ZG91YmxlfGRzdHJpbmd8ZWxzZXxlbnVtfGV4cG9ydHxleHRlcm58ZmFsc2V8ZmluYWx8ZmluYWxseXxmbG9hdHxmb3J8Zm9yZWFjaHxmb3JlYWNoX3JldmVyc2V8ZnVuY3Rpb258Z290b3xpZG91YmxlfGlmfGlmbG9hdHxpbW11dGFibGV8aW1wb3J0fGlub3V0fGludHxpbnRlcmZhY2V8aW52YXJpYW50fGlyZWFsfGxhenl8bG9uZ3xtYWNyb3xtaXhpbnxtb2R1bGV8bmV3fG5vdGhyb3d8bnVsbHxvdXR8b3ZlcnJpZGV8cGFja2FnZXxwcmFnbWF8cHJpdmF0ZXxwcm90ZWN0ZWR8cHRyZGlmZl90fHB1YmxpY3xwdXJlfHJlYWx8cmVmfHJldHVybnxzY29wZXxzaGFyZWR8c2hvcnR8c2l6ZV90fHN0YXRpY3xzdHJpbmd8c3RydWN0fHN1cGVyfHN3aXRjaHxzeW5jaHJvbml6ZWR8dGVtcGxhdGV8dGhpc3x0aHJvd3x0cnVlfHRyeXx0eXBlZGVmfHR5cGVpZHx0eXBlb2Z8dWJ5dGV8dWNlbnR8dWludHx1bG9uZ3x1bmlvbnx1bml0dGVzdHx1c2hvcnR8dmVyc2lvbnx2b2lkfHZvbGF0aWxlfHdjaGFyfHdoaWxlfHdpdGh8d3N0cmluZylcXGIvLFxuICAgIG51bWJlcjogW1xuICAgICAgLy8gVGhlIGxvb2tiZWhpbmQgYW5kIHRoZSBuZWdhdGl2ZSBsb29rLWFoZWFkIHRyeSB0byBwcmV2ZW50IGJhZCBoaWdobGlnaHRpbmcgb2YgdGhlIC4uIG9wZXJhdG9yXG4gICAgICAvLyBIZXhhZGVjaW1hbCBudW1iZXJzIG11c3QgYmUgaGFuZGxlZCBzZXBhcmF0ZWx5IHRvIGF2b2lkIHByb2JsZW1zIHdpdGggZXhwb25lbnQgXCJlXCJcbiAgICAgIC9cXGIweFxcLj9bYS1mXFxkX10rKD86KD8hXFwuXFwuKVxcLlthLWZcXGRfXSopPyg/OnBbKy1dP1thLWZcXGRfXSspP1t1bGZpXXswLDR9L2ksXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLygoPzpcXC5cXC4pPykoPzpcXGIwYlxcLj98XFxifFxcLilcXGRbXFxkX10qKD86KD8hXFwuXFwuKVxcLltcXGRfXSopPyg/OmVbKy1dP1xcZFtcXGRfXSopP1t1bGZpXXswLDR9L2ksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH1cbiAgICBdLFxuICAgIG9wZXJhdG9yOlxuICAgICAgL1xcfFt8PV0/fCZbJj1dP3xcXCtbKz1dP3wtWy09XT98XFwuP1xcLlxcLnw9Wz49XT98ISg/OmlbbnNdXFxifDw+Pz0/fD49P3w9KT98XFxiaVtuc11cXGJ8KD86PFs8Pl0/fD4+Pz4/fFxcXlxcXnxbKlxcLyVefl0pPT8vXG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ2QnLCAnc3RyaW5nJywge1xuICAgIC8vIENoYXJhY3RlcnNcbiAgICAvLyAnYScsICdcXFxcJywgJ1xcbicsICdcXHhGRicsICdcXDM3NycsICdcXHVGRkZGJywgJ1xcVTAwMTBGRkZGJywgJ1xccXVvdCdcbiAgICBjaGFyOiAvJyg/OlxcXFwoPzpcXFd8XFx3Kyl8W15cXFxcXSknL1xuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdkJywgJ2tleXdvcmQnLCB7XG4gICAgcHJvcGVydHk6IC9cXEJAXFx3Ki9cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnZCcsICdmdW5jdGlvbicsIHtcbiAgICByZWdpc3Rlcjoge1xuICAgICAgLy8gSWFzbSByZWdpc3RlcnNcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC9cXGIoPzpbQUJDRF1bTEhYXXxFPyg/OkJQfERJfFNJfFNQKXxbQlNdUEx8W0VDU0RHRl1TfENSWzAyMzRdfFtEU11JTHxEUlswMTIzNjddfEVbQUJDRF1YfFg/TU1bMC03XXxSKD86MVswLTVdfFs4OV0pW0JXRF0/fFJbQUJDRF1YfFJbQlNdUHxSW0RTXUl8VFJbMy03XXxYTU0oPzoxWzAtNV18Wzg5XSl8WU1NKD86MVswLTVdfFxcZCkpXFxifFxcYlNUKD86XFwoWzAtN11cXCl8XFxiKS8sXG4gICAgICBhbGlhczogJ3ZhcmlhYmxlJ1xuICAgIH1cbiAgfSlcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiZCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwiY29tbWVudCIsInBhdHRlcm4iLCJncmVlZHkiLCJSZWdFeHAiLCJzb3VyY2UiLCJqb2luIiwibG9va2JlaGluZCIsInN0cmluZyIsImFsaWFzIiwia2V5d29yZCIsIm51bWJlciIsIm9wZXJhdG9yIiwiaW5zZXJ0QmVmb3JlIiwiY2hhciIsInByb3BlcnR5IiwicmVnaXN0ZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/d.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/dart.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/dart.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = dart;\ndart.displayName = \"dart\";\ndart.aliases = [];\nfunction dart(Prism) {\n    ;\n    (function(Prism) {\n        var keywords = [\n            /\\b(?:async|sync|yield)\\*/,\n            /\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|covariant|default|deferred|do|dynamic|else|enum|export|extends|extension|external|factory|final|finally|for|get|hide|if|implements|import|in|interface|library|mixin|new|null|on|operator|part|rethrow|return|set|show|static|super|switch|sync|this|throw|try|typedef|var|void|while|with|yield)\\b/\n        ] // Handles named imports, such as http.Client\n        ;\n        var packagePrefix = /(^|[^\\w.])(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/.source // based on the dart naming conventions\n        ;\n        var className = {\n            pattern: RegExp(packagePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n            lookbehind: true,\n            inside: {\n                namespace: {\n                    pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n                    inside: {\n                        punctuation: /\\./\n                    }\n                }\n            }\n        };\n        Prism.languages.dart = Prism.languages.extend(\"clike\", {\n            \"class-name\": [\n                className,\n                {\n                    // variables and parameters\n                    // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n                    pattern: RegExp(packagePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()])/.source),\n                    lookbehind: true,\n                    inside: className.inside\n                }\n            ],\n            keyword: keywords,\n            operator: /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/\n        });\n        Prism.languages.insertBefore(\"dart\", \"string\", {\n            \"string-literal\": {\n                pattern: /r?(?:(\"\"\"|''')[\\s\\S]*?\\1|([\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2(?!\\2))/,\n                greedy: true,\n                inside: {\n                    interpolation: {\n                        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\w+|\\{(?:[^{}]|\\{[^{}]*\\})*\\})/,\n                        lookbehind: true,\n                        inside: {\n                            punctuation: /^\\$\\{?|\\}$/,\n                            expression: {\n                                pattern: /[\\s\\S]+/,\n                                inside: Prism.languages.dart\n                            }\n                        }\n                    },\n                    string: /[\\s\\S]+/\n                }\n            },\n            string: undefined\n        });\n        Prism.languages.insertBefore(\"dart\", \"class-name\", {\n            metadata: {\n                pattern: /@\\w+/,\n                alias: \"function\"\n            }\n        });\n        Prism.languages.insertBefore(\"dart\", \"class-name\", {\n            generics: {\n                pattern: /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\n                inside: {\n                    \"class-name\": className,\n                    keyword: keywords,\n                    punctuation: /[<>(),.:]/,\n                    operator: /[?&|]/\n                }\n            }\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZGFydC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7O0lBQ2YsVUFBVUEsS0FBSztRQUNmLElBQUlDLFdBQVc7WUFDYjtZQUNBO1NBQ0QsQ0FBQyw2Q0FBNkM7O1FBQy9DLElBQUlDLGdCQUFnQix1REFDakJDLE1BQU0sQ0FBQyx1Q0FBdUM7O1FBQ2pELElBQUlDLFlBQVk7WUFDZEMsU0FBU0MsT0FBT0osZ0JBQWdCLGdDQUFnQ0MsTUFBTTtZQUN0RUksWUFBWTtZQUNaQyxRQUFRO2dCQUNOQyxXQUFXO29CQUNUSixTQUFTO29CQUNURyxRQUFRO3dCQUNORSxhQUFhO29CQUNmO2dCQUNGO1lBQ0Y7UUFDRjtRQUNBVixNQUFNVyxTQUFTLENBQUNkLElBQUksR0FBR0csTUFBTVcsU0FBUyxDQUFDQyxNQUFNLENBQUMsU0FBUztZQUNyRCxjQUFjO2dCQUNaUjtnQkFDQTtvQkFDRSwyQkFBMkI7b0JBQzNCLHdIQUF3SDtvQkFDeEhDLFNBQVNDLE9BQ1BKLGdCQUFnQiwrQkFBK0JDLE1BQU07b0JBRXZESSxZQUFZO29CQUNaQyxRQUFRSixVQUFVSSxNQUFNO2dCQUMxQjthQUNEO1lBQ0RLLFNBQVNaO1lBQ1RhLFVBQ0U7UUFDSjtRQUNBZCxNQUFNVyxTQUFTLENBQUNJLFlBQVksQ0FBQyxRQUFRLFVBQVU7WUFDN0Msa0JBQWtCO2dCQUNoQlYsU0FDRTtnQkFDRlcsUUFBUTtnQkFDUlIsUUFBUTtvQkFDTlMsZUFBZTt3QkFDYlosU0FDRTt3QkFDRkUsWUFBWTt3QkFDWkMsUUFBUTs0QkFDTkUsYUFBYTs0QkFDYlEsWUFBWTtnQ0FDVmIsU0FBUztnQ0FDVEcsUUFBUVIsTUFBTVcsU0FBUyxDQUFDZCxJQUFJOzRCQUM5Qjt3QkFDRjtvQkFDRjtvQkFDQXNCLFFBQVE7Z0JBQ1Y7WUFDRjtZQUNBQSxRQUFRQztRQUNWO1FBQ0FwQixNQUFNVyxTQUFTLENBQUNJLFlBQVksQ0FBQyxRQUFRLGNBQWM7WUFDakRNLFVBQVU7Z0JBQ1JoQixTQUFTO2dCQUNUaUIsT0FBTztZQUNUO1FBQ0Y7UUFDQXRCLE1BQU1XLFNBQVMsQ0FBQ0ksWUFBWSxDQUFDLFFBQVEsY0FBYztZQUNqRFEsVUFBVTtnQkFDUmxCLFNBQ0U7Z0JBQ0ZHLFFBQVE7b0JBQ04sY0FBY0o7b0JBQ2RTLFNBQVNaO29CQUNUUyxhQUFhO29CQUNiSSxVQUFVO2dCQUNaO1lBQ0Y7UUFDRjtJQUNGLEdBQUdkO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZGFydC5qcz83ZjE5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGRhcnRcbmRhcnQuZGlzcGxheU5hbWUgPSAnZGFydCdcbmRhcnQuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBkYXJ0KFByaXNtKSB7XG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIGtleXdvcmRzID0gW1xuICAgICAgL1xcYig/OmFzeW5jfHN5bmN8eWllbGQpXFwqLyxcbiAgICAgIC9cXGIoPzphYnN0cmFjdHxhc3NlcnR8YXN5bmN8YXdhaXR8YnJlYWt8Y2FzZXxjYXRjaHxjbGFzc3xjb25zdHxjb250aW51ZXxjb3ZhcmlhbnR8ZGVmYXVsdHxkZWZlcnJlZHxkb3xkeW5hbWljfGVsc2V8ZW51bXxleHBvcnR8ZXh0ZW5kc3xleHRlbnNpb258ZXh0ZXJuYWx8ZmFjdG9yeXxmaW5hbHxmaW5hbGx5fGZvcnxnZXR8aGlkZXxpZnxpbXBsZW1lbnRzfGltcG9ydHxpbnxpbnRlcmZhY2V8bGlicmFyeXxtaXhpbnxuZXd8bnVsbHxvbnxvcGVyYXRvcnxwYXJ0fHJldGhyb3d8cmV0dXJufHNldHxzaG93fHN0YXRpY3xzdXBlcnxzd2l0Y2h8c3luY3x0aGlzfHRocm93fHRyeXx0eXBlZGVmfHZhcnx2b2lkfHdoaWxlfHdpdGh8eWllbGQpXFxiL1xuICAgIF0gLy8gSGFuZGxlcyBuYW1lZCBpbXBvcnRzLCBzdWNoIGFzIGh0dHAuQ2xpZW50XG4gICAgdmFyIHBhY2thZ2VQcmVmaXggPSAvKF58W15cXHcuXSkoPzpbYS16XVxcdypcXHMqXFwuXFxzKikqKD86W0EtWl1cXHcqXFxzKlxcLlxccyopKi9cbiAgICAgIC5zb3VyY2UgLy8gYmFzZWQgb24gdGhlIGRhcnQgbmFtaW5nIGNvbnZlbnRpb25zXG4gICAgdmFyIGNsYXNzTmFtZSA9IHtcbiAgICAgIHBhdHRlcm46IFJlZ0V4cChwYWNrYWdlUHJlZml4ICsgL1tBLVpdKD86W1xcZF9BLVpdKlthLXpdXFx3Kik/XFxiLy5zb3VyY2UpLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBuYW1lc3BhY2U6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXlthLXpdXFx3Kig/OlxccypcXC5cXHMqW2Etel1cXHcqKSooPzpcXHMqXFwuKT8vLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgcHVuY3R1YXRpb246IC9cXC4vXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIFByaXNtLmxhbmd1YWdlcy5kYXJ0ID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnY2xpa2UnLCB7XG4gICAgICAnY2xhc3MtbmFtZSc6IFtcbiAgICAgICAgY2xhc3NOYW1lLFxuICAgICAgICB7XG4gICAgICAgICAgLy8gdmFyaWFibGVzIGFuZCBwYXJhbWV0ZXJzXG4gICAgICAgICAgLy8gdGhpcyB0byBzdXBwb3J0IGNsYXNzIG5hbWVzIChvciBnZW5lcmljIHBhcmFtZXRlcnMpIHdoaWNoIGRvIG5vdCBjb250YWluIGEgbG93ZXIgY2FzZSBsZXR0ZXIgKGFsc28gd29ya3MgZm9yIG1ldGhvZHMpXG4gICAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgICAgcGFja2FnZVByZWZpeCArIC9bQS1aXVxcdyooPz1cXHMrXFx3K1xccypbOyw9KCldKS8uc291cmNlXG4gICAgICAgICAgKSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGluc2lkZTogY2xhc3NOYW1lLmluc2lkZVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAga2V5d29yZDoga2V5d29yZHMsXG4gICAgICBvcGVyYXRvcjpcbiAgICAgICAgL1xcYmlzIXxcXGIoPzphc3xpcylcXGJ8XFwrXFwrfC0tfCYmfFxcfFxcfHw8PD0/fD4+PT98fig/OlxcLz0/KT98WytcXC0qXFwvJSZefD0hPD5dPT98XFw/L1xuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnZGFydCcsICdzdHJpbmcnLCB7XG4gICAgICAnc3RyaW5nLWxpdGVyYWwnOiB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgL3I/KD86KFwiXCJcInwnJycpW1xcc1xcU10qP1xcMXwoW1wiJ10pKD86XFxcXC58KD8hXFwyKVteXFxcXFxcclxcbl0pKlxcMig/IVxcMikpLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBpbnRlcnBvbGF0aW9uOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgICAvKCg/Ol58W15cXFxcXSkoPzpcXFxcezJ9KSopXFwkKD86XFx3K3xcXHsoPzpbXnt9XXxcXHtbXnt9XSpcXH0pKlxcfSkvLFxuICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgICBwdW5jdHVhdGlvbjogL15cXCRcXHs/fFxcfSQvLFxuICAgICAgICAgICAgICBleHByZXNzaW9uOiB7XG4gICAgICAgICAgICAgICAgcGF0dGVybjogL1tcXHNcXFNdKy8sXG4gICAgICAgICAgICAgICAgaW5zaWRlOiBQcmlzbS5sYW5ndWFnZXMuZGFydFxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBzdHJpbmc6IC9bXFxzXFxTXSsvXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBzdHJpbmc6IHVuZGVmaW5lZFxuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnZGFydCcsICdjbGFzcy1uYW1lJywge1xuICAgICAgbWV0YWRhdGE6IHtcbiAgICAgICAgcGF0dGVybjogL0BcXHcrLyxcbiAgICAgICAgYWxpYXM6ICdmdW5jdGlvbidcbiAgICAgIH1cbiAgICB9KVxuICAgIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ2RhcnQnLCAnY2xhc3MtbmFtZScsIHtcbiAgICAgIGdlbmVyaWNzOiB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLzwoPzpbXFx3XFxzLC4mP118PCg/OltcXHdcXHMsLiY/XXw8KD86W1xcd1xccywuJj9dfDxbXFx3XFxzLC4mP10qPikqPikqPikqPi8sXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgICdjbGFzcy1uYW1lJzogY2xhc3NOYW1lLFxuICAgICAgICAgIGtleXdvcmQ6IGtleXdvcmRzLFxuICAgICAgICAgIHB1bmN0dWF0aW9uOiAvWzw+KCksLjpdLyxcbiAgICAgICAgICBvcGVyYXRvcjogL1s/JnxdL1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSlcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImRhcnQiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImtleXdvcmRzIiwicGFja2FnZVByZWZpeCIsInNvdXJjZSIsImNsYXNzTmFtZSIsInBhdHRlcm4iLCJSZWdFeHAiLCJsb29rYmVoaW5kIiwiaW5zaWRlIiwibmFtZXNwYWNlIiwicHVuY3R1YXRpb24iLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJrZXl3b3JkIiwib3BlcmF0b3IiLCJpbnNlcnRCZWZvcmUiLCJncmVlZHkiLCJpbnRlcnBvbGF0aW9uIiwiZXhwcmVzc2lvbiIsInN0cmluZyIsInVuZGVmaW5lZCIsIm1ldGFkYXRhIiwiYWxpYXMiLCJnZW5lcmljcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/dart.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/dataweave.js":
/*!**************************************************!*\
  !*** ./node_modules/refractor/lang/dataweave.js ***!
  \**************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = dataweave;\ndataweave.displayName = \"dataweave\";\ndataweave.aliases = [];\nfunction dataweave(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.dataweave = {\n            url: /\\b[A-Za-z]+:\\/\\/[\\w/:.?=&-]+|\\burn:[\\w:.?=&-]+/,\n            property: {\n                pattern: /(?:\\b\\w+#)?(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|\\b\\w+)(?=\\s*[:@])/,\n                greedy: true\n            },\n            string: {\n                pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n                greedy: true\n            },\n            \"mime-type\": /\\b(?:application|audio|image|multipart|text|video)\\/[\\w+-]+/,\n            date: {\n                pattern: /\\|[\\w:+-]+\\|/,\n                greedy: true\n            },\n            comment: [\n                {\n                    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n                    lookbehind: true,\n                    greedy: true\n                },\n                {\n                    pattern: /(^|[^\\\\:])\\/\\/.*/,\n                    lookbehind: true,\n                    greedy: true\n                }\n            ],\n            regex: {\n                pattern: /\\/(?:[^\\\\\\/\\r\\n]|\\\\[^\\r\\n])+\\//,\n                greedy: true\n            },\n            keyword: /\\b(?:and|as|at|case|do|else|fun|if|input|is|match|not|ns|null|or|output|type|unless|update|using|var)\\b/,\n            function: /\\b[A-Z_]\\w*(?=\\s*\\()/i,\n            number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n            punctuation: /[{}[\\];(),.:@]/,\n            operator: /<<|>>|->|[<>~=]=?|!=|--?-?|\\+\\+?|!|\\?/,\n            boolean: /\\b(?:false|true)\\b/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZGF0YXdlYXZlLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLFVBQVVDLFdBQVcsR0FBRztBQUN4QkQsVUFBVUUsT0FBTyxHQUFHLEVBQUU7QUFDdEIsU0FBU0YsVUFBVUcsS0FBSzs7SUFDcEIsVUFBVUEsS0FBSztRQUNmQSxNQUFNQyxTQUFTLENBQUNKLFNBQVMsR0FBRztZQUMxQkssS0FBSztZQUNMQyxVQUFVO2dCQUNSQyxTQUFTO2dCQUNUQyxRQUFRO1lBQ1Y7WUFDQUMsUUFBUTtnQkFDTkYsU0FBUztnQkFDVEMsUUFBUTtZQUNWO1lBQ0EsYUFDRTtZQUNGRSxNQUFNO2dCQUNKSCxTQUFTO2dCQUNUQyxRQUFRO1lBQ1Y7WUFDQUcsU0FBUztnQkFDUDtvQkFDRUosU0FBUztvQkFDVEssWUFBWTtvQkFDWkosUUFBUTtnQkFDVjtnQkFDQTtvQkFDRUQsU0FBUztvQkFDVEssWUFBWTtvQkFDWkosUUFBUTtnQkFDVjthQUNEO1lBQ0RLLE9BQU87Z0JBQ0xOLFNBQVM7Z0JBQ1RDLFFBQVE7WUFDVjtZQUNBTSxTQUNFO1lBQ0ZDLFVBQVU7WUFDVkMsUUFBUTtZQUNSQyxhQUFhO1lBQ2JDLFVBQVU7WUFDVkMsU0FBUztRQUNYO0lBQ0YsR0FBR2hCO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZGF0YXdlYXZlLmpzPzc4ODAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gZGF0YXdlYXZlXG5kYXRhd2VhdmUuZGlzcGxheU5hbWUgPSAnZGF0YXdlYXZlJ1xuZGF0YXdlYXZlLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gZGF0YXdlYXZlKFByaXNtKSB7XG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgUHJpc20ubGFuZ3VhZ2VzLmRhdGF3ZWF2ZSA9IHtcbiAgICAgIHVybDogL1xcYltBLVphLXpdKzpcXC9cXC9bXFx3LzouPz0mLV0rfFxcYnVybjpbXFx3Oi4/PSYtXSsvLFxuICAgICAgcHJvcGVydHk6IHtcbiAgICAgICAgcGF0dGVybjogLyg/OlxcYlxcdysjKT8oPzpcIig/OlxcXFwufFteXFxcXFwiXFxyXFxuXSkqXCJ8XFxiXFx3KykoPz1cXHMqWzpAXSkvLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICBzdHJpbmc6IHtcbiAgICAgICAgcGF0dGVybjogLyhbXCInYF0pKD86XFxcXFtcXHNcXFNdfCg/IVxcMSlbXlxcXFxdKSpcXDEvLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICAnbWltZS10eXBlJzpcbiAgICAgICAgL1xcYig/OmFwcGxpY2F0aW9ufGF1ZGlvfGltYWdlfG11bHRpcGFydHx0ZXh0fHZpZGVvKVxcL1tcXHcrLV0rLyxcbiAgICAgIGRhdGU6IHtcbiAgICAgICAgcGF0dGVybjogL1xcfFtcXHc6Ky1dK1xcfC8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGNvbW1lbnQ6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKVxcL1xcKltcXHNcXFNdKj8oPzpcXCpcXC98JCkvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKF58W15cXFxcOl0pXFwvXFwvLiovLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICByZWdleDoge1xuICAgICAgICBwYXR0ZXJuOiAvXFwvKD86W15cXFxcXFwvXFxyXFxuXXxcXFxcW15cXHJcXG5dKStcXC8vLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICBrZXl3b3JkOlxuICAgICAgICAvXFxiKD86YW5kfGFzfGF0fGNhc2V8ZG98ZWxzZXxmdW58aWZ8aW5wdXR8aXN8bWF0Y2h8bm90fG5zfG51bGx8b3J8b3V0cHV0fHR5cGV8dW5sZXNzfHVwZGF0ZXx1c2luZ3x2YXIpXFxiLyxcbiAgICAgIGZ1bmN0aW9uOiAvXFxiW0EtWl9dXFx3Kig/PVxccypcXCgpL2ksXG4gICAgICBudW1iZXI6IC8tP1xcYlxcZCsoPzpcXC5cXGQrKT8oPzplWystXT9cXGQrKT9cXGIvaSxcbiAgICAgIHB1bmN0dWF0aW9uOiAvW3t9W1xcXTsoKSwuOkBdLyxcbiAgICAgIG9wZXJhdG9yOiAvPDx8Pj58LT58Wzw+fj1dPT98IT18LS0/LT98XFwrXFwrP3whfFxcPy8sXG4gICAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvXG4gICAgfVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiZGF0YXdlYXZlIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJ1cmwiLCJwcm9wZXJ0eSIsInBhdHRlcm4iLCJncmVlZHkiLCJzdHJpbmciLCJkYXRlIiwiY29tbWVudCIsImxvb2tiZWhpbmQiLCJyZWdleCIsImtleXdvcmQiLCJmdW5jdGlvbiIsIm51bWJlciIsInB1bmN0dWF0aW9uIiwib3BlcmF0b3IiLCJib29sZWFuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/dataweave.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/dax.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/dax.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = dax;\ndax.displayName = \"dax\";\ndax.aliases = [];\nfunction dax(Prism) {\n    Prism.languages.dax = {\n        comment: {\n            pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/).*)/,\n            lookbehind: true\n        },\n        \"data-field\": {\n            pattern: /'(?:[^']|'')*'(?!')(?:\\[[ \\w\\xA0-\\uFFFF]+\\])?|\\w+\\[[ \\w\\xA0-\\uFFFF]+\\]/,\n            alias: \"symbol\"\n        },\n        measure: {\n            pattern: /\\[[ \\w\\xA0-\\uFFFF]+\\]/,\n            alias: \"constant\"\n        },\n        string: {\n            pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n            greedy: true\n        },\n        function: /\\b(?:ABS|ACOS|ACOSH|ACOT|ACOTH|ADDCOLUMNS|ADDMISSINGITEMS|ALL|ALLCROSSFILTERED|ALLEXCEPT|ALLNOBLANKROW|ALLSELECTED|AND|APPROXIMATEDISTINCTCOUNT|ASIN|ASINH|ATAN|ATANH|AVERAGE|AVERAGEA|AVERAGEX|BETA\\.DIST|BETA\\.INV|BLANK|CALCULATE|CALCULATETABLE|CALENDAR|CALENDARAUTO|CEILING|CHISQ\\.DIST|CHISQ\\.DIST\\.RT|CHISQ\\.INV|CHISQ\\.INV\\.RT|CLOSINGBALANCEMONTH|CLOSINGBALANCEQUARTER|CLOSINGBALANCEYEAR|COALESCE|COMBIN|COMBINA|COMBINEVALUES|CONCATENATE|CONCATENATEX|CONFIDENCE\\.NORM|CONFIDENCE\\.T|CONTAINS|CONTAINSROW|CONTAINSSTRING|CONTAINSSTRINGEXACT|CONVERT|COS|COSH|COT|COTH|COUNT|COUNTA|COUNTAX|COUNTBLANK|COUNTROWS|COUNTX|CROSSFILTER|CROSSJOIN|CURRENCY|CURRENTGROUP|CUSTOMDATA|DATATABLE|DATE|DATEADD|DATEDIFF|DATESBETWEEN|DATESINPERIOD|DATESMTD|DATESQTD|DATESYTD|DATEVALUE|DAY|DEGREES|DETAILROWS|DISTINCT|DISTINCTCOUNT|DISTINCTCOUNTNOBLANK|DIVIDE|EARLIER|EARLIEST|EDATE|ENDOFMONTH|ENDOFQUARTER|ENDOFYEAR|EOMONTH|ERROR|EVEN|EXACT|EXCEPT|EXP|EXPON\\.DIST|FACT|FALSE|FILTER|FILTERS|FIND|FIRSTDATE|FIRSTNONBLANK|FIRSTNONBLANKVALUE|FIXED|FLOOR|FORMAT|GCD|GENERATE|GENERATEALL|GENERATESERIES|GEOMEAN|GEOMEANX|GROUPBY|HASONEFILTER|HASONEVALUE|HOUR|IF|IF\\.EAGER|IFERROR|IGNORE|INT|INTERSECT|ISBLANK|ISCROSSFILTERED|ISEMPTY|ISERROR|ISEVEN|ISFILTERED|ISINSCOPE|ISLOGICAL|ISNONTEXT|ISNUMBER|ISO\\.CEILING|ISODD|ISONORAFTER|ISSELECTEDMEASURE|ISSUBTOTAL|ISTEXT|KEEPFILTERS|KEYWORDMATCH|LASTDATE|LASTNONBLANK|LASTNONBLANKVALUE|LCM|LEFT|LEN|LN|LOG|LOG10|LOOKUPVALUE|LOWER|MAX|MAXA|MAXX|MEDIAN|MEDIANX|MID|MIN|MINA|MINUTE|MINX|MOD|MONTH|MROUND|NATURALINNERJOIN|NATURALLEFTOUTERJOIN|NEXTDAY|NEXTMONTH|NEXTQUARTER|NEXTYEAR|NONVISUAL|NORM\\.DIST|NORM\\.INV|NORM\\.S\\.DIST|NORM\\.S\\.INV|NOT|NOW|ODD|OPENINGBALANCEMONTH|OPENINGBALANCEQUARTER|OPENINGBALANCEYEAR|OR|PARALLELPERIOD|PATH|PATHCONTAINS|PATHITEM|PATHITEMREVERSE|PATHLENGTH|PERCENTILE\\.EXC|PERCENTILE\\.INC|PERCENTILEX\\.EXC|PERCENTILEX\\.INC|PERMUT|PI|POISSON\\.DIST|POWER|PREVIOUSDAY|PREVIOUSMONTH|PREVIOUSQUARTER|PREVIOUSYEAR|PRODUCT|PRODUCTX|QUARTER|QUOTIENT|RADIANS|RAND|RANDBETWEEN|RANK\\.EQ|RANKX|RELATED|RELATEDTABLE|REMOVEFILTERS|REPLACE|REPT|RIGHT|ROLLUP|ROLLUPADDISSUBTOTAL|ROLLUPGROUP|ROLLUPISSUBTOTAL|ROUND|ROUNDDOWN|ROUNDUP|ROW|SAMEPERIODLASTYEAR|SAMPLE|SEARCH|SECOND|SELECTCOLUMNS|SELECTEDMEASURE|SELECTEDMEASUREFORMATSTRING|SELECTEDMEASURENAME|SELECTEDVALUE|SIGN|SIN|SINH|SQRT|SQRTPI|STARTOFMONTH|STARTOFQUARTER|STARTOFYEAR|STDEV\\.P|STDEV\\.S|STDEVX\\.P|STDEVX\\.S|SUBSTITUTE|SUBSTITUTEWITHINDEX|SUM|SUMMARIZE|SUMMARIZECOLUMNS|SUMX|SWITCH|T\\.DIST|T\\.DIST\\.2T|T\\.DIST\\.RT|T\\.INV|T\\.INV\\.2T|TAN|TANH|TIME|TIMEVALUE|TODAY|TOPN|TOPNPERLEVEL|TOPNSKIP|TOTALMTD|TOTALQTD|TOTALYTD|TREATAS|TRIM|TRUE|TRUNC|UNICHAR|UNICODE|UNION|UPPER|USERELATIONSHIP|USERNAME|USEROBJECTID|USERPRINCIPALNAME|UTCNOW|UTCTODAY|VALUE|VALUES|VAR\\.P|VAR\\.S|VARX\\.P|VARX\\.S|WEEKDAY|WEEKNUM|XIRR|XNPV|YEAR|YEARFRAC)(?=\\s*\\()/i,\n        keyword: /\\b(?:DEFINE|EVALUATE|MEASURE|ORDER\\s+BY|RETURN|VAR|START\\s+AT|ASC|DESC)\\b/i,\n        boolean: {\n            pattern: /\\b(?:FALSE|NULL|TRUE)\\b/i,\n            alias: \"constant\"\n        },\n        number: /\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/,\n        operator: /:=|[-+*\\/=^]|&&?|\\|\\||<(?:=>?|<|>)?|>[>=]?|\\b(?:IN|NOT)\\b/i,\n        punctuation: /[;\\[\\](){}`,.]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZGF4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLElBQUlDLFdBQVcsR0FBRztBQUNsQkQsSUFBSUUsT0FBTyxHQUFHLEVBQUU7QUFDaEIsU0FBU0YsSUFBSUcsS0FBSztJQUNoQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxZQUFZO1FBQ2Q7UUFDQSxjQUFjO1lBQ1pELFNBQ0U7WUFDRkUsT0FBTztRQUNUO1FBQ0FDLFNBQVM7WUFDUEgsU0FBUztZQUNURSxPQUFPO1FBQ1Q7UUFDQUUsUUFBUTtZQUNOSixTQUFTO1lBQ1RLLFFBQVE7UUFDVjtRQUNBQyxVQUNFO1FBQ0ZDLFNBQ0U7UUFDRkMsU0FBUztZQUNQUixTQUFTO1lBQ1RFLE9BQU87UUFDVDtRQUNBTyxRQUFRO1FBQ1JDLFVBQVU7UUFDVkMsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZGF4LmpzPzlmMzUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gZGF4XG5kYXguZGlzcGxheU5hbWUgPSAnZGF4J1xuZGF4LmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gZGF4KFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5kYXggPSB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogLyhefFteXFxcXF0pKD86XFwvXFwqW1xcc1xcU10qP1xcKlxcL3woPzotLXxcXC9cXC8pLiopLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgICdkYXRhLWZpZWxkJzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLycoPzpbXiddfCcnKSonKD8hJykoPzpcXFtbIFxcd1xceEEwLVxcdUZGRkZdK1xcXSk/fFxcdytcXFtbIFxcd1xceEEwLVxcdUZGRkZdK1xcXS8sXG4gICAgICBhbGlhczogJ3N5bWJvbCdcbiAgICB9LFxuICAgIG1lYXN1cmU6IHtcbiAgICAgIHBhdHRlcm46IC9cXFtbIFxcd1xceEEwLVxcdUZGRkZdK1xcXS8sXG4gICAgICBhbGlhczogJ2NvbnN0YW50J1xuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvXCIoPzpbXlwiXXxcIlwiKSpcIig/IVwiKS8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGZ1bmN0aW9uOlxuICAgICAgL1xcYig/OkFCU3xBQ09TfEFDT1NIfEFDT1R8QUNPVEh8QUREQ09MVU1OU3xBRERNSVNTSU5HSVRFTVN8QUxMfEFMTENST1NTRklMVEVSRUR8QUxMRVhDRVBUfEFMTE5PQkxBTktST1d8QUxMU0VMRUNURUR8QU5EfEFQUFJPWElNQVRFRElTVElOQ1RDT1VOVHxBU0lOfEFTSU5IfEFUQU58QVRBTkh8QVZFUkFHRXxBVkVSQUdFQXxBVkVSQUdFWHxCRVRBXFwuRElTVHxCRVRBXFwuSU5WfEJMQU5LfENBTENVTEFURXxDQUxDVUxBVEVUQUJMRXxDQUxFTkRBUnxDQUxFTkRBUkFVVE98Q0VJTElOR3xDSElTUVxcLkRJU1R8Q0hJU1FcXC5ESVNUXFwuUlR8Q0hJU1FcXC5JTlZ8Q0hJU1FcXC5JTlZcXC5SVHxDTE9TSU5HQkFMQU5DRU1PTlRIfENMT1NJTkdCQUxBTkNFUVVBUlRFUnxDTE9TSU5HQkFMQU5DRVlFQVJ8Q09BTEVTQ0V8Q09NQklOfENPTUJJTkF8Q09NQklORVZBTFVFU3xDT05DQVRFTkFURXxDT05DQVRFTkFURVh8Q09ORklERU5DRVxcLk5PUk18Q09ORklERU5DRVxcLlR8Q09OVEFJTlN8Q09OVEFJTlNST1d8Q09OVEFJTlNTVFJJTkd8Q09OVEFJTlNTVFJJTkdFWEFDVHxDT05WRVJUfENPU3xDT1NIfENPVHxDT1RIfENPVU5UfENPVU5UQXxDT1VOVEFYfENPVU5UQkxBTkt8Q09VTlRST1dTfENPVU5UWHxDUk9TU0ZJTFRFUnxDUk9TU0pPSU58Q1VSUkVOQ1l8Q1VSUkVOVEdST1VQfENVU1RPTURBVEF8REFUQVRBQkxFfERBVEV8REFURUFERHxEQVRFRElGRnxEQVRFU0JFVFdFRU58REFURVNJTlBFUklPRHxEQVRFU01URHxEQVRFU1FURHxEQVRFU1lURHxEQVRFVkFMVUV8REFZfERFR1JFRVN8REVUQUlMUk9XU3xESVNUSU5DVHxESVNUSU5DVENPVU5UfERJU1RJTkNUQ09VTlROT0JMQU5LfERJVklERXxFQVJMSUVSfEVBUkxJRVNUfEVEQVRFfEVORE9GTU9OVEh8RU5ET0ZRVUFSVEVSfEVORE9GWUVBUnxFT01PTlRIfEVSUk9SfEVWRU58RVhBQ1R8RVhDRVBUfEVYUHxFWFBPTlxcLkRJU1R8RkFDVHxGQUxTRXxGSUxURVJ8RklMVEVSU3xGSU5EfEZJUlNUREFURXxGSVJTVE5PTkJMQU5LfEZJUlNUTk9OQkxBTktWQUxVRXxGSVhFRHxGTE9PUnxGT1JNQVR8R0NEfEdFTkVSQVRFfEdFTkVSQVRFQUxMfEdFTkVSQVRFU0VSSUVTfEdFT01FQU58R0VPTUVBTlh8R1JPVVBCWXxIQVNPTkVGSUxURVJ8SEFTT05FVkFMVUV8SE9VUnxJRnxJRlxcLkVBR0VSfElGRVJST1J8SUdOT1JFfElOVHxJTlRFUlNFQ1R8SVNCTEFOS3xJU0NST1NTRklMVEVSRUR8SVNFTVBUWXxJU0VSUk9SfElTRVZFTnxJU0ZJTFRFUkVEfElTSU5TQ09QRXxJU0xPR0lDQUx8SVNOT05URVhUfElTTlVNQkVSfElTT1xcLkNFSUxJTkd8SVNPRER8SVNPTk9SQUZURVJ8SVNTRUxFQ1RFRE1FQVNVUkV8SVNTVUJUT1RBTHxJU1RFWFR8S0VFUEZJTFRFUlN8S0VZV09SRE1BVENIfExBU1REQVRFfExBU1ROT05CTEFOS3xMQVNUTk9OQkxBTktWQUxVRXxMQ018TEVGVHxMRU58TE58TE9HfExPRzEwfExPT0tVUFZBTFVFfExPV0VSfE1BWHxNQVhBfE1BWFh8TUVESUFOfE1FRElBTlh8TUlEfE1JTnxNSU5BfE1JTlVURXxNSU5YfE1PRHxNT05USHxNUk9VTkR8TkFUVVJBTElOTkVSSk9JTnxOQVRVUkFMTEVGVE9VVEVSSk9JTnxORVhUREFZfE5FWFRNT05USHxORVhUUVVBUlRFUnxORVhUWUVBUnxOT05WSVNVQUx8Tk9STVxcLkRJU1R8Tk9STVxcLklOVnxOT1JNXFwuU1xcLkRJU1R8Tk9STVxcLlNcXC5JTlZ8Tk9UfE5PV3xPRER8T1BFTklOR0JBTEFOQ0VNT05USHxPUEVOSU5HQkFMQU5DRVFVQVJURVJ8T1BFTklOR0JBTEFOQ0VZRUFSfE9SfFBBUkFMTEVMUEVSSU9EfFBBVEh8UEFUSENPTlRBSU5TfFBBVEhJVEVNfFBBVEhJVEVNUkVWRVJTRXxQQVRITEVOR1RIfFBFUkNFTlRJTEVcXC5FWEN8UEVSQ0VOVElMRVxcLklOQ3xQRVJDRU5USUxFWFxcLkVYQ3xQRVJDRU5USUxFWFxcLklOQ3xQRVJNVVR8UEl8UE9JU1NPTlxcLkRJU1R8UE9XRVJ8UFJFVklPVVNEQVl8UFJFVklPVVNNT05USHxQUkVWSU9VU1FVQVJURVJ8UFJFVklPVVNZRUFSfFBST0RVQ1R8UFJPRFVDVFh8UVVBUlRFUnxRVU9USUVOVHxSQURJQU5TfFJBTkR8UkFOREJFVFdFRU58UkFOS1xcLkVRfFJBTktYfFJFTEFURUR8UkVMQVRFRFRBQkxFfFJFTU9WRUZJTFRFUlN8UkVQTEFDRXxSRVBUfFJJR0hUfFJPTExVUHxST0xMVVBBRERJU1NVQlRPVEFMfFJPTExVUEdST1VQfFJPTExVUElTU1VCVE9UQUx8Uk9VTkR8Uk9VTkRET1dOfFJPVU5EVVB8Uk9XfFNBTUVQRVJJT0RMQVNUWUVBUnxTQU1QTEV8U0VBUkNIfFNFQ09ORHxTRUxFQ1RDT0xVTU5TfFNFTEVDVEVETUVBU1VSRXxTRUxFQ1RFRE1FQVNVUkVGT1JNQVRTVFJJTkd8U0VMRUNURURNRUFTVVJFTkFNRXxTRUxFQ1RFRFZBTFVFfFNJR058U0lOfFNJTkh8U1FSVHxTUVJUUEl8U1RBUlRPRk1PTlRIfFNUQVJUT0ZRVUFSVEVSfFNUQVJUT0ZZRUFSfFNUREVWXFwuUHxTVERFVlxcLlN8U1RERVZYXFwuUHxTVERFVlhcXC5TfFNVQlNUSVRVVEV8U1VCU1RJVFVURVdJVEhJTkRFWHxTVU18U1VNTUFSSVpFfFNVTU1BUklaRUNPTFVNTlN8U1VNWHxTV0lUQ0h8VFxcLkRJU1R8VFxcLkRJU1RcXC4yVHxUXFwuRElTVFxcLlJUfFRcXC5JTlZ8VFxcLklOVlxcLjJUfFRBTnxUQU5IfFRJTUV8VElNRVZBTFVFfFRPREFZfFRPUE58VE9QTlBFUkxFVkVMfFRPUE5TS0lQfFRPVEFMTVREfFRPVEFMUVREfFRPVEFMWVREfFRSRUFUQVN8VFJJTXxUUlVFfFRSVU5DfFVOSUNIQVJ8VU5JQ09ERXxVTklPTnxVUFBFUnxVU0VSRUxBVElPTlNISVB8VVNFUk5BTUV8VVNFUk9CSkVDVElEfFVTRVJQUklOQ0lQQUxOQU1FfFVUQ05PV3xVVENUT0RBWXxWQUxVRXxWQUxVRVN8VkFSXFwuUHxWQVJcXC5TfFZBUlhcXC5QfFZBUlhcXC5TfFdFRUtEQVl8V0VFS05VTXxYSVJSfFhOUFZ8WUVBUnxZRUFSRlJBQykoPz1cXHMqXFwoKS9pLFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86REVGSU5FfEVWQUxVQVRFfE1FQVNVUkV8T1JERVJcXHMrQll8UkVUVVJOfFZBUnxTVEFSVFxccytBVHxBU0N8REVTQylcXGIvaSxcbiAgICBib29sZWFuOiB7XG4gICAgICBwYXR0ZXJuOiAvXFxiKD86RkFMU0V8TlVMTHxUUlVFKVxcYi9pLFxuICAgICAgYWxpYXM6ICdjb25zdGFudCdcbiAgICB9LFxuICAgIG51bWJlcjogL1xcYlxcZCsoPzpcXC5cXGQqKT98XFxCXFwuXFxkK1xcYi8sXG4gICAgb3BlcmF0b3I6IC86PXxbLSsqXFwvPV5dfCYmP3xcXHxcXHx8PCg/Oj0+P3w8fD4pP3w+Wz49XT98XFxiKD86SU58Tk9UKVxcYi9pLFxuICAgIHB1bmN0dWF0aW9uOiAvWztcXFtcXF0oKXt9YCwuXS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJkYXgiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImFsaWFzIiwibWVhc3VyZSIsInN0cmluZyIsImdyZWVkeSIsImZ1bmN0aW9uIiwia2V5d29yZCIsImJvb2xlYW4iLCJudW1iZXIiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/dax.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/dhall.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/dhall.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = dhall;\ndhall.displayName = \"dhall\";\ndhall.aliases = [];\nfunction dhall(Prism) {\n    // ABNF grammar:\n    // https://github.com/dhall-lang/dhall-lang/blob/master/standard/dhall.abnf\n    Prism.languages.dhall = {\n        // Multi-line comments can be nested. E.g. {- foo {- bar -} -}\n        // The multi-line pattern is essentially this:\n        //   \\{-(?:[^-{]|-(?!\\})|\\{(?!-)|<SELF>)*-\\}\n        comment: /--.*|\\{-(?:[^-{]|-(?!\\})|\\{(?!-)|\\{-(?:[^-{]|-(?!\\})|\\{(?!-))*-\\})*-\\}/,\n        string: {\n            pattern: /\"(?:[^\"\\\\]|\\\\.)*\"|''(?:[^']|'(?!')|'''|''\\$\\{)*''(?!'|\\$)/,\n            greedy: true,\n            inside: {\n                interpolation: {\n                    pattern: /\\$\\{[^{}]*\\}/,\n                    inside: {\n                        expression: {\n                            pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n                            lookbehind: true,\n                            alias: \"language-dhall\",\n                            inside: null // see blow\n                        },\n                        punctuation: /\\$\\{|\\}/\n                    }\n                }\n            }\n        },\n        label: {\n            pattern: /`[^`]*`/,\n            greedy: true\n        },\n        url: {\n            // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L596\n            pattern: /\\bhttps?:\\/\\/[\\w.:%!$&'*+;=@~-]+(?:\\/[\\w.:%!$&'*+;=@~-]*)*(?:\\?[/?\\w.:%!$&'*+;=@~-]*)?/,\n            greedy: true\n        },\n        env: {\n            // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L661\n            pattern: /\\benv:(?:(?!\\d)\\w+|\"(?:[^\"\\\\=]|\\\\.)*\")/,\n            greedy: true,\n            inside: {\n                function: /^env/,\n                operator: /^:/,\n                variable: /[\\s\\S]+/\n            }\n        },\n        hash: {\n            // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L725\n            pattern: /\\bsha256:[\\da-fA-F]{64}\\b/,\n            inside: {\n                function: /sha256/,\n                operator: /:/,\n                number: /[\\da-fA-F]{64}/\n            }\n        },\n        // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L359\n        keyword: /\\b(?:as|assert|else|forall|if|in|let|merge|missing|then|toMap|using|with)\\b|\\u2200/,\n        builtin: /\\b(?:None|Some)\\b/,\n        boolean: /\\b(?:False|True)\\b/,\n        number: /\\bNaN\\b|-?\\bInfinity\\b|[+-]?\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/,\n        operator: /\\/\\\\|\\/\\/\\\\\\\\|&&|\\|\\||===|[!=]=|\\/\\/|->|\\+\\+|::|[+*#@=:?<>|\\\\\\u2227\\u2a53\\u2261\\u2afd\\u03bb\\u2192]/,\n        punctuation: /\\.\\.|[{}\\[\\](),./]/,\n        // we'll just assume that every capital word left is a type name\n        \"class-name\": /\\b[A-Z]\\w*\\b/\n    };\n    Prism.languages.dhall.string.inside.interpolation.inside.expression.inside = Prism.languages.dhall;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZGhhbGwuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsTUFBTUMsV0FBVyxHQUFHO0FBQ3BCRCxNQUFNRSxPQUFPLEdBQUcsRUFBRTtBQUNsQixTQUFTRixNQUFNRyxLQUFLO0lBQ2xCLGdCQUFnQjtJQUNoQiwyRUFBMkU7SUFDM0VBLE1BQU1DLFNBQVMsQ0FBQ0osS0FBSyxHQUFHO1FBQ3RCLDhEQUE4RDtRQUM5RCw4Q0FBOEM7UUFDOUMsNENBQTRDO1FBQzVDSyxTQUNFO1FBQ0ZDLFFBQVE7WUFDTkMsU0FBUztZQUNUQyxRQUFRO1lBQ1JDLFFBQVE7Z0JBQ05DLGVBQWU7b0JBQ2JILFNBQVM7b0JBQ1RFLFFBQVE7d0JBQ05FLFlBQVk7NEJBQ1ZKLFNBQVM7NEJBQ1RLLFlBQVk7NEJBQ1pDLE9BQU87NEJBQ1BKLFFBQVEsS0FBSyxXQUFXO3dCQUMxQjt3QkFDQUssYUFBYTtvQkFDZjtnQkFDRjtZQUNGO1FBQ0Y7UUFDQUMsT0FBTztZQUNMUixTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBUSxLQUFLO1lBQ0gsa0hBQWtIO1lBQ2xIVCxTQUNFO1lBQ0ZDLFFBQVE7UUFDVjtRQUNBUyxLQUFLO1lBQ0gsa0hBQWtIO1lBQ2xIVixTQUFTO1lBQ1RDLFFBQVE7WUFDUkMsUUFBUTtnQkFDTlMsVUFBVTtnQkFDVkMsVUFBVTtnQkFDVkMsVUFBVTtZQUNaO1FBQ0Y7UUFDQUMsTUFBTTtZQUNKLGtIQUFrSDtZQUNsSGQsU0FBUztZQUNURSxRQUFRO2dCQUNOUyxVQUFVO2dCQUNWQyxVQUFVO2dCQUNWRyxRQUFRO1lBQ1Y7UUFDRjtRQUNBLGtIQUFrSDtRQUNsSEMsU0FDRTtRQUNGQyxTQUFTO1FBQ1RDLFNBQVM7UUFDVEgsUUFDRTtRQUNGSCxVQUNFO1FBQ0ZMLGFBQWE7UUFDYixnRUFBZ0U7UUFDaEUsY0FBYztJQUNoQjtJQUNBWCxNQUFNQyxTQUFTLENBQUNKLEtBQUssQ0FBQ00sTUFBTSxDQUFDRyxNQUFNLENBQUNDLGFBQWEsQ0FBQ0QsTUFBTSxDQUFDRSxVQUFVLENBQUNGLE1BQU0sR0FDeEVOLE1BQU1DLFNBQVMsQ0FBQ0osS0FBSztBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9kaGFsbC5qcz81ZjUzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGRoYWxsXG5kaGFsbC5kaXNwbGF5TmFtZSA9ICdkaGFsbCdcbmRoYWxsLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gZGhhbGwoUHJpc20pIHtcbiAgLy8gQUJORiBncmFtbWFyOlxuICAvLyBodHRwczovL2dpdGh1Yi5jb20vZGhhbGwtbGFuZy9kaGFsbC1sYW5nL2Jsb2IvbWFzdGVyL3N0YW5kYXJkL2RoYWxsLmFibmZcbiAgUHJpc20ubGFuZ3VhZ2VzLmRoYWxsID0ge1xuICAgIC8vIE11bHRpLWxpbmUgY29tbWVudHMgY2FuIGJlIG5lc3RlZC4gRS5nLiB7LSBmb28gey0gYmFyIC19IC19XG4gICAgLy8gVGhlIG11bHRpLWxpbmUgcGF0dGVybiBpcyBlc3NlbnRpYWxseSB0aGlzOlxuICAgIC8vICAgXFx7LSg/OlteLXtdfC0oPyFcXH0pfFxceyg/IS0pfDxTRUxGPikqLVxcfVxuICAgIGNvbW1lbnQ6XG4gICAgICAvLS0uKnxcXHstKD86W14te118LSg/IVxcfSl8XFx7KD8hLSl8XFx7LSg/OlteLXtdfC0oPyFcXH0pfFxceyg/IS0pKSotXFx9KSotXFx9LyxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIig/OlteXCJcXFxcXXxcXFxcLikqXCJ8JycoPzpbXiddfCcoPyEnKXwnJyd8JydcXCRcXHspKicnKD8hJ3xcXCQpLyxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBpbnRlcnBvbGF0aW9uOiB7XG4gICAgICAgICAgcGF0dGVybjogL1xcJFxce1tee31dKlxcfS8sXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICBleHByZXNzaW9uOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC8oXlxcJFxceylbXFxzXFxTXSsoPz1cXH0kKS8sXG4gICAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICAgIGFsaWFzOiAnbGFuZ3VhZ2UtZGhhbGwnLFxuICAgICAgICAgICAgICBpbnNpZGU6IG51bGwgLy8gc2VlIGJsb3dcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwdW5jdHVhdGlvbjogL1xcJFxce3xcXH0vXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBsYWJlbDoge1xuICAgICAgcGF0dGVybjogL2BbXmBdKmAvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICB1cmw6IHtcbiAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9kaGFsbC1sYW5nL2RoYWxsLWxhbmcvYmxvYi81ZmRlOGVmMWJlYWQ2ZmI0ZTk5OWQzYzFmZmU3MDQ0Y2QwMTlkNjNhL3N0YW5kYXJkL2RoYWxsLmFibmYjTDU5NlxuICAgICAgcGF0dGVybjpcbiAgICAgICAgL1xcYmh0dHBzPzpcXC9cXC9bXFx3LjolISQmJyorOz1Afi1dKyg/OlxcL1tcXHcuOiUhJCYnKis7PUB+LV0qKSooPzpcXD9bLz9cXHcuOiUhJCYnKis7PUB+LV0qKT8vLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBlbnY6IHtcbiAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9kaGFsbC1sYW5nL2RoYWxsLWxhbmcvYmxvYi81ZmRlOGVmMWJlYWQ2ZmI0ZTk5OWQzYzFmZmU3MDQ0Y2QwMTlkNjNhL3N0YW5kYXJkL2RoYWxsLmFibmYjTDY2MVxuICAgICAgcGF0dGVybjogL1xcYmVudjooPzooPyFcXGQpXFx3K3xcIig/OlteXCJcXFxcPV18XFxcXC4pKlwiKS8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgZnVuY3Rpb246IC9eZW52LyxcbiAgICAgICAgb3BlcmF0b3I6IC9eOi8sXG4gICAgICAgIHZhcmlhYmxlOiAvW1xcc1xcU10rL1xuICAgICAgfVxuICAgIH0sXG4gICAgaGFzaDoge1xuICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2RoYWxsLWxhbmcvZGhhbGwtbGFuZy9ibG9iLzVmZGU4ZWYxYmVhZDZmYjRlOTk5ZDNjMWZmZTcwNDRjZDAxOWQ2M2Evc3RhbmRhcmQvZGhhbGwuYWJuZiNMNzI1XG4gICAgICBwYXR0ZXJuOiAvXFxic2hhMjU2OltcXGRhLWZBLUZdezY0fVxcYi8sXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgZnVuY3Rpb246IC9zaGEyNTYvLFxuICAgICAgICBvcGVyYXRvcjogLzovLFxuICAgICAgICBudW1iZXI6IC9bXFxkYS1mQS1GXXs2NH0vXG4gICAgICB9XG4gICAgfSxcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vZGhhbGwtbGFuZy9kaGFsbC1sYW5nL2Jsb2IvNWZkZThlZjFiZWFkNmZiNGU5OTlkM2MxZmZlNzA0NGNkMDE5ZDYzYS9zdGFuZGFyZC9kaGFsbC5hYm5mI0wzNTlcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OmFzfGFzc2VydHxlbHNlfGZvcmFsbHxpZnxpbnxsZXR8bWVyZ2V8bWlzc2luZ3x0aGVufHRvTWFwfHVzaW5nfHdpdGgpXFxifFxcdTIyMDAvLFxuICAgIGJ1aWx0aW46IC9cXGIoPzpOb25lfFNvbWUpXFxiLyxcbiAgICBib29sZWFuOiAvXFxiKD86RmFsc2V8VHJ1ZSlcXGIvLFxuICAgIG51bWJlcjpcbiAgICAgIC9cXGJOYU5cXGJ8LT9cXGJJbmZpbml0eVxcYnxbKy1dP1xcYig/OjB4W1xcZGEtZkEtRl0rfFxcZCsoPzpcXC5cXGQrKT8oPzplWystXT9cXGQrKT8pXFxiLyxcbiAgICBvcGVyYXRvcjpcbiAgICAgIC9cXC9cXFxcfFxcL1xcL1xcXFxcXFxcfCYmfFxcfFxcfHw9PT18WyE9XT18XFwvXFwvfC0+fFxcK1xcK3w6OnxbKyojQD06Pzw+fFxcXFxcXHUyMjI3XFx1MmE1M1xcdTIyNjFcXHUyYWZkXFx1MDNiYlxcdTIxOTJdLyxcbiAgICBwdW5jdHVhdGlvbjogL1xcLlxcLnxbe31cXFtcXF0oKSwuL10vLFxuICAgIC8vIHdlJ2xsIGp1c3QgYXNzdW1lIHRoYXQgZXZlcnkgY2FwaXRhbCB3b3JkIGxlZnQgaXMgYSB0eXBlIG5hbWVcbiAgICAnY2xhc3MtbmFtZSc6IC9cXGJbQS1aXVxcdypcXGIvXG4gIH1cbiAgUHJpc20ubGFuZ3VhZ2VzLmRoYWxsLnN0cmluZy5pbnNpZGUuaW50ZXJwb2xhdGlvbi5pbnNpZGUuZXhwcmVzc2lvbi5pbnNpZGUgPVxuICAgIFByaXNtLmxhbmd1YWdlcy5kaGFsbFxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJkaGFsbCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJpbnNpZGUiLCJpbnRlcnBvbGF0aW9uIiwiZXhwcmVzc2lvbiIsImxvb2tiZWhpbmQiLCJhbGlhcyIsInB1bmN0dWF0aW9uIiwibGFiZWwiLCJ1cmwiLCJlbnYiLCJmdW5jdGlvbiIsIm9wZXJhdG9yIiwidmFyaWFibGUiLCJoYXNoIiwibnVtYmVyIiwia2V5d29yZCIsImJ1aWx0aW4iLCJib29sZWFuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/dhall.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/diff.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/diff.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = diff;\ndiff.displayName = \"diff\";\ndiff.aliases = [];\nfunction diff(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.diff = {\n            coord: [\n                // Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n                /^(?:\\*{3}|-{3}|\\+{3}).*$/m,\n                /^@@.*@@$/m,\n                /^\\d.*$/m\n            ] // deleted, inserted, unchanged, diff\n        };\n        /**\n     * A map from the name of a block to its line prefix.\n     *\n     * @type {Object<string, string>}\n     */ var PREFIXES = {\n            \"deleted-sign\": \"-\",\n            \"deleted-arrow\": \"<\",\n            \"inserted-sign\": \"+\",\n            \"inserted-arrow\": \">\",\n            unchanged: \" \",\n            diff: \"!\"\n        } // add a token for each prefix\n        ;\n        Object.keys(PREFIXES).forEach(function(name) {\n            var prefix = PREFIXES[name];\n            var alias = [];\n            if (!/^\\w+$/.test(name)) {\n                // \"deleted-sign\" -> \"deleted\"\n                alias.push(/\\w+/.exec(name)[0]);\n            }\n            if (name === \"diff\") {\n                alias.push(\"bold\");\n            }\n            Prism.languages.diff[name] = {\n                pattern: RegExp(\"^(?:[\" + prefix + \"].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+\", \"m\"),\n                alias: alias,\n                inside: {\n                    line: {\n                        pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n                        lookbehind: true\n                    },\n                    prefix: {\n                        pattern: /[\\s\\S]/,\n                        alias: /\\w+/.exec(name)[0]\n                    }\n                }\n            };\n        }) // make prefixes available to Diff plugin\n        ;\n        Object.defineProperty(Prism.languages.diff, \"PREFIXES\", {\n            value: PREFIXES\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZGlmZi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7O0lBQ2YsVUFBVUEsS0FBSztRQUNmQSxNQUFNQyxTQUFTLENBQUNKLElBQUksR0FBRztZQUNyQkssT0FBTztnQkFDTCxzRUFBc0U7Z0JBQ3RFO2dCQUNBO2dCQUNBO2FBQ0QsQ0FBQyxxQ0FBcUM7UUFDekM7UUFDQTs7OztLQUlDLEdBQ0QsSUFBSUMsV0FBVztZQUNiLGdCQUFnQjtZQUNoQixpQkFBaUI7WUFDakIsaUJBQWlCO1lBQ2pCLGtCQUFrQjtZQUNsQkMsV0FBVztZQUNYUCxNQUFNO1FBQ1IsRUFBRSw4QkFBOEI7O1FBQ2hDUSxPQUFPQyxJQUFJLENBQUNILFVBQVVJLE9BQU8sQ0FBQyxTQUFVQyxJQUFJO1lBQzFDLElBQUlDLFNBQVNOLFFBQVEsQ0FBQ0ssS0FBSztZQUMzQixJQUFJRSxRQUFRLEVBQUU7WUFDZCxJQUFJLENBQUMsUUFBUUMsSUFBSSxDQUFDSCxPQUFPO2dCQUN2Qiw4QkFBOEI7Z0JBQzlCRSxNQUFNRSxJQUFJLENBQUMsTUFBTUMsSUFBSSxDQUFDTCxLQUFLLENBQUMsRUFBRTtZQUNoQztZQUNBLElBQUlBLFNBQVMsUUFBUTtnQkFDbkJFLE1BQU1FLElBQUksQ0FBQztZQUNiO1lBQ0FaLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxDQUFDVyxLQUFLLEdBQUc7Z0JBQzNCTSxTQUFTQyxPQUNQLFVBQVVOLFNBQVMsa0NBQ25CO2dCQUVGQyxPQUFPQTtnQkFDUE0sUUFBUTtvQkFDTkMsTUFBTTt3QkFDSkgsU0FBUzt3QkFDVEksWUFBWTtvQkFDZDtvQkFDQVQsUUFBUTt3QkFDTkssU0FBUzt3QkFDVEosT0FBTyxNQUFNRyxJQUFJLENBQUNMLEtBQUssQ0FBQyxFQUFFO29CQUM1QjtnQkFDRjtZQUNGO1FBQ0YsR0FBRyx5Q0FBeUM7O1FBQzVDSCxPQUFPYyxjQUFjLENBQUNuQixNQUFNQyxTQUFTLENBQUNKLElBQUksRUFBRSxZQUFZO1lBQ3REdUIsT0FBT2pCO1FBQ1Q7SUFDRixHQUFHSDtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2RpZmYuanM/NzFmMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBkaWZmXG5kaWZmLmRpc3BsYXlOYW1lID0gJ2RpZmYnXG5kaWZmLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gZGlmZihQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIFByaXNtLmxhbmd1YWdlcy5kaWZmID0ge1xuICAgICAgY29vcmQ6IFtcbiAgICAgICAgLy8gTWF0Y2ggYWxsIGtpbmRzIG9mIGNvb3JkIGxpbmVzIChwcmVmaXhlZCBieSBcIisrK1wiLCBcIi0tLVwiIG9yIFwiKioqXCIpLlxuICAgICAgICAvXig/OlxcKnszfXwtezN9fFxcK3szfSkuKiQvbSwgLy8gTWF0Y2ggXCJAQCAuLi4gQEBcIiBjb29yZCBsaW5lcyBpbiB1bmlmaWVkIGRpZmYuXG4gICAgICAgIC9eQEAuKkBAJC9tLCAvLyBNYXRjaCBjb29yZCBsaW5lcyBpbiBub3JtYWwgZGlmZiAoc3RhcnRzIHdpdGggYSBudW1iZXIpLlxuICAgICAgICAvXlxcZC4qJC9tXG4gICAgICBdIC8vIGRlbGV0ZWQsIGluc2VydGVkLCB1bmNoYW5nZWQsIGRpZmZcbiAgICB9XG4gICAgLyoqXG4gICAgICogQSBtYXAgZnJvbSB0aGUgbmFtZSBvZiBhIGJsb2NrIHRvIGl0cyBsaW5lIHByZWZpeC5cbiAgICAgKlxuICAgICAqIEB0eXBlIHtPYmplY3Q8c3RyaW5nLCBzdHJpbmc+fVxuICAgICAqL1xuICAgIHZhciBQUkVGSVhFUyA9IHtcbiAgICAgICdkZWxldGVkLXNpZ24nOiAnLScsXG4gICAgICAnZGVsZXRlZC1hcnJvdyc6ICc8JyxcbiAgICAgICdpbnNlcnRlZC1zaWduJzogJysnLFxuICAgICAgJ2luc2VydGVkLWFycm93JzogJz4nLFxuICAgICAgdW5jaGFuZ2VkOiAnICcsXG4gICAgICBkaWZmOiAnISdcbiAgICB9IC8vIGFkZCBhIHRva2VuIGZvciBlYWNoIHByZWZpeFxuICAgIE9iamVjdC5rZXlzKFBSRUZJWEVTKS5mb3JFYWNoKGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICB2YXIgcHJlZml4ID0gUFJFRklYRVNbbmFtZV1cbiAgICAgIHZhciBhbGlhcyA9IFtdXG4gICAgICBpZiAoIS9eXFx3KyQvLnRlc3QobmFtZSkpIHtcbiAgICAgICAgLy8gXCJkZWxldGVkLXNpZ25cIiAtPiBcImRlbGV0ZWRcIlxuICAgICAgICBhbGlhcy5wdXNoKC9cXHcrLy5leGVjKG5hbWUpWzBdKVxuICAgICAgfVxuICAgICAgaWYgKG5hbWUgPT09ICdkaWZmJykge1xuICAgICAgICBhbGlhcy5wdXNoKCdib2xkJylcbiAgICAgIH1cbiAgICAgIFByaXNtLmxhbmd1YWdlcy5kaWZmW25hbWVdID0ge1xuICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoXG4gICAgICAgICAgJ14oPzpbJyArIHByZWZpeCArICddLiooPzpcXHJcXG4/fFxcbnwoPyFbXFxcXHNcXFxcU10pKSkrJyxcbiAgICAgICAgICAnbSdcbiAgICAgICAgKSxcbiAgICAgICAgYWxpYXM6IGFsaWFzLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBsaW5lOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvKC4pKD89W1xcc1xcU10pLiooPzpcXHJcXG4/fFxcbik/LyxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgICB9LFxuICAgICAgICAgIHByZWZpeDoge1xuICAgICAgICAgICAgcGF0dGVybjogL1tcXHNcXFNdLyxcbiAgICAgICAgICAgIGFsaWFzOiAvXFx3Ky8uZXhlYyhuYW1lKVswXVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pIC8vIG1ha2UgcHJlZml4ZXMgYXZhaWxhYmxlIHRvIERpZmYgcGx1Z2luXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFByaXNtLmxhbmd1YWdlcy5kaWZmLCAnUFJFRklYRVMnLCB7XG4gICAgICB2YWx1ZTogUFJFRklYRVNcbiAgICB9KVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiZGlmZiIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29vcmQiLCJQUkVGSVhFUyIsInVuY2hhbmdlZCIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIiwibmFtZSIsInByZWZpeCIsImFsaWFzIiwidGVzdCIsInB1c2giLCJleGVjIiwicGF0dGVybiIsIlJlZ0V4cCIsImluc2lkZSIsImxpbmUiLCJsb29rYmVoaW5kIiwiZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/diff.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/django.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/django.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorMarkupTemplating = __webpack_require__(/*! ./markup-templating.js */ \"(ssr)/./node_modules/refractor/lang/markup-templating.js\");\nmodule.exports = django;\ndjango.displayName = \"django\";\ndjango.aliases = [\n    \"jinja2\"\n];\nfunction django(Prism) {\n    Prism.register(refractorMarkupTemplating);\n    (function(Prism) {\n        Prism.languages.django = {\n            comment: /^\\{#[\\s\\S]*?#\\}$/,\n            tag: {\n                pattern: /(^\\{%[+-]?\\s*)\\w+/,\n                lookbehind: true,\n                alias: \"keyword\"\n            },\n            delimiter: {\n                pattern: /^\\{[{%][+-]?|[+-]?[}%]\\}$/,\n                alias: \"punctuation\"\n            },\n            string: {\n                pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n                greedy: true\n            },\n            filter: {\n                pattern: /(\\|)\\w+/,\n                lookbehind: true,\n                alias: \"function\"\n            },\n            test: {\n                pattern: /(\\bis\\s+(?:not\\s+)?)(?!not\\b)\\w+/,\n                lookbehind: true,\n                alias: \"function\"\n            },\n            function: /\\b[a-z_]\\w+(?=\\s*\\()/i,\n            keyword: /\\b(?:and|as|by|else|for|if|import|in|is|loop|not|or|recursive|with|without)\\b/,\n            operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n            number: /\\b\\d+(?:\\.\\d+)?\\b/,\n            boolean: /[Ff]alse|[Nn]one|[Tt]rue/,\n            variable: /\\b\\w+\\b/,\n            punctuation: /[{}[\\](),.:;]/\n        };\n        var pattern = /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}|\\{#[\\s\\S]*?#\\}/g;\n        var markupTemplating = Prism.languages[\"markup-templating\"];\n        Prism.hooks.add(\"before-tokenize\", function(env) {\n            markupTemplating.buildPlaceholders(env, \"django\", pattern);\n        });\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            markupTemplating.tokenizePlaceholders(env, \"django\");\n        }) // Add an Jinja2 alias\n        ;\n        Prism.languages.jinja2 = Prism.languages.django;\n        Prism.hooks.add(\"before-tokenize\", function(env) {\n            markupTemplating.buildPlaceholders(env, \"jinja2\", pattern);\n        });\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            markupTemplating.tokenizePlaceholders(env, \"jinja2\");\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZGphbmdvLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsSUFBSUEsNEJBQTRCQyxtQkFBT0EsQ0FBQztBQUN4Q0MsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUc7SUFBQztDQUFTO0FBQzNCLFNBQVNGLE9BQU9HLEtBQUs7SUFDbkJBLE1BQU1DLFFBQVEsQ0FBQ1I7SUFHYixVQUFVTyxLQUFLO1FBQ2ZBLE1BQU1FLFNBQVMsQ0FBQ0wsTUFBTSxHQUFHO1lBQ3ZCTSxTQUFTO1lBQ1RDLEtBQUs7Z0JBQ0hDLFNBQVM7Z0JBQ1RDLFlBQVk7Z0JBQ1pDLE9BQU87WUFDVDtZQUNBQyxXQUFXO2dCQUNUSCxTQUFTO2dCQUNURSxPQUFPO1lBQ1Q7WUFDQUUsUUFBUTtnQkFDTkosU0FBUztnQkFDVEssUUFBUTtZQUNWO1lBQ0FDLFFBQVE7Z0JBQ05OLFNBQVM7Z0JBQ1RDLFlBQVk7Z0JBQ1pDLE9BQU87WUFDVDtZQUNBSyxNQUFNO2dCQUNKUCxTQUFTO2dCQUNUQyxZQUFZO2dCQUNaQyxPQUFPO1lBQ1Q7WUFDQU0sVUFBVTtZQUNWQyxTQUNFO1lBQ0ZDLFVBQVU7WUFDVkMsUUFBUTtZQUNSQyxTQUFTO1lBQ1RDLFVBQVU7WUFDVkMsYUFBYTtRQUNmO1FBQ0EsSUFBSWQsVUFBVTtRQUNkLElBQUllLG1CQUFtQnBCLE1BQU1FLFNBQVMsQ0FBQyxvQkFBb0I7UUFDM0RGLE1BQU1xQixLQUFLLENBQUNDLEdBQUcsQ0FBQyxtQkFBbUIsU0FBVUMsR0FBRztZQUM5Q0gsaUJBQWlCSSxpQkFBaUIsQ0FBQ0QsS0FBSyxVQUFVbEI7UUFDcEQ7UUFDQUwsTUFBTXFCLEtBQUssQ0FBQ0MsR0FBRyxDQUFDLGtCQUFrQixTQUFVQyxHQUFHO1lBQzdDSCxpQkFBaUJLLG9CQUFvQixDQUFDRixLQUFLO1FBQzdDLEdBQUcsc0JBQXNCOztRQUN6QnZCLE1BQU1FLFNBQVMsQ0FBQ3dCLE1BQU0sR0FBRzFCLE1BQU1FLFNBQVMsQ0FBQ0wsTUFBTTtRQUMvQ0csTUFBTXFCLEtBQUssQ0FBQ0MsR0FBRyxDQUFDLG1CQUFtQixTQUFVQyxHQUFHO1lBQzlDSCxpQkFBaUJJLGlCQUFpQixDQUFDRCxLQUFLLFVBQVVsQjtRQUNwRDtRQUNBTCxNQUFNcUIsS0FBSyxDQUFDQyxHQUFHLENBQUMsa0JBQWtCLFNBQVVDLEdBQUc7WUFDN0NILGlCQUFpQkssb0JBQW9CLENBQUNGLEtBQUs7UUFDN0M7SUFDRixHQUFHdkI7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9kamFuZ28uanM/Njg1OSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcbnZhciByZWZyYWN0b3JNYXJrdXBUZW1wbGF0aW5nID0gcmVxdWlyZSgnLi9tYXJrdXAtdGVtcGxhdGluZy5qcycpXG5tb2R1bGUuZXhwb3J0cyA9IGRqYW5nb1xuZGphbmdvLmRpc3BsYXlOYW1lID0gJ2RqYW5nbydcbmRqYW5nby5hbGlhc2VzID0gWydqaW5qYTInXVxuZnVuY3Rpb24gZGphbmdvKFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3Rvck1hcmt1cFRlbXBsYXRpbmcpXG4gIC8vIERqYW5nby9KaW5qYTIgc3ludGF4IGRlZmluaXRpb24gZm9yIFByaXNtLmpzIDxodHRwOi8vcHJpc21qcy5jb20+IHN5bnRheCBoaWdobGlnaHRlci5cbiAgLy8gTW9zdGx5IGl0IHdvcmtzIE9LIGJ1dCBjYW4gcGFpbnQgY29kZSBpbmNvcnJlY3RseSBvbiBjb21wbGV4IGh0bWwvdGVtcGxhdGUgdGFnIGNvbWJpbmF0aW9ucy5cbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICBQcmlzbS5sYW5ndWFnZXMuZGphbmdvID0ge1xuICAgICAgY29tbWVudDogL15cXHsjW1xcc1xcU10qPyNcXH0kLyxcbiAgICAgIHRhZzoge1xuICAgICAgICBwYXR0ZXJuOiAvKF5cXHslWystXT9cXHMqKVxcdysvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgICB9LFxuICAgICAgZGVsaW1pdGVyOiB7XG4gICAgICAgIHBhdHRlcm46IC9eXFx7W3slXVsrLV0/fFsrLV0/W30lXVxcfSQvLFxuICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgfSxcbiAgICAgIHN0cmluZzoge1xuICAgICAgICBwYXR0ZXJuOiAvKFwifCcpKD86XFxcXC58KD8hXFwxKVteXFxcXFxcclxcbl0pKlxcMS8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGZpbHRlcjoge1xuICAgICAgICBwYXR0ZXJuOiAvKFxcfClcXHcrLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdmdW5jdGlvbidcbiAgICAgIH0sXG4gICAgICB0ZXN0OiB7XG4gICAgICAgIHBhdHRlcm46IC8oXFxiaXNcXHMrKD86bm90XFxzKyk/KSg/IW5vdFxcYilcXHcrLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdmdW5jdGlvbidcbiAgICAgIH0sXG4gICAgICBmdW5jdGlvbjogL1xcYlthLXpfXVxcdysoPz1cXHMqXFwoKS9pLFxuICAgICAga2V5d29yZDpcbiAgICAgICAgL1xcYig/OmFuZHxhc3xieXxlbHNlfGZvcnxpZnxpbXBvcnR8aW58aXN8bG9vcHxub3R8b3J8cmVjdXJzaXZlfHdpdGh8d2l0aG91dClcXGIvLFxuICAgICAgb3BlcmF0b3I6IC9bLSslPV09P3whPXxcXCpcXCo/PT98XFwvXFwvPz0/fDxbPD0+XT98Pls9Pl0/fFsmfF5+XS8sXG4gICAgICBudW1iZXI6IC9cXGJcXGQrKD86XFwuXFxkKyk/XFxiLyxcbiAgICAgIGJvb2xlYW46IC9bRmZdYWxzZXxbTm5db25lfFtUdF1ydWUvLFxuICAgICAgdmFyaWFibGU6IC9cXGJcXHcrXFxiLyxcbiAgICAgIHB1bmN0dWF0aW9uOiAvW3t9W1xcXSgpLC46O10vXG4gICAgfVxuICAgIHZhciBwYXR0ZXJuID0gL1xce1xce1tcXHNcXFNdKj9cXH1cXH18XFx7JVtcXHNcXFNdKj8lXFx9fFxceyNbXFxzXFxTXSo/I1xcfS9nXG4gICAgdmFyIG1hcmt1cFRlbXBsYXRpbmcgPSBQcmlzbS5sYW5ndWFnZXNbJ21hcmt1cC10ZW1wbGF0aW5nJ11cbiAgICBQcmlzbS5ob29rcy5hZGQoJ2JlZm9yZS10b2tlbml6ZScsIGZ1bmN0aW9uIChlbnYpIHtcbiAgICAgIG1hcmt1cFRlbXBsYXRpbmcuYnVpbGRQbGFjZWhvbGRlcnMoZW52LCAnZGphbmdvJywgcGF0dGVybilcbiAgICB9KVxuICAgIFByaXNtLmhvb2tzLmFkZCgnYWZ0ZXItdG9rZW5pemUnLCBmdW5jdGlvbiAoZW52KSB7XG4gICAgICBtYXJrdXBUZW1wbGF0aW5nLnRva2VuaXplUGxhY2Vob2xkZXJzKGVudiwgJ2RqYW5nbycpXG4gICAgfSkgLy8gQWRkIGFuIEppbmphMiBhbGlhc1xuICAgIFByaXNtLmxhbmd1YWdlcy5qaW5qYTIgPSBQcmlzbS5sYW5ndWFnZXMuZGphbmdvXG4gICAgUHJpc20uaG9va3MuYWRkKCdiZWZvcmUtdG9rZW5pemUnLCBmdW5jdGlvbiAoZW52KSB7XG4gICAgICBtYXJrdXBUZW1wbGF0aW5nLmJ1aWxkUGxhY2Vob2xkZXJzKGVudiwgJ2ppbmphMicsIHBhdHRlcm4pXG4gICAgfSlcbiAgICBQcmlzbS5ob29rcy5hZGQoJ2FmdGVyLXRva2VuaXplJywgZnVuY3Rpb24gKGVudikge1xuICAgICAgbWFya3VwVGVtcGxhdGluZy50b2tlbml6ZVBsYWNlaG9sZGVycyhlbnYsICdqaW5qYTInKVxuICAgIH0pXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3Rvck1hcmt1cFRlbXBsYXRpbmciLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImRqYW5nbyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJjb21tZW50IiwidGFnIiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJhbGlhcyIsImRlbGltaXRlciIsInN0cmluZyIsImdyZWVkeSIsImZpbHRlciIsInRlc3QiLCJmdW5jdGlvbiIsImtleXdvcmQiLCJvcGVyYXRvciIsIm51bWJlciIsImJvb2xlYW4iLCJ2YXJpYWJsZSIsInB1bmN0dWF0aW9uIiwibWFya3VwVGVtcGxhdGluZyIsImhvb2tzIiwiYWRkIiwiZW52IiwiYnVpbGRQbGFjZWhvbGRlcnMiLCJ0b2tlbml6ZVBsYWNlaG9sZGVycyIsImppbmphMiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/django.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/dns-zone-file.js":
/*!******************************************************!*\
  !*** ./node_modules/refractor/lang/dns-zone-file.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = dnsZoneFile;\ndnsZoneFile.displayName = \"dnsZoneFile\";\ndnsZoneFile.aliases = [];\nfunction dnsZoneFile(Prism) {\n    Prism.languages[\"dns-zone-file\"] = {\n        comment: /;.*/,\n        string: {\n            pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n            greedy: true\n        },\n        variable: [\n            {\n                pattern: /(^\\$ORIGIN[ \\t]+)\\S+/m,\n                lookbehind: true\n            },\n            {\n                pattern: /(^|\\s)@(?=\\s|$)/,\n                lookbehind: true\n            }\n        ],\n        keyword: /^\\$(?:INCLUDE|ORIGIN|TTL)(?=\\s|$)/m,\n        class: {\n            // https://tools.ietf.org/html/rfc1035#page-13\n            pattern: /(^|\\s)(?:CH|CS|HS|IN)(?=\\s|$)/,\n            lookbehind: true,\n            alias: \"keyword\"\n        },\n        type: {\n            // https://en.wikipedia.org/wiki/List_of_DNS_record_types\n            pattern: /(^|\\s)(?:A|A6|AAAA|AFSDB|APL|ATMA|CAA|CDNSKEY|CDS|CERT|CNAME|DHCID|DLV|DNAME|DNSKEY|DS|EID|GID|GPOS|HINFO|HIP|IPSECKEY|ISDN|KEY|KX|LOC|MAILA|MAILB|MB|MD|MF|MG|MINFO|MR|MX|NAPTR|NB|NBSTAT|NIMLOC|NINFO|NS|NSAP|NSAP-PTR|NSEC|NSEC3|NSEC3PARAM|NULL|NXT|OPENPGPKEY|PTR|PX|RKEY|RP|RRSIG|RT|SIG|SINK|SMIMEA|SOA|SPF|SRV|SSHFP|TA|TKEY|TLSA|TSIG|TXT|UID|UINFO|UNSPEC|URI|WKS|X25)(?=\\s|$)/,\n            lookbehind: true,\n            alias: \"keyword\"\n        },\n        punctuation: /[()]/\n    };\n    Prism.languages[\"dns-zone\"] = Prism.languages[\"dns-zone-file\"];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZG5zLXpvbmUtZmlsZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxZQUFZQyxXQUFXLEdBQUc7QUFDMUJELFlBQVlFLE9BQU8sR0FBRyxFQUFFO0FBQ3hCLFNBQVNGLFlBQVlHLEtBQUs7SUFDeEJBLE1BQU1DLFNBQVMsQ0FBQyxnQkFBZ0IsR0FBRztRQUNqQ0MsU0FBUztRQUNUQyxRQUFRO1lBQ05DLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FDLFVBQVU7WUFDUjtnQkFDRUYsU0FBUztnQkFDVEcsWUFBWTtZQUNkO1lBQ0E7Z0JBQ0VILFNBQVM7Z0JBQ1RHLFlBQVk7WUFDZDtTQUNEO1FBQ0RDLFNBQVM7UUFDVEMsT0FBTztZQUNMLDhDQUE4QztZQUM5Q0wsU0FBUztZQUNURyxZQUFZO1lBQ1pHLE9BQU87UUFDVDtRQUNBQyxNQUFNO1lBQ0oseURBQXlEO1lBQ3pEUCxTQUNFO1lBQ0ZHLFlBQVk7WUFDWkcsT0FBTztRQUNUO1FBQ0FFLGFBQWE7SUFDZjtJQUNBWixNQUFNQyxTQUFTLENBQUMsV0FBVyxHQUFHRCxNQUFNQyxTQUFTLENBQUMsZ0JBQWdCO0FBQ2hFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2Rucy16b25lLWZpbGUuanM/ODAwNyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBkbnNab25lRmlsZVxuZG5zWm9uZUZpbGUuZGlzcGxheU5hbWUgPSAnZG5zWm9uZUZpbGUnXG5kbnNab25lRmlsZS5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGRuc1pvbmVGaWxlKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlc1snZG5zLXpvbmUtZmlsZSddID0ge1xuICAgIGNvbW1lbnQ6IC87LiovLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1wiKD86XFxcXC58W15cIlxcXFxcXHJcXG5dKSpcIi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHZhcmlhYmxlOiBbXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC8oXlxcJE9SSUdJTlsgXFx0XSspXFxTKy9tLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvKF58XFxzKUAoPz1cXHN8JCkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9XG4gICAgXSxcbiAgICBrZXl3b3JkOiAvXlxcJCg/OklOQ0xVREV8T1JJR0lOfFRUTCkoPz1cXHN8JCkvbSxcbiAgICBjbGFzczoge1xuICAgICAgLy8gaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzEwMzUjcGFnZS0xM1xuICAgICAgcGF0dGVybjogLyhefFxccykoPzpDSHxDU3xIU3xJTikoPz1cXHN8JCkvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICB9LFxuICAgIHR5cGU6IHtcbiAgICAgIC8vIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0xpc3Rfb2ZfRE5TX3JlY29yZF90eXBlc1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhefFxccykoPzpBfEE2fEFBQUF8QUZTREJ8QVBMfEFUTUF8Q0FBfENETlNLRVl8Q0RTfENFUlR8Q05BTUV8REhDSUR8RExWfEROQU1FfEROU0tFWXxEU3xFSUR8R0lEfEdQT1N8SElORk98SElQfElQU0VDS0VZfElTRE58S0VZfEtYfExPQ3xNQUlMQXxNQUlMQnxNQnxNRHxNRnxNR3xNSU5GT3xNUnxNWHxOQVBUUnxOQnxOQlNUQVR8TklNTE9DfE5JTkZPfE5TfE5TQVB8TlNBUC1QVFJ8TlNFQ3xOU0VDM3xOU0VDM1BBUkFNfE5VTEx8TlhUfE9QRU5QR1BLRVl8UFRSfFBYfFJLRVl8UlB8UlJTSUd8UlR8U0lHfFNJTkt8U01JTUVBfFNPQXxTUEZ8U1JWfFNTSEZQfFRBfFRLRVl8VExTQXxUU0lHfFRYVHxVSUR8VUlORk98VU5TUEVDfFVSSXxXS1N8WDI1KSg/PVxcc3wkKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgIH0sXG4gICAgcHVuY3R1YXRpb246IC9bKCldL1xuICB9XG4gIFByaXNtLmxhbmd1YWdlc1snZG5zLXpvbmUnXSA9IFByaXNtLmxhbmd1YWdlc1snZG5zLXpvbmUtZmlsZSddXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImRuc1pvbmVGaWxlIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50Iiwic3RyaW5nIiwicGF0dGVybiIsImdyZWVkeSIsInZhcmlhYmxlIiwibG9va2JlaGluZCIsImtleXdvcmQiLCJjbGFzcyIsImFsaWFzIiwidHlwZSIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/dns-zone-file.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/docker.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/docker.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = docker;\ndocker.displayName = \"docker\";\ndocker.aliases = [\n    \"dockerfile\"\n];\nfunction docker(Prism) {\n    ;\n    (function(Prism) {\n        // Many of the following regexes will contain negated lookaheads like `[ \\t]+(?![ \\t])`. This is a trick to ensure\n        // that quantifiers behave *atomically*. Atomic quantifiers are necessary to prevent exponential backtracking.\n        var spaceAfterBackSlash = /\\\\[\\r\\n](?:\\s|\\\\[\\r\\n]|#.*(?!.))*(?![\\s#]|\\\\[\\r\\n])/.source // At least one space, comment, or line break\n        ;\n        var space = /(?:[ \\t]+(?![ \\t])(?:<SP_BS>)?|<SP_BS>)/.source.replace(/<SP_BS>/g, function() {\n            return spaceAfterBackSlash;\n        });\n        var string = /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"|'(?:[^'\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*'/.source;\n        var option = /--[\\w-]+=(?:<STR>|(?![\"'])(?:[^\\s\\\\]|\\\\.)+)/.source.replace(/<STR>/g, function() {\n            return string;\n        });\n        var stringRule = {\n            pattern: RegExp(string),\n            greedy: true\n        };\n        var commentRule = {\n            pattern: /(^[ \\t]*)#.*/m,\n            lookbehind: true,\n            greedy: true\n        };\n        /**\n     * @param {string} source\n     * @param {string} flags\n     * @returns {RegExp}\n     */ function re(source, flags) {\n            source = source.replace(/<OPT>/g, function() {\n                return option;\n            }).replace(/<SP>/g, function() {\n                return space;\n            });\n            return RegExp(source, flags);\n        }\n        Prism.languages.docker = {\n            instruction: {\n                pattern: /(^[ \\t]*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)(?:\\\\.|[^\\r\\n\\\\])*(?:\\\\$(?:\\s|#.*$)*(?![\\s#])(?:\\\\.|[^\\r\\n\\\\])*)*/im,\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    options: {\n                        pattern: re(/(^(?:ONBUILD<SP>)?\\w+<SP>)<OPT>(?:<SP><OPT>)*/.source, \"i\"),\n                        lookbehind: true,\n                        greedy: true,\n                        inside: {\n                            property: {\n                                pattern: /(^|\\s)--[\\w-]+/,\n                                lookbehind: true\n                            },\n                            string: [\n                                stringRule,\n                                {\n                                    pattern: /(=)(?![\"'])(?:[^\\s\\\\]|\\\\.)+/,\n                                    lookbehind: true\n                                }\n                            ],\n                            operator: /\\\\$/m,\n                            punctuation: /=/\n                        }\n                    },\n                    keyword: [\n                        {\n                            // https://docs.docker.com/engine/reference/builder/#healthcheck\n                            pattern: re(/(^(?:ONBUILD<SP>)?HEALTHCHECK<SP>(?:<OPT><SP>)*)(?:CMD|NONE)\\b/.source, \"i\"),\n                            lookbehind: true,\n                            greedy: true\n                        },\n                        {\n                            // https://docs.docker.com/engine/reference/builder/#from\n                            pattern: re(/(^(?:ONBUILD<SP>)?FROM<SP>(?:<OPT><SP>)*(?!--)[^ \\t\\\\]+<SP>)AS/.source, \"i\"),\n                            lookbehind: true,\n                            greedy: true\n                        },\n                        {\n                            // https://docs.docker.com/engine/reference/builder/#onbuild\n                            pattern: re(/(^ONBUILD<SP>)\\w+/.source, \"i\"),\n                            lookbehind: true,\n                            greedy: true\n                        },\n                        {\n                            pattern: /^\\w+/,\n                            greedy: true\n                        }\n                    ],\n                    comment: commentRule,\n                    string: stringRule,\n                    variable: /\\$(?:\\w+|\\{[^{}\"'\\\\]*\\})/,\n                    operator: /\\\\$/m\n                }\n            },\n            comment: commentRule\n        };\n        Prism.languages.dockerfile = Prism.languages.docker;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZG9ja2VyLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLE9BQU9DLFdBQVcsR0FBRztBQUNyQkQsT0FBT0UsT0FBTyxHQUFHO0lBQUM7Q0FBYTtBQUMvQixTQUFTRixPQUFPRyxLQUFLOztJQUNqQixVQUFVQSxLQUFLO1FBQ2Ysa0hBQWtIO1FBQ2xILDhHQUE4RztRQUM5RyxJQUFJQyxzQkFDRixzREFBc0RDLE1BQU0sQ0FBQyw2Q0FBNkM7O1FBQzVHLElBQUlDLFFBQVEsMENBQTBDRCxNQUFNLENBQUNFLE9BQU8sQ0FDbEUsWUFDQTtZQUNFLE9BQU9IO1FBQ1Q7UUFFRixJQUFJSSxTQUNGLDBFQUNHSCxNQUFNO1FBQ1gsSUFBSUksU0FBUyw4Q0FBOENKLE1BQU0sQ0FBQ0UsT0FBTyxDQUN2RSxVQUNBO1lBQ0UsT0FBT0M7UUFDVDtRQUVGLElBQUlFLGFBQWE7WUFDZkMsU0FBU0MsT0FBT0o7WUFDaEJLLFFBQVE7UUFDVjtRQUNBLElBQUlDLGNBQWM7WUFDaEJILFNBQVM7WUFDVEksWUFBWTtZQUNaRixRQUFRO1FBQ1Y7UUFDQTs7OztLQUlDLEdBQ0QsU0FBU0csR0FBR1gsTUFBTSxFQUFFWSxLQUFLO1lBQ3ZCWixTQUFTQSxPQUNORSxPQUFPLENBQUMsVUFBVTtnQkFDakIsT0FBT0U7WUFDVCxHQUNDRixPQUFPLENBQUMsU0FBUztnQkFDaEIsT0FBT0Q7WUFDVDtZQUNGLE9BQU9NLE9BQU9QLFFBQVFZO1FBQ3hCO1FBQ0FkLE1BQU1lLFNBQVMsQ0FBQ2xCLE1BQU0sR0FBRztZQUN2Qm1CLGFBQWE7Z0JBQ1hSLFNBQ0U7Z0JBQ0ZJLFlBQVk7Z0JBQ1pGLFFBQVE7Z0JBQ1JPLFFBQVE7b0JBQ05DLFNBQVM7d0JBQ1BWLFNBQVNLLEdBQ1AsZ0RBQWdEWCxNQUFNLEVBQ3REO3dCQUVGVSxZQUFZO3dCQUNaRixRQUFRO3dCQUNSTyxRQUFROzRCQUNORSxVQUFVO2dDQUNSWCxTQUFTO2dDQUNUSSxZQUFZOzRCQUNkOzRCQUNBUCxRQUFRO2dDQUNORTtnQ0FDQTtvQ0FDRUMsU0FBUztvQ0FDVEksWUFBWTtnQ0FDZDs2QkFDRDs0QkFDRFEsVUFBVTs0QkFDVkMsYUFBYTt3QkFDZjtvQkFDRjtvQkFDQUMsU0FBUzt3QkFDUDs0QkFDRSxnRUFBZ0U7NEJBQ2hFZCxTQUFTSyxHQUNQLGlFQUNHWCxNQUFNLEVBQ1Q7NEJBRUZVLFlBQVk7NEJBQ1pGLFFBQVE7d0JBQ1Y7d0JBQ0E7NEJBQ0UseURBQXlEOzRCQUN6REYsU0FBU0ssR0FDUCxpRUFDR1gsTUFBTSxFQUNUOzRCQUVGVSxZQUFZOzRCQUNaRixRQUFRO3dCQUNWO3dCQUNBOzRCQUNFLDREQUE0RDs0QkFDNURGLFNBQVNLLEdBQUcsb0JBQW9CWCxNQUFNLEVBQUU7NEJBQ3hDVSxZQUFZOzRCQUNaRixRQUFRO3dCQUNWO3dCQUNBOzRCQUNFRixTQUFTOzRCQUNURSxRQUFRO3dCQUNWO3FCQUNEO29CQUNEYSxTQUFTWjtvQkFDVE4sUUFBUUU7b0JBQ1JpQixVQUFVO29CQUNWSixVQUFVO2dCQUNaO1lBQ0Y7WUFDQUcsU0FBU1o7UUFDWDtRQUNBWCxNQUFNZSxTQUFTLENBQUNVLFVBQVUsR0FBR3pCLE1BQU1lLFNBQVMsQ0FBQ2xCLE1BQU07SUFDckQsR0FBR0c7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9kb2NrZXIuanM/NDI0MyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBkb2NrZXJcbmRvY2tlci5kaXNwbGF5TmFtZSA9ICdkb2NrZXInXG5kb2NrZXIuYWxpYXNlcyA9IFsnZG9ja2VyZmlsZSddXG5mdW5jdGlvbiBkb2NrZXIoUHJpc20pIHtcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICAvLyBNYW55IG9mIHRoZSBmb2xsb3dpbmcgcmVnZXhlcyB3aWxsIGNvbnRhaW4gbmVnYXRlZCBsb29rYWhlYWRzIGxpa2UgYFsgXFx0XSsoPyFbIFxcdF0pYC4gVGhpcyBpcyBhIHRyaWNrIHRvIGVuc3VyZVxuICAgIC8vIHRoYXQgcXVhbnRpZmllcnMgYmVoYXZlICphdG9taWNhbGx5Ki4gQXRvbWljIHF1YW50aWZpZXJzIGFyZSBuZWNlc3NhcnkgdG8gcHJldmVudCBleHBvbmVudGlhbCBiYWNrdHJhY2tpbmcuXG4gICAgdmFyIHNwYWNlQWZ0ZXJCYWNrU2xhc2ggPVxuICAgICAgL1xcXFxbXFxyXFxuXSg/Olxcc3xcXFxcW1xcclxcbl18Iy4qKD8hLikpKig/IVtcXHMjXXxcXFxcW1xcclxcbl0pLy5zb3VyY2UgLy8gQXQgbGVhc3Qgb25lIHNwYWNlLCBjb21tZW50LCBvciBsaW5lIGJyZWFrXG4gICAgdmFyIHNwYWNlID0gLyg/OlsgXFx0XSsoPyFbIFxcdF0pKD86PFNQX0JTPik/fDxTUF9CUz4pLy5zb3VyY2UucmVwbGFjZShcbiAgICAgIC88U1BfQlM+L2csXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBzcGFjZUFmdGVyQmFja1NsYXNoXG4gICAgICB9XG4gICAgKVxuICAgIHZhciBzdHJpbmcgPVxuICAgICAgL1wiKD86W15cIlxcXFxcXHJcXG5dfFxcXFwoPzpcXHJcXG58W1xcc1xcU10pKSpcInwnKD86W14nXFxcXFxcclxcbl18XFxcXCg/OlxcclxcbnxbXFxzXFxTXSkpKicvXG4gICAgICAgIC5zb3VyY2VcbiAgICB2YXIgb3B0aW9uID0gLy0tW1xcdy1dKz0oPzo8U1RSPnwoPyFbXCInXSkoPzpbXlxcc1xcXFxdfFxcXFwuKSspLy5zb3VyY2UucmVwbGFjZShcbiAgICAgIC88U1RSPi9nLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gc3RyaW5nXG4gICAgICB9XG4gICAgKVxuICAgIHZhciBzdHJpbmdSdWxlID0ge1xuICAgICAgcGF0dGVybjogUmVnRXhwKHN0cmluZyksXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9XG4gICAgdmFyIGNvbW1lbnRSdWxlID0ge1xuICAgICAgcGF0dGVybjogLyheWyBcXHRdKikjLiovbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9XG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHNvdXJjZVxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBmbGFnc1xuICAgICAqIEByZXR1cm5zIHtSZWdFeHB9XG4gICAgICovXG4gICAgZnVuY3Rpb24gcmUoc291cmNlLCBmbGFncykge1xuICAgICAgc291cmNlID0gc291cmNlXG4gICAgICAgIC5yZXBsYWNlKC88T1BUPi9nLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIG9wdGlvblxuICAgICAgICB9KVxuICAgICAgICAucmVwbGFjZSgvPFNQPi9nLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIHNwYWNlXG4gICAgICAgIH0pXG4gICAgICByZXR1cm4gUmVnRXhwKHNvdXJjZSwgZmxhZ3MpXG4gICAgfVxuICAgIFByaXNtLmxhbmd1YWdlcy5kb2NrZXIgPSB7XG4gICAgICBpbnN0cnVjdGlvbjoge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXlsgXFx0XSopKD86QUREfEFSR3xDTUR8Q09QWXxFTlRSWVBPSU5UfEVOVnxFWFBPU0V8RlJPTXxIRUFMVEhDSEVDS3xMQUJFTHxNQUlOVEFJTkVSfE9OQlVJTER8UlVOfFNIRUxMfFNUT1BTSUdOQUx8VVNFUnxWT0xVTUV8V09SS0RJUikoPz1cXHMpKD86XFxcXC58W15cXHJcXG5cXFxcXSkqKD86XFxcXCQoPzpcXHN8Iy4qJCkqKD8hW1xccyNdKSg/OlxcXFwufFteXFxyXFxuXFxcXF0pKikqL2ltLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IHJlKFxuICAgICAgICAgICAgICAvKF4oPzpPTkJVSUxEPFNQPik/XFx3KzxTUD4pPE9QVD4oPzo8U1A+PE9QVD4pKi8uc291cmNlLFxuICAgICAgICAgICAgICAnaSdcbiAgICAgICAgICAgICksXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICAgIHByb3BlcnR5OiB7XG4gICAgICAgICAgICAgICAgcGF0dGVybjogLyhefFxccyktLVtcXHctXSsvLFxuICAgICAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgc3RyaW5nOiBbXG4gICAgICAgICAgICAgICAgc3RyaW5nUnVsZSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICBwYXR0ZXJuOiAvKD0pKD8hW1wiJ10pKD86W15cXHNcXFxcXXxcXFxcLikrLyxcbiAgICAgICAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgIG9wZXJhdG9yOiAvXFxcXCQvbSxcbiAgICAgICAgICAgICAgcHVuY3R1YXRpb246IC89L1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAga2V5d29yZDogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAvLyBodHRwczovL2RvY3MuZG9ja2VyLmNvbS9lbmdpbmUvcmVmZXJlbmNlL2J1aWxkZXIvI2hlYWx0aGNoZWNrXG4gICAgICAgICAgICAgIHBhdHRlcm46IHJlKFxuICAgICAgICAgICAgICAgIC8oXig/Ok9OQlVJTEQ8U1A+KT9IRUFMVEhDSEVDSzxTUD4oPzo8T1BUPjxTUD4pKikoPzpDTUR8Tk9ORSlcXGIvXG4gICAgICAgICAgICAgICAgICAuc291cmNlLFxuICAgICAgICAgICAgICAgICdpJ1xuICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIC8vIGh0dHBzOi8vZG9jcy5kb2NrZXIuY29tL2VuZ2luZS9yZWZlcmVuY2UvYnVpbGRlci8jZnJvbVxuICAgICAgICAgICAgICBwYXR0ZXJuOiByZShcbiAgICAgICAgICAgICAgICAvKF4oPzpPTkJVSUxEPFNQPik/RlJPTTxTUD4oPzo8T1BUPjxTUD4pKig/IS0tKVteIFxcdFxcXFxdKzxTUD4pQVMvXG4gICAgICAgICAgICAgICAgICAuc291cmNlLFxuICAgICAgICAgICAgICAgICdpJ1xuICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIC8vIGh0dHBzOi8vZG9jcy5kb2NrZXIuY29tL2VuZ2luZS9yZWZlcmVuY2UvYnVpbGRlci8jb25idWlsZFxuICAgICAgICAgICAgICBwYXR0ZXJuOiByZSgvKF5PTkJVSUxEPFNQPilcXHcrLy5zb3VyY2UsICdpJyksXG4gICAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgcGF0dGVybjogL15cXHcrLyxcbiAgICAgICAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgXSxcbiAgICAgICAgICBjb21tZW50OiBjb21tZW50UnVsZSxcbiAgICAgICAgICBzdHJpbmc6IHN0cmluZ1J1bGUsXG4gICAgICAgICAgdmFyaWFibGU6IC9cXCQoPzpcXHcrfFxce1tee31cIidcXFxcXSpcXH0pLyxcbiAgICAgICAgICBvcGVyYXRvcjogL1xcXFwkL21cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGNvbW1lbnQ6IGNvbW1lbnRSdWxlXG4gICAgfVxuICAgIFByaXNtLmxhbmd1YWdlcy5kb2NrZXJmaWxlID0gUHJpc20ubGFuZ3VhZ2VzLmRvY2tlclxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiZG9ja2VyIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJzcGFjZUFmdGVyQmFja1NsYXNoIiwic291cmNlIiwic3BhY2UiLCJyZXBsYWNlIiwic3RyaW5nIiwib3B0aW9uIiwic3RyaW5nUnVsZSIsInBhdHRlcm4iLCJSZWdFeHAiLCJncmVlZHkiLCJjb21tZW50UnVsZSIsImxvb2tiZWhpbmQiLCJyZSIsImZsYWdzIiwibGFuZ3VhZ2VzIiwiaW5zdHJ1Y3Rpb24iLCJpbnNpZGUiLCJvcHRpb25zIiwicHJvcGVydHkiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIiwia2V5d29yZCIsImNvbW1lbnQiLCJ2YXJpYWJsZSIsImRvY2tlcmZpbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/docker.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/dot.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/dot.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = dot;\ndot.displayName = \"dot\";\ndot.aliases = [\n    \"gv\"\n];\nfunction dot(Prism) {\n    // https://www.graphviz.org/doc/info/lang.html\n    ;\n    (function(Prism) {\n        var ID = \"(?:\" + [\n            // an identifier\n            /[a-zA-Z_\\x80-\\uFFFF][\\w\\x80-\\uFFFF]*/.source,\n            /-?(?:\\.\\d+|\\d+(?:\\.\\d*)?)/.source,\n            /\"[^\"\\\\]*(?:\\\\[\\s\\S][^\"\\\\]*)*\"/.source,\n            /<(?:[^<>]|(?!<!--)<(?:[^<>\"']|\"[^\"]*\"|'[^']*')+>|<!--(?:[^-]|-(?!->))*-->)*>/.source\n        ].join(\"|\") + \")\";\n        var IDInside = {\n            markup: {\n                pattern: /(^<)[\\s\\S]+(?=>$)/,\n                lookbehind: true,\n                alias: [\n                    \"language-markup\",\n                    \"language-html\",\n                    \"language-xml\"\n                ],\n                inside: Prism.languages.markup\n            }\n        };\n        /**\n     * @param {string} source\n     * @param {string} flags\n     * @returns {RegExp}\n     */ function withID(source, flags) {\n            return RegExp(source.replace(/<ID>/g, function() {\n                return ID;\n            }), flags);\n        }\n        Prism.languages.dot = {\n            comment: {\n                pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|^#.*/m,\n                greedy: true\n            },\n            \"graph-name\": {\n                pattern: withID(/(\\b(?:digraph|graph|subgraph)[ \\t\\r\\n]+)<ID>/.source, \"i\"),\n                lookbehind: true,\n                greedy: true,\n                alias: \"class-name\",\n                inside: IDInside\n            },\n            \"attr-value\": {\n                pattern: withID(/(=[ \\t\\r\\n]*)<ID>/.source),\n                lookbehind: true,\n                greedy: true,\n                inside: IDInside\n            },\n            \"attr-name\": {\n                pattern: withID(/([\\[;, \\t\\r\\n])<ID>(?=[ \\t\\r\\n]*=)/.source),\n                lookbehind: true,\n                greedy: true,\n                inside: IDInside\n            },\n            keyword: /\\b(?:digraph|edge|graph|node|strict|subgraph)\\b/i,\n            \"compass-point\": {\n                pattern: /(:[ \\t\\r\\n]*)(?:[ewc_]|[ns][ew]?)(?![\\w\\x80-\\uFFFF])/,\n                lookbehind: true,\n                alias: \"builtin\"\n            },\n            node: {\n                pattern: withID(/(^|[^-.\\w\\x80-\\uFFFF\\\\])<ID>/.source),\n                lookbehind: true,\n                greedy: true,\n                inside: IDInside\n            },\n            operator: /[=:]|-[->]/,\n            punctuation: /[\\[\\]{};,]/\n        };\n        Prism.languages.gv = Prism.languages.dot;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZG90LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLElBQUlDLFdBQVcsR0FBRztBQUNsQkQsSUFBSUUsT0FBTyxHQUFHO0lBQUM7Q0FBSztBQUNwQixTQUFTRixJQUFJRyxLQUFLO0lBQ2hCLDhDQUE4Qzs7SUFDNUMsVUFBVUEsS0FBSztRQUNmLElBQUlDLEtBQ0YsUUFDQTtZQUNFLGdCQUFnQjtZQUNoQix1Q0FBdUNDLE1BQU07WUFDN0MsNEJBQTRCQSxNQUFNO1lBQ2xDLGdDQUFnQ0EsTUFBTTtZQUN0QywrRUFDR0EsTUFBTTtTQUNWLENBQUNDLElBQUksQ0FBQyxPQUNQO1FBQ0YsSUFBSUMsV0FBVztZQUNiQyxRQUFRO2dCQUNOQyxTQUFTO2dCQUNUQyxZQUFZO2dCQUNaQyxPQUFPO29CQUFDO29CQUFtQjtvQkFBaUI7aUJBQWU7Z0JBQzNEQyxRQUFRVCxNQUFNVSxTQUFTLENBQUNMLE1BQU07WUFDaEM7UUFDRjtRQUNBOzs7O0tBSUMsR0FDRCxTQUFTTSxPQUFPVCxNQUFNLEVBQUVVLEtBQUs7WUFDM0IsT0FBT0MsT0FDTFgsT0FBT1ksT0FBTyxDQUFDLFNBQVM7Z0JBQ3RCLE9BQU9iO1lBQ1QsSUFDQVc7UUFFSjtRQUNBWixNQUFNVSxTQUFTLENBQUNiLEdBQUcsR0FBRztZQUNwQmtCLFNBQVM7Z0JBQ1BULFNBQVM7Z0JBQ1RVLFFBQVE7WUFDVjtZQUNBLGNBQWM7Z0JBQ1pWLFNBQVNLLE9BQ1AsK0NBQStDVCxNQUFNLEVBQ3JEO2dCQUVGSyxZQUFZO2dCQUNaUyxRQUFRO2dCQUNSUixPQUFPO2dCQUNQQyxRQUFRTDtZQUNWO1lBQ0EsY0FBYztnQkFDWkUsU0FBU0ssT0FBTyxvQkFBb0JULE1BQU07Z0JBQzFDSyxZQUFZO2dCQUNaUyxRQUFRO2dCQUNSUCxRQUFRTDtZQUNWO1lBQ0EsYUFBYTtnQkFDWEUsU0FBU0ssT0FBTyxxQ0FBcUNULE1BQU07Z0JBQzNESyxZQUFZO2dCQUNaUyxRQUFRO2dCQUNSUCxRQUFRTDtZQUNWO1lBQ0FhLFNBQVM7WUFDVCxpQkFBaUI7Z0JBQ2ZYLFNBQVM7Z0JBQ1RDLFlBQVk7Z0JBQ1pDLE9BQU87WUFDVDtZQUNBVSxNQUFNO2dCQUNKWixTQUFTSyxPQUFPLCtCQUErQlQsTUFBTTtnQkFDckRLLFlBQVk7Z0JBQ1pTLFFBQVE7Z0JBQ1JQLFFBQVFMO1lBQ1Y7WUFDQWUsVUFBVTtZQUNWQyxhQUFhO1FBQ2Y7UUFDQXBCLE1BQU1VLFNBQVMsQ0FBQ1csRUFBRSxHQUFHckIsTUFBTVUsU0FBUyxDQUFDYixHQUFHO0lBQzFDLEdBQUdHO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZG90LmpzP2MxMzEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gZG90XG5kb3QuZGlzcGxheU5hbWUgPSAnZG90J1xuZG90LmFsaWFzZXMgPSBbJ2d2J11cbmZ1bmN0aW9uIGRvdChQcmlzbSkge1xuICAvLyBodHRwczovL3d3dy5ncmFwaHZpei5vcmcvZG9jL2luZm8vbGFuZy5odG1sXG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIElEID1cbiAgICAgICcoPzonICtcbiAgICAgIFtcbiAgICAgICAgLy8gYW4gaWRlbnRpZmllclxuICAgICAgICAvW2EtekEtWl9cXHg4MC1cXHVGRkZGXVtcXHdcXHg4MC1cXHVGRkZGXSovLnNvdXJjZSwgLy8gYSBudW1iZXJcbiAgICAgICAgLy0/KD86XFwuXFxkK3xcXGQrKD86XFwuXFxkKik/KS8uc291cmNlLCAvLyBhIGRvdWJsZS1xdW90ZWQgc3RyaW5nXG4gICAgICAgIC9cIlteXCJcXFxcXSooPzpcXFxcW1xcc1xcU11bXlwiXFxcXF0qKSpcIi8uc291cmNlLCAvLyBIVE1MLWxpa2Ugc3RyaW5nXG4gICAgICAgIC88KD86W148Pl18KD8hPCEtLSk8KD86W148PlwiJ118XCJbXlwiXSpcInwnW14nXSonKSs+fDwhLS0oPzpbXi1dfC0oPyEtPikpKi0tPikqPi9cbiAgICAgICAgICAuc291cmNlXG4gICAgICBdLmpvaW4oJ3wnKSArXG4gICAgICAnKSdcbiAgICB2YXIgSURJbnNpZGUgPSB7XG4gICAgICBtYXJrdXA6IHtcbiAgICAgICAgcGF0dGVybjogLyhePClbXFxzXFxTXSsoPz0+JCkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogWydsYW5ndWFnZS1tYXJrdXAnLCAnbGFuZ3VhZ2UtaHRtbCcsICdsYW5ndWFnZS14bWwnXSxcbiAgICAgICAgaW5zaWRlOiBQcmlzbS5sYW5ndWFnZXMubWFya3VwXG4gICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzb3VyY2VcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gZmxhZ3NcbiAgICAgKiBAcmV0dXJucyB7UmVnRXhwfVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHdpdGhJRChzb3VyY2UsIGZsYWdzKSB7XG4gICAgICByZXR1cm4gUmVnRXhwKFxuICAgICAgICBzb3VyY2UucmVwbGFjZSgvPElEPi9nLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIElEXG4gICAgICAgIH0pLFxuICAgICAgICBmbGFnc1xuICAgICAgKVxuICAgIH1cbiAgICBQcmlzbS5sYW5ndWFnZXMuZG90ID0ge1xuICAgICAgY29tbWVudDoge1xuICAgICAgICBwYXR0ZXJuOiAvXFwvXFwvLip8XFwvXFwqW1xcc1xcU10qP1xcKlxcL3xeIy4qL20sXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgICdncmFwaC1uYW1lJzoge1xuICAgICAgICBwYXR0ZXJuOiB3aXRoSUQoXG4gICAgICAgICAgLyhcXGIoPzpkaWdyYXBofGdyYXBofHN1YmdyYXBoKVsgXFx0XFxyXFxuXSspPElEPi8uc291cmNlLFxuICAgICAgICAgICdpJ1xuICAgICAgICApLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGFsaWFzOiAnY2xhc3MtbmFtZScsXG4gICAgICAgIGluc2lkZTogSURJbnNpZGVcbiAgICAgIH0sXG4gICAgICAnYXR0ci12YWx1ZSc6IHtcbiAgICAgICAgcGF0dGVybjogd2l0aElEKC8oPVsgXFx0XFxyXFxuXSopPElEPi8uc291cmNlKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBpbnNpZGU6IElESW5zaWRlXG4gICAgICB9LFxuICAgICAgJ2F0dHItbmFtZSc6IHtcbiAgICAgICAgcGF0dGVybjogd2l0aElEKC8oW1xcWzssIFxcdFxcclxcbl0pPElEPig/PVsgXFx0XFxyXFxuXSo9KS8uc291cmNlKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBpbnNpZGU6IElESW5zaWRlXG4gICAgICB9LFxuICAgICAga2V5d29yZDogL1xcYig/OmRpZ3JhcGh8ZWRnZXxncmFwaHxub2RlfHN0cmljdHxzdWJncmFwaClcXGIvaSxcbiAgICAgICdjb21wYXNzLXBvaW50Jzoge1xuICAgICAgICBwYXR0ZXJuOiAvKDpbIFxcdFxcclxcbl0qKSg/Oltld2NfXXxbbnNdW2V3XT8pKD8hW1xcd1xceDgwLVxcdUZGRkZdKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiAnYnVpbHRpbidcbiAgICAgIH0sXG4gICAgICBub2RlOiB7XG4gICAgICAgIHBhdHRlcm46IHdpdGhJRCgvKF58W14tLlxcd1xceDgwLVxcdUZGRkZcXFxcXSk8SUQ+Ly5zb3VyY2UpLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGluc2lkZTogSURJbnNpZGVcbiAgICAgIH0sXG4gICAgICBvcGVyYXRvcjogL1s9Ol18LVstPl0vLFxuICAgICAgcHVuY3R1YXRpb246IC9bXFxbXFxde307LF0vXG4gICAgfVxuICAgIFByaXNtLmxhbmd1YWdlcy5ndiA9IFByaXNtLmxhbmd1YWdlcy5kb3RcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImRvdCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwiSUQiLCJzb3VyY2UiLCJqb2luIiwiSURJbnNpZGUiLCJtYXJrdXAiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImFsaWFzIiwiaW5zaWRlIiwibGFuZ3VhZ2VzIiwid2l0aElEIiwiZmxhZ3MiLCJSZWdFeHAiLCJyZXBsYWNlIiwiY29tbWVudCIsImdyZWVkeSIsImtleXdvcmQiLCJub2RlIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiIsImd2Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/dot.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/ebnf.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/ebnf.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = ebnf;\nebnf.displayName = \"ebnf\";\nebnf.aliases = [];\nfunction ebnf(Prism) {\n    Prism.languages.ebnf = {\n        comment: /\\(\\*[\\s\\S]*?\\*\\)/,\n        string: {\n            pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n            greedy: true\n        },\n        special: {\n            pattern: /\\?[^?\\r\\n]*\\?/,\n            greedy: true,\n            alias: \"class-name\"\n        },\n        definition: {\n            pattern: /^([\\t ]*)[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*(?=\\s*=)/im,\n            lookbehind: true,\n            alias: [\n                \"rule\",\n                \"keyword\"\n            ]\n        },\n        rule: /\\b[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*\\b/i,\n        punctuation: /\\([:/]|[:/]\\)|[.,;()[\\]{}]/,\n        operator: /[-=|*/!]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZWJuZi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDakJBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHO1FBQ3JCSyxTQUFTO1FBQ1RDLFFBQVE7WUFDTkMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsU0FBUztZQUNQRixTQUFTO1lBQ1RDLFFBQVE7WUFDUkUsT0FBTztRQUNUO1FBQ0FDLFlBQVk7WUFDVkosU0FBUztZQUNUSyxZQUFZO1lBQ1pGLE9BQU87Z0JBQUM7Z0JBQVE7YUFBVTtRQUM1QjtRQUNBRyxNQUFNO1FBQ05DLGFBQWE7UUFDYkMsVUFBVTtJQUNaO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZWJuZi5qcz9mMjQ3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGVibmZcbmVibmYuZGlzcGxheU5hbWUgPSAnZWJuZidcbmVibmYuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBlYm5mKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5lYm5mID0ge1xuICAgIGNvbW1lbnQ6IC9cXChcXCpbXFxzXFxTXSo/XFwqXFwpLyxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIlteXCJcXHJcXG5dKlwifCdbXidcXHJcXG5dKicvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBzcGVjaWFsOiB7XG4gICAgICBwYXR0ZXJuOiAvXFw/W14/XFxyXFxuXSpcXD8vLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgYWxpYXM6ICdjbGFzcy1uYW1lJ1xuICAgIH0sXG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgcGF0dGVybjogL14oW1xcdCBdKilbYS16XVxcdyooPzpbIFxcdF0rW2Etel1cXHcqKSooPz1cXHMqPSkvaW0sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6IFsncnVsZScsICdrZXl3b3JkJ11cbiAgICB9LFxuICAgIHJ1bGU6IC9cXGJbYS16XVxcdyooPzpbIFxcdF0rW2Etel1cXHcqKSpcXGIvaSxcbiAgICBwdW5jdHVhdGlvbjogL1xcKFs6L118WzovXVxcKXxbLiw7KClbXFxde31dLyxcbiAgICBvcGVyYXRvcjogL1stPXwqLyFdL1xuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImVibmYiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZ3JlZWR5Iiwic3BlY2lhbCIsImFsaWFzIiwiZGVmaW5pdGlvbiIsImxvb2tiZWhpbmQiLCJydWxlIiwicHVuY3R1YXRpb24iLCJvcGVyYXRvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/ebnf.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/editorconfig.js":
/*!*****************************************************!*\
  !*** ./node_modules/refractor/lang/editorconfig.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = editorconfig;\neditorconfig.displayName = \"editorconfig\";\neditorconfig.aliases = [];\nfunction editorconfig(Prism) {\n    Prism.languages.editorconfig = {\n        // https://editorconfig-specification.readthedocs.io\n        comment: /[;#].*/,\n        section: {\n            pattern: /(^[ \\t]*)\\[.+\\]/m,\n            lookbehind: true,\n            alias: \"selector\",\n            inside: {\n                regex: /\\\\\\\\[\\[\\]{},!?.*]/,\n                // Escape special characters with '\\\\'\n                operator: /[!?]|\\.\\.|\\*{1,2}/,\n                punctuation: /[\\[\\]{},]/\n            }\n        },\n        key: {\n            pattern: /(^[ \\t]*)[^\\s=]+(?=[ \\t]*=)/m,\n            lookbehind: true,\n            alias: \"attr-name\"\n        },\n        value: {\n            pattern: /=.*/,\n            alias: \"attr-value\",\n            inside: {\n                punctuation: /^=/\n            }\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZWRpdG9yY29uZmlnLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLGFBQWFDLFdBQVcsR0FBRztBQUMzQkQsYUFBYUUsT0FBTyxHQUFHLEVBQUU7QUFDekIsU0FBU0YsYUFBYUcsS0FBSztJQUN6QkEsTUFBTUMsU0FBUyxDQUFDSixZQUFZLEdBQUc7UUFDN0Isb0RBQW9EO1FBQ3BESyxTQUFTO1FBQ1RDLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxZQUFZO1lBQ1pDLE9BQU87WUFDUEMsUUFBUTtnQkFDTkMsT0FBTztnQkFDUCxzQ0FBc0M7Z0JBQ3RDQyxVQUFVO2dCQUNWQyxhQUFhO1lBQ2Y7UUFDRjtRQUNBQyxLQUFLO1lBQ0hQLFNBQVM7WUFDVEMsWUFBWTtZQUNaQyxPQUFPO1FBQ1Q7UUFDQU0sT0FBTztZQUNMUixTQUFTO1lBQ1RFLE9BQU87WUFDUEMsUUFBUTtnQkFDTkcsYUFBYTtZQUNmO1FBQ0Y7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2VkaXRvcmNvbmZpZy5qcz81ZDc2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGVkaXRvcmNvbmZpZ1xuZWRpdG9yY29uZmlnLmRpc3BsYXlOYW1lID0gJ2VkaXRvcmNvbmZpZydcbmVkaXRvcmNvbmZpZy5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGVkaXRvcmNvbmZpZyhQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuZWRpdG9yY29uZmlnID0ge1xuICAgIC8vIGh0dHBzOi8vZWRpdG9yY29uZmlnLXNwZWNpZmljYXRpb24ucmVhZHRoZWRvY3MuaW9cbiAgICBjb21tZW50OiAvWzsjXS4qLyxcbiAgICBzZWN0aW9uOiB7XG4gICAgICBwYXR0ZXJuOiAvKF5bIFxcdF0qKVxcWy4rXFxdL20sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdzZWxlY3RvcicsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgcmVnZXg6IC9cXFxcXFxcXFtcXFtcXF17fSwhPy4qXS8sXG4gICAgICAgIC8vIEVzY2FwZSBzcGVjaWFsIGNoYXJhY3RlcnMgd2l0aCAnXFxcXCdcbiAgICAgICAgb3BlcmF0b3I6IC9bIT9dfFxcLlxcLnxcXCp7MSwyfS8sXG4gICAgICAgIHB1bmN0dWF0aW9uOiAvW1xcW1xcXXt9LF0vXG4gICAgICB9XG4gICAgfSxcbiAgICBrZXk6IHtcbiAgICAgIHBhdHRlcm46IC8oXlsgXFx0XSopW15cXHM9XSsoPz1bIFxcdF0qPSkvbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ2F0dHItbmFtZSdcbiAgICB9LFxuICAgIHZhbHVlOiB7XG4gICAgICBwYXR0ZXJuOiAvPS4qLyxcbiAgICAgIGFsaWFzOiAnYXR0ci12YWx1ZScsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgcHVuY3R1YXRpb246IC9ePS9cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiZWRpdG9yY29uZmlnIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50Iiwic2VjdGlvbiIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiYWxpYXMiLCJpbnNpZGUiLCJyZWdleCIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iLCJrZXkiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/editorconfig.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/eiffel.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/eiffel.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = eiffel;\neiffel.displayName = \"eiffel\";\neiffel.aliases = [];\nfunction eiffel(Prism) {\n    Prism.languages.eiffel = {\n        comment: /--.*/,\n        string: [\n            // Aligned-verbatim-strings\n            {\n                pattern: /\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,\n                greedy: true\n            },\n            {\n                pattern: /\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,\n                greedy: true\n            },\n            {\n                pattern: /\"(?:%(?:(?!\\n)\\s)*\\n\\s*%|%\\S|[^%\"\\r\\n])*\"/,\n                greedy: true\n            }\n        ],\n        // normal char | special char | char code\n        char: /'(?:%.|[^%'\\r\\n])+'/,\n        keyword: /\\b(?:across|agent|alias|all|and|as|assign|attached|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\n        boolean: /\\b(?:False|True)\\b/i,\n        // Convention: class-names are always all upper-case characters\n        \"class-name\": /\\b[A-Z][\\dA-Z_]*\\b/,\n        number: [\n            // hexa | octal | bin\n            /\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i,\n            /(?:\\b\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*\\b|\\b\\d(?:_*\\d)*\\b\\.?/i\n        ],\n        punctuation: /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\n        operator: /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZWlmZmVsLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLE9BQU9DLFdBQVcsR0FBRztBQUNyQkQsT0FBT0UsT0FBTyxHQUFHLEVBQUU7QUFDbkIsU0FBU0YsT0FBT0csS0FBSztJQUNuQkEsTUFBTUMsU0FBUyxDQUFDSixNQUFNLEdBQUc7UUFDdkJLLFNBQVM7UUFDVEMsUUFBUTtZQUNOLDJCQUEyQjtZQUMzQjtnQkFDRUMsU0FBUztnQkFDVEMsUUFBUTtZQUNWO1lBQ0E7Z0JBQ0VELFNBQVM7Z0JBQ1RDLFFBQVE7WUFDVjtZQUNBO2dCQUNFRCxTQUFTO2dCQUNUQyxRQUFRO1lBQ1Y7U0FDRDtRQUNELHlDQUF5QztRQUN6Q0MsTUFBTTtRQUNOQyxTQUNFO1FBQ0ZDLFNBQVM7UUFDVCwrREFBK0Q7UUFDL0QsY0FBYztRQUNkQyxRQUFRO1lBQ04scUJBQXFCO1lBQ3JCO1lBQ0E7U0FDRDtRQUNEQyxhQUFhO1FBQ2JDLFVBQVU7SUFDWjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2VpZmZlbC5qcz84ZTgyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGVpZmZlbFxuZWlmZmVsLmRpc3BsYXlOYW1lID0gJ2VpZmZlbCdcbmVpZmZlbC5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGVpZmZlbChQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuZWlmZmVsID0ge1xuICAgIGNvbW1lbnQ6IC8tLS4qLyxcbiAgICBzdHJpbmc6IFtcbiAgICAgIC8vIEFsaWduZWQtdmVyYmF0aW0tc3RyaW5nc1xuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvXCIoW15bXSopXFxbW1xcc1xcU10qP1xcXVxcMVwiLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LCAvLyBOb24tYWxpZ25lZC12ZXJiYXRpbS1zdHJpbmdzXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC9cIihbXntdKilcXHtbXFxzXFxTXSo/XFx9XFwxXCIvLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sIC8vIFNpbmdsZS1saW5lIHN0cmluZ1xuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvXCIoPzolKD86KD8hXFxuKVxccykqXFxuXFxzKiV8JVxcU3xbXiVcIlxcclxcbl0pKlwiLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9XG4gICAgXSxcbiAgICAvLyBub3JtYWwgY2hhciB8IHNwZWNpYWwgY2hhciB8IGNoYXIgY29kZVxuICAgIGNoYXI6IC8nKD86JS58W14lJ1xcclxcbl0pKycvLFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YWNyb3NzfGFnZW50fGFsaWFzfGFsbHxhbmR8YXN8YXNzaWdufGF0dGFjaGVkfGF0dHJpYnV0ZXxjaGVja3xjbGFzc3xjb252ZXJ0fGNyZWF0ZXxDdXJyZW50fGRlYnVnfGRlZmVycmVkfGRldGFjaGFibGV8ZG98ZWxzZXxlbHNlaWZ8ZW5kfGVuc3VyZXxleHBhbmRlZHxleHBvcnR8ZXh0ZXJuYWx8ZmVhdHVyZXxmcm9tfGZyb3plbnxpZnxpbXBsaWVzfGluaGVyaXR8aW5zcGVjdHxpbnZhcmlhbnR8bGlrZXxsb2NhbHxsb29wfG5vdHxub3RlfG9ic29sZXRlfG9sZHxvbmNlfG9yfFByZWN1cnNvcnxyZWRlZmluZXxyZW5hbWV8cmVxdWlyZXxyZXNjdWV8UmVzdWx0fHJldHJ5fHNlbGVjdHxzZXBhcmF0ZXxzb21lfHRoZW58dW5kZWZpbmV8dW50aWx8dmFyaWFudHxWb2lkfHdoZW58eG9yKVxcYi9pLFxuICAgIGJvb2xlYW46IC9cXGIoPzpGYWxzZXxUcnVlKVxcYi9pLFxuICAgIC8vIENvbnZlbnRpb246IGNsYXNzLW5hbWVzIGFyZSBhbHdheXMgYWxsIHVwcGVyLWNhc2UgY2hhcmFjdGVyc1xuICAgICdjbGFzcy1uYW1lJzogL1xcYltBLVpdW1xcZEEtWl9dKlxcYi8sXG4gICAgbnVtYmVyOiBbXG4gICAgICAvLyBoZXhhIHwgb2N0YWwgfCBiaW5cbiAgICAgIC9cXGIwW3hjYl1bXFxkYS1mXSg/Ol8qW1xcZGEtZl0pKlxcYi9pLCAvLyBEZWNpbWFsXG4gICAgICAvKD86XFxiXFxkKD86XypcXGQpKik/XFwuKD86KD86XFxkKD86XypcXGQpKik/ZVsrLV0/KT9cXGQoPzpfKlxcZCkqXFxifFxcYlxcZCg/Ol8qXFxkKSpcXGJcXC4/L2lcbiAgICBdLFxuICAgIHB1bmN0dWF0aW9uOiAvOj18PDx8Pj58XFwoXFx8fFxcfFxcKXwtPnxcXC4oPz1cXHcpfFt7fVtcXF07KCksOj9dLyxcbiAgICBvcGVyYXRvcjogL1xcXFxcXFxcfFxcfFxcLlxcLlxcfHxcXC5cXC58XFwvW35cXC89XT98Wz48XT0/fFstKypePX5dL1xuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImVpZmZlbCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJjaGFyIiwia2V5d29yZCIsImJvb2xlYW4iLCJudW1iZXIiLCJwdW5jdHVhdGlvbiIsIm9wZXJhdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/eiffel.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/ejs.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/ejs.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorMarkupTemplating = __webpack_require__(/*! ./markup-templating.js */ \"(ssr)/./node_modules/refractor/lang/markup-templating.js\");\nmodule.exports = ejs;\nejs.displayName = \"ejs\";\nejs.aliases = [\n    \"eta\"\n];\nfunction ejs(Prism) {\n    Prism.register(refractorMarkupTemplating);\n    (function(Prism) {\n        Prism.languages.ejs = {\n            delimiter: {\n                pattern: /^<%[-_=]?|[-_]?%>$/,\n                alias: \"punctuation\"\n            },\n            comment: /^#[\\s\\S]*/,\n            \"language-javascript\": {\n                pattern: /[\\s\\S]+/,\n                inside: Prism.languages.javascript\n            }\n        };\n        Prism.hooks.add(\"before-tokenize\", function(env) {\n            var ejsPattern = /<%(?!%)[\\s\\S]+?%>/g;\n            Prism.languages[\"markup-templating\"].buildPlaceholders(env, \"ejs\", ejsPattern);\n        });\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            Prism.languages[\"markup-templating\"].tokenizePlaceholders(env, \"ejs\");\n        });\n        Prism.languages.eta = Prism.languages.ejs;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZWpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsSUFBSUEsNEJBQTRCQyxtQkFBT0EsQ0FBQztBQUN4Q0MsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUc7SUFBQztDQUFNO0FBQ3JCLFNBQVNGLElBQUlHLEtBQUs7SUFDaEJBLE1BQU1DLFFBQVEsQ0FBQ1I7SUFDYixVQUFVTyxLQUFLO1FBQ2ZBLE1BQU1FLFNBQVMsQ0FBQ0wsR0FBRyxHQUFHO1lBQ3BCTSxXQUFXO2dCQUNUQyxTQUFTO2dCQUNUQyxPQUFPO1lBQ1Q7WUFDQUMsU0FBUztZQUNULHVCQUF1QjtnQkFDckJGLFNBQVM7Z0JBQ1RHLFFBQVFQLE1BQU1FLFNBQVMsQ0FBQ00sVUFBVTtZQUNwQztRQUNGO1FBQ0FSLE1BQU1TLEtBQUssQ0FBQ0MsR0FBRyxDQUFDLG1CQUFtQixTQUFVQyxHQUFHO1lBQzlDLElBQUlDLGFBQWE7WUFDakJaLE1BQU1FLFNBQVMsQ0FBQyxvQkFBb0IsQ0FBQ1csaUJBQWlCLENBQ3BERixLQUNBLE9BQ0FDO1FBRUo7UUFDQVosTUFBTVMsS0FBSyxDQUFDQyxHQUFHLENBQUMsa0JBQWtCLFNBQVVDLEdBQUc7WUFDN0NYLE1BQU1FLFNBQVMsQ0FBQyxvQkFBb0IsQ0FBQ1ksb0JBQW9CLENBQUNILEtBQUs7UUFDakU7UUFDQVgsTUFBTUUsU0FBUyxDQUFDYSxHQUFHLEdBQUdmLE1BQU1FLFNBQVMsQ0FBQ0wsR0FBRztJQUMzQyxHQUFHRztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2Vqcy5qcz84NjAwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xudmFyIHJlZnJhY3Rvck1hcmt1cFRlbXBsYXRpbmcgPSByZXF1aXJlKCcuL21hcmt1cC10ZW1wbGF0aW5nLmpzJylcbm1vZHVsZS5leHBvcnRzID0gZWpzXG5lanMuZGlzcGxheU5hbWUgPSAnZWpzJ1xuZWpzLmFsaWFzZXMgPSBbJ2V0YSddXG5mdW5jdGlvbiBlanMoUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yTWFya3VwVGVtcGxhdGluZylcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICBQcmlzbS5sYW5ndWFnZXMuZWpzID0ge1xuICAgICAgZGVsaW1pdGVyOiB7XG4gICAgICAgIHBhdHRlcm46IC9ePCVbLV89XT98Wy1fXT8lPiQvLFxuICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgfSxcbiAgICAgIGNvbW1lbnQ6IC9eI1tcXHNcXFNdKi8sXG4gICAgICAnbGFuZ3VhZ2UtamF2YXNjcmlwdCc6IHtcbiAgICAgICAgcGF0dGVybjogL1tcXHNcXFNdKy8sXG4gICAgICAgIGluc2lkZTogUHJpc20ubGFuZ3VhZ2VzLmphdmFzY3JpcHRcbiAgICAgIH1cbiAgICB9XG4gICAgUHJpc20uaG9va3MuYWRkKCdiZWZvcmUtdG9rZW5pemUnLCBmdW5jdGlvbiAoZW52KSB7XG4gICAgICB2YXIgZWpzUGF0dGVybiA9IC88JSg/ISUpW1xcc1xcU10rPyU+L2dcbiAgICAgIFByaXNtLmxhbmd1YWdlc1snbWFya3VwLXRlbXBsYXRpbmcnXS5idWlsZFBsYWNlaG9sZGVycyhcbiAgICAgICAgZW52LFxuICAgICAgICAnZWpzJyxcbiAgICAgICAgZWpzUGF0dGVyblxuICAgICAgKVxuICAgIH0pXG4gICAgUHJpc20uaG9va3MuYWRkKCdhZnRlci10b2tlbml6ZScsIGZ1bmN0aW9uIChlbnYpIHtcbiAgICAgIFByaXNtLmxhbmd1YWdlc1snbWFya3VwLXRlbXBsYXRpbmcnXS50b2tlbml6ZVBsYWNlaG9sZGVycyhlbnYsICdlanMnKVxuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmV0YSA9IFByaXNtLmxhbmd1YWdlcy5lanNcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yTWFya3VwVGVtcGxhdGluZyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiZWpzIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImRlbGltaXRlciIsInBhdHRlcm4iLCJhbGlhcyIsImNvbW1lbnQiLCJpbnNpZGUiLCJqYXZhc2NyaXB0IiwiaG9va3MiLCJhZGQiLCJlbnYiLCJlanNQYXR0ZXJuIiwiYnVpbGRQbGFjZWhvbGRlcnMiLCJ0b2tlbml6ZVBsYWNlaG9sZGVycyIsImV0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/ejs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/elixir.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/elixir.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = elixir;\nelixir.displayName = \"elixir\";\nelixir.aliases = [];\nfunction elixir(Prism) {\n    Prism.languages.elixir = {\n        doc: {\n            pattern: /@(?:doc|moduledoc)\\s+(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2)/,\n            inside: {\n                attribute: /^@\\w+/,\n                string: /['\"][\\s\\S]+/\n            }\n        },\n        comment: {\n            pattern: /#.*/,\n            greedy: true\n        },\n        // ~r\"\"\"foo\"\"\" (multi-line), ~r'''foo''' (multi-line), ~r/foo/, ~r|foo|, ~r\"foo\", ~r'foo', ~r(foo), ~r[foo], ~r{foo}, ~r<foo>\n        regex: {\n            pattern: /~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,\n            greedy: true\n        },\n        string: [\n            {\n                // ~s\"\"\"foo\"\"\" (multi-line), ~s'''foo''' (multi-line), ~s/foo/, ~s|foo|, ~s\"foo\", ~s'foo', ~s(foo), ~s[foo], ~s{foo} (with interpolation care), ~s<foo>\n                pattern: /~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|#(?!\\{)|[^#\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,\n                greedy: true,\n                inside: {\n                }\n            },\n            {\n                pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n                greedy: true,\n                inside: {\n                }\n            },\n            {\n                // Multi-line strings are allowed\n                pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n                greedy: true,\n                inside: {\n                }\n            }\n        ],\n        atom: {\n            // Look-behind prevents bad highlighting of the :: operator\n            pattern: /(^|[^:]):\\w+/,\n            lookbehind: true,\n            alias: \"symbol\"\n        },\n        module: {\n            pattern: /\\b[A-Z]\\w*\\b/,\n            alias: \"class-name\"\n        },\n        // Look-ahead prevents bad highlighting of the :: operator\n        \"attr-name\": /\\b\\w+\\??:(?!:)/,\n        argument: {\n            // Look-behind prevents bad highlighting of the && operator\n            pattern: /(^|[^&])&\\d+/,\n            lookbehind: true,\n            alias: \"variable\"\n        },\n        attribute: {\n            pattern: /@\\w+/,\n            alias: \"variable\"\n        },\n        function: /\\b[_a-zA-Z]\\w*[?!]?(?:(?=\\s*(?:\\.\\s*)?\\()|(?=\\/\\d))/,\n        number: /\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,\n        keyword: /\\b(?:after|alias|and|case|catch|cond|def(?:callback|delegate|exception|impl|macro|module|n|np|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|quote|raise|require|rescue|try|unless|unquote|use|when)\\b/,\n        boolean: /\\b(?:false|nil|true)\\b/,\n        operator: [\n            /\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/,\n            {\n                // We don't want to match <<\n                pattern: /([^<])<(?!<)/,\n                lookbehind: true\n            },\n            {\n                // We don't want to match >>\n                pattern: /([^>])>(?!>)/,\n                lookbehind: true\n            }\n        ],\n        punctuation: /<<|>>|[.,%\\[\\]{}()]/\n    };\n    Prism.languages.elixir.string.forEach(function(o) {\n        o.inside = {\n            interpolation: {\n                pattern: /#\\{[^}]+\\}/,\n                inside: {\n                    delimiter: {\n                        pattern: /^#\\{|\\}$/,\n                        alias: \"punctuation\"\n                    },\n                    rest: Prism.languages.elixir\n                }\n            }\n        };\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZWxpeGlyLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLE9BQU9DLFdBQVcsR0FBRztBQUNyQkQsT0FBT0UsT0FBTyxHQUFHLEVBQUU7QUFDbkIsU0FBU0YsT0FBT0csS0FBSztJQUNuQkEsTUFBTUMsU0FBUyxDQUFDSixNQUFNLEdBQUc7UUFDdkJLLEtBQUs7WUFDSEMsU0FDRTtZQUNGQyxRQUFRO2dCQUNOQyxXQUFXO2dCQUNYQyxRQUFRO1lBQ1Y7UUFDRjtRQUNBQyxTQUFTO1lBQ1BKLFNBQVM7WUFDVEssUUFBUTtRQUNWO1FBQ0EsNkhBQTZIO1FBQzdIQyxPQUFPO1lBQ0xOLFNBQ0U7WUFDRkssUUFBUTtRQUNWO1FBQ0FGLFFBQVE7WUFDTjtnQkFDRSx1SkFBdUo7Z0JBQ3ZKSCxTQUNFO2dCQUNGSyxRQUFRO2dCQUNSSixRQUFRO2dCQUVSO1lBQ0Y7WUFDQTtnQkFDRUQsU0FBUztnQkFDVEssUUFBUTtnQkFDUkosUUFBUTtnQkFFUjtZQUNGO1lBQ0E7Z0JBQ0UsaUNBQWlDO2dCQUNqQ0QsU0FBUztnQkFDVEssUUFBUTtnQkFDUkosUUFBUTtnQkFFUjtZQUNGO1NBQ0Q7UUFDRE0sTUFBTTtZQUNKLDJEQUEyRDtZQUMzRFAsU0FBUztZQUNUUSxZQUFZO1lBQ1pDLE9BQU87UUFDVDtRQUNBakIsUUFBUTtZQUNOUSxTQUFTO1lBQ1RTLE9BQU87UUFDVDtRQUNBLDBEQUEwRDtRQUMxRCxhQUFhO1FBQ2JDLFVBQVU7WUFDUiwyREFBMkQ7WUFDM0RWLFNBQVM7WUFDVFEsWUFBWTtZQUNaQyxPQUFPO1FBQ1Q7UUFDQVAsV0FBVztZQUNURixTQUFTO1lBQ1RTLE9BQU87UUFDVDtRQUNBRSxVQUFVO1FBQ1ZDLFFBQVE7UUFDUkMsU0FDRTtRQUNGQyxTQUFTO1FBQ1RDLFVBQVU7WUFDUjtZQUNBO2dCQUNFLDRCQUE0QjtnQkFDNUJmLFNBQVM7Z0JBQ1RRLFlBQVk7WUFDZDtZQUNBO2dCQUNFLDRCQUE0QjtnQkFDNUJSLFNBQVM7Z0JBQ1RRLFlBQVk7WUFDZDtTQUNEO1FBQ0RRLGFBQWE7SUFDZjtJQUNBbkIsTUFBTUMsU0FBUyxDQUFDSixNQUFNLENBQUNTLE1BQU0sQ0FBQ2MsT0FBTyxDQUFDLFNBQVVDLENBQUM7UUFDL0NBLEVBQUVqQixNQUFNLEdBQUc7WUFDVGtCLGVBQWU7Z0JBQ2JuQixTQUFTO2dCQUNUQyxRQUFRO29CQUNObUIsV0FBVzt3QkFDVHBCLFNBQVM7d0JBQ1RTLE9BQU87b0JBQ1Q7b0JBQ0FZLE1BQU14QixNQUFNQyxTQUFTLENBQUNKLE1BQU07Z0JBQzlCO1lBQ0Y7UUFDRjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZWxpeGlyLmpzP2Y3NmMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gZWxpeGlyXG5lbGl4aXIuZGlzcGxheU5hbWUgPSAnZWxpeGlyJ1xuZWxpeGlyLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gZWxpeGlyKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5lbGl4aXIgPSB7XG4gICAgZG9jOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvQCg/OmRvY3xtb2R1bGVkb2MpXFxzKyg/OihcIlwiXCJ8JycnKVtcXHNcXFNdKj9cXDF8KFwifCcpKD86XFxcXCg/OlxcclxcbnxbXFxzXFxTXSl8KD8hXFwyKVteXFxcXFxcclxcbl0pKlxcMikvLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIGF0dHJpYnV0ZTogL15AXFx3Ky8sXG4gICAgICAgIHN0cmluZzogL1snXCJdW1xcc1xcU10rL1xuICAgICAgfVxuICAgIH0sXG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogLyMuKi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIC8vIH5yXCJcIlwiZm9vXCJcIlwiIChtdWx0aS1saW5lKSwgfnInJydmb28nJycgKG11bHRpLWxpbmUpLCB+ci9mb28vLCB+cnxmb298LCB+clwiZm9vXCIsIH5yJ2ZvbycsIH5yKGZvbyksIH5yW2Zvb10sIH5ye2Zvb30sIH5yPGZvbz5cbiAgICByZWdleDoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL35bclJdKD86KFwiXCJcInwnJycpKD86XFxcXFtcXHNcXFNdfCg/IVxcMSlbXlxcXFxdKStcXDF8KFtcXC98XCInXSkoPzpcXFxcLnwoPyFcXDIpW15cXFxcXFxyXFxuXSkrXFwyfFxcKCg/OlxcXFwufFteXFxcXClcXHJcXG5dKStcXCl8XFxbKD86XFxcXC58W15cXFxcXFxdXFxyXFxuXSkrXFxdfFxceyg/OlxcXFwufFteXFxcXH1cXHJcXG5dKStcXH18PCg/OlxcXFwufFteXFxcXD5cXHJcXG5dKSs+KVt1aXNteGZyXSovLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBzdHJpbmc6IFtcbiAgICAgIHtcbiAgICAgICAgLy8gfnNcIlwiXCJmb29cIlwiXCIgKG11bHRpLWxpbmUpLCB+cycnJ2ZvbycnJyAobXVsdGktbGluZSksIH5zL2Zvby8sIH5zfGZvb3wsIH5zXCJmb29cIiwgfnMnZm9vJywgfnMoZm9vKSwgfnNbZm9vXSwgfnN7Zm9vfSAod2l0aCBpbnRlcnBvbGF0aW9uIGNhcmUpLCB+czxmb28+XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgL35bY0NzU3dXXSg/OihcIlwiXCJ8JycnKSg/OlxcXFxbXFxzXFxTXXwoPyFcXDEpW15cXFxcXSkrXFwxfChbXFwvfFwiJ10pKD86XFxcXC58KD8hXFwyKVteXFxcXFxcclxcbl0pK1xcMnxcXCgoPzpcXFxcLnxbXlxcXFwpXFxyXFxuXSkrXFwpfFxcWyg/OlxcXFwufFteXFxcXFxcXVxcclxcbl0pK1xcXXxcXHsoPzpcXFxcLnwjXFx7W159XStcXH18Iyg/IVxceyl8W14jXFxcXH1cXHJcXG5dKStcXH18PCg/OlxcXFwufFteXFxcXD5cXHJcXG5dKSs+KVtjc2FdPy8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgLy8gU2VlIGludGVycG9sYXRpb24gYmVsb3dcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyhcIlwiXCJ8JycnKVtcXHNcXFNdKj9cXDEvLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIC8vIFNlZSBpbnRlcnBvbGF0aW9uIGJlbG93XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIC8vIE11bHRpLWxpbmUgc3RyaW5ncyBhcmUgYWxsb3dlZFxuICAgICAgICBwYXR0ZXJuOiAvKFwifCcpKD86XFxcXCg/OlxcclxcbnxbXFxzXFxTXSl8KD8hXFwxKVteXFxcXFxcclxcbl0pKlxcMS8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgLy8gU2VlIGludGVycG9sYXRpb24gYmVsb3dcbiAgICAgICAgfVxuICAgICAgfVxuICAgIF0sXG4gICAgYXRvbToge1xuICAgICAgLy8gTG9vay1iZWhpbmQgcHJldmVudHMgYmFkIGhpZ2hsaWdodGluZyBvZiB0aGUgOjogb3BlcmF0b3JcbiAgICAgIHBhdHRlcm46IC8oXnxbXjpdKTpcXHcrLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ3N5bWJvbCdcbiAgICB9LFxuICAgIG1vZHVsZToge1xuICAgICAgcGF0dGVybjogL1xcYltBLVpdXFx3KlxcYi8sXG4gICAgICBhbGlhczogJ2NsYXNzLW5hbWUnXG4gICAgfSxcbiAgICAvLyBMb29rLWFoZWFkIHByZXZlbnRzIGJhZCBoaWdobGlnaHRpbmcgb2YgdGhlIDo6IG9wZXJhdG9yXG4gICAgJ2F0dHItbmFtZSc6IC9cXGJcXHcrXFw/PzooPyE6KS8sXG4gICAgYXJndW1lbnQ6IHtcbiAgICAgIC8vIExvb2stYmVoaW5kIHByZXZlbnRzIGJhZCBoaWdobGlnaHRpbmcgb2YgdGhlICYmIG9wZXJhdG9yXG4gICAgICBwYXR0ZXJuOiAvKF58W14mXSkmXFxkKy8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICd2YXJpYWJsZSdcbiAgICB9LFxuICAgIGF0dHJpYnV0ZToge1xuICAgICAgcGF0dGVybjogL0BcXHcrLyxcbiAgICAgIGFsaWFzOiAndmFyaWFibGUnXG4gICAgfSxcbiAgICBmdW5jdGlvbjogL1xcYltfYS16QS1aXVxcdypbPyFdPyg/Oig/PVxccyooPzpcXC5cXHMqKT9cXCgpfCg/PVxcL1xcZCkpLyxcbiAgICBudW1iZXI6IC9cXGIoPzowW2JveF1bYS1mXFxkX10rfFxcZFtcXGRfXSopKD86XFwuW1xcZF9dKyk/KD86ZVsrLV0/W1xcZF9dKyk/XFxiL2ksXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzphZnRlcnxhbGlhc3xhbmR8Y2FzZXxjYXRjaHxjb25kfGRlZig/OmNhbGxiYWNrfGRlbGVnYXRlfGV4Y2VwdGlvbnxpbXBsfG1hY3JvfG1vZHVsZXxufG5wfHB8cHJvdG9jb2x8c3RydWN0KT98ZG98ZWxzZXxlbmR8Zm58Zm9yfGlmfGltcG9ydHxub3R8b3J8cXVvdGV8cmFpc2V8cmVxdWlyZXxyZXNjdWV8dHJ5fHVubGVzc3x1bnF1b3RlfHVzZXx3aGVuKVxcYi8sXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfG5pbHx0cnVlKVxcYi8sXG4gICAgb3BlcmF0b3I6IFtcbiAgICAgIC9cXGJpblxcYnwmJj98XFx8W3w+XT98XFxcXFxcXFx8Ojp8XFwuXFwuXFwuP3xcXCtcXCs/fC1bLT5dP3w8Wy09Pl18Pj18IT09P3xcXEIhfD0oPzo9PT98Wz5+XSk/fFsqXFwvXl0vLFxuICAgICAge1xuICAgICAgICAvLyBXZSBkb24ndCB3YW50IHRvIG1hdGNoIDw8XG4gICAgICAgIHBhdHRlcm46IC8oW148XSk8KD8hPCkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAvLyBXZSBkb24ndCB3YW50IHRvIG1hdGNoID4+XG4gICAgICAgIHBhdHRlcm46IC8oW14+XSk+KD8hPikvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9XG4gICAgXSxcbiAgICBwdW5jdHVhdGlvbjogLzw8fD4+fFsuLCVcXFtcXF17fSgpXS9cbiAgfVxuICBQcmlzbS5sYW5ndWFnZXMuZWxpeGlyLnN0cmluZy5mb3JFYWNoKGZ1bmN0aW9uIChvKSB7XG4gICAgby5pbnNpZGUgPSB7XG4gICAgICBpbnRlcnBvbGF0aW9uOiB7XG4gICAgICAgIHBhdHRlcm46IC8jXFx7W159XStcXH0vLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBkZWxpbWl0ZXI6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC9eI1xce3xcXH0kLyxcbiAgICAgICAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgICAgICAgfSxcbiAgICAgICAgICByZXN0OiBQcmlzbS5sYW5ndWFnZXMuZWxpeGlyXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImVsaXhpciIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiZG9jIiwicGF0dGVybiIsImluc2lkZSIsImF0dHJpYnV0ZSIsInN0cmluZyIsImNvbW1lbnQiLCJncmVlZHkiLCJyZWdleCIsImF0b20iLCJsb29rYmVoaW5kIiwiYWxpYXMiLCJhcmd1bWVudCIsImZ1bmN0aW9uIiwibnVtYmVyIiwia2V5d29yZCIsImJvb2xlYW4iLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIiwiZm9yRWFjaCIsIm8iLCJpbnRlcnBvbGF0aW9uIiwiZGVsaW1pdGVyIiwicmVzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/elixir.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/elm.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/elm.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = elm;\nelm.displayName = \"elm\";\nelm.aliases = [];\nfunction elm(Prism) {\n    Prism.languages.elm = {\n        comment: /--.*|\\{-[\\s\\S]*?-\\}/,\n        char: {\n            pattern: /'(?:[^\\\\'\\r\\n]|\\\\(?:[abfnrtv\\\\']|\\d+|x[0-9a-fA-F]+|u\\{[0-9a-fA-F]+\\}))'/,\n            greedy: true\n        },\n        string: [\n            {\n                // Multiline strings are wrapped in triple \". Quotes may appear unescaped.\n                pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n                greedy: true\n            },\n            {\n                pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"/,\n                greedy: true\n            }\n        ],\n        \"import-statement\": {\n            // The imported or hidden names are not included in this import\n            // statement. This is because we want to highlight those exactly like\n            // we do for the names in the program.\n            pattern: /(^[\\t ]*)import\\s+[A-Z]\\w*(?:\\.[A-Z]\\w*)*(?:\\s+as\\s+(?:[A-Z]\\w*)(?:\\.[A-Z]\\w*)*)?(?:\\s+exposing\\s+)?/m,\n            lookbehind: true,\n            inside: {\n                keyword: /\\b(?:as|exposing|import)\\b/\n            }\n        },\n        keyword: /\\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\\b/,\n        // These are builtin variables only. Constructors are highlighted later as a constant.\n        builtin: /\\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\\b/,\n        // decimal integers and floating point numbers | hexadecimal integers\n        number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[0-9a-f]+)\\b/i,\n        // Most of this is needed because of the meaning of a single '.'.\n        // If it stands alone freely, it is the function composition.\n        // It may also be a separator between a module name and an identifier => no\n        // operator. If it comes together with other special characters it is an\n        // operator too.\n        // Valid operator characters in 0.18: +-/*=.$<>:&|^?%#@~!\n        // Ref: https://groups.google.com/forum/#!msg/elm-dev/0AHSnDdkSkQ/E0SVU70JEQAJ\n        operator: /\\s\\.\\s|[+\\-/*=.$<>:&|^?%#@~!]{2,}|[+\\-/*=$<>:&|^?%#@~!]/,\n        // In Elm, nearly everything is a variable, do not highlight these.\n        hvariable: /\\b(?:[A-Z]\\w*\\.)*[a-z]\\w*\\b/,\n        constant: /\\b(?:[A-Z]\\w*\\.)*[A-Z]\\w*\\b/,\n        punctuation: /[{}[\\]|(),.:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZWxtLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLElBQUlDLFdBQVcsR0FBRztBQUNsQkQsSUFBSUUsT0FBTyxHQUFHLEVBQUU7QUFDaEIsU0FBU0YsSUFBSUcsS0FBSztJQUNoQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7UUFDVEMsTUFBTTtZQUNKQyxTQUNFO1lBQ0ZDLFFBQVE7UUFDVjtRQUNBQyxRQUFRO1lBQ047Z0JBQ0UsMEVBQTBFO2dCQUMxRUYsU0FBUztnQkFDVEMsUUFBUTtZQUNWO1lBQ0E7Z0JBQ0VELFNBQVM7Z0JBQ1RDLFFBQVE7WUFDVjtTQUNEO1FBQ0Qsb0JBQW9CO1lBQ2xCLCtEQUErRDtZQUMvRCxxRUFBcUU7WUFDckUsc0NBQXNDO1lBQ3RDRCxTQUNFO1lBQ0ZHLFlBQVk7WUFDWkMsUUFBUTtnQkFDTkMsU0FBUztZQUNYO1FBQ0Y7UUFDQUEsU0FDRTtRQUNGLHNGQUFzRjtRQUN0RkMsU0FDRTtRQUNGLHFFQUFxRTtRQUNyRUMsUUFBUTtRQUNSLGlFQUFpRTtRQUNqRSw2REFBNkQ7UUFDN0QsMkVBQTJFO1FBQzNFLHdFQUF3RTtRQUN4RSxnQkFBZ0I7UUFDaEIseURBQXlEO1FBQ3pELDhFQUE4RTtRQUM5RUMsVUFBVTtRQUNWLG1FQUFtRTtRQUNuRUMsV0FBVztRQUNYQyxVQUFVO1FBQ1ZDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2VsbS5qcz9lY2YxIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGVsbVxuZWxtLmRpc3BsYXlOYW1lID0gJ2VsbSdcbmVsbS5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGVsbShQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuZWxtID0ge1xuICAgIGNvbW1lbnQ6IC8tLS4qfFxcey1bXFxzXFxTXSo/LVxcfS8sXG4gICAgY2hhcjoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLycoPzpbXlxcXFwnXFxyXFxuXXxcXFxcKD86W2FiZm5ydHZcXFxcJ118XFxkK3x4WzAtOWEtZkEtRl0rfHVcXHtbMC05YS1mQS1GXStcXH0pKScvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBzdHJpbmc6IFtcbiAgICAgIHtcbiAgICAgICAgLy8gTXVsdGlsaW5lIHN0cmluZ3MgYXJlIHdyYXBwZWQgaW4gdHJpcGxlIFwiLiBRdW90ZXMgbWF5IGFwcGVhciB1bmVzY2FwZWQuXG4gICAgICAgIHBhdHRlcm46IC9cIlwiXCJbXFxzXFxTXSo/XCJcIlwiLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvXCIoPzpbXlxcXFxcIlxcclxcbl18XFxcXC4pKlwiLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9XG4gICAgXSxcbiAgICAnaW1wb3J0LXN0YXRlbWVudCc6IHtcbiAgICAgIC8vIFRoZSBpbXBvcnRlZCBvciBoaWRkZW4gbmFtZXMgYXJlIG5vdCBpbmNsdWRlZCBpbiB0aGlzIGltcG9ydFxuICAgICAgLy8gc3RhdGVtZW50LiBUaGlzIGlzIGJlY2F1c2Ugd2Ugd2FudCB0byBoaWdobGlnaHQgdGhvc2UgZXhhY3RseSBsaWtlXG4gICAgICAvLyB3ZSBkbyBmb3IgdGhlIG5hbWVzIGluIHRoZSBwcm9ncmFtLlxuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyheW1xcdCBdKilpbXBvcnRcXHMrW0EtWl1cXHcqKD86XFwuW0EtWl1cXHcqKSooPzpcXHMrYXNcXHMrKD86W0EtWl1cXHcqKSg/OlxcLltBLVpdXFx3KikqKT8oPzpcXHMrZXhwb3NpbmdcXHMrKT8vbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAga2V5d29yZDogL1xcYig/OmFzfGV4cG9zaW5nfGltcG9ydClcXGIvXG4gICAgICB9XG4gICAgfSxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OmFsaWFzfGFzfGNhc2V8ZWxzZXxleHBvc2luZ3xpZnxpbnxpbmZpeGx8aW5maXhyfGxldHxtb2R1bGV8b2Z8dGhlbnx0eXBlKVxcYi8sXG4gICAgLy8gVGhlc2UgYXJlIGJ1aWx0aW4gdmFyaWFibGVzIG9ubHkuIENvbnN0cnVjdG9ycyBhcmUgaGlnaGxpZ2h0ZWQgbGF0ZXIgYXMgYSBjb25zdGFudC5cbiAgICBidWlsdGluOlxuICAgICAgL1xcYig/OmFic3xhY29zfGFsd2F5c3xhc2lufGF0YW58YXRhbjJ8Y2VpbGluZ3xjbGFtcHxjb21wYXJlfGNvc3xjdXJyeXxkZWdyZWVzfGV8ZmxpcHxmbG9vcnxmcm9tUG9sYXJ8aWRlbnRpdHl8aXNJbmZpbml0ZXxpc05hTnxsb2dCYXNlfG1heHxtaW58bmVnYXRlfG5ldmVyfG5vdHxwaXxyYWRpYW5zfHJlbXxyb3VuZHxzaW58c3FydHx0YW58dG9GbG9hdHx0b1BvbGFyfHRvU3RyaW5nfHRydW5jYXRlfHR1cm5zfHVuY3Vycnl8eG9yKVxcYi8sXG4gICAgLy8gZGVjaW1hbCBpbnRlZ2VycyBhbmQgZmxvYXRpbmcgcG9pbnQgbnVtYmVycyB8IGhleGFkZWNpbWFsIGludGVnZXJzXG4gICAgbnVtYmVyOiAvXFxiKD86XFxkKyg/OlxcLlxcZCspPyg/OmVbKy1dP1xcZCspP3wweFswLTlhLWZdKylcXGIvaSxcbiAgICAvLyBNb3N0IG9mIHRoaXMgaXMgbmVlZGVkIGJlY2F1c2Ugb2YgdGhlIG1lYW5pbmcgb2YgYSBzaW5nbGUgJy4nLlxuICAgIC8vIElmIGl0IHN0YW5kcyBhbG9uZSBmcmVlbHksIGl0IGlzIHRoZSBmdW5jdGlvbiBjb21wb3NpdGlvbi5cbiAgICAvLyBJdCBtYXkgYWxzbyBiZSBhIHNlcGFyYXRvciBiZXR3ZWVuIGEgbW9kdWxlIG5hbWUgYW5kIGFuIGlkZW50aWZpZXIgPT4gbm9cbiAgICAvLyBvcGVyYXRvci4gSWYgaXQgY29tZXMgdG9nZXRoZXIgd2l0aCBvdGhlciBzcGVjaWFsIGNoYXJhY3RlcnMgaXQgaXMgYW5cbiAgICAvLyBvcGVyYXRvciB0b28uXG4gICAgLy8gVmFsaWQgb3BlcmF0b3IgY2hhcmFjdGVycyBpbiAwLjE4OiArLS8qPS4kPD46JnxePyUjQH4hXG4gICAgLy8gUmVmOiBodHRwczovL2dyb3Vwcy5nb29nbGUuY29tL2ZvcnVtLyMhbXNnL2VsbS1kZXYvMEFIU25EZGtTa1EvRTBTVlU3MEpFUUFKXG4gICAgb3BlcmF0b3I6IC9cXHNcXC5cXHN8WytcXC0vKj0uJDw+OiZ8Xj8lI0B+IV17Mix9fFsrXFwtLyo9JDw+OiZ8Xj8lI0B+IV0vLFxuICAgIC8vIEluIEVsbSwgbmVhcmx5IGV2ZXJ5dGhpbmcgaXMgYSB2YXJpYWJsZSwgZG8gbm90IGhpZ2hsaWdodCB0aGVzZS5cbiAgICBodmFyaWFibGU6IC9cXGIoPzpbQS1aXVxcdypcXC4pKlthLXpdXFx3KlxcYi8sXG4gICAgY29uc3RhbnQ6IC9cXGIoPzpbQS1aXVxcdypcXC4pKltBLVpdXFx3KlxcYi8sXG4gICAgcHVuY3R1YXRpb246IC9be31bXFxdfCgpLC46XS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJlbG0iLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJjaGFyIiwicGF0dGVybiIsImdyZWVkeSIsInN0cmluZyIsImxvb2tiZWhpbmQiLCJpbnNpZGUiLCJrZXl3b3JkIiwiYnVpbHRpbiIsIm51bWJlciIsIm9wZXJhdG9yIiwiaHZhcmlhYmxlIiwiY29uc3RhbnQiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/elm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/erb.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/erb.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorRuby = __webpack_require__(/*! ./ruby.js */ \"(ssr)/./node_modules/refractor/lang/ruby.js\");\nvar refractorMarkupTemplating = __webpack_require__(/*! ./markup-templating.js */ \"(ssr)/./node_modules/refractor/lang/markup-templating.js\");\nmodule.exports = erb;\nerb.displayName = \"erb\";\nerb.aliases = [];\nfunction erb(Prism) {\n    Prism.register(refractorRuby);\n    Prism.register(refractorMarkupTemplating);\n    (function(Prism) {\n        Prism.languages.erb = {\n            delimiter: {\n                pattern: /^(\\s*)<%=?|%>(?=\\s*$)/,\n                lookbehind: true,\n                alias: \"punctuation\"\n            },\n            ruby: {\n                pattern: /\\s*\\S[\\s\\S]*/,\n                alias: \"language-ruby\",\n                inside: Prism.languages.ruby\n            }\n        };\n        Prism.hooks.add(\"before-tokenize\", function(env) {\n            var erbPattern = /<%=?(?:[^\\r\\n]|[\\r\\n](?!=begin)|[\\r\\n]=begin\\s(?:[^\\r\\n]|[\\r\\n](?!=end))*[\\r\\n]=end)+?%>/g;\n            Prism.languages[\"markup-templating\"].buildPlaceholders(env, \"erb\", erbPattern);\n        });\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            Prism.languages[\"markup-templating\"].tokenizePlaceholders(env, \"erb\");\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZXJiLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsSUFBSUEsZ0JBQWdCQyxtQkFBT0EsQ0FBQztBQUM1QixJQUFJQyw0QkFBNEJELG1CQUFPQSxDQUFDO0FBQ3hDRSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxJQUFJQyxXQUFXLEdBQUc7QUFDbEJELElBQUlFLE9BQU8sR0FBRyxFQUFFO0FBQ2hCLFNBQVNGLElBQUlHLEtBQUs7SUFDaEJBLE1BQU1DLFFBQVEsQ0FBQ1Q7SUFDZlEsTUFBTUMsUUFBUSxDQUFDUDtJQUNiLFVBQVVNLEtBQUs7UUFDZkEsTUFBTUUsU0FBUyxDQUFDTCxHQUFHLEdBQUc7WUFDcEJNLFdBQVc7Z0JBQ1RDLFNBQVM7Z0JBQ1RDLFlBQVk7Z0JBQ1pDLE9BQU87WUFDVDtZQUNBQyxNQUFNO2dCQUNKSCxTQUFTO2dCQUNURSxPQUFPO2dCQUNQRSxRQUFRUixNQUFNRSxTQUFTLENBQUNLLElBQUk7WUFDOUI7UUFDRjtRQUNBUCxNQUFNUyxLQUFLLENBQUNDLEdBQUcsQ0FBQyxtQkFBbUIsU0FBVUMsR0FBRztZQUM5QyxJQUFJQyxhQUNGO1lBQ0ZaLE1BQU1FLFNBQVMsQ0FBQyxvQkFBb0IsQ0FBQ1csaUJBQWlCLENBQ3BERixLQUNBLE9BQ0FDO1FBRUo7UUFDQVosTUFBTVMsS0FBSyxDQUFDQyxHQUFHLENBQUMsa0JBQWtCLFNBQVVDLEdBQUc7WUFDN0NYLE1BQU1FLFNBQVMsQ0FBQyxvQkFBb0IsQ0FBQ1ksb0JBQW9CLENBQUNILEtBQUs7UUFDakU7SUFDRixHQUFHWDtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2VyYi5qcz81ZmI4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xudmFyIHJlZnJhY3RvclJ1YnkgPSByZXF1aXJlKCcuL3J1YnkuanMnKVxudmFyIHJlZnJhY3Rvck1hcmt1cFRlbXBsYXRpbmcgPSByZXF1aXJlKCcuL21hcmt1cC10ZW1wbGF0aW5nLmpzJylcbm1vZHVsZS5leHBvcnRzID0gZXJiXG5lcmIuZGlzcGxheU5hbWUgPSAnZXJiJ1xuZXJiLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gZXJiKFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvclJ1YnkpXG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3Rvck1hcmt1cFRlbXBsYXRpbmcpXG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgUHJpc20ubGFuZ3VhZ2VzLmVyYiA9IHtcbiAgICAgIGRlbGltaXRlcjoge1xuICAgICAgICBwYXR0ZXJuOiAvXihcXHMqKTwlPT98JT4oPz1cXHMqJCkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgfSxcbiAgICAgIHJ1Ynk6IHtcbiAgICAgICAgcGF0dGVybjogL1xccypcXFNbXFxzXFxTXSovLFxuICAgICAgICBhbGlhczogJ2xhbmd1YWdlLXJ1YnknLFxuICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy5ydWJ5XG4gICAgICB9XG4gICAgfVxuICAgIFByaXNtLmhvb2tzLmFkZCgnYmVmb3JlLXRva2VuaXplJywgZnVuY3Rpb24gKGVudikge1xuICAgICAgdmFyIGVyYlBhdHRlcm4gPVxuICAgICAgICAvPCU9Pyg/OlteXFxyXFxuXXxbXFxyXFxuXSg/IT1iZWdpbil8W1xcclxcbl09YmVnaW5cXHMoPzpbXlxcclxcbl18W1xcclxcbl0oPyE9ZW5kKSkqW1xcclxcbl09ZW5kKSs/JT4vZ1xuICAgICAgUHJpc20ubGFuZ3VhZ2VzWydtYXJrdXAtdGVtcGxhdGluZyddLmJ1aWxkUGxhY2Vob2xkZXJzKFxuICAgICAgICBlbnYsXG4gICAgICAgICdlcmInLFxuICAgICAgICBlcmJQYXR0ZXJuXG4gICAgICApXG4gICAgfSlcbiAgICBQcmlzbS5ob29rcy5hZGQoJ2FmdGVyLXRva2VuaXplJywgZnVuY3Rpb24gKGVudikge1xuICAgICAgUHJpc20ubGFuZ3VhZ2VzWydtYXJrdXAtdGVtcGxhdGluZyddLnRva2VuaXplUGxhY2Vob2xkZXJzKGVudiwgJ2VyYicpXG4gICAgfSlcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yUnVieSIsInJlcXVpcmUiLCJyZWZyYWN0b3JNYXJrdXBUZW1wbGF0aW5nIiwibW9kdWxlIiwiZXhwb3J0cyIsImVyYiIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJkZWxpbWl0ZXIiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImFsaWFzIiwicnVieSIsImluc2lkZSIsImhvb2tzIiwiYWRkIiwiZW52IiwiZXJiUGF0dGVybiIsImJ1aWxkUGxhY2Vob2xkZXJzIiwidG9rZW5pemVQbGFjZWhvbGRlcnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/erb.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/erlang.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/erlang.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = erlang;\nerlang.displayName = \"erlang\";\nerlang.aliases = [];\nfunction erlang(Prism) {\n    Prism.languages.erlang = {\n        comment: /%.+/,\n        string: {\n            pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n            greedy: true\n        },\n        \"quoted-function\": {\n            pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n            alias: \"function\"\n        },\n        \"quoted-atom\": {\n            pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n            alias: \"atom\"\n        },\n        boolean: /\\b(?:false|true)\\b/,\n        keyword: /\\b(?:after|case|catch|end|fun|if|of|receive|try|when)\\b/,\n        number: [\n            /\\$\\\\?./,\n            /\\b\\d+#[a-z0-9]+/i,\n            /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\n        ],\n        function: /\\b[a-z][\\w@]*(?=\\()/,\n        variable: {\n            // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n            pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n            lookbehind: true\n        },\n        operator: [\n            /[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:and|andalso|band|bnot|bor|bsl|bsr|bxor|div|not|or|orelse|rem|xor)\\b/,\n            {\n                // We don't want to match <<\n                pattern: /(^|[^<])<(?!<)/,\n                lookbehind: true\n            },\n            {\n                // We don't want to match >>\n                pattern: /(^|[^>])>(?!>)/,\n                lookbehind: true\n            }\n        ],\n        atom: /\\b[a-z][\\w@]*/,\n        punctuation: /[()[\\]{}:;,.#|]|<<|>>/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZXJsYW5nLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLE9BQU9DLFdBQVcsR0FBRztBQUNyQkQsT0FBT0UsT0FBTyxHQUFHLEVBQUU7QUFDbkIsU0FBU0YsT0FBT0csS0FBSztJQUNuQkEsTUFBTUMsU0FBUyxDQUFDSixNQUFNLEdBQUc7UUFDdkJLLFNBQVM7UUFDVEMsUUFBUTtZQUNOQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBLG1CQUFtQjtZQUNqQkQsU0FBUztZQUNURSxPQUFPO1FBQ1Q7UUFDQSxlQUFlO1lBQ2JGLFNBQVM7WUFDVEUsT0FBTztRQUNUO1FBQ0FDLFNBQVM7UUFDVEMsU0FBUztRQUNUQyxRQUFRO1lBQ047WUFDQTtZQUNBO1NBQ0Q7UUFDREMsVUFBVTtRQUNWQyxVQUFVO1lBQ1IsNEVBQTRFO1lBQzVFUCxTQUFTO1lBQ1RRLFlBQVk7UUFDZDtRQUNBQyxVQUFVO1lBQ1I7WUFDQTtnQkFDRSw0QkFBNEI7Z0JBQzVCVCxTQUFTO2dCQUNUUSxZQUFZO1lBQ2Q7WUFDQTtnQkFDRSw0QkFBNEI7Z0JBQzVCUixTQUFTO2dCQUNUUSxZQUFZO1lBQ2Q7U0FDRDtRQUNERSxNQUFNO1FBQ05DLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2VybGFuZy5qcz9jMDY2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGVybGFuZ1xuZXJsYW5nLmRpc3BsYXlOYW1lID0gJ2VybGFuZydcbmVybGFuZy5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGVybGFuZyhQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuZXJsYW5nID0ge1xuICAgIGNvbW1lbnQ6IC8lLisvLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1wiKD86XFxcXC58W15cXFxcXCJcXHJcXG5dKSpcIi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgICdxdW90ZWQtZnVuY3Rpb24nOiB7XG4gICAgICBwYXR0ZXJuOiAvJyg/OlxcXFwufFteXFxcXCdcXHJcXG5dKSsnKD89XFwoKS8sXG4gICAgICBhbGlhczogJ2Z1bmN0aW9uJ1xuICAgIH0sXG4gICAgJ3F1b3RlZC1hdG9tJzoge1xuICAgICAgcGF0dGVybjogLycoPzpcXFxcLnxbXlxcXFwnXFxyXFxuXSkrJy8sXG4gICAgICBhbGlhczogJ2F0b20nXG4gICAgfSxcbiAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvLFxuICAgIGtleXdvcmQ6IC9cXGIoPzphZnRlcnxjYXNlfGNhdGNofGVuZHxmdW58aWZ8b2Z8cmVjZWl2ZXx0cnl8d2hlbilcXGIvLFxuICAgIG51bWJlcjogW1xuICAgICAgL1xcJFxcXFw/Li8sXG4gICAgICAvXFxiXFxkKyNbYS16MC05XSsvaSxcbiAgICAgIC8oPzpcXGJcXGQrKD86XFwuXFxkKik/fFxcQlxcLlxcZCspKD86ZVsrLV0/XFxkKyk/L2lcbiAgICBdLFxuICAgIGZ1bmN0aW9uOiAvXFxiW2Etel1bXFx3QF0qKD89XFwoKS8sXG4gICAgdmFyaWFibGU6IHtcbiAgICAgIC8vIExvb2stYmVoaW5kIGlzIHVzZWQgdG8gcHJldmVudCB3cm9uZyBoaWdobGlnaHRpbmcgb2YgYXRvbXMgY29udGFpbmluZyBcIkBcIlxuICAgICAgcGF0dGVybjogLyhefFteQF0pKD86XFxifFxcPylbQS1aX11bXFx3QF0qLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIG9wZXJhdG9yOiBbXG4gICAgICAvWz1cXC88PjpdPXw9WzpcXC9dPXxcXCtcXCs/fC0tP3xbPSpcXC8hXXxcXGIoPzphbmR8YW5kYWxzb3xiYW5kfGJub3R8Ym9yfGJzbHxic3J8YnhvcnxkaXZ8bm90fG9yfG9yZWxzZXxyZW18eG9yKVxcYi8sXG4gICAgICB7XG4gICAgICAgIC8vIFdlIGRvbid0IHdhbnQgdG8gbWF0Y2ggPDxcbiAgICAgICAgcGF0dGVybjogLyhefFtePF0pPCg/ITwpLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgLy8gV2UgZG9uJ3Qgd2FudCB0byBtYXRjaCA+PlxuICAgICAgICBwYXR0ZXJuOiAvKF58W14+XSk+KD8hPikvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9XG4gICAgXSxcbiAgICBhdG9tOiAvXFxiW2Etel1bXFx3QF0qLyxcbiAgICBwdW5jdHVhdGlvbjogL1soKVtcXF17fTo7LC4jfF18PDx8Pj4vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiZXJsYW5nIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50Iiwic3RyaW5nIiwicGF0dGVybiIsImdyZWVkeSIsImFsaWFzIiwiYm9vbGVhbiIsImtleXdvcmQiLCJudW1iZXIiLCJmdW5jdGlvbiIsInZhcmlhYmxlIiwibG9va2JlaGluZCIsIm9wZXJhdG9yIiwiYXRvbSIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/erlang.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/etlua.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/etlua.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorLua = __webpack_require__(/*! ./lua.js */ \"(ssr)/./node_modules/refractor/lang/lua.js\");\nvar refractorMarkupTemplating = __webpack_require__(/*! ./markup-templating.js */ \"(ssr)/./node_modules/refractor/lang/markup-templating.js\");\nmodule.exports = etlua;\netlua.displayName = \"etlua\";\netlua.aliases = [];\nfunction etlua(Prism) {\n    Prism.register(refractorLua);\n    Prism.register(refractorMarkupTemplating);\n    (function(Prism) {\n        Prism.languages.etlua = {\n            delimiter: {\n                pattern: /^<%[-=]?|-?%>$/,\n                alias: \"punctuation\"\n            },\n            \"language-lua\": {\n                pattern: /[\\s\\S]+/,\n                inside: Prism.languages.lua\n            }\n        };\n        Prism.hooks.add(\"before-tokenize\", function(env) {\n            var pattern = /<%[\\s\\S]+?%>/g;\n            Prism.languages[\"markup-templating\"].buildPlaceholders(env, \"etlua\", pattern);\n        });\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            Prism.languages[\"markup-templating\"].tokenizePlaceholders(env, \"etlua\");\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZXRsdWEuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxJQUFJQSxlQUFlQyxtQkFBT0EsQ0FBQztBQUMzQixJQUFJQyw0QkFBNEJELG1CQUFPQSxDQUFDO0FBQ3hDRSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxNQUFNQyxXQUFXLEdBQUc7QUFDcEJELE1BQU1FLE9BQU8sR0FBRyxFQUFFO0FBQ2xCLFNBQVNGLE1BQU1HLEtBQUs7SUFDbEJBLE1BQU1DLFFBQVEsQ0FBQ1Q7SUFDZlEsTUFBTUMsUUFBUSxDQUFDUDtJQUNiLFVBQVVNLEtBQUs7UUFDZkEsTUFBTUUsU0FBUyxDQUFDTCxLQUFLLEdBQUc7WUFDdEJNLFdBQVc7Z0JBQ1RDLFNBQVM7Z0JBQ1RDLE9BQU87WUFDVDtZQUNBLGdCQUFnQjtnQkFDZEQsU0FBUztnQkFDVEUsUUFBUU4sTUFBTUUsU0FBUyxDQUFDSyxHQUFHO1lBQzdCO1FBQ0Y7UUFDQVAsTUFBTVEsS0FBSyxDQUFDQyxHQUFHLENBQUMsbUJBQW1CLFNBQVVDLEdBQUc7WUFDOUMsSUFBSU4sVUFBVTtZQUNkSixNQUFNRSxTQUFTLENBQUMsb0JBQW9CLENBQUNTLGlCQUFpQixDQUNwREQsS0FDQSxTQUNBTjtRQUVKO1FBQ0FKLE1BQU1RLEtBQUssQ0FBQ0MsR0FBRyxDQUFDLGtCQUFrQixTQUFVQyxHQUFHO1lBQzdDVixNQUFNRSxTQUFTLENBQUMsb0JBQW9CLENBQUNVLG9CQUFvQixDQUFDRixLQUFLO1FBQ2pFO0lBQ0YsR0FBR1Y7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9ldGx1YS5qcz81OTI3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xudmFyIHJlZnJhY3Rvckx1YSA9IHJlcXVpcmUoJy4vbHVhLmpzJylcbnZhciByZWZyYWN0b3JNYXJrdXBUZW1wbGF0aW5nID0gcmVxdWlyZSgnLi9tYXJrdXAtdGVtcGxhdGluZy5qcycpXG5tb2R1bGUuZXhwb3J0cyA9IGV0bHVhXG5ldGx1YS5kaXNwbGF5TmFtZSA9ICdldGx1YSdcbmV0bHVhLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gZXRsdWEoUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yTHVhKVxuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JNYXJrdXBUZW1wbGF0aW5nKVxuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIFByaXNtLmxhbmd1YWdlcy5ldGx1YSA9IHtcbiAgICAgIGRlbGltaXRlcjoge1xuICAgICAgICBwYXR0ZXJuOiAvXjwlWy09XT98LT8lPiQvLFxuICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgfSxcbiAgICAgICdsYW5ndWFnZS1sdWEnOiB7XG4gICAgICAgIHBhdHRlcm46IC9bXFxzXFxTXSsvLFxuICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy5sdWFcbiAgICAgIH1cbiAgICB9XG4gICAgUHJpc20uaG9va3MuYWRkKCdiZWZvcmUtdG9rZW5pemUnLCBmdW5jdGlvbiAoZW52KSB7XG4gICAgICB2YXIgcGF0dGVybiA9IC88JVtcXHNcXFNdKz8lPi9nXG4gICAgICBQcmlzbS5sYW5ndWFnZXNbJ21hcmt1cC10ZW1wbGF0aW5nJ10uYnVpbGRQbGFjZWhvbGRlcnMoXG4gICAgICAgIGVudixcbiAgICAgICAgJ2V0bHVhJyxcbiAgICAgICAgcGF0dGVyblxuICAgICAgKVxuICAgIH0pXG4gICAgUHJpc20uaG9va3MuYWRkKCdhZnRlci10b2tlbml6ZScsIGZ1bmN0aW9uIChlbnYpIHtcbiAgICAgIFByaXNtLmxhbmd1YWdlc1snbWFya3VwLXRlbXBsYXRpbmcnXS50b2tlbml6ZVBsYWNlaG9sZGVycyhlbnYsICdldGx1YScpXG4gICAgfSlcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yTHVhIiwicmVxdWlyZSIsInJlZnJhY3Rvck1hcmt1cFRlbXBsYXRpbmciLCJtb2R1bGUiLCJleHBvcnRzIiwiZXRsdWEiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwibGFuZ3VhZ2VzIiwiZGVsaW1pdGVyIiwicGF0dGVybiIsImFsaWFzIiwiaW5zaWRlIiwibHVhIiwiaG9va3MiLCJhZGQiLCJlbnYiLCJidWlsZFBsYWNlaG9sZGVycyIsInRva2VuaXplUGxhY2Vob2xkZXJzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/etlua.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/excel-formula.js":
/*!******************************************************!*\
  !*** ./node_modules/refractor/lang/excel-formula.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = excelFormula;\nexcelFormula.displayName = \"excelFormula\";\nexcelFormula.aliases = [];\nfunction excelFormula(Prism) {\n    Prism.languages[\"excel-formula\"] = {\n        comment: {\n            pattern: /(\\bN\\(\\s*)\"(?:[^\"]|\"\")*\"(?=\\s*\\))/i,\n            lookbehind: true,\n            greedy: true\n        },\n        string: {\n            pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n            greedy: true\n        },\n        reference: {\n            // https://www.ablebits.com/office-addins-blog/2015/12/08/excel-reference-another-sheet-workbook/\n            // Sales!B2\n            // 'Winter sales'!B2\n            // [Sales.xlsx]Jan!B2:B5\n            // D:\\Reports\\[Sales.xlsx]Jan!B2:B5\n            // '[Sales.xlsx]Jan sales'!B2:B5\n            // 'D:\\Reports\\[Sales.xlsx]Jan sales'!B2:B5\n            pattern: /(?:'[^']*'|(?:[^\\s()[\\]{}<>*?\"';,$&]*\\[[^^\\s()[\\]{}<>*?\"']+\\])?\\w+)!/,\n            greedy: true,\n            alias: \"string\",\n            inside: {\n                operator: /!$/,\n                punctuation: /'/,\n                sheet: {\n                    pattern: /[^[\\]]+$/,\n                    alias: \"function\"\n                },\n                file: {\n                    pattern: /\\[[^[\\]]+\\]$/,\n                    inside: {\n                        punctuation: /[[\\]]/\n                    }\n                },\n                path: /[\\s\\S]+/\n            }\n        },\n        \"function-name\": {\n            pattern: /\\b[A-Z]\\w*(?=\\()/i,\n            alias: \"keyword\"\n        },\n        range: {\n            pattern: /\\$?\\b(?:[A-Z]+\\$?\\d+:\\$?[A-Z]+\\$?\\d+|[A-Z]+:\\$?[A-Z]+|\\d+:\\$?\\d+)\\b/i,\n            alias: \"property\",\n            inside: {\n                operator: /:/,\n                cell: /\\$?[A-Z]+\\$?\\d+/i,\n                column: /\\$?[A-Z]+/i,\n                row: /\\$?\\d+/\n            }\n        },\n        cell: {\n            // Excel is case insensitive, so the string \"foo1\" could be either a variable or a cell.\n            // To combat this, we match cells case insensitive, if the contain at least one \"$\", and case sensitive otherwise.\n            pattern: /\\b[A-Z]+\\d+\\b|\\$[A-Za-z]+\\$?\\d+\\b|\\b[A-Za-z]+\\$\\d+\\b/,\n            alias: \"property\"\n        },\n        number: /(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n        boolean: /\\b(?:FALSE|TRUE)\\b/i,\n        operator: /[-+*/^%=&,]|<[=>]?|>=?/,\n        punctuation: /[[\\]();{}|]/\n    };\n    Prism.languages[\"xlsx\"] = Prism.languages[\"xls\"] = Prism.languages[\"excel-formula\"];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZXhjZWwtZm9ybXVsYS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxhQUFhQyxXQUFXLEdBQUc7QUFDM0JELGFBQWFFLE9BQU8sR0FBRyxFQUFFO0FBQ3pCLFNBQVNGLGFBQWFHLEtBQUs7SUFDekJBLE1BQU1DLFNBQVMsQ0FBQyxnQkFBZ0IsR0FBRztRQUNqQ0MsU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsUUFBUTtRQUNWO1FBQ0FDLFFBQVE7WUFDTkgsU0FBUztZQUNURSxRQUFRO1FBQ1Y7UUFDQUUsV0FBVztZQUNULGlHQUFpRztZQUNqRyxXQUFXO1lBQ1gsb0JBQW9CO1lBQ3BCLHdCQUF3QjtZQUN4QixtQ0FBbUM7WUFDbkMsZ0NBQWdDO1lBQ2hDLDJDQUEyQztZQUMzQ0osU0FDRTtZQUNGRSxRQUFRO1lBQ1JHLE9BQU87WUFDUEMsUUFBUTtnQkFDTkMsVUFBVTtnQkFDVkMsYUFBYTtnQkFDYkMsT0FBTztvQkFDTFQsU0FBUztvQkFDVEssT0FBTztnQkFDVDtnQkFDQUssTUFBTTtvQkFDSlYsU0FBUztvQkFDVE0sUUFBUTt3QkFDTkUsYUFBYTtvQkFDZjtnQkFDRjtnQkFDQUcsTUFBTTtZQUNSO1FBQ0Y7UUFDQSxpQkFBaUI7WUFDZlgsU0FBUztZQUNUSyxPQUFPO1FBQ1Q7UUFDQU8sT0FBTztZQUNMWixTQUNFO1lBQ0ZLLE9BQU87WUFDUEMsUUFBUTtnQkFDTkMsVUFBVTtnQkFDVk0sTUFBTTtnQkFDTkMsUUFBUTtnQkFDUkMsS0FBSztZQUNQO1FBQ0Y7UUFDQUYsTUFBTTtZQUNKLHdGQUF3RjtZQUN4RixrSEFBa0g7WUFDbEhiLFNBQVM7WUFDVEssT0FBTztRQUNUO1FBQ0FXLFFBQVE7UUFDUkMsU0FBUztRQUNUVixVQUFVO1FBQ1ZDLGFBQWE7SUFDZjtJQUNBWCxNQUFNQyxTQUFTLENBQUMsT0FBTyxHQUFHRCxNQUFNQyxTQUFTLENBQUMsTUFBTSxHQUM5Q0QsTUFBTUMsU0FBUyxDQUFDLGdCQUFnQjtBQUNwQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9leGNlbC1mb3JtdWxhLmpzP2YxMjgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gZXhjZWxGb3JtdWxhXG5leGNlbEZvcm11bGEuZGlzcGxheU5hbWUgPSAnZXhjZWxGb3JtdWxhJ1xuZXhjZWxGb3JtdWxhLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gZXhjZWxGb3JtdWxhKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlc1snZXhjZWwtZm9ybXVsYSddID0ge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC8oXFxiTlxcKFxccyopXCIoPzpbXlwiXXxcIlwiKSpcIig/PVxccypcXCkpL2ksXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIig/OlteXCJdfFwiXCIpKlwiKD8hXCIpLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgcmVmZXJlbmNlOiB7XG4gICAgICAvLyBodHRwczovL3d3dy5hYmxlYml0cy5jb20vb2ZmaWNlLWFkZGlucy1ibG9nLzIwMTUvMTIvMDgvZXhjZWwtcmVmZXJlbmNlLWFub3RoZXItc2hlZXQtd29ya2Jvb2svXG4gICAgICAvLyBTYWxlcyFCMlxuICAgICAgLy8gJ1dpbnRlciBzYWxlcychQjJcbiAgICAgIC8vIFtTYWxlcy54bHN4XUphbiFCMjpCNVxuICAgICAgLy8gRDpcXFJlcG9ydHNcXFtTYWxlcy54bHN4XUphbiFCMjpCNVxuICAgICAgLy8gJ1tTYWxlcy54bHN4XUphbiBzYWxlcychQjI6QjVcbiAgICAgIC8vICdEOlxcUmVwb3J0c1xcW1NhbGVzLnhsc3hdSmFuIHNhbGVzJyFCMjpCNVxuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyg/OidbXiddKid8KD86W15cXHMoKVtcXF17fTw+Kj9cIic7LCQmXSpcXFtbXl5cXHMoKVtcXF17fTw+Kj9cIiddK1xcXSk/XFx3KykhLyxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGFsaWFzOiAnc3RyaW5nJyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBvcGVyYXRvcjogLyEkLyxcbiAgICAgICAgcHVuY3R1YXRpb246IC8nLyxcbiAgICAgICAgc2hlZXQ6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvW15bXFxdXSskLyxcbiAgICAgICAgICBhbGlhczogJ2Z1bmN0aW9uJ1xuICAgICAgICB9LFxuICAgICAgICBmaWxlOiB7XG4gICAgICAgICAgcGF0dGVybjogL1xcW1teW1xcXV0rXFxdJC8sXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICBwdW5jdHVhdGlvbjogL1tbXFxdXS9cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHBhdGg6IC9bXFxzXFxTXSsvXG4gICAgICB9XG4gICAgfSxcbiAgICAnZnVuY3Rpb24tbmFtZSc6IHtcbiAgICAgIHBhdHRlcm46IC9cXGJbQS1aXVxcdyooPz1cXCgpL2ksXG4gICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgfSxcbiAgICByYW5nZToge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL1xcJD9cXGIoPzpbQS1aXStcXCQ/XFxkKzpcXCQ/W0EtWl0rXFwkP1xcZCt8W0EtWl0rOlxcJD9bQS1aXSt8XFxkKzpcXCQ/XFxkKylcXGIvaSxcbiAgICAgIGFsaWFzOiAncHJvcGVydHknLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIG9wZXJhdG9yOiAvOi8sXG4gICAgICAgIGNlbGw6IC9cXCQ/W0EtWl0rXFwkP1xcZCsvaSxcbiAgICAgICAgY29sdW1uOiAvXFwkP1tBLVpdKy9pLFxuICAgICAgICByb3c6IC9cXCQ/XFxkKy9cbiAgICAgIH1cbiAgICB9LFxuICAgIGNlbGw6IHtcbiAgICAgIC8vIEV4Y2VsIGlzIGNhc2UgaW5zZW5zaXRpdmUsIHNvIHRoZSBzdHJpbmcgXCJmb28xXCIgY291bGQgYmUgZWl0aGVyIGEgdmFyaWFibGUgb3IgYSBjZWxsLlxuICAgICAgLy8gVG8gY29tYmF0IHRoaXMsIHdlIG1hdGNoIGNlbGxzIGNhc2UgaW5zZW5zaXRpdmUsIGlmIHRoZSBjb250YWluIGF0IGxlYXN0IG9uZSBcIiRcIiwgYW5kIGNhc2Ugc2Vuc2l0aXZlIG90aGVyd2lzZS5cbiAgICAgIHBhdHRlcm46IC9cXGJbQS1aXStcXGQrXFxifFxcJFtBLVphLXpdK1xcJD9cXGQrXFxifFxcYltBLVphLXpdK1xcJFxcZCtcXGIvLFxuICAgICAgYWxpYXM6ICdwcm9wZXJ0eSdcbiAgICB9LFxuICAgIG51bWJlcjogLyg/OlxcYlxcZCsoPzpcXC5cXGQrKT98XFxCXFwuXFxkKykoPzplWystXT9cXGQrKT9cXGIvaSxcbiAgICBib29sZWFuOiAvXFxiKD86RkFMU0V8VFJVRSlcXGIvaSxcbiAgICBvcGVyYXRvcjogL1stKyovXiU9JixdfDxbPT5dP3w+PT8vLFxuICAgIHB1bmN0dWF0aW9uOiAvW1tcXF0oKTt7fXxdL1xuICB9XG4gIFByaXNtLmxhbmd1YWdlc1sneGxzeCddID0gUHJpc20ubGFuZ3VhZ2VzWyd4bHMnXSA9XG4gICAgUHJpc20ubGFuZ3VhZ2VzWydleGNlbC1mb3JtdWxhJ11cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiZXhjZWxGb3JtdWxhIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJncmVlZHkiLCJzdHJpbmciLCJyZWZlcmVuY2UiLCJhbGlhcyIsImluc2lkZSIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iLCJzaGVldCIsImZpbGUiLCJwYXRoIiwicmFuZ2UiLCJjZWxsIiwiY29sdW1uIiwicm93IiwibnVtYmVyIiwiYm9vbGVhbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/excel-formula.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/factor.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/factor.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = factor;\nfactor.displayName = \"factor\";\nfactor.aliases = [];\nfunction factor(Prism) {\n    ;\n    (function(Prism) {\n        var comment_inside = {\n            function: /\\b(?:BUGS?|FIX(?:MES?)?|NOTES?|TODOS?|XX+|HACKS?|WARN(?:ING)?|\\?{2,}|!{2,})\\b/\n        };\n        var string_inside = {\n            number: /\\\\[^\\s']|%\\w/\n        };\n        var factor = {\n            comment: [\n                {\n                    // ! single-line exclamation point comments with whitespace after/around the !\n                    pattern: /(^|\\s)(?:! .*|!$)/,\n                    lookbehind: true,\n                    inside: comment_inside\n                },\n                /* from basis/multiline: */ {\n                    // /* comment */, /* comment*/\n                    pattern: /(^|\\s)\\/\\*\\s[\\s\\S]*?\\*\\/(?=\\s|$)/,\n                    lookbehind: true,\n                    greedy: true,\n                    inside: comment_inside\n                },\n                {\n                    // ![[ comment ]] , ![===[ comment]===]\n                    pattern: /(^|\\s)!\\[(={0,6})\\[\\s[\\s\\S]*?\\]\\2\\](?=\\s|$)/,\n                    lookbehind: true,\n                    greedy: true,\n                    inside: comment_inside\n                }\n            ],\n            number: [\n                {\n                    // basic base 10 integers 9, -9\n                    pattern: /(^|\\s)[+-]?\\d+(?=\\s|$)/,\n                    lookbehind: true\n                },\n                {\n                    // base prefix integers 0b010 0o70 0xad 0d10 0XAD -0xa9\n                    pattern: /(^|\\s)[+-]?0(?:b[01]+|o[0-7]+|d\\d+|x[\\dA-F]+)(?=\\s|$)/i,\n                    lookbehind: true\n                },\n                {\n                    // fractional ratios 1/5 -1/5 and the literal float approximations 1/5. -1/5.\n                    pattern: /(^|\\s)[+-]?\\d+\\/\\d+\\.?(?=\\s|$)/,\n                    lookbehind: true\n                },\n                {\n                    // positive mixed numbers 23+1/5 +23+1/5\n                    pattern: /(^|\\s)\\+?\\d+\\+\\d+\\/\\d+(?=\\s|$)/,\n                    lookbehind: true\n                },\n                {\n                    // negative mixed numbers -23-1/5\n                    pattern: /(^|\\s)-\\d+-\\d+\\/\\d+(?=\\s|$)/,\n                    lookbehind: true\n                },\n                {\n                    // basic decimal floats -0.01 0. .0 .1 -.1 -1. -12.13 +12.13\n                    // and scientific notation with base 10 exponents 3e4 3e-4 .3e-4\n                    pattern: /(^|\\s)[+-]?(?:\\d*\\.\\d+|\\d+\\.\\d*|\\d+)(?:e[+-]?\\d+)?(?=\\s|$)/i,\n                    lookbehind: true\n                },\n                {\n                    // NAN literal syntax NAN: 80000deadbeef, NAN: a\n                    pattern: /(^|\\s)NAN:\\s+[\\da-fA-F]+(?=\\s|$)/,\n                    lookbehind: true\n                },\n                {\n                    /*\nbase prefix floats 0x1.0p3 (8.0) 0b1.010p2 (5.0) 0x1.p1 0b1.11111111p11111...\n\"The normalized hex form ±0x1.MMMMMMMMMMMMM[pP]±EEEE allows any floating-point number to be specified precisely.\nThe values of MMMMMMMMMMMMM and EEEE map directly to the mantissa and exponent fields of the binary IEEE 754 representation.\"\n<https://docs.factorcode.org/content/article-syntax-floats.html>\n*/ pattern: /(^|\\s)[+-]?0(?:b1\\.[01]*|o1\\.[0-7]*|d1\\.\\d*|x1\\.[\\dA-F]*)p\\d+(?=\\s|$)/i,\n                    lookbehind: true\n                }\n            ],\n            // R/ regexp?\\/\\\\/\n            regexp: {\n                pattern: /(^|\\s)R\\/\\s(?:\\\\\\S|[^\\\\/])*\\/(?:[idmsr]*|[idmsr]+-[idmsr]+)(?=\\s|$)/,\n                lookbehind: true,\n                alias: \"number\",\n                inside: {\n                    variable: /\\\\\\S/,\n                    keyword: /[+?*\\[\\]^$(){}.|]/,\n                    operator: {\n                        pattern: /(\\/)[idmsr]+(?:-[idmsr]+)?/,\n                        lookbehind: true\n                    }\n                }\n            },\n            boolean: {\n                pattern: /(^|\\s)[tf](?=\\s|$)/,\n                lookbehind: true\n            },\n            // SBUF\" asd\", URL\" ://...\", P\" /etc/\"\n            \"custom-string\": {\n                pattern: /(^|\\s)[A-Z0-9\\-]+\"\\s(?:\\\\\\S|[^\"\\\\])*\"/,\n                lookbehind: true,\n                greedy: true,\n                alias: \"string\",\n                inside: {\n                    number: /\\\\\\S|%\\w|\\//\n                }\n            },\n            \"multiline-string\": [\n                {\n                    // STRING: name \\n content \\n ; -> CONSTANT: name \"content\" (symbol)\n                    pattern: /(^|\\s)STRING:\\s+\\S+(?:\\n|\\r\\n).*(?:\\n|\\r\\n)\\s*;(?=\\s|$)/,\n                    lookbehind: true,\n                    greedy: true,\n                    alias: \"string\",\n                    inside: {\n                        number: string_inside.number,\n                        // trailing semicolon on its own line\n                        \"semicolon-or-setlocal\": {\n                            pattern: /([\\r\\n][ \\t]*);(?=\\s|$)/,\n                            lookbehind: true,\n                            alias: \"function\"\n                        }\n                    }\n                },\n                {\n                    // HEREDOC: marker \\n content \\n marker ; -> \"content\" (immediate)\n                    pattern: /(^|\\s)HEREDOC:\\s+\\S+(?:\\n|\\r\\n).*(?:\\n|\\r\\n)\\s*\\S+(?=\\s|$)/,\n                    lookbehind: true,\n                    greedy: true,\n                    alias: \"string\",\n                    inside: string_inside\n                },\n                {\n                    // [[ string ]], [==[ string]==]\n                    pattern: /(^|\\s)\\[(={0,6})\\[\\s[\\s\\S]*?\\]\\2\\](?=\\s|$)/,\n                    lookbehind: true,\n                    greedy: true,\n                    alias: \"string\",\n                    inside: string_inside\n                }\n            ],\n            \"special-using\": {\n                pattern: /(^|\\s)USING:(?:\\s\\S+)*(?=\\s+;(?:\\s|$))/,\n                lookbehind: true,\n                alias: \"function\",\n                inside: {\n                    // this is essentially a regex for vocab names, which i don't want to specify\n                    // but the USING: gets picked up as a vocab name\n                    string: {\n                        pattern: /(\\s)[^:\\s]+/,\n                        lookbehind: true\n                    }\n                }\n            },\n            /* this description of stack effect literal syntax is not complete and not as specific as theoretically possible\ntrying to do better is more work and regex-computation-time than it's worth though.\n- we'd like to have the \"delimiter\" parts of the stack effect [ (, --, and ) ] be a different (less-important or comment-like) colour to the stack effect contents\n- we'd like if nested stack effects were treated as such rather than just appearing flat (with `inside`)\n- we'd like if the following variable name conventions were recognised specifically:\nspecial row variables = ..a b..\ntype and stack effect annotations end with a colon = ( quot: ( a: ( -- ) -- b ) -- x ), ( x: number -- )\nword throws unconditional error = *\nany other word-like variable name = a ? q' etc\nhttps://docs.factorcode.org/content/article-effects.html\nthese are pretty complicated to highlight properly without a real parser, and therefore out of scope\nthe old pattern, which may be later useful, was: (^|\\s)(?:call|execute|eval)?\\((?:\\s+[^\"\\r\\n\\t ]\\S*)*?\\s+--(?:\\s+[^\"\\n\\t ]\\S*)*?\\s+\\)(?=\\s|$)\n*/ // current solution is not great\n            \"stack-effect-delimiter\": [\n                {\n                    // opening parenthesis\n                    pattern: /(^|\\s)(?:call|eval|execute)?\\((?=\\s)/,\n                    lookbehind: true,\n                    alias: \"operator\"\n                },\n                {\n                    // middle --\n                    pattern: /(\\s)--(?=\\s)/,\n                    lookbehind: true,\n                    alias: \"operator\"\n                },\n                {\n                    // closing parenthesis\n                    pattern: /(\\s)\\)(?=\\s|$)/,\n                    lookbehind: true,\n                    alias: \"operator\"\n                }\n            ],\n            combinators: {\n                pattern: null,\n                lookbehind: true,\n                alias: \"keyword\"\n            },\n            \"kernel-builtin\": {\n                pattern: null,\n                lookbehind: true,\n                alias: \"variable\"\n            },\n            \"sequences-builtin\": {\n                pattern: null,\n                lookbehind: true,\n                alias: \"variable\"\n            },\n            \"math-builtin\": {\n                pattern: null,\n                lookbehind: true,\n                alias: \"variable\"\n            },\n            \"constructor-word\": {\n                // <array> but not <=>\n                pattern: /(^|\\s)<(?!=+>|-+>)\\S+>(?=\\s|$)/,\n                lookbehind: true,\n                alias: \"keyword\"\n            },\n            \"other-builtin-syntax\": {\n                pattern: null,\n                lookbehind: true,\n                alias: \"operator\"\n            },\n            /*\nfull list of supported word naming conventions: (the convention appears outside of the [brackets])\nset-[x]\nchange-[x]\nwith-[x]\nnew-[x]\n>[string]\n[base]>\n[string]>[number]\n+[symbol]+\n[boolean-word]?\n?[of]\n[slot-reader]>>\n>>[slot-setter]\n[slot-writer]<<\n([implementation-detail])\n[mutater]!\n[variant]*\n[prettyprint].\n$[help-markup]\n<constructors>, SYNTAX:, etc are supported by their own patterns.\n`with` and `new` from `kernel` are their own builtins.\nsee <https://docs.factorcode.org/content/article-conventions.html>\n*/ \"conventionally-named-word\": {\n                pattern: /(^|\\s)(?!\")(?:(?:change|new|set|with)-\\S+|\\$\\S+|>[^>\\s]+|[^:>\\s]+>|[^>\\s]+>[^>\\s]+|\\+[^+\\s]+\\+|[^?\\s]+\\?|\\?[^?\\s]+|[^>\\s]+>>|>>[^>\\s]+|[^<\\s]+<<|\\([^()\\s]+\\)|[^!\\s]+!|[^*\\s]\\S*\\*|[^.\\s]\\S*\\.)(?=\\s|$)/,\n                lookbehind: true,\n                alias: \"keyword\"\n            },\n            \"colon-syntax\": {\n                pattern: /(^|\\s)(?:[A-Z0-9\\-]+#?)?:{1,2}\\s+(?:;\\S+|(?!;)\\S+)(?=\\s|$)/,\n                lookbehind: true,\n                greedy: true,\n                alias: \"function\"\n            },\n            \"semicolon-or-setlocal\": {\n                pattern: /(\\s)(?:;|:>)(?=\\s|$)/,\n                lookbehind: true,\n                alias: \"function\"\n            },\n            // do not highlight leading } or trailing X{ at the begin/end of the file as it's invalid syntax\n            \"curly-brace-literal-delimiter\": [\n                {\n                    // opening\n                    pattern: /(^|\\s)[a-z]*\\{(?=\\s)/i,\n                    lookbehind: true,\n                    alias: \"operator\"\n                },\n                {\n                    // closing\n                    pattern: /(\\s)\\}(?=\\s|$)/,\n                    lookbehind: true,\n                    alias: \"operator\"\n                }\n            ],\n            // do not highlight leading ] or trailing [ at the begin/end of the file as it's invalid syntax\n            \"quotation-delimiter\": [\n                {\n                    // opening\n                    pattern: /(^|\\s)\\[(?=\\s)/,\n                    lookbehind: true,\n                    alias: \"operator\"\n                },\n                {\n                    // closing\n                    pattern: /(\\s)\\](?=\\s|$)/,\n                    lookbehind: true,\n                    alias: \"operator\"\n                }\n            ],\n            \"normal-word\": {\n                pattern: /(^|\\s)[^\"\\s]\\S*(?=\\s|$)/,\n                lookbehind: true\n            },\n            /*\nbasic first-class string \"a\"\nwith escaped double-quote \"a\\\"\"\nescaped backslash \"\\\\\"\nand general escapes since Factor has so many \"\\N\"\nsyntax that works in the reference implementation that isn't fully\nsupported because it's an implementation detail:\n\"string 1\"\"string 2\" -> 2 strings (works anyway)\n\"string\"5 -> string, 5\n\"string\"[ ] -> string, quotation\n{ \"a\"} -> array<string>\nthe rest of those examples all properly recognise the string, but not\nthe other object (number, quotation, etc)\nthis is fine for a regex-only implementation.\n*/ string: {\n                pattern: /\"(?:\\\\\\S|[^\"\\\\])*\"/,\n                greedy: true,\n                inside: string_inside\n            }\n        };\n        var escape = function(str) {\n            return (str + \"\").replace(/([.?*+\\^$\\[\\]\\\\(){}|\\-])/g, \"\\\\$1\");\n        };\n        var arrToWordsRegExp = function(arr) {\n            return new RegExp(\"(^|\\\\s)(?:\" + arr.map(escape).join(\"|\") + \")(?=\\\\s|$)\");\n        };\n        var builtins = {\n            \"kernel-builtin\": [\n                \"or\",\n                \"2nipd\",\n                \"4drop\",\n                \"tuck\",\n                \"wrapper\",\n                \"nip\",\n                \"wrapper?\",\n                \"callstack>array\",\n                \"die\",\n                \"dupd\",\n                \"callstack\",\n                \"callstack?\",\n                \"3dup\",\n                \"hashcode\",\n                \"pick\",\n                \"4nip\",\n                \"build\",\n                \">boolean\",\n                \"nipd\",\n                \"clone\",\n                \"5nip\",\n                \"eq?\",\n                \"?\",\n                \"=\",\n                \"swapd\",\n                \"2over\",\n                \"clear\",\n                \"2dup\",\n                \"get-retainstack\",\n                \"not\",\n                \"tuple?\",\n                \"dup\",\n                \"3nipd\",\n                \"call\",\n                \"-rotd\",\n                \"object\",\n                \"drop\",\n                \"assert=\",\n                \"assert?\",\n                \"-rot\",\n                \"execute\",\n                \"boa\",\n                \"get-callstack\",\n                \"curried?\",\n                \"3drop\",\n                \"pickd\",\n                \"overd\",\n                \"over\",\n                \"roll\",\n                \"3nip\",\n                \"swap\",\n                \"and\",\n                \"2nip\",\n                \"rotd\",\n                \"throw\",\n                \"(clone)\",\n                \"hashcode*\",\n                \"spin\",\n                \"reach\",\n                \"4dup\",\n                \"equal?\",\n                \"get-datastack\",\n                \"assert\",\n                \"2drop\",\n                \"<wrapper>\",\n                \"boolean?\",\n                \"identity-hashcode\",\n                \"identity-tuple?\",\n                \"null\",\n                \"composed?\",\n                \"new\",\n                \"5drop\",\n                \"rot\",\n                \"-roll\",\n                \"xor\",\n                \"identity-tuple\",\n                \"boolean\"\n            ],\n            \"other-builtin-syntax\": [\n                // syntax\n                \"=======\",\n                \"recursive\",\n                \"flushable\",\n                \">>\",\n                \"<<<<<<\",\n                \"M\\\\\",\n                \"B\",\n                \"PRIVATE>\",\n                \"\\\\\",\n                \"======\",\n                \"final\",\n                \"inline\",\n                \"delimiter\",\n                \"deprecated\",\n                \"<PRIVATE\",\n                \">>>>>>\",\n                \"<<<<<<<\",\n                \"parse-complex\",\n                \"malformed-complex\",\n                \"read-only\",\n                \">>>>>>>\",\n                \"call-next-method\",\n                \"<<\",\n                \"foldable\",\n                \"$\",\n                \"$[\",\n                \"${\"\n            ],\n            \"sequences-builtin\": [\n                \"member-eq?\",\n                \"mismatch\",\n                \"append\",\n                \"assert-sequence=\",\n                \"longer\",\n                \"repetition\",\n                \"clone-like\",\n                \"3sequence\",\n                \"assert-sequence?\",\n                \"last-index-from\",\n                \"reversed\",\n                \"index-from\",\n                \"cut*\",\n                \"pad-tail\",\n                \"join-as\",\n                \"remove-eq!\",\n                \"concat-as\",\n                \"but-last\",\n                \"snip\",\n                \"nths\",\n                \"nth\",\n                \"sequence\",\n                \"longest\",\n                \"slice?\",\n                \"<slice>\",\n                \"remove-nth\",\n                \"tail-slice\",\n                \"empty?\",\n                \"tail*\",\n                \"member?\",\n                \"virtual-sequence?\",\n                \"set-length\",\n                \"drop-prefix\",\n                \"iota\",\n                \"unclip\",\n                \"bounds-error?\",\n                \"unclip-last-slice\",\n                \"non-negative-integer-expected\",\n                \"non-negative-integer-expected?\",\n                \"midpoint@\",\n                \"longer?\",\n                \"?set-nth\",\n                \"?first\",\n                \"rest-slice\",\n                \"prepend-as\",\n                \"prepend\",\n                \"fourth\",\n                \"sift\",\n                \"subseq-start\",\n                \"new-sequence\",\n                \"?last\",\n                \"like\",\n                \"first4\",\n                \"1sequence\",\n                \"reverse\",\n                \"slice\",\n                \"virtual@\",\n                \"repetition?\",\n                \"set-last\",\n                \"index\",\n                \"4sequence\",\n                \"max-length\",\n                \"set-second\",\n                \"immutable-sequence\",\n                \"first2\",\n                \"first3\",\n                \"supremum\",\n                \"unclip-slice\",\n                \"suffix!\",\n                \"insert-nth\",\n                \"tail\",\n                \"3append\",\n                \"short\",\n                \"suffix\",\n                \"concat\",\n                \"flip\",\n                \"immutable?\",\n                \"reverse!\",\n                \"2sequence\",\n                \"sum\",\n                \"delete-all\",\n                \"indices\",\n                \"snip-slice\",\n                \"<iota>\",\n                \"check-slice\",\n                \"sequence?\",\n                \"head\",\n                \"append-as\",\n                \"halves\",\n                \"sequence=\",\n                \"collapse-slice\",\n                \"?second\",\n                \"slice-error?\",\n                \"product\",\n                \"bounds-check?\",\n                \"bounds-check\",\n                \"immutable\",\n                \"virtual-exemplar\",\n                \"harvest\",\n                \"remove\",\n                \"pad-head\",\n                \"last\",\n                \"set-fourth\",\n                \"cartesian-product\",\n                \"remove-eq\",\n                \"shorten\",\n                \"shorter\",\n                \"reversed?\",\n                \"shorter?\",\n                \"shortest\",\n                \"head-slice\",\n                \"pop*\",\n                \"tail-slice*\",\n                \"but-last-slice\",\n                \"iota?\",\n                \"append!\",\n                \"cut-slice\",\n                \"new-resizable\",\n                \"head-slice*\",\n                \"sequence-hashcode\",\n                \"pop\",\n                \"set-nth\",\n                \"?nth\",\n                \"second\",\n                \"join\",\n                \"immutable-sequence?\",\n                \"<reversed>\",\n                \"3append-as\",\n                \"virtual-sequence\",\n                \"subseq?\",\n                \"remove-nth!\",\n                \"length\",\n                \"last-index\",\n                \"lengthen\",\n                \"assert-sequence\",\n                \"copy\",\n                \"move\",\n                \"third\",\n                \"first\",\n                \"tail?\",\n                \"set-first\",\n                \"prefix\",\n                \"bounds-error\",\n                \"<repetition>\",\n                \"exchange\",\n                \"surround\",\n                \"cut\",\n                \"min-length\",\n                \"set-third\",\n                \"push-all\",\n                \"head?\",\n                \"subseq-start-from\",\n                \"delete-slice\",\n                \"rest\",\n                \"sum-lengths\",\n                \"head*\",\n                \"infimum\",\n                \"remove!\",\n                \"glue\",\n                \"slice-error\",\n                \"subseq\",\n                \"push\",\n                \"replace-slice\",\n                \"subseq-as\",\n                \"unclip-last\"\n            ],\n            \"math-builtin\": [\n                \"number=\",\n                \"next-power-of-2\",\n                \"?1+\",\n                \"fp-special?\",\n                \"imaginary-part\",\n                \"float>bits\",\n                \"number?\",\n                \"fp-infinity?\",\n                \"bignum?\",\n                \"fp-snan?\",\n                \"denominator\",\n                \"gcd\",\n                \"*\",\n                \"+\",\n                \"fp-bitwise=\",\n                \"-\",\n                \"u>=\",\n                \"/\",\n                \">=\",\n                \"bitand\",\n                \"power-of-2?\",\n                \"log2-expects-positive\",\n                \"neg?\",\n                \"<\",\n                \"log2\",\n                \">\",\n                \"integer?\",\n                \"number\",\n                \"bits>double\",\n                \"2/\",\n                \"zero?\",\n                \"bits>float\",\n                \"float?\",\n                \"shift\",\n                \"ratio?\",\n                \"rect>\",\n                \"even?\",\n                \"ratio\",\n                \"fp-sign\",\n                \"bitnot\",\n                \">fixnum\",\n                \"complex?\",\n                \"/i\",\n                \"integer>fixnum\",\n                \"/f\",\n                \"sgn\",\n                \">bignum\",\n                \"next-float\",\n                \"u<\",\n                \"u>\",\n                \"mod\",\n                \"recip\",\n                \"rational\",\n                \">float\",\n                \"2^\",\n                \"integer\",\n                \"fixnum?\",\n                \"neg\",\n                \"fixnum\",\n                \"sq\",\n                \"bignum\",\n                \">rect\",\n                \"bit?\",\n                \"fp-qnan?\",\n                \"simple-gcd\",\n                \"complex\",\n                \"<fp-nan>\",\n                \"real\",\n                \">fraction\",\n                \"double>bits\",\n                \"bitor\",\n                \"rem\",\n                \"fp-nan-payload\",\n                \"real-part\",\n                \"log2-expects-positive?\",\n                \"prev-float\",\n                \"align\",\n                \"unordered?\",\n                \"float\",\n                \"fp-nan?\",\n                \"abs\",\n                \"bitxor\",\n                \"integer>fixnum-strict\",\n                \"u<=\",\n                \"odd?\",\n                \"<=\",\n                \"/mod\",\n                \">integer\",\n                \"real?\",\n                \"rational?\",\n                \"numerator\"\n            ] // that's all for now\n        };\n        Object.keys(builtins).forEach(function(k) {\n            factor[k].pattern = arrToWordsRegExp(builtins[k]);\n        });\n        var combinators = [\n            // kernel\n            \"2bi\",\n            \"while\",\n            \"2tri\",\n            \"bi*\",\n            \"4dip\",\n            \"both?\",\n            \"same?\",\n            \"tri@\",\n            \"curry\",\n            \"prepose\",\n            \"3bi\",\n            \"?if\",\n            \"tri*\",\n            \"2keep\",\n            \"3keep\",\n            \"curried\",\n            \"2keepd\",\n            \"when\",\n            \"2bi*\",\n            \"2tri*\",\n            \"4keep\",\n            \"bi@\",\n            \"keepdd\",\n            \"do\",\n            \"unless*\",\n            \"tri-curry\",\n            \"if*\",\n            \"loop\",\n            \"bi-curry*\",\n            \"when*\",\n            \"2bi@\",\n            \"2tri@\",\n            \"with\",\n            \"2with\",\n            \"either?\",\n            \"bi\",\n            \"until\",\n            \"3dip\",\n            \"3curry\",\n            \"tri-curry*\",\n            \"tri-curry@\",\n            \"bi-curry\",\n            \"keepd\",\n            \"compose\",\n            \"2dip\",\n            \"if\",\n            \"3tri\",\n            \"unless\",\n            \"tuple\",\n            \"keep\",\n            \"2curry\",\n            \"tri\",\n            \"most\",\n            \"while*\",\n            \"dip\",\n            \"composed\",\n            \"bi-curry@\",\n            \"find-last-from\",\n            \"trim-head-slice\",\n            \"map-as\",\n            \"each-from\",\n            \"none?\",\n            \"trim-tail\",\n            \"partition\",\n            \"if-empty\",\n            \"accumulate*\",\n            \"reject!\",\n            \"find-from\",\n            \"accumulate-as\",\n            \"collector-for-as\",\n            \"reject\",\n            \"map\",\n            \"map-sum\",\n            \"accumulate!\",\n            \"2each-from\",\n            \"follow\",\n            \"supremum-by\",\n            \"map!\",\n            \"unless-empty\",\n            \"collector\",\n            \"padding\",\n            \"reduce-index\",\n            \"replicate-as\",\n            \"infimum-by\",\n            \"trim-tail-slice\",\n            \"count\",\n            \"find-index\",\n            \"filter\",\n            \"accumulate*!\",\n            \"reject-as\",\n            \"map-integers\",\n            \"map-find\",\n            \"reduce\",\n            \"selector\",\n            \"interleave\",\n            \"2map\",\n            \"filter-as\",\n            \"binary-reduce\",\n            \"map-index-as\",\n            \"find\",\n            \"produce\",\n            \"filter!\",\n            \"replicate\",\n            \"cartesian-map\",\n            \"cartesian-each\",\n            \"find-index-from\",\n            \"map-find-last\",\n            \"3map-as\",\n            \"3map\",\n            \"find-last\",\n            \"selector-as\",\n            \"2map-as\",\n            \"2map-reduce\",\n            \"accumulate\",\n            \"each\",\n            \"each-index\",\n            \"accumulate*-as\",\n            \"when-empty\",\n            \"all?\",\n            \"collector-as\",\n            \"push-either\",\n            \"new-like\",\n            \"collector-for\",\n            \"2selector\",\n            \"push-if\",\n            \"2all?\",\n            \"map-reduce\",\n            \"3each\",\n            \"any?\",\n            \"trim-slice\",\n            \"2reduce\",\n            \"change-nth\",\n            \"produce-as\",\n            \"2each\",\n            \"trim\",\n            \"trim-head\",\n            \"cartesian-find\",\n            \"map-index\",\n            \"if-zero\",\n            \"each-integer\",\n            \"unless-zero\",\n            \"(find-integer)\",\n            \"when-zero\",\n            \"find-last-integer\",\n            \"(all-integers?)\",\n            \"times\",\n            \"(each-integer)\",\n            \"find-integer\",\n            \"all-integers?\",\n            \"unless-negative\",\n            \"if-positive\",\n            \"when-positive\",\n            \"when-negative\",\n            \"unless-positive\",\n            \"if-negative\",\n            \"case\",\n            \"2cleave\",\n            \"cond>quot\",\n            \"case>quot\",\n            \"3cleave\",\n            \"wrong-values\",\n            \"to-fixed-point\",\n            \"alist>quot\",\n            \"cond\",\n            \"cleave\",\n            \"call-effect\",\n            \"recursive-hashcode\",\n            \"spread\",\n            \"deep-spread>quot\",\n            \"2||\",\n            \"0||\",\n            \"n||\",\n            \"0&&\",\n            \"2&&\",\n            \"3||\",\n            \"1||\",\n            \"1&&\",\n            \"n&&\",\n            \"3&&\",\n            \"smart-unless*\",\n            \"keep-inputs\",\n            \"reduce-outputs\",\n            \"smart-when*\",\n            \"cleave>array\",\n            \"smart-with\",\n            \"smart-apply\",\n            \"smart-if\",\n            \"inputs/outputs\",\n            \"output>sequence-n\",\n            \"map-outputs\",\n            \"map-reduce-outputs\",\n            \"dropping\",\n            \"output>array\",\n            \"smart-map-reduce\",\n            \"smart-2map-reduce\",\n            \"output>array-n\",\n            \"nullary\",\n            \"input<sequence\",\n            \"append-outputs\",\n            \"drop-inputs\",\n            \"inputs\",\n            \"smart-2reduce\",\n            \"drop-outputs\",\n            \"smart-reduce\",\n            \"preserving\",\n            \"smart-when\",\n            \"outputs\",\n            \"append-outputs-as\",\n            \"smart-unless\",\n            \"smart-if*\",\n            \"sum-outputs\",\n            \"input<sequence-unsafe\",\n            \"output>sequence\" // tafn\n        ];\n        factor.combinators.pattern = arrToWordsRegExp(combinators);\n        Prism.languages.factor = factor;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/factor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/false.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/false.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = $false;\n$false.displayName = \"$false\";\n$false.aliases = [];\nfunction $false(Prism) {\n    ;\n    (function(Prism) {\n        /**\n     * Based on the manual by Wouter van Oortmerssen.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2801#issue-829717504}\n     */ Prism.languages[\"false\"] = {\n            comment: {\n                pattern: /\\{[^}]*\\}/\n            },\n            string: {\n                pattern: /\"[^\"]*\"/,\n                greedy: true\n            },\n            \"character-code\": {\n                pattern: /'(?:[^\\r]|\\r\\n?)/,\n                alias: \"number\"\n            },\n            \"assembler-code\": {\n                pattern: /\\d+`/,\n                alias: \"important\"\n            },\n            number: /\\d+/,\n            operator: /[-!#$%&'*+,./:;=>?@\\\\^_`|~ßø]/,\n            punctuation: /\\[|\\]/,\n            variable: /[a-z]/,\n            \"non-standard\": {\n                pattern: /[()<BDO®]/,\n                alias: \"bold\"\n            }\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZmFsc2UuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUcsRUFBRTtBQUNuQixTQUFTRixPQUFPRyxLQUFLOztJQUNqQixVQUFVQSxLQUFLO1FBQ2Y7Ozs7S0FJQyxHQUNEQSxNQUFNQyxTQUFTLENBQUMsUUFBUSxHQUFHO1lBQ3pCQyxTQUFTO2dCQUNQQyxTQUFTO1lBQ1g7WUFDQUMsUUFBUTtnQkFDTkQsU0FBUztnQkFDVEUsUUFBUTtZQUNWO1lBQ0Esa0JBQWtCO2dCQUNoQkYsU0FBUztnQkFDVEcsT0FBTztZQUNUO1lBQ0Esa0JBQWtCO2dCQUNoQkgsU0FBUztnQkFDVEcsT0FBTztZQUNUO1lBQ0FDLFFBQVE7WUFDUkMsVUFBVTtZQUNWQyxhQUFhO1lBQ2JDLFVBQVU7WUFDVixnQkFBZ0I7Z0JBQ2RQLFNBQVM7Z0JBQ1RHLE9BQU87WUFDVDtRQUNGO0lBQ0YsR0FBR047QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9mYWxzZS5qcz8xYWIzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9ICRmYWxzZVxuJGZhbHNlLmRpc3BsYXlOYW1lID0gJyRmYWxzZSdcbiRmYWxzZS5hbGlhc2VzID0gW11cbmZ1bmN0aW9uICRmYWxzZShQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIC8qKlxuICAgICAqIEJhc2VkIG9uIHRoZSBtYW51YWwgYnkgV291dGVyIHZhbiBPb3J0bWVyc3Nlbi5cbiAgICAgKlxuICAgICAqIEBzZWUge0BsaW5rIGh0dHBzOi8vZ2l0aHViLmNvbS9QcmlzbUpTL3ByaXNtL2lzc3Vlcy8yODAxI2lzc3VlLTgyOTcxNzUwNH1cbiAgICAgKi9cbiAgICBQcmlzbS5sYW5ndWFnZXNbJ2ZhbHNlJ10gPSB7XG4gICAgICBjb21tZW50OiB7XG4gICAgICAgIHBhdHRlcm46IC9cXHtbXn1dKlxcfS9cbiAgICAgIH0sXG4gICAgICBzdHJpbmc6IHtcbiAgICAgICAgcGF0dGVybjogL1wiW15cIl0qXCIvLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICAnY2hhcmFjdGVyLWNvZGUnOiB7XG4gICAgICAgIHBhdHRlcm46IC8nKD86W15cXHJdfFxcclxcbj8pLyxcbiAgICAgICAgYWxpYXM6ICdudW1iZXInXG4gICAgICB9LFxuICAgICAgJ2Fzc2VtYmxlci1jb2RlJzoge1xuICAgICAgICBwYXR0ZXJuOiAvXFxkK2AvLFxuICAgICAgICBhbGlhczogJ2ltcG9ydGFudCdcbiAgICAgIH0sXG4gICAgICBudW1iZXI6IC9cXGQrLyxcbiAgICAgIG9wZXJhdG9yOiAvWy0hIyQlJicqKywuLzo7PT4/QFxcXFxeX2B8fsOfw7hdLyxcbiAgICAgIHB1bmN0dWF0aW9uOiAvXFxbfFxcXS8sXG4gICAgICB2YXJpYWJsZTogL1thLXpdLyxcbiAgICAgICdub24tc3RhbmRhcmQnOiB7XG4gICAgICAgIHBhdHRlcm46IC9bKCk8QkRPwq5dLyxcbiAgICAgICAgYWxpYXM6ICdib2xkJ1xuICAgICAgfVxuICAgIH1cbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIiRmYWxzZSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJzdHJpbmciLCJncmVlZHkiLCJhbGlhcyIsIm51bWJlciIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iLCJ2YXJpYWJsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/false.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/firestore-security-rules.js":
/*!*****************************************************************!*\
  !*** ./node_modules/refractor/lang/firestore-security-rules.js ***!
  \*****************************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = firestoreSecurityRules;\nfirestoreSecurityRules.displayName = \"firestoreSecurityRules\";\nfirestoreSecurityRules.aliases = [];\nfunction firestoreSecurityRules(Prism) {\n    Prism.languages[\"firestore-security-rules\"] = Prism.languages.extend(\"clike\", {\n        comment: /\\/\\/.*/,\n        keyword: /\\b(?:allow|function|if|match|null|return|rules_version|service)\\b/,\n        operator: /&&|\\|\\||[<>!=]=?|[-+*/%]|\\b(?:in|is)\\b/\n    });\n    delete Prism.languages[\"firestore-security-rules\"][\"class-name\"];\n    Prism.languages.insertBefore(\"firestore-security-rules\", \"keyword\", {\n        path: {\n            pattern: /(^|[\\s(),])(?:\\/(?:[\\w\\xA0-\\uFFFF]+|\\{[\\w\\xA0-\\uFFFF]+(?:=\\*\\*)?\\}|\\$\\([\\w\\xA0-\\uFFFF.]+\\)))+/,\n            lookbehind: true,\n            greedy: true,\n            inside: {\n                variable: {\n                    pattern: /\\{[\\w\\xA0-\\uFFFF]+(?:=\\*\\*)?\\}|\\$\\([\\w\\xA0-\\uFFFF.]+\\)/,\n                    inside: {\n                        operator: /=/,\n                        keyword: /\\*\\*/,\n                        punctuation: /[.$(){}]/\n                    }\n                },\n                punctuation: /\\//\n            }\n        },\n        method: {\n            // to make the pattern shorter, the actual method names are omitted\n            pattern: /(\\ballow\\s+)[a-z]+(?:\\s*,\\s*[a-z]+)*(?=\\s*[:;])/,\n            lookbehind: true,\n            alias: \"builtin\",\n            inside: {\n                punctuation: /,/\n            }\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZmlyZXN0b3JlLXNlY3VyaXR5LXJ1bGVzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLHVCQUF1QkMsV0FBVyxHQUFHO0FBQ3JDRCx1QkFBdUJFLE9BQU8sR0FBRyxFQUFFO0FBQ25DLFNBQVNGLHVCQUF1QkcsS0FBSztJQUNuQ0EsTUFBTUMsU0FBUyxDQUFDLDJCQUEyQixHQUFHRCxNQUFNQyxTQUFTLENBQUNDLE1BQU0sQ0FDbEUsU0FDQTtRQUNFQyxTQUFTO1FBQ1RDLFNBQ0U7UUFDRkMsVUFBVTtJQUNaO0lBRUYsT0FBT0wsTUFBTUMsU0FBUyxDQUFDLDJCQUEyQixDQUFDLGFBQWE7SUFDaEVELE1BQU1DLFNBQVMsQ0FBQ0ssWUFBWSxDQUFDLDRCQUE0QixXQUFXO1FBQ2xFQyxNQUFNO1lBQ0pDLFNBQ0U7WUFDRkMsWUFBWTtZQUNaQyxRQUFRO1lBQ1JDLFFBQVE7Z0JBQ05DLFVBQVU7b0JBQ1JKLFNBQVM7b0JBQ1RHLFFBQVE7d0JBQ05OLFVBQVU7d0JBQ1ZELFNBQVM7d0JBQ1RTLGFBQWE7b0JBQ2Y7Z0JBQ0Y7Z0JBQ0FBLGFBQWE7WUFDZjtRQUNGO1FBQ0FDLFFBQVE7WUFDTixtRUFBbUU7WUFDbkVOLFNBQVM7WUFDVEMsWUFBWTtZQUNaTSxPQUFPO1lBQ1BKLFFBQVE7Z0JBQ05FLGFBQWE7WUFDZjtRQUNGO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9maXJlc3RvcmUtc2VjdXJpdHktcnVsZXMuanM/ZTdjZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBmaXJlc3RvcmVTZWN1cml0eVJ1bGVzXG5maXJlc3RvcmVTZWN1cml0eVJ1bGVzLmRpc3BsYXlOYW1lID0gJ2ZpcmVzdG9yZVNlY3VyaXR5UnVsZXMnXG5maXJlc3RvcmVTZWN1cml0eVJ1bGVzLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gZmlyZXN0b3JlU2VjdXJpdHlSdWxlcyhQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXNbJ2ZpcmVzdG9yZS1zZWN1cml0eS1ydWxlcyddID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZChcbiAgICAnY2xpa2UnLFxuICAgIHtcbiAgICAgIGNvbW1lbnQ6IC9cXC9cXC8uKi8sXG4gICAgICBrZXl3b3JkOlxuICAgICAgICAvXFxiKD86YWxsb3d8ZnVuY3Rpb258aWZ8bWF0Y2h8bnVsbHxyZXR1cm58cnVsZXNfdmVyc2lvbnxzZXJ2aWNlKVxcYi8sXG4gICAgICBvcGVyYXRvcjogLyYmfFxcfFxcfHxbPD4hPV09P3xbLSsqLyVdfFxcYig/OmlufGlzKVxcYi9cbiAgICB9XG4gIClcbiAgZGVsZXRlIFByaXNtLmxhbmd1YWdlc1snZmlyZXN0b3JlLXNlY3VyaXR5LXJ1bGVzJ11bJ2NsYXNzLW5hbWUnXVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdmaXJlc3RvcmUtc2VjdXJpdHktcnVsZXMnLCAna2V5d29yZCcsIHtcbiAgICBwYXRoOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKF58W1xccygpLF0pKD86XFwvKD86W1xcd1xceEEwLVxcdUZGRkZdK3xcXHtbXFx3XFx4QTAtXFx1RkZGRl0rKD86PVxcKlxcKik/XFx9fFxcJFxcKFtcXHdcXHhBMC1cXHVGRkZGLl0rXFwpKSkrLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgdmFyaWFibGU6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXFx7W1xcd1xceEEwLVxcdUZGRkZdKyg/Oj1cXCpcXCopP1xcfXxcXCRcXChbXFx3XFx4QTAtXFx1RkZGRi5dK1xcKS8sXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICBvcGVyYXRvcjogLz0vLFxuICAgICAgICAgICAga2V5d29yZDogL1xcKlxcKi8sXG4gICAgICAgICAgICBwdW5jdHVhdGlvbjogL1suJCgpe31dL1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgcHVuY3R1YXRpb246IC9cXC8vXG4gICAgICB9XG4gICAgfSxcbiAgICBtZXRob2Q6IHtcbiAgICAgIC8vIHRvIG1ha2UgdGhlIHBhdHRlcm4gc2hvcnRlciwgdGhlIGFjdHVhbCBtZXRob2QgbmFtZXMgYXJlIG9taXR0ZWRcbiAgICAgIHBhdHRlcm46IC8oXFxiYWxsb3dcXHMrKVthLXpdKyg/OlxccyosXFxzKlthLXpdKykqKD89XFxzKls6O10pLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ2J1aWx0aW4nLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHB1bmN0dWF0aW9uOiAvLC9cbiAgICAgIH1cbiAgICB9XG4gIH0pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImZpcmVzdG9yZVNlY3VyaXR5UnVsZXMiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImV4dGVuZCIsImNvbW1lbnQiLCJrZXl3b3JkIiwib3BlcmF0b3IiLCJpbnNlcnRCZWZvcmUiLCJwYXRoIiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJncmVlZHkiLCJpbnNpZGUiLCJ2YXJpYWJsZSIsInB1bmN0dWF0aW9uIiwibWV0aG9kIiwiYWxpYXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/firestore-security-rules.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/flow.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/flow.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = flow;\nflow.displayName = \"flow\";\nflow.aliases = [];\nfunction flow(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.flow = Prism.languages.extend(\"javascript\", {});\n        Prism.languages.insertBefore(\"flow\", \"keyword\", {\n            type: [\n                {\n                    pattern: /\\b(?:[Bb]oolean|Function|[Nn]umber|[Ss]tring|any|mixed|null|void)\\b/,\n                    alias: \"tag\"\n                }\n            ]\n        });\n        Prism.languages.flow[\"function-variable\"].pattern = /(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/i;\n        delete Prism.languages.flow[\"parameter\"];\n        Prism.languages.insertBefore(\"flow\", \"operator\", {\n            \"flow-punctuation\": {\n                pattern: /\\{\\||\\|\\}/,\n                alias: \"punctuation\"\n            }\n        });\n        if (!Array.isArray(Prism.languages.flow.keyword)) {\n            Prism.languages.flow.keyword = [\n                Prism.languages.flow.keyword\n            ];\n        }\n        Prism.languages.flow.keyword.unshift({\n            pattern: /(^|[^$]\\b)(?:Class|declare|opaque|type)\\b(?!\\$)/,\n            lookbehind: true\n        }, {\n            pattern: /(^|[^$]\\B)\\$(?:Diff|Enum|Exact|Keys|ObjMap|PropertyType|Record|Shape|Subtype|Supertype|await)\\b(?!\\$)/,\n            lookbehind: true\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZmxvdy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7O0lBQ2YsVUFBVUEsS0FBSztRQUNmQSxNQUFNQyxTQUFTLENBQUNKLElBQUksR0FBR0csTUFBTUMsU0FBUyxDQUFDQyxNQUFNLENBQUMsY0FBYyxDQUFDO1FBQzdERixNQUFNQyxTQUFTLENBQUNFLFlBQVksQ0FBQyxRQUFRLFdBQVc7WUFDOUNDLE1BQU07Z0JBQ0o7b0JBQ0VDLFNBQ0U7b0JBQ0ZDLE9BQU87Z0JBQ1Q7YUFDRDtRQUNIO1FBQ0FOLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxDQUFDLG9CQUFvQixDQUFDUSxPQUFPLEdBQy9DO1FBQ0YsT0FBT0wsTUFBTUMsU0FBUyxDQUFDSixJQUFJLENBQUMsWUFBWTtRQUN4Q0csTUFBTUMsU0FBUyxDQUFDRSxZQUFZLENBQUMsUUFBUSxZQUFZO1lBQy9DLG9CQUFvQjtnQkFDbEJFLFNBQVM7Z0JBQ1RDLE9BQU87WUFDVDtRQUNGO1FBQ0EsSUFBSSxDQUFDQyxNQUFNQyxPQUFPLENBQUNSLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxDQUFDWSxPQUFPLEdBQUc7WUFDaERULE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxDQUFDWSxPQUFPLEdBQUc7Z0JBQUNULE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxDQUFDWSxPQUFPO2FBQUM7UUFDL0Q7UUFDQVQsTUFBTUMsU0FBUyxDQUFDSixJQUFJLENBQUNZLE9BQU8sQ0FBQ0MsT0FBTyxDQUNsQztZQUNFTCxTQUFTO1lBQ1RNLFlBQVk7UUFDZCxHQUNBO1lBQ0VOLFNBQ0U7WUFDRk0sWUFBWTtRQUNkO0lBRUosR0FBR1g7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9mbG93LmpzPzAzNzIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gZmxvd1xuZmxvdy5kaXNwbGF5TmFtZSA9ICdmbG93J1xuZmxvdy5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGZsb3coUHJpc20pIHtcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICBQcmlzbS5sYW5ndWFnZXMuZmxvdyA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2phdmFzY3JpcHQnLCB7fSlcbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdmbG93JywgJ2tleXdvcmQnLCB7XG4gICAgICB0eXBlOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgL1xcYig/OltCYl1vb2xlYW58RnVuY3Rpb258W05uXXVtYmVyfFtTc110cmluZ3xhbnl8bWl4ZWR8bnVsbHx2b2lkKVxcYi8sXG4gICAgICAgICAgYWxpYXM6ICd0YWcnXG4gICAgICAgIH1cbiAgICAgIF1cbiAgICB9KVxuICAgIFByaXNtLmxhbmd1YWdlcy5mbG93WydmdW5jdGlvbi12YXJpYWJsZSddLnBhdHRlcm4gPVxuICAgICAgLyg/IVxccylbXyRhLXpcXHhBMC1cXHVGRkZGXSg/Oig/IVxccylbJFxcd1xceEEwLVxcdUZGRkZdKSooPz1cXHMqPVxccyooPzpmdW5jdGlvblxcYnwoPzpcXChbXigpXSpcXCkoPzpcXHMqOlxccypcXHcrKT98KD8hXFxzKVtfJGEtelxceEEwLVxcdUZGRkZdKD86KD8hXFxzKVskXFx3XFx4QTAtXFx1RkZGRl0pKilcXHMqPT4pKS9pXG4gICAgZGVsZXRlIFByaXNtLmxhbmd1YWdlcy5mbG93WydwYXJhbWV0ZXInXVxuICAgIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ2Zsb3cnLCAnb3BlcmF0b3InLCB7XG4gICAgICAnZmxvdy1wdW5jdHVhdGlvbic6IHtcbiAgICAgICAgcGF0dGVybjogL1xce1xcfHxcXHxcXH0vLFxuICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgfVxuICAgIH0pXG4gICAgaWYgKCFBcnJheS5pc0FycmF5KFByaXNtLmxhbmd1YWdlcy5mbG93LmtleXdvcmQpKSB7XG4gICAgICBQcmlzbS5sYW5ndWFnZXMuZmxvdy5rZXl3b3JkID0gW1ByaXNtLmxhbmd1YWdlcy5mbG93LmtleXdvcmRdXG4gICAgfVxuICAgIFByaXNtLmxhbmd1YWdlcy5mbG93LmtleXdvcmQudW5zaGlmdChcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyhefFteJF1cXGIpKD86Q2xhc3N8ZGVjbGFyZXxvcGFxdWV8dHlwZSlcXGIoPyFcXCQpLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKF58W14kXVxcQilcXCQoPzpEaWZmfEVudW18RXhhY3R8S2V5c3xPYmpNYXB8UHJvcGVydHlUeXBlfFJlY29yZHxTaGFwZXxTdWJ0eXBlfFN1cGVydHlwZXxhd2FpdClcXGIoPyFcXCQpLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfVxuICAgIClcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImZsb3ciLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImV4dGVuZCIsImluc2VydEJlZm9yZSIsInR5cGUiLCJwYXR0ZXJuIiwiYWxpYXMiLCJBcnJheSIsImlzQXJyYXkiLCJrZXl3b3JkIiwidW5zaGlmdCIsImxvb2tiZWhpbmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/flow.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/fortran.js":
/*!************************************************!*\
  !*** ./node_modules/refractor/lang/fortran.js ***!
  \************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = fortran;\nfortran.displayName = \"fortran\";\nfortran.aliases = [];\nfunction fortran(Prism) {\n    Prism.languages.fortran = {\n        \"quoted-number\": {\n            pattern: /[BOZ](['\"])[A-F0-9]+\\1/i,\n            alias: \"number\"\n        },\n        string: {\n            pattern: /(?:\\b\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:[ \\t]*!.*(?:\\r\\n?|\\n)|(?![ \\t]*!))|(?!\\1).)*(?:\\1|&)/,\n            inside: {\n                comment: {\n                    pattern: /(&(?:\\r\\n?|\\n)\\s*)!.*/,\n                    lookbehind: true\n                }\n            }\n        },\n        comment: {\n            pattern: /!.*/,\n            greedy: true\n        },\n        boolean: /\\.(?:FALSE|TRUE)\\.(?:_\\w+)?/i,\n        number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,\n        keyword: [\n            // Types\n            /\\b(?:CHARACTER|COMPLEX|DOUBLE ?PRECISION|INTEGER|LOGICAL|REAL)\\b/i,\n            /\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i,\n            /\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i,\n            /\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEIF|ELSEWHERE|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i\n        ],\n        operator: [\n            /\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.[A-Z]+\\./i,\n            {\n                // Use lookbehind to prevent confusion with (/ /)\n                pattern: /(^|(?!\\().)\\/(?!\\))/,\n                lookbehind: true\n            }\n        ],\n        punctuation: /\\(\\/|\\/\\)|[(),;:&]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZm9ydHJhbi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxRQUFRQyxXQUFXLEdBQUc7QUFDdEJELFFBQVFFLE9BQU8sR0FBRyxFQUFFO0FBQ3BCLFNBQVNGLFFBQVFHLEtBQUs7SUFDcEJBLE1BQU1DLFNBQVMsQ0FBQ0osT0FBTyxHQUFHO1FBQ3hCLGlCQUFpQjtZQUNmSyxTQUFTO1lBQ1RDLE9BQU87UUFDVDtRQUNBQyxRQUFRO1lBQ05GLFNBQ0U7WUFDRkcsUUFBUTtnQkFDTkMsU0FBUztvQkFDUEosU0FBUztvQkFDVEssWUFBWTtnQkFDZDtZQUNGO1FBQ0Y7UUFDQUQsU0FBUztZQUNQSixTQUFTO1lBQ1RNLFFBQVE7UUFDVjtRQUNBQyxTQUFTO1FBQ1RDLFFBQVE7UUFDUkMsU0FBUztZQUNQLFFBQVE7WUFDUjtZQUNBO1lBQ0E7WUFDQTtTQUNEO1FBQ0RDLFVBQVU7WUFDUjtZQUNBO2dCQUNFLGlEQUFpRDtnQkFDakRWLFNBQVM7Z0JBQ1RLLFlBQVk7WUFDZDtTQUNEO1FBQ0RNLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2ZvcnRyYW4uanM/ZTkzZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBmb3J0cmFuXG5mb3J0cmFuLmRpc3BsYXlOYW1lID0gJ2ZvcnRyYW4nXG5mb3J0cmFuLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gZm9ydHJhbihQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuZm9ydHJhbiA9IHtcbiAgICAncXVvdGVkLW51bWJlcic6IHtcbiAgICAgIHBhdHRlcm46IC9bQk9aXShbJ1wiXSlbQS1GMC05XStcXDEvaSxcbiAgICAgIGFsaWFzOiAnbnVtYmVyJ1xuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKD86XFxiXFx3K18pPyhbJ1wiXSkoPzpcXDFcXDF8Jig/Olxcclxcbj98XFxuKSg/OlsgXFx0XSohLiooPzpcXHJcXG4/fFxcbil8KD8hWyBcXHRdKiEpKXwoPyFcXDEpLikqKD86XFwxfCYpLyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBjb21tZW50OiB7XG4gICAgICAgICAgcGF0dGVybjogLygmKD86XFxyXFxuP3xcXG4pXFxzKikhLiovLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogLyEuKi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGJvb2xlYW46IC9cXC4oPzpGQUxTRXxUUlVFKVxcLig/Ol9cXHcrKT8vaSxcbiAgICBudW1iZXI6IC8oPzpcXGJcXGQrKD86XFwuXFxkKik/fFxcQlxcLlxcZCspKD86W0VEXVsrLV0/XFxkKyk/KD86X1xcdyspPy9pLFxuICAgIGtleXdvcmQ6IFtcbiAgICAgIC8vIFR5cGVzXG4gICAgICAvXFxiKD86Q0hBUkFDVEVSfENPTVBMRVh8RE9VQkxFID9QUkVDSVNJT058SU5URUdFUnxMT0dJQ0FMfFJFQUwpXFxiL2ksIC8vIEVORCBzdGF0ZW1lbnRzXG4gICAgICAvXFxiKD86RU5EID8pPyg/OkJMT0NLID9EQVRBfERPfEZJTEV8Rk9SQUxMfEZVTkNUSU9OfElGfElOVEVSRkFDRXxNT0RVTEUoPyEgUFJPQ0VEVVJFKXxQUk9HUkFNfFNFTEVDVHxTVUJST1VUSU5FfFRZUEV8V0hFUkUpXFxiL2ksIC8vIFN0YXRlbWVudHNcbiAgICAgIC9cXGIoPzpBTExPQ0FUQUJMRXxBTExPQ0FURXxCQUNLU1BBQ0V8Q0FMTHxDQVNFfENMT1NFfENPTU1PTnxDT05UQUlOU3xDT05USU5VRXxDWUNMRXxEQVRBfERFQUxMT0NBVEV8RElNRU5TSU9OfERPfEVORHxFUVVJVkFMRU5DRXxFWElUfEVYVEVSTkFMfEZPUk1BVHxHTyA/VE98SU1QTElDSVQoPzogTk9ORSk/fElOUVVJUkV8SU5URU5UfElOVFJJTlNJQ3xNT0RVTEUgUFJPQ0VEVVJFfE5BTUVMSVNUfE5VTExJRll8T1BFTnxPUFRJT05BTHxQQVJBTUVURVJ8UE9JTlRFUnxQUklOVHxQUklWQVRFfFBVQkxJQ3xSRUFEfFJFVFVSTnxSRVdJTkR8U0FWRXxTRUxFQ1R8U1RPUHxUQVJHRVR8V0hJTEV8V1JJVEUpXFxiL2ksIC8vIE90aGVyc1xuICAgICAgL1xcYig/OkFTU0lHTk1FTlR8REVGQVVMVHxFTEVNRU5UQUx8RUxTRXxFTFNFSUZ8RUxTRVdIRVJFfEVOVFJZfElOfElOQ0xVREV8SU5PVVR8S0lORHxOVUxMfE9OTFl8T1BFUkFUT1J8T1VUfFBVUkV8UkVDVVJTSVZFfFJFU1VMVHxTRVFVRU5DRXxTVEFUfFRIRU58VVNFKVxcYi9pXG4gICAgXSxcbiAgICBvcGVyYXRvcjogW1xuICAgICAgL1xcKlxcKnxcXC9cXC98PT58Wz1cXC9dPXxbPD5dPT98Ojp8WytcXC0qPSVdfFxcLltBLVpdK1xcLi9pLFxuICAgICAge1xuICAgICAgICAvLyBVc2UgbG9va2JlaGluZCB0byBwcmV2ZW50IGNvbmZ1c2lvbiB3aXRoICgvIC8pXG4gICAgICAgIHBhdHRlcm46IC8oXnwoPyFcXCgpLilcXC8oPyFcXCkpLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfVxuICAgIF0sXG4gICAgcHVuY3R1YXRpb246IC9cXChcXC98XFwvXFwpfFsoKSw7OiZdL1xuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImZvcnRyYW4iLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsInBhdHRlcm4iLCJhbGlhcyIsInN0cmluZyIsImluc2lkZSIsImNvbW1lbnQiLCJsb29rYmVoaW5kIiwiZ3JlZWR5IiwiYm9vbGVhbiIsIm51bWJlciIsImtleXdvcmQiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/fortran.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/fsharp.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/fsharp.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = fsharp;\nfsharp.displayName = \"fsharp\";\nfsharp.aliases = [];\nfunction fsharp(Prism) {\n    Prism.languages.fsharp = Prism.languages.extend(\"clike\", {\n        comment: [\n            {\n                pattern: /(^|[^\\\\])\\(\\*(?!\\))[\\s\\S]*?\\*\\)/,\n                lookbehind: true,\n                greedy: true\n            },\n            {\n                pattern: /(^|[^\\\\:])\\/\\/.*/,\n                lookbehind: true,\n                greedy: true\n            }\n        ],\n        string: {\n            pattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?/,\n            greedy: true\n        },\n        \"class-name\": {\n            pattern: /(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,\n            lookbehind: true,\n            inside: {\n                operator: /->|\\*/,\n                punctuation: /\\./\n            }\n        },\n        keyword: /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(?:abstract|and|as|asr|assert|atomic|base|begin|break|checked|class|component|const|constraint|constructor|continue|default|delegate|do|done|downcast|downto|eager|elif|else|end|event|exception|extern|external|false|finally|fixed|for|fun|function|functor|global|if|in|include|inherit|inline|interface|internal|land|lazy|lor|lsl|lsr|lxor|match|member|method|mixin|mod|module|mutable|namespace|new|not|null|object|of|open|or|override|parallel|private|process|protected|public|pure|rec|sealed|select|sig|static|struct|tailcall|then|to|trait|true|try|type|upcast|val|virtual|void|volatile|when|while|with)\\b/,\n        number: [\n            /\\b0x[\\da-fA-F]+(?:LF|lf|un)?\\b/,\n            /\\b0b[01]+(?:uy|y)?\\b/,\n            /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i,\n            /\\b\\d+(?:[IlLsy]|UL|u[lsy]?)?\\b/\n        ],\n        operator: /([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/\n    });\n    Prism.languages.insertBefore(\"fsharp\", \"keyword\", {\n        preprocessor: {\n            pattern: /(^[\\t ]*)#.*/m,\n            lookbehind: true,\n            alias: \"property\",\n            inside: {\n                directive: {\n                    pattern: /(^#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n                    lookbehind: true,\n                    alias: \"keyword\"\n                }\n            }\n        }\n    });\n    Prism.languages.insertBefore(\"fsharp\", \"punctuation\", {\n        \"computation-expression\": {\n            pattern: /\\b[_a-z]\\w*(?=\\s*\\{)/i,\n            alias: \"keyword\"\n        }\n    });\n    Prism.languages.insertBefore(\"fsharp\", \"string\", {\n        annotation: {\n            pattern: /\\[<.+?>\\]/,\n            greedy: true,\n            inside: {\n                punctuation: /^\\[<|>\\]$/,\n                \"class-name\": {\n                    pattern: /^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,\n                    lookbehind: true\n                },\n                \"annotation-content\": {\n                    pattern: /[\\s\\S]+/,\n                    inside: Prism.languages.fsharp\n                }\n            }\n        },\n        char: {\n            pattern: /'(?:[^\\\\']|\\\\(?:.|\\d{3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}|U[a-fA-F\\d]{8}))'B?/,\n            greedy: true\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZnNoYXJwLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLE9BQU9DLFdBQVcsR0FBRztBQUNyQkQsT0FBT0UsT0FBTyxHQUFHLEVBQUU7QUFDbkIsU0FBU0YsT0FBT0csS0FBSztJQUNuQkEsTUFBTUMsU0FBUyxDQUFDSixNQUFNLEdBQUdHLE1BQU1DLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLFNBQVM7UUFDdkRDLFNBQVM7WUFDUDtnQkFDRUMsU0FBUztnQkFDVEMsWUFBWTtnQkFDWkMsUUFBUTtZQUNWO1lBQ0E7Z0JBQ0VGLFNBQVM7Z0JBQ1RDLFlBQVk7Z0JBQ1pDLFFBQVE7WUFDVjtTQUNEO1FBQ0RDLFFBQVE7WUFDTkgsU0FBUztZQUNURSxRQUFRO1FBQ1Y7UUFDQSxjQUFjO1lBQ1pGLFNBQ0U7WUFDRkMsWUFBWTtZQUNaRyxRQUFRO2dCQUNOQyxVQUFVO2dCQUNWQyxhQUFhO1lBQ2Y7UUFDRjtRQUNBQyxTQUNFO1FBQ0ZDLFFBQVE7WUFDTjtZQUNBO1lBQ0E7WUFDQTtTQUNEO1FBQ0RILFVBQ0U7SUFDSjtJQUNBVCxNQUFNQyxTQUFTLENBQUNZLFlBQVksQ0FBQyxVQUFVLFdBQVc7UUFDaERDLGNBQWM7WUFDWlYsU0FBUztZQUNUQyxZQUFZO1lBQ1pVLE9BQU87WUFDUFAsUUFBUTtnQkFDTlEsV0FBVztvQkFDVFosU0FBUztvQkFDVEMsWUFBWTtvQkFDWlUsT0FBTztnQkFDVDtZQUNGO1FBQ0Y7SUFDRjtJQUNBZixNQUFNQyxTQUFTLENBQUNZLFlBQVksQ0FBQyxVQUFVLGVBQWU7UUFDcEQsMEJBQTBCO1lBQ3hCVCxTQUFTO1lBQ1RXLE9BQU87UUFDVDtJQUNGO0lBQ0FmLE1BQU1DLFNBQVMsQ0FBQ1ksWUFBWSxDQUFDLFVBQVUsVUFBVTtRQUMvQ0ksWUFBWTtZQUNWYixTQUFTO1lBQ1RFLFFBQVE7WUFDUkUsUUFBUTtnQkFDTkUsYUFBYTtnQkFDYixjQUFjO29CQUNaTixTQUFTO29CQUNUQyxZQUFZO2dCQUNkO2dCQUNBLHNCQUFzQjtvQkFDcEJELFNBQVM7b0JBQ1RJLFFBQVFSLE1BQU1DLFNBQVMsQ0FBQ0osTUFBTTtnQkFDaEM7WUFDRjtRQUNGO1FBQ0FxQixNQUFNO1lBQ0pkLFNBQ0U7WUFDRkUsUUFBUTtRQUNWO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9mc2hhcnAuanM/MmJhZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBmc2hhcnBcbmZzaGFycC5kaXNwbGF5TmFtZSA9ICdmc2hhcnAnXG5mc2hhcnAuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBmc2hhcnAoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmZzaGFycCA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2NsaWtlJywge1xuICAgIGNvbW1lbnQ6IFtcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyhefFteXFxcXF0pXFwoXFwqKD8hXFwpKVtcXHNcXFNdKj9cXCpcXCkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFw6XSlcXC9cXC8uKi8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfVxuICAgIF0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvKD86XCJcIlwiW1xcc1xcU10qP1wiXCJcInxAXCIoPzpcIlwifFteXCJdKSpcInxcIig/OlxcXFxbXFxzXFxTXXxbXlxcXFxcIl0pKlwiKUI/LyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgJ2NsYXNzLW5hbWUnOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKFxcYig/OmV4Y2VwdGlvbnxpbmhlcml0fGludGVyZmFjZXxuZXd8b2Z8dHlwZSlcXHMrfFxcd1xccyo6XFxzKnxcXHM6XFw/Pz5cXHMqKVsuXFx3XStcXGIoPzpcXHMqKD86LT58XFwqKVxccypbLlxcd10rXFxiKSooPyFcXHMqWzouXSkvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBvcGVyYXRvcjogLy0+fFxcKi8sXG4gICAgICAgIHB1bmN0dWF0aW9uOiAvXFwuL1xuICAgICAgfVxuICAgIH0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzpsZXR8cmV0dXJufHVzZXx5aWVsZCkoPzohXFxCfFxcYil8XFxiKD86YWJzdHJhY3R8YW5kfGFzfGFzcnxhc3NlcnR8YXRvbWljfGJhc2V8YmVnaW58YnJlYWt8Y2hlY2tlZHxjbGFzc3xjb21wb25lbnR8Y29uc3R8Y29uc3RyYWludHxjb25zdHJ1Y3Rvcnxjb250aW51ZXxkZWZhdWx0fGRlbGVnYXRlfGRvfGRvbmV8ZG93bmNhc3R8ZG93bnRvfGVhZ2VyfGVsaWZ8ZWxzZXxlbmR8ZXZlbnR8ZXhjZXB0aW9ufGV4dGVybnxleHRlcm5hbHxmYWxzZXxmaW5hbGx5fGZpeGVkfGZvcnxmdW58ZnVuY3Rpb258ZnVuY3RvcnxnbG9iYWx8aWZ8aW58aW5jbHVkZXxpbmhlcml0fGlubGluZXxpbnRlcmZhY2V8aW50ZXJuYWx8bGFuZHxsYXp5fGxvcnxsc2x8bHNyfGx4b3J8bWF0Y2h8bWVtYmVyfG1ldGhvZHxtaXhpbnxtb2R8bW9kdWxlfG11dGFibGV8bmFtZXNwYWNlfG5ld3xub3R8bnVsbHxvYmplY3R8b2Z8b3BlbnxvcnxvdmVycmlkZXxwYXJhbGxlbHxwcml2YXRlfHByb2Nlc3N8cHJvdGVjdGVkfHB1YmxpY3xwdXJlfHJlY3xzZWFsZWR8c2VsZWN0fHNpZ3xzdGF0aWN8c3RydWN0fHRhaWxjYWxsfHRoZW58dG98dHJhaXR8dHJ1ZXx0cnl8dHlwZXx1cGNhc3R8dmFsfHZpcnR1YWx8dm9pZHx2b2xhdGlsZXx3aGVufHdoaWxlfHdpdGgpXFxiLyxcbiAgICBudW1iZXI6IFtcbiAgICAgIC9cXGIweFtcXGRhLWZBLUZdKyg/OkxGfGxmfHVuKT9cXGIvLFxuICAgICAgL1xcYjBiWzAxXSsoPzp1eXx5KT9cXGIvLFxuICAgICAgLyg/OlxcYlxcZCsoPzpcXC5cXGQqKT98XFxCXFwuXFxkKykoPzpbZm1dfGVbKy1dP1xcZCspP1xcYi9pLFxuICAgICAgL1xcYlxcZCsoPzpbSWxMc3ldfFVMfHVbbHN5XT8pP1xcYi9cbiAgICBdLFxuICAgIG9wZXJhdG9yOlxuICAgICAgLyhbPD5+Jl5dKVxcMVxcMXwoWyouOjw+Jl0pXFwyfDwtfC0+fFshPTpdPXw8P1xcfHsxLDN9Pj98XFw/Pyg/Ojw9fD49fDw+fFstKyovJT08Pl0pXFw/P3xbIT9eJl18flsrfi1dfDo+fDpcXD8+Py9cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnZnNoYXJwJywgJ2tleXdvcmQnLCB7XG4gICAgcHJlcHJvY2Vzc29yOiB7XG4gICAgICBwYXR0ZXJuOiAvKF5bXFx0IF0qKSMuKi9tLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAncHJvcGVydHknLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIGRpcmVjdGl2ZToge1xuICAgICAgICAgIHBhdHRlcm46IC8oXiMpXFxiKD86ZWxzZXxlbmRpZnxpZnxsaWdodHxsaW5lfG5vd2FybilcXGIvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdmc2hhcnAnLCAncHVuY3R1YXRpb24nLCB7XG4gICAgJ2NvbXB1dGF0aW9uLWV4cHJlc3Npb24nOiB7XG4gICAgICBwYXR0ZXJuOiAvXFxiW19hLXpdXFx3Kig/PVxccypcXHspL2ksXG4gICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgfVxuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdmc2hhcnAnLCAnc3RyaW5nJywge1xuICAgIGFubm90YXRpb246IHtcbiAgICAgIHBhdHRlcm46IC9cXFs8Lis/PlxcXS8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgcHVuY3R1YXRpb246IC9eXFxbPHw+XFxdJC8sXG4gICAgICAgICdjbGFzcy1uYW1lJzoge1xuICAgICAgICAgIHBhdHRlcm46IC9eXFx3KyR8KF58O1xccyopW0EtWl1cXHcqKD89XFwoKS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICAnYW5ub3RhdGlvbi1jb250ZW50Jzoge1xuICAgICAgICAgIHBhdHRlcm46IC9bXFxzXFxTXSsvLFxuICAgICAgICAgIGluc2lkZTogUHJpc20ubGFuZ3VhZ2VzLmZzaGFycFxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBjaGFyOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvJyg/OlteXFxcXCddfFxcXFwoPzoufFxcZHszfXx4W2EtZkEtRlxcZF17Mn18dVthLWZBLUZcXGRdezR9fFVbYS1mQS1GXFxkXXs4fSkpJ0I/LyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH1cbiAgfSlcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiZnNoYXJwIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJjb21tZW50IiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJncmVlZHkiLCJzdHJpbmciLCJpbnNpZGUiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIiwia2V5d29yZCIsIm51bWJlciIsImluc2VydEJlZm9yZSIsInByZXByb2Nlc3NvciIsImFsaWFzIiwiZGlyZWN0aXZlIiwiYW5ub3RhdGlvbiIsImNoYXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/fsharp.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/ftl.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/ftl.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorMarkupTemplating = __webpack_require__(/*! ./markup-templating.js */ \"(ssr)/./node_modules/refractor/lang/markup-templating.js\");\nmodule.exports = ftl;\nftl.displayName = \"ftl\";\nftl.aliases = [];\nfunction ftl(Prism) {\n    Prism.register(refractorMarkupTemplating);\n    (function(Prism) {\n        // https://freemarker.apache.org/docs/dgui_template_exp.html\n        // FTL expression with 4 levels of nesting supported\n        var FTL_EXPR = /[^<()\"']|\\((?:<expr>)*\\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|\"(?:[^\\\\\"]|\\\\.)*\"|'(?:[^\\\\']|\\\\.)*'/.source;\n        for(var i = 0; i < 2; i++){\n            FTL_EXPR = FTL_EXPR.replace(/<expr>/g, function() {\n                return FTL_EXPR;\n            });\n        }\n        FTL_EXPR = FTL_EXPR.replace(/<expr>/g, /[^\\s\\S]/.source);\n        var ftl = {\n            comment: /<#--[\\s\\S]*?-->/,\n            string: [\n                {\n                    // raw string\n                    pattern: /\\br(\"|')(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n                    greedy: true\n                },\n                {\n                    pattern: RegExp(/(\"|')(?:(?!\\1|\\$\\{)[^\\\\]|\\\\.|\\$\\{(?:(?!\\})(?:<expr>))*\\})*\\1/.source.replace(/<expr>/g, function() {\n                        return FTL_EXPR;\n                    })),\n                    greedy: true,\n                    inside: {\n                        interpolation: {\n                            pattern: RegExp(/((?:^|[^\\\\])(?:\\\\\\\\)*)\\$\\{(?:(?!\\})(?:<expr>))*\\}/.source.replace(/<expr>/g, function() {\n                                return FTL_EXPR;\n                            })),\n                            lookbehind: true,\n                            inside: {\n                                \"interpolation-punctuation\": {\n                                    pattern: /^\\$\\{|\\}$/,\n                                    alias: \"punctuation\"\n                                },\n                                rest: null\n                            }\n                        }\n                    }\n                }\n            ],\n            keyword: /\\b(?:as)\\b/,\n            boolean: /\\b(?:false|true)\\b/,\n            \"builtin-function\": {\n                pattern: /((?:^|[^?])\\?\\s*)\\w+/,\n                lookbehind: true,\n                alias: \"function\"\n            },\n            function: /\\b\\w+(?=\\s*\\()/,\n            number: /\\b\\d+(?:\\.\\d+)?\\b/,\n            operator: /\\.\\.[<*!]?|->|--|\\+\\+|&&|\\|\\||\\?{1,2}|[-+*/%!=<>]=?|\\b(?:gt|gte|lt|lte)\\b/,\n            punctuation: /[,;.:()[\\]{}]/\n        };\n        ftl.string[1].inside.interpolation.inside.rest = ftl;\n        Prism.languages.ftl = {\n            \"ftl-comment\": {\n                // the pattern is shortened to be more efficient\n                pattern: /^<#--[\\s\\S]*/,\n                alias: \"comment\"\n            },\n            \"ftl-directive\": {\n                pattern: /^<[\\s\\S]+>$/,\n                inside: {\n                    directive: {\n                        pattern: /(^<\\/?)[#@][a-z]\\w*/i,\n                        lookbehind: true,\n                        alias: \"keyword\"\n                    },\n                    punctuation: /^<\\/?|\\/?>$/,\n                    content: {\n                        pattern: /\\s*\\S[\\s\\S]*/,\n                        alias: \"ftl\",\n                        inside: ftl\n                    }\n                }\n            },\n            \"ftl-interpolation\": {\n                pattern: /^\\$\\{[\\s\\S]*\\}$/,\n                inside: {\n                    punctuation: /^\\$\\{|\\}$/,\n                    content: {\n                        pattern: /\\s*\\S[\\s\\S]*/,\n                        alias: \"ftl\",\n                        inside: ftl\n                    }\n                }\n            }\n        };\n        Prism.hooks.add(\"before-tokenize\", function(env) {\n            // eslint-disable-next-line regexp/no-useless-lazy\n            var pattern = RegExp(/<#--[\\s\\S]*?-->|<\\/?[#@][a-zA-Z](?:<expr>)*?>|\\$\\{(?:<expr>)*?\\}/.source.replace(/<expr>/g, function() {\n                return FTL_EXPR;\n            }), \"gi\");\n            Prism.languages[\"markup-templating\"].buildPlaceholders(env, \"ftl\", pattern);\n        });\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            Prism.languages[\"markup-templating\"].tokenizePlaceholders(env, \"ftl\");\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/ftl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/gap.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/gap.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = gap;\ngap.displayName = \"gap\";\ngap.aliases = [];\nfunction gap(Prism) {\n    // https://www.gap-system.org/Manuals/doc/ref/chap4.html\n    // https://www.gap-system.org/Manuals/doc/ref/chap27.html\n    Prism.languages.gap = {\n        shell: {\n            pattern: /^gap>[\\s\\S]*?(?=^gap>|$(?![\\s\\S]))/m,\n            greedy: true,\n            inside: {\n                gap: {\n                    pattern: /^(gap>).+(?:(?:\\r(?:\\n|(?!\\n))|\\n)>.*)*/,\n                    lookbehind: true,\n                    inside: null // see below\n                },\n                punctuation: /^gap>/\n            }\n        },\n        comment: {\n            pattern: /#.*/,\n            greedy: true\n        },\n        string: {\n            pattern: /(^|[^\\\\'\"])(?:'(?:[^\\r\\n\\\\']|\\\\.){1,10}'|\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"(?!\")|\"\"\"[\\s\\S]*?\"\"\")/,\n            lookbehind: true,\n            greedy: true,\n            inside: {\n                continuation: {\n                    pattern: /([\\r\\n])>/,\n                    lookbehind: true,\n                    alias: \"punctuation\"\n                }\n            }\n        },\n        keyword: /\\b(?:Assert|Info|IsBound|QUIT|TryNextMethod|Unbind|and|atomic|break|continue|do|elif|else|end|fi|for|function|if|in|local|mod|not|od|or|quit|readonly|readwrite|rec|repeat|return|then|until|while)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        number: {\n            pattern: /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\n            lookbehind: true\n        },\n        continuation: {\n            pattern: /([\\r\\n])>/,\n            lookbehind: true,\n            alias: \"punctuation\"\n        },\n        operator: /->|[-+*/^~=!]|<>|[<>]=?|:=|\\.\\./,\n        punctuation: /[()[\\]{},;.:]/\n    };\n    Prism.languages.gap.shell.inside.gap.inside = Prism.languages.gap;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZ2FwLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLElBQUlDLFdBQVcsR0FBRztBQUNsQkQsSUFBSUUsT0FBTyxHQUFHLEVBQUU7QUFDaEIsU0FBU0YsSUFBSUcsS0FBSztJQUNoQix3REFBd0Q7SUFDeEQseURBQXlEO0lBQ3pEQSxNQUFNQyxTQUFTLENBQUNKLEdBQUcsR0FBRztRQUNwQkssT0FBTztZQUNMQyxTQUFTO1lBQ1RDLFFBQVE7WUFDUkMsUUFBUTtnQkFDTlIsS0FBSztvQkFDSE0sU0FBUztvQkFDVEcsWUFBWTtvQkFDWkQsUUFBUSxLQUFLLFlBQVk7Z0JBQzNCO2dCQUNBRSxhQUFhO1lBQ2Y7UUFDRjtRQUNBQyxTQUFTO1lBQ1BMLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FLLFFBQVE7WUFDTk4sU0FDRTtZQUNGRyxZQUFZO1lBQ1pGLFFBQVE7WUFDUkMsUUFBUTtnQkFDTkssY0FBYztvQkFDWlAsU0FBUztvQkFDVEcsWUFBWTtvQkFDWkssT0FBTztnQkFDVDtZQUNGO1FBQ0Y7UUFDQUMsU0FDRTtRQUNGQyxTQUFTO1FBQ1RDLFVBQVU7UUFDVkMsUUFBUTtZQUNOWixTQUNFO1lBQ0ZHLFlBQVk7UUFDZDtRQUNBSSxjQUFjO1lBQ1pQLFNBQVM7WUFDVEcsWUFBWTtZQUNaSyxPQUFPO1FBQ1Q7UUFDQUssVUFBVTtRQUNWVCxhQUFhO0lBQ2Y7SUFDQVAsTUFBTUMsU0FBUyxDQUFDSixHQUFHLENBQUNLLEtBQUssQ0FBQ0csTUFBTSxDQUFDUixHQUFHLENBQUNRLE1BQU0sR0FBR0wsTUFBTUMsU0FBUyxDQUFDSixHQUFHO0FBQ25FIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2dhcC5qcz85ZTZiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGdhcFxuZ2FwLmRpc3BsYXlOYW1lID0gJ2dhcCdcbmdhcC5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGdhcChQcmlzbSkge1xuICAvLyBodHRwczovL3d3dy5nYXAtc3lzdGVtLm9yZy9NYW51YWxzL2RvYy9yZWYvY2hhcDQuaHRtbFxuICAvLyBodHRwczovL3d3dy5nYXAtc3lzdGVtLm9yZy9NYW51YWxzL2RvYy9yZWYvY2hhcDI3Lmh0bWxcbiAgUHJpc20ubGFuZ3VhZ2VzLmdhcCA9IHtcbiAgICBzaGVsbDoge1xuICAgICAgcGF0dGVybjogL15nYXA+W1xcc1xcU10qPyg/PV5nYXA+fCQoPyFbXFxzXFxTXSkpL20sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgZ2FwOiB7XG4gICAgICAgICAgcGF0dGVybjogL14oZ2FwPikuKyg/Oig/Olxccig/OlxcbnwoPyFcXG4pKXxcXG4pPi4qKSovLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgaW5zaWRlOiBudWxsIC8vIHNlZSBiZWxvd1xuICAgICAgICB9LFxuICAgICAgICBwdW5jdHVhdGlvbjogL15nYXA+L1xuICAgICAgfVxuICAgIH0sXG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogLyMuKi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhefFteXFxcXCdcIl0pKD86Jyg/OlteXFxyXFxuXFxcXCddfFxcXFwuKXsxLDEwfSd8XCIoPzpbXlxcclxcblxcXFxcIl18XFxcXC4pKlwiKD8hXCIpfFwiXCJcIltcXHNcXFNdKj9cIlwiXCIpLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgY29udGludWF0aW9uOiB7XG4gICAgICAgICAgcGF0dGVybjogLyhbXFxyXFxuXSk+LyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86QXNzZXJ0fEluZm98SXNCb3VuZHxRVUlUfFRyeU5leHRNZXRob2R8VW5iaW5kfGFuZHxhdG9taWN8YnJlYWt8Y29udGludWV8ZG98ZWxpZnxlbHNlfGVuZHxmaXxmb3J8ZnVuY3Rpb258aWZ8aW58bG9jYWx8bW9kfG5vdHxvZHxvcnxxdWl0fHJlYWRvbmx5fHJlYWR3cml0ZXxyZWN8cmVwZWF0fHJldHVybnx0aGVufHVudGlsfHdoaWxlKVxcYi8sXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiLyxcbiAgICBmdW5jdGlvbjogL1xcYlthLXpfXVxcdyooPz1cXHMqXFwoKS9pLFxuICAgIG51bWJlcjoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhefFteXFx3Ll18XFwuXFwuKSg/OlxcZCsoPzpcXC5cXGQqKT98XFwuXFxkKykoPzpbZUVdWystXT9cXGQrKT8oPzpfW2Etel0/KT8oPz0kfFteXFx3Ll18XFwuXFwuKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBjb250aW51YXRpb246IHtcbiAgICAgIHBhdHRlcm46IC8oW1xcclxcbl0pPi8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbidcbiAgICB9LFxuICAgIG9wZXJhdG9yOiAvLT58Wy0rKi9efj0hXXw8PnxbPD5dPT98Oj18XFwuXFwuLyxcbiAgICBwdW5jdHVhdGlvbjogL1soKVtcXF17fSw7LjpdL1xuICB9XG4gIFByaXNtLmxhbmd1YWdlcy5nYXAuc2hlbGwuaW5zaWRlLmdhcC5pbnNpZGUgPSBQcmlzbS5sYW5ndWFnZXMuZ2FwXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImdhcCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwic2hlbGwiLCJwYXR0ZXJuIiwiZ3JlZWR5IiwiaW5zaWRlIiwibG9va2JlaGluZCIsInB1bmN0dWF0aW9uIiwiY29tbWVudCIsInN0cmluZyIsImNvbnRpbnVhdGlvbiIsImFsaWFzIiwia2V5d29yZCIsImJvb2xlYW4iLCJmdW5jdGlvbiIsIm51bWJlciIsIm9wZXJhdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/gap.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/gcode.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/gcode.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = gcode;\ngcode.displayName = \"gcode\";\ngcode.aliases = [];\nfunction gcode(Prism) {\n    Prism.languages.gcode = {\n        comment: /;.*|\\B\\(.*?\\)\\B/,\n        string: {\n            pattern: /\"(?:\"\"|[^\"])*\"/,\n            greedy: true\n        },\n        keyword: /\\b[GM]\\d+(?:\\.\\d+)?\\b/,\n        property: /\\b[A-Z]/,\n        checksum: {\n            pattern: /(\\*)\\d+/,\n            lookbehind: true,\n            alias: \"number\"\n        },\n        // T0:0:0\n        punctuation: /[:*]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZ2NvZGUuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsTUFBTUMsV0FBVyxHQUFHO0FBQ3BCRCxNQUFNRSxPQUFPLEdBQUcsRUFBRTtBQUNsQixTQUFTRixNQUFNRyxLQUFLO0lBQ2xCQSxNQUFNQyxTQUFTLENBQUNKLEtBQUssR0FBRztRQUN0QkssU0FBUztRQUNUQyxRQUFRO1lBQ05DLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FDLFNBQVM7UUFDVEMsVUFBVTtRQUNWQyxVQUFVO1lBQ1JKLFNBQVM7WUFDVEssWUFBWTtZQUNaQyxPQUFPO1FBQ1Q7UUFDQSxTQUFTO1FBQ1RDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2djb2RlLmpzPzAwMDUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gZ2NvZGVcbmdjb2RlLmRpc3BsYXlOYW1lID0gJ2djb2RlJ1xuZ2NvZGUuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBnY29kZShQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuZ2NvZGUgPSB7XG4gICAgY29tbWVudDogLzsuKnxcXEJcXCguKj9cXClcXEIvLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1wiKD86XCJcInxbXlwiXSkqXCIvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBrZXl3b3JkOiAvXFxiW0dNXVxcZCsoPzpcXC5cXGQrKT9cXGIvLFxuICAgIHByb3BlcnR5OiAvXFxiW0EtWl0vLFxuICAgIGNoZWNrc3VtOiB7XG4gICAgICBwYXR0ZXJuOiAvKFxcKilcXGQrLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ251bWJlcidcbiAgICB9LFxuICAgIC8vIFQwOjA6MFxuICAgIHB1bmN0dWF0aW9uOiAvWzoqXS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJnY29kZSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJrZXl3b3JkIiwicHJvcGVydHkiLCJjaGVja3N1bSIsImxvb2tiZWhpbmQiLCJhbGlhcyIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/gcode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/gdscript.js":
/*!*************************************************!*\
  !*** ./node_modules/refractor/lang/gdscript.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = gdscript;\ngdscript.displayName = \"gdscript\";\ngdscript.aliases = [];\nfunction gdscript(Prism) {\n    Prism.languages.gdscript = {\n        comment: /#.*/,\n        string: {\n            pattern: /@?(?:(\"|')(?:(?!\\1)[^\\n\\\\]|\\\\[\\s\\S])*\\1(?!\"|')|\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\")/,\n            greedy: true\n        },\n        \"class-name\": {\n            // class_name Foo, extends Bar, class InnerClass\n            // export(int) var baz, export(int, 0) var i\n            // as Node\n            // const FOO: int = 9, var bar: bool = true\n            // func add(reference: Item, amount: int) -> Item:\n            pattern: /(^(?:class|class_name|extends)[ \\t]+|^export\\([ \\t]*|\\bas[ \\t]+|(?:\\b(?:const|var)[ \\t]|[,(])[ \\t]*\\w+[ \\t]*:[ \\t]*|->[ \\t]*)[a-zA-Z_]\\w*/m,\n            lookbehind: true\n        },\n        keyword: /\\b(?:and|as|assert|break|breakpoint|class|class_name|const|continue|elif|else|enum|export|extends|for|func|if|in|is|master|mastersync|match|not|null|onready|or|pass|preload|puppet|puppetsync|remote|remotesync|return|self|setget|signal|static|tool|var|while|yield)\\b/,\n        function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n        variable: /\\$\\w+/,\n        number: [\n            /\\b0b[01_]+\\b|\\b0x[\\da-fA-F_]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.[\\d_]+)(?:e[+-]?[\\d_]+)?\\b/,\n            /\\b(?:INF|NAN|PI|TAU)\\b/\n        ],\n        constant: /\\b[A-Z][A-Z_\\d]*\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        operator: /->|:=|&&|\\|\\||<<|>>|[-+*/%&|!<>=]=?|[~^]/,\n        punctuation: /[.:,;()[\\]{}]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZ2RzY3JpcHQuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsU0FBU0MsV0FBVyxHQUFHO0FBQ3ZCRCxTQUFTRSxPQUFPLEdBQUcsRUFBRTtBQUNyQixTQUFTRixTQUFTRyxLQUFLO0lBQ3JCQSxNQUFNQyxTQUFTLENBQUNKLFFBQVEsR0FBRztRQUN6QkssU0FBUztRQUNUQyxRQUFRO1lBQ05DLFNBQ0U7WUFDRkMsUUFBUTtRQUNWO1FBQ0EsY0FBYztZQUNaLGdEQUFnRDtZQUNoRCw0Q0FBNEM7WUFDNUMsVUFBVTtZQUNWLDJDQUEyQztZQUMzQyxrREFBa0Q7WUFDbERELFNBQ0U7WUFDRkUsWUFBWTtRQUNkO1FBQ0FDLFNBQ0U7UUFDRkMsVUFBVTtRQUNWQyxVQUFVO1FBQ1ZDLFFBQVE7WUFDTjtZQUNBO1NBQ0Q7UUFDREMsVUFBVTtRQUNWQyxTQUFTO1FBQ1RDLFVBQVU7UUFDVkMsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZ2RzY3JpcHQuanM/YWRjYyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBnZHNjcmlwdFxuZ2RzY3JpcHQuZGlzcGxheU5hbWUgPSAnZ2RzY3JpcHQnXG5nZHNjcmlwdC5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGdkc2NyaXB0KFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5nZHNjcmlwdCA9IHtcbiAgICBjb21tZW50OiAvIy4qLyxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC9APyg/OihcInwnKSg/Oig/IVxcMSlbXlxcblxcXFxdfFxcXFxbXFxzXFxTXSkqXFwxKD8hXCJ8Jyl8XCJcIlwiKD86W15cXFxcXXxcXFxcW1xcc1xcU10pKj9cIlwiXCIpLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgJ2NsYXNzLW5hbWUnOiB7XG4gICAgICAvLyBjbGFzc19uYW1lIEZvbywgZXh0ZW5kcyBCYXIsIGNsYXNzIElubmVyQ2xhc3NcbiAgICAgIC8vIGV4cG9ydChpbnQpIHZhciBiYXosIGV4cG9ydChpbnQsIDApIHZhciBpXG4gICAgICAvLyBhcyBOb2RlXG4gICAgICAvLyBjb25zdCBGT086IGludCA9IDksIHZhciBiYXI6IGJvb2wgPSB0cnVlXG4gICAgICAvLyBmdW5jIGFkZChyZWZlcmVuY2U6IEl0ZW0sIGFtb3VudDogaW50KSAtPiBJdGVtOlxuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyheKD86Y2xhc3N8Y2xhc3NfbmFtZXxleHRlbmRzKVsgXFx0XSt8XmV4cG9ydFxcKFsgXFx0XSp8XFxiYXNbIFxcdF0rfCg/OlxcYig/OmNvbnN0fHZhcilbIFxcdF18WywoXSlbIFxcdF0qXFx3K1sgXFx0XSo6WyBcXHRdKnwtPlsgXFx0XSopW2EtekEtWl9dXFx3Ki9tLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzphbmR8YXN8YXNzZXJ0fGJyZWFrfGJyZWFrcG9pbnR8Y2xhc3N8Y2xhc3NfbmFtZXxjb25zdHxjb250aW51ZXxlbGlmfGVsc2V8ZW51bXxleHBvcnR8ZXh0ZW5kc3xmb3J8ZnVuY3xpZnxpbnxpc3xtYXN0ZXJ8bWFzdGVyc3luY3xtYXRjaHxub3R8bnVsbHxvbnJlYWR5fG9yfHBhc3N8cHJlbG9hZHxwdXBwZXR8cHVwcGV0c3luY3xyZW1vdGV8cmVtb3Rlc3luY3xyZXR1cm58c2VsZnxzZXRnZXR8c2lnbmFsfHN0YXRpY3x0b29sfHZhcnx3aGlsZXx5aWVsZClcXGIvLFxuICAgIGZ1bmN0aW9uOiAvXFxiW2Etel9dXFx3Kig/PVsgXFx0XSpcXCgpL2ksXG4gICAgdmFyaWFibGU6IC9cXCRcXHcrLyxcbiAgICBudW1iZXI6IFtcbiAgICAgIC9cXGIwYlswMV9dK1xcYnxcXGIweFtcXGRhLWZBLUZfXStcXGJ8KD86XFxiXFxkW1xcZF9dKig/OlxcLltcXGRfXSopP3xcXEJcXC5bXFxkX10rKSg/OmVbKy1dP1tcXGRfXSspP1xcYi8sXG4gICAgICAvXFxiKD86SU5GfE5BTnxQSXxUQVUpXFxiL1xuICAgIF0sXG4gICAgY29uc3RhbnQ6IC9cXGJbQS1aXVtBLVpfXFxkXSpcXGIvLFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAgb3BlcmF0b3I6IC8tPnw6PXwmJnxcXHxcXHx8PDx8Pj58Wy0rKi8lJnwhPD49XT0/fFt+Xl0vLFxuICAgIHB1bmN0dWF0aW9uOiAvWy46LDsoKVtcXF17fV0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiZ2RzY3JpcHQiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZ3JlZWR5IiwibG9va2JlaGluZCIsImtleXdvcmQiLCJmdW5jdGlvbiIsInZhcmlhYmxlIiwibnVtYmVyIiwiY29uc3RhbnQiLCJib29sZWFuIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/gdscript.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/gedcom.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/gedcom.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = gedcom;\ngedcom.displayName = \"gedcom\";\ngedcom.aliases = [];\nfunction gedcom(Prism) {\n    Prism.languages.gedcom = {\n        \"line-value\": {\n            // Preceded by level, optional pointer, and tag\n            pattern: /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ ).+/m,\n            lookbehind: true,\n            inside: {\n                pointer: {\n                    pattern: /^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\n                    alias: \"variable\"\n                }\n            }\n        },\n        tag: {\n            // Preceded by level and optional pointer\n            pattern: /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\n            lookbehind: true,\n            alias: \"string\"\n        },\n        level: {\n            pattern: /(^[\\t ]*)\\d+/m,\n            lookbehind: true,\n            alias: \"number\"\n        },\n        pointer: {\n            pattern: /@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\n            alias: \"variable\"\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZ2VkY29tLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLE9BQU9DLFdBQVcsR0FBRztBQUNyQkQsT0FBT0UsT0FBTyxHQUFHLEVBQUU7QUFDbkIsU0FBU0YsT0FBT0csS0FBSztJQUNuQkEsTUFBTUMsU0FBUyxDQUFDSixNQUFNLEdBQUc7UUFDdkIsY0FBYztZQUNaLCtDQUErQztZQUMvQ0ssU0FDRTtZQUNGQyxZQUFZO1lBQ1pDLFFBQVE7Z0JBQ05DLFNBQVM7b0JBQ1BILFNBQVM7b0JBQ1RJLE9BQU87Z0JBQ1Q7WUFDRjtRQUNGO1FBQ0FDLEtBQUs7WUFDSCx5Q0FBeUM7WUFDekNMLFNBQ0U7WUFDRkMsWUFBWTtZQUNaRyxPQUFPO1FBQ1Q7UUFDQUUsT0FBTztZQUNMTixTQUFTO1lBQ1RDLFlBQVk7WUFDWkcsT0FBTztRQUNUO1FBQ0FELFNBQVM7WUFDUEgsU0FBUztZQUNUSSxPQUFPO1FBQ1Q7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2dlZGNvbS5qcz83YjFjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGdlZGNvbVxuZ2VkY29tLmRpc3BsYXlOYW1lID0gJ2dlZGNvbSdcbmdlZGNvbS5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGdlZGNvbShQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuZ2VkY29tID0ge1xuICAgICdsaW5lLXZhbHVlJzoge1xuICAgICAgLy8gUHJlY2VkZWQgYnkgbGV2ZWwsIG9wdGlvbmFsIHBvaW50ZXIsIGFuZCB0YWdcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXltcXHQgXSpcXGQrICsoPzpAXFx3W1xcdyFcIiQlJicoKSorLFxcLS4vOjs8PT4/W1xcXFxcXF1eYHt8fX5cXHg4MC1cXHhmZSAjXSpAICspP1xcdysgKS4rL20sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHBvaW50ZXI6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXkBcXHdbXFx3IVwiJCUmJygpKissXFwtLi86Ozw9Pj9bXFxcXFxcXV5ge3x9flxceDgwLVxceGZlICNdKkAkLyxcbiAgICAgICAgICBhbGlhczogJ3ZhcmlhYmxlJ1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICB0YWc6IHtcbiAgICAgIC8vIFByZWNlZGVkIGJ5IGxldmVsIGFuZCBvcHRpb25hbCBwb2ludGVyXG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKF5bXFx0IF0qXFxkKyArKD86QFxcd1tcXHchXCIkJSYnKCkqKyxcXC0uLzo7PD0+P1tcXFxcXFxdXmB7fH1+XFx4ODAtXFx4ZmUgI10qQCArKT8pXFx3Ky9tLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAnc3RyaW5nJ1xuICAgIH0sXG4gICAgbGV2ZWw6IHtcbiAgICAgIHBhdHRlcm46IC8oXltcXHQgXSopXFxkKy9tLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAnbnVtYmVyJ1xuICAgIH0sXG4gICAgcG9pbnRlcjoge1xuICAgICAgcGF0dGVybjogL0BcXHdbXFx3IVwiJCUmJygpKissXFwtLi86Ozw9Pj9bXFxcXFxcXV5ge3x9flxceDgwLVxceGZlICNdKkAvLFxuICAgICAgYWxpYXM6ICd2YXJpYWJsZSdcbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiZ2VkY29tIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImluc2lkZSIsInBvaW50ZXIiLCJhbGlhcyIsInRhZyIsImxldmVsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/gedcom.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/gherkin.js":
/*!************************************************!*\
  !*** ./node_modules/refractor/lang/gherkin.js ***!
  \************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = gherkin;\ngherkin.displayName = \"gherkin\";\ngherkin.aliases = [];\nfunction gherkin(Prism) {\n    ;\n    (function(Prism) {\n        var tableRow = /(?:\\r?\\n|\\r)[ \\t]*\\|.+\\|(?:(?!\\|).)*/.source;\n        Prism.languages.gherkin = {\n            pystring: {\n                pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n                alias: \"string\"\n            },\n            comment: {\n                pattern: /(^[ \\t]*)#.*/m,\n                lookbehind: true\n            },\n            tag: {\n                pattern: /(^[ \\t]*)@\\S*/m,\n                lookbehind: true\n            },\n            feature: {\n                pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Característica|Egenskab|Egenskap|Eiginleiki|Feature|Fīča|Fitur|Fonctionnalité|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Funcţionalitate|Funcționalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalitāte|Funkcionalnost|Funkcja|Funksie|Funktionalität|Funktionalitéit|Funzionalità|Hwaet|Hwæt|Jellemző|Karakteristik|Lastnost|Mak|Mogucnost|laH|Mogućnost|Moznosti|Možnosti|OH HAI|Omadus|Ominaisuus|Osobina|Özellik|Potrzeba biznesowa|perbogh|poQbogh malja'|Požadavek|Požiadavka|Pretty much|Qap|Qu'meH 'ut|Savybė|Tính năng|Trajto|Vermoë|Vlastnosť|Właściwość|Značilnost|Δυνατότητα|Λειτουργία|Могућност|Мөмкинлек|Особина|Свойство|Үзенчәлеклелек|Функционал|Функционалност|Функция|Функціонал|תכונה|خاصية|خصوصیت|صلاحیت|کاروبار کی ضرورت|وِیژگی|रूप लेख|ਖਾਸੀਅਤ|ਨਕਸ਼ ਨੁਹਾਰ|ਮੁਹਾਂਦਰਾ|గుణము|ಹೆಚ್ಚಳ|ความต้องการทางธุรกิจ|ความสามารถ|โครงหลัก|기능|フィーチャ|功能|機能):(?:[^:\\r\\n]+(?:\\r?\\n|\\r|$))*/,\n                lookbehind: true,\n                inside: {\n                    important: {\n                        pattern: /(:)[^\\r\\n]+/,\n                        lookbehind: true\n                    },\n                    keyword: /[^:\\r\\n]+:/\n                }\n            },\n            scenario: {\n                pattern: /(^[ \\t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|Ær|Agtergrond|All y'all|Antecedentes|Antecedents|Atburðarás|Atburðarásir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|Bối cảnh|Cefndir|Cenario|Cenário|Cenario de Fundo|Cenário de Fundo|Cenarios|Cenários|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|Dæmi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delineação do Cenário|Dis is what went down|Dữ liệu|Dyagram Senaryo|Dyagram senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cenário|EXAMPLZ|Examples|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgatókönyv|Forgatókönyv vázlat|Fundo|Geçmiş|Grundlage|Hannergrond|ghantoH|Háttér|Heave to|Istorik|Juhtumid|Keadaan|Khung kịch bản|Khung tình huống|Kịch bản|Koncept|Konsep skenario|Kontèks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut chovnatlh|lut|lutmey|Lýsing Atburðarásar|Lýsing Dæma|MISHUN SRSLY|MISHUN|Menggariskan Senario|mo'|Náčrt Scenára|Náčrt Scénáře|Náčrt Scenáru|Oris scenarija|Örnekler|Osnova|Osnova Scenára|Osnova scénáře|Osnutek|Ozadje|Paraugs|Pavyzdžiai|Példák|Piemēri|Plan du scénario|Plan du Scénario|Plan Senaryo|Plan senaryo|Plang vum Szenario|Pozadí|Pozadie|Pozadina|Príklady|Příklady|Primer|Primeri|Primjeri|Przykłady|Raamstsenaarium|Reckon it's like|Rerefons|Scenár|Scénář|Scenarie|Scenarij|Scenarijai|Scenarijaus šablonas|Scenariji|Scenārijs|Scenārijs pēc parauga|Scenarijus|Scenario|Scénario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ðe|Se the|Se þe|Senario|Senaryo Deskripsyon|Senaryo deskripsyon|Senaryo|Senaryo taslağı|Shiver me timbers|Situācija|Situai|Situasie Uiteensetting|Situasie|Skenario konsep|Skenario|Skica|Structura scenariu|Structură scenariu|Struktura scenarija|Stsenaarium|Swa hwaer swa|Swa|Swa hwær swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|Tình huống|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo-ho-ho|You'll wanna|Założenia|Παραδείγματα|Περιγραφή Σεναρίου|Σενάρια|Σενάριο|Υπόβαθρο|Кереш|Контекст|Концепт|Мисаллар|Мисоллар|Основа|Передумова|Позадина|Предистория|Предыстория|Приклади|Пример|Примери|Примеры|Рамка на сценарий|Скица|Структура сценарија|Структура сценария|Структура сценарію|Сценарий|Сценарий структураси|Сценарийның төзелеше|Сценарији|Сценарио|Сценарій|Тарих|Үрнәкләр|דוגמאות|רקע|תבנית תרחיש|תרחיש|الخلفية|الگوی سناریو|امثلة|پس منظر|زمینه|سناریو|سيناريو|سيناريو مخطط|مثالیں|منظر نامے کا خاکہ|منظرنامہ|نمونه ها|उदाहरण|परिदृश्य|परिदृश्य रूपरेखा|पृष्ठभूमि|ਉਦਾਹਰਨਾਂ|ਪਟਕਥਾ|ਪਟਕਥਾ ਢਾਂਚਾ|ਪਟਕਥਾ ਰੂਪ ਰੇਖਾ|ਪਿਛੋਕੜ|ఉదాహరణలు|కథనం|నేపథ్యం|సన్నివేశం|ಉದಾಹರಣೆಗಳು|ಕಥಾಸಾರಾಂಶ|ವಿವರಣೆ|ಹಿನ್ನೆಲೆ|โครงสร้างของเหตุการณ์|ชุดของตัวอย่าง|ชุดของเหตุการณ์|แนวคิด|สรุปเหตุการณ์|เหตุการณ์|배경|시나리오|시나리오 개요|예|サンプル|シナリオ|シナリオアウトライン|シナリオテンプレ|シナリオテンプレート|テンプレ|例|例子|剧本|剧本大纲|劇本|劇本大綱|场景|场景大纲|場景|場景大綱|背景):[^:\\r\\n]*/m,\n                lookbehind: true,\n                inside: {\n                    important: {\n                        pattern: /(:)[^\\r\\n]*/,\n                        lookbehind: true\n                    },\n                    keyword: /[^:\\r\\n]+:/\n                }\n            },\n            \"table-body\": {\n                // Look-behind is used to skip the table head, which has the same format as any table row\n                pattern: RegExp(\"(\" + tableRow + \")(?:\" + tableRow + \")+\"),\n                lookbehind: true,\n                inside: {\n                    outline: {\n                        pattern: /<[^>]+>/,\n                        alias: \"variable\"\n                    },\n                    td: {\n                        pattern: /\\s*[^\\s|][^|]*/,\n                        alias: \"string\"\n                    },\n                    punctuation: /\\|/\n                }\n            },\n            \"table-head\": {\n                pattern: RegExp(tableRow),\n                inside: {\n                    th: {\n                        pattern: /\\s*[^\\s|][^|]*/,\n                        alias: \"variable\"\n                    },\n                    punctuation: /\\|/\n                }\n            },\n            atrule: {\n                pattern: /(^[ \\t]+)(?:'a|'ach|'ej|7|a|A také|A taktiež|A tiež|A zároveň|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|Atès|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Biết|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|Când|Cand|Cando|Ce|Cuando|Če|Ða ðe|Ða|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Daţi fiind|Dați fiind|DEN|Dato|De|Den youse gotta|Dengan|Diberi|Diyelim ki|Donada|Donat|Donitaĵo|Do|Dun|Duota|Ðurh|Eeldades|Ef|Eğer ki|Entao|Então|Entón|E|En|Entonces|Epi|És|Etant donnée|Etant donné|Et|Étant données|Étant donnée|Étant donné|Etant données|Etant donnés|Étant donnés|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Jeśli|Jeżeli|Kad|Kada|Kadar|Kai|Kaj|Když|Keď|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|Lè sa a|Lè|Logo|Lorsqu'<|Lorsque|mä|Maar|Mais|Mając|Ma|Majd|Maka|Manawa|Mas|Men|Menawa|Mutta|Nalika|Nalikaning|Nanging|Når|När|Nato|Nhưng|Niin|Njuk|O zaman|Och|Og|Oletetaan|Ond|Onda|Oraz|Pak|Pero|Però|Podano|Pokiaľ|Pokud|Potem|Potom|Privzeto|Pryd|Quan|Quand|Quando|qaSDI'|Så|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|Şi|Și|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Thì|Thurh|Toda|Too right|Un|Und|ugeholl|Và|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za předpokladu|Zadan|Zadani|Zadano|Zadate|Zadato|Zakładając|Zaradi|Zatati|Þa þe|Þa|Þá|Þegar|Þurh|Αλλά|Δεδομένου|Και|Όταν|Τότε|А також|Агар|Але|Али|Аммо|А|Әгәр|Әйтик|Әмма|Бирок|Ва|Вә|Дадено|Дано|Допустим|Если|Задате|Задати|Задато|И|І|К тому же|Када|Кад|Когато|Когда|Коли|Ләкин|Лекин|Нәтиҗәдә|Нехай|Но|Онда|Припустимо, що|Припустимо|Пусть|Также|Та|Тогда|Тоді|То|Унда|Һәм|Якщо|אבל|אזי|אז|בהינתן|וגם|כאשר|آنگاه|اذاً|اگر|اما|اور|با فرض|بالفرض|بفرض|پھر|تب|ثم|جب|عندما|فرض کیا|لكن|لیکن|متى|هنگامی|و|अगर|और|कदा|किन्तु|चूंकि|जब|तथा|तदा|तब|परन्तु|पर|यदि|ਅਤੇ|ਜਦੋਂ|ਜਿਵੇਂ ਕਿ|ਜੇਕਰ|ਤਦ|ਪਰ|అప్పుడు|ఈ పరిస్థితిలో|కాని|చెప్పబడినది|మరియు|ಆದರೆ|ನಂತರ|ನೀಡಿದ|ಮತ್ತು|ಸ್ಥಿತಿಯನ್ನು|กำหนดให้|ดังนั้น|แต่|เมื่อ|และ|그러면<|그리고<|단<|만약<|만일<|먼저<|조건<|하지만<|かつ<|しかし<|ただし<|ならば<|もし<|並且<|但し<|但是<|假如<|假定<|假設<|假设<|前提<|同时<|同時<|并且<|当<|當<|而且<|那么<|那麼<)(?=[ \\t])/m,\n                lookbehind: true\n            },\n            string: {\n                pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n                inside: {\n                    outline: {\n                        pattern: /<[^>]+>/,\n                        alias: \"variable\"\n                    }\n                }\n            },\n            outline: {\n                pattern: /<[^>]+>/,\n                alias: \"variable\"\n            }\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/gherkin.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/git.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/git.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = git;\ngit.displayName = \"git\";\ngit.aliases = [];\nfunction git(Prism) {\n    Prism.languages.git = {\n        /*\n     * A simple one line comment like in a git status command\n     * For instance:\n     * $ git status\n     * # On branch infinite-scroll\n     * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n     * # and have 1 and 2 different commits each, respectively.\n     * nothing to commit (working directory clean)\n     */ comment: /^#.*/m,\n        /*\n     * Regexp to match the changed lines in a git diff output. Check the example below.\n     */ deleted: /^[-–].*/m,\n        inserted: /^\\+.*/m,\n        /*\n     * a string (double and simple quote)\n     */ string: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        /*\n     * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n     * For instance:\n     * $ git add file.txt\n     */ command: {\n            pattern: /^.*\\$ git .*$/m,\n            inside: {\n                /*\n         * A git command can contain a parameter starting by a single or a double dash followed by a string\n         * For instance:\n         * $ git diff --cached\n         * $ git log -p\n         */ parameter: /\\s--?\\w+/\n            }\n        },\n        /*\n     * Coordinates displayed in a git diff command\n     * For instance:\n     * $ git diff\n     * diff --git file.txt file.txt\n     * index 6214953..1d54a52 100644\n     * --- file.txt\n     * +++ file.txt\n     * @@ -1 +1,2 @@\n     * -Here's my tetx file\n     * +Here's my text file\n     * +And this is the second line\n     */ coord: /^@@.*@@$/m,\n        /*\n     * Match a \"commit [SHA1]\" line in a git log output.\n     * For instance:\n     * $ git log\n     * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n     * Author: lgiraudel\n     * Date:   Mon Feb 17 11:18:34 2014 +0100\n     *\n     *     Add of a new line\n     */ \"commit-sha1\": /^commit \\w{40}$/m\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZ2l0LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLElBQUlDLFdBQVcsR0FBRztBQUNsQkQsSUFBSUUsT0FBTyxHQUFHLEVBQUU7QUFDaEIsU0FBU0YsSUFBSUcsS0FBSztJQUNoQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEI7Ozs7Ozs7O0tBUUMsR0FDREssU0FBUztRQUNUOztLQUVDLEdBQ0RDLFNBQVM7UUFDVEMsVUFBVTtRQUNWOztLQUVDLEdBQ0RDLFFBQVE7UUFDUjs7OztLQUlDLEdBQ0RDLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxRQUFRO2dCQUNOOzs7OztTQUtDLEdBQ0RDLFdBQVc7WUFDYjtRQUNGO1FBQ0E7Ozs7Ozs7Ozs7OztLQVlDLEdBQ0RDLE9BQU87UUFDUDs7Ozs7Ozs7O0tBU0MsR0FDRCxlQUFlO0lBQ2pCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZ2l0LmpzP2I1ZmMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gZ2l0XG5naXQuZGlzcGxheU5hbWUgPSAnZ2l0J1xuZ2l0LmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gZ2l0KFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5naXQgPSB7XG4gICAgLypcbiAgICAgKiBBIHNpbXBsZSBvbmUgbGluZSBjb21tZW50IGxpa2UgaW4gYSBnaXQgc3RhdHVzIGNvbW1hbmRcbiAgICAgKiBGb3IgaW5zdGFuY2U6XG4gICAgICogJCBnaXQgc3RhdHVzXG4gICAgICogIyBPbiBicmFuY2ggaW5maW5pdGUtc2Nyb2xsXG4gICAgICogIyBZb3VyIGJyYW5jaCBhbmQgJ29yaWdpbi9zaGFyZWRCcmFuY2hlcy9mcm9udGVuZFRlYW0vaW5maW5pdGUtc2Nyb2xsJyBoYXZlIGRpdmVyZ2VkLFxuICAgICAqICMgYW5kIGhhdmUgMSBhbmQgMiBkaWZmZXJlbnQgY29tbWl0cyBlYWNoLCByZXNwZWN0aXZlbHkuXG4gICAgICogbm90aGluZyB0byBjb21taXQgKHdvcmtpbmcgZGlyZWN0b3J5IGNsZWFuKVxuICAgICAqL1xuICAgIGNvbW1lbnQ6IC9eIy4qL20sXG4gICAgLypcbiAgICAgKiBSZWdleHAgdG8gbWF0Y2ggdGhlIGNoYW5nZWQgbGluZXMgaW4gYSBnaXQgZGlmZiBvdXRwdXQuIENoZWNrIHRoZSBleGFtcGxlIGJlbG93LlxuICAgICAqL1xuICAgIGRlbGV0ZWQ6IC9eWy3igJNdLiovbSxcbiAgICBpbnNlcnRlZDogL15cXCsuKi9tLFxuICAgIC8qXG4gICAgICogYSBzdHJpbmcgKGRvdWJsZSBhbmQgc2ltcGxlIHF1b3RlKVxuICAgICAqL1xuICAgIHN0cmluZzogLyhcInwnKSg/OlxcXFwufCg/IVxcMSlbXlxcXFxcXHJcXG5dKSpcXDEvLFxuICAgIC8qXG4gICAgICogYSBnaXQgY29tbWFuZC4gSXQgc3RhcnRzIHdpdGggYSByYW5kb20gcHJvbXB0IGZpbmlzaGluZyBieSBhICQsIHRoZW4gXCJnaXRcIiB0aGVuIHNvbWUgb3RoZXIgcGFyYW1ldGVyc1xuICAgICAqIEZvciBpbnN0YW5jZTpcbiAgICAgKiAkIGdpdCBhZGQgZmlsZS50eHRcbiAgICAgKi9cbiAgICBjb21tYW5kOiB7XG4gICAgICBwYXR0ZXJuOiAvXi4qXFwkIGdpdCAuKiQvbSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICAvKlxuICAgICAgICAgKiBBIGdpdCBjb21tYW5kIGNhbiBjb250YWluIGEgcGFyYW1ldGVyIHN0YXJ0aW5nIGJ5IGEgc2luZ2xlIG9yIGEgZG91YmxlIGRhc2ggZm9sbG93ZWQgYnkgYSBzdHJpbmdcbiAgICAgICAgICogRm9yIGluc3RhbmNlOlxuICAgICAgICAgKiAkIGdpdCBkaWZmIC0tY2FjaGVkXG4gICAgICAgICAqICQgZ2l0IGxvZyAtcFxuICAgICAgICAgKi9cbiAgICAgICAgcGFyYW1ldGVyOiAvXFxzLS0/XFx3Ky9cbiAgICAgIH1cbiAgICB9LFxuICAgIC8qXG4gICAgICogQ29vcmRpbmF0ZXMgZGlzcGxheWVkIGluIGEgZ2l0IGRpZmYgY29tbWFuZFxuICAgICAqIEZvciBpbnN0YW5jZTpcbiAgICAgKiAkIGdpdCBkaWZmXG4gICAgICogZGlmZiAtLWdpdCBmaWxlLnR4dCBmaWxlLnR4dFxuICAgICAqIGluZGV4IDYyMTQ5NTMuLjFkNTRhNTIgMTAwNjQ0XG4gICAgICogLS0tIGZpbGUudHh0XG4gICAgICogKysrIGZpbGUudHh0XG4gICAgICogQEAgLTEgKzEsMiBAQFxuICAgICAqIC1IZXJlJ3MgbXkgdGV0eCBmaWxlXG4gICAgICogK0hlcmUncyBteSB0ZXh0IGZpbGVcbiAgICAgKiArQW5kIHRoaXMgaXMgdGhlIHNlY29uZCBsaW5lXG4gICAgICovXG4gICAgY29vcmQ6IC9eQEAuKkBAJC9tLFxuICAgIC8qXG4gICAgICogTWF0Y2ggYSBcImNvbW1pdCBbU0hBMV1cIiBsaW5lIGluIGEgZ2l0IGxvZyBvdXRwdXQuXG4gICAgICogRm9yIGluc3RhbmNlOlxuICAgICAqICQgZ2l0IGxvZ1xuICAgICAqIGNvbW1pdCBhMTFhMTRlZjdlMjZmMmNhNjJkNGIzNWVhYzQ1NWNlNjM2ZDBkYzA5XG4gICAgICogQXV0aG9yOiBsZ2lyYXVkZWxcbiAgICAgKiBEYXRlOiAgIE1vbiBGZWIgMTcgMTE6MTg6MzQgMjAxNCArMDEwMFxuICAgICAqXG4gICAgICogICAgIEFkZCBvZiBhIG5ldyBsaW5lXG4gICAgICovXG4gICAgJ2NvbW1pdC1zaGExJzogL15jb21taXQgXFx3ezQwfSQvbVxuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImdpdCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsImRlbGV0ZWQiLCJpbnNlcnRlZCIsInN0cmluZyIsImNvbW1hbmQiLCJwYXR0ZXJuIiwiaW5zaWRlIiwicGFyYW1ldGVyIiwiY29vcmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/git.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/glsl.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/glsl.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorC = __webpack_require__(/*! ./c.js */ \"(ssr)/./node_modules/refractor/lang/c.js\");\nmodule.exports = glsl;\nglsl.displayName = \"glsl\";\nglsl.aliases = [];\nfunction glsl(Prism) {\n    Prism.register(refractorC);\n    Prism.languages.glsl = Prism.languages.extend(\"c\", {\n        keyword: /\\b(?:active|asm|atomic_uint|attribute|[ibdu]?vec[234]|bool|break|buffer|case|cast|centroid|class|coherent|common|const|continue|d?mat[234](?:x[234])?|default|discard|do|double|else|enum|extern|external|false|filter|fixed|flat|float|for|fvec[234]|goto|half|highp|hvec[234]|[iu]?sampler2DMS(?:Array)?|[iu]?sampler2DRect|[iu]?samplerBuffer|[iu]?samplerCube|[iu]?samplerCubeArray|[iu]?sampler[123]D|[iu]?sampler[12]DArray|[iu]?image2DMS(?:Array)?|[iu]?image2DRect|[iu]?imageBuffer|[iu]?imageCube|[iu]?imageCubeArray|[iu]?image[123]D|[iu]?image[12]DArray|if|in|inline|inout|input|int|interface|invariant|layout|long|lowp|mediump|namespace|noinline|noperspective|out|output|partition|patch|precise|precision|public|readonly|resource|restrict|return|sample|sampler[12]DArrayShadow|sampler[12]DShadow|sampler2DRectShadow|sampler3DRect|samplerCubeArrayShadow|samplerCubeShadow|shared|short|sizeof|smooth|static|struct|subroutine|superp|switch|template|this|true|typedef|uint|uniform|union|unsigned|using|varying|void|volatile|while|writeonly)\\b/\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZ2xzbC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLElBQUlBLGFBQWFDLG1CQUFPQSxDQUFDO0FBQ3pCQyxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDakJBLE1BQU1DLFFBQVEsQ0FBQ1I7SUFDZk8sTUFBTUUsU0FBUyxDQUFDTCxJQUFJLEdBQUdHLE1BQU1FLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLEtBQUs7UUFDakRDLFNBQ0U7SUFDSjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2dsc2wuanM/Nzc4NCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcbnZhciByZWZyYWN0b3JDID0gcmVxdWlyZSgnLi9jLmpzJylcbm1vZHVsZS5leHBvcnRzID0gZ2xzbFxuZ2xzbC5kaXNwbGF5TmFtZSA9ICdnbHNsJ1xuZ2xzbC5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGdsc2woUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yQylcbiAgUHJpc20ubGFuZ3VhZ2VzLmdsc2wgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdjJywge1xuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YWN0aXZlfGFzbXxhdG9taWNfdWludHxhdHRyaWJ1dGV8W2liZHVdP3ZlY1syMzRdfGJvb2x8YnJlYWt8YnVmZmVyfGNhc2V8Y2FzdHxjZW50cm9pZHxjbGFzc3xjb2hlcmVudHxjb21tb258Y29uc3R8Y29udGludWV8ZD9tYXRbMjM0XSg/OnhbMjM0XSk/fGRlZmF1bHR8ZGlzY2FyZHxkb3xkb3VibGV8ZWxzZXxlbnVtfGV4dGVybnxleHRlcm5hbHxmYWxzZXxmaWx0ZXJ8Zml4ZWR8ZmxhdHxmbG9hdHxmb3J8ZnZlY1syMzRdfGdvdG98aGFsZnxoaWdocHxodmVjWzIzNF18W2l1XT9zYW1wbGVyMkRNUyg/OkFycmF5KT98W2l1XT9zYW1wbGVyMkRSZWN0fFtpdV0/c2FtcGxlckJ1ZmZlcnxbaXVdP3NhbXBsZXJDdWJlfFtpdV0/c2FtcGxlckN1YmVBcnJheXxbaXVdP3NhbXBsZXJbMTIzXUR8W2l1XT9zYW1wbGVyWzEyXURBcnJheXxbaXVdP2ltYWdlMkRNUyg/OkFycmF5KT98W2l1XT9pbWFnZTJEUmVjdHxbaXVdP2ltYWdlQnVmZmVyfFtpdV0/aW1hZ2VDdWJlfFtpdV0/aW1hZ2VDdWJlQXJyYXl8W2l1XT9pbWFnZVsxMjNdRHxbaXVdP2ltYWdlWzEyXURBcnJheXxpZnxpbnxpbmxpbmV8aW5vdXR8aW5wdXR8aW50fGludGVyZmFjZXxpbnZhcmlhbnR8bGF5b3V0fGxvbmd8bG93cHxtZWRpdW1wfG5hbWVzcGFjZXxub2lubGluZXxub3BlcnNwZWN0aXZlfG91dHxvdXRwdXR8cGFydGl0aW9ufHBhdGNofHByZWNpc2V8cHJlY2lzaW9ufHB1YmxpY3xyZWFkb25seXxyZXNvdXJjZXxyZXN0cmljdHxyZXR1cm58c2FtcGxlfHNhbXBsZXJbMTJdREFycmF5U2hhZG93fHNhbXBsZXJbMTJdRFNoYWRvd3xzYW1wbGVyMkRSZWN0U2hhZG93fHNhbXBsZXIzRFJlY3R8c2FtcGxlckN1YmVBcnJheVNoYWRvd3xzYW1wbGVyQ3ViZVNoYWRvd3xzaGFyZWR8c2hvcnR8c2l6ZW9mfHNtb290aHxzdGF0aWN8c3RydWN0fHN1YnJvdXRpbmV8c3VwZXJwfHN3aXRjaHx0ZW1wbGF0ZXx0aGlzfHRydWV8dHlwZWRlZnx1aW50fHVuaWZvcm18dW5pb258dW5zaWduZWR8dXNpbmd8dmFyeWluZ3x2b2lkfHZvbGF0aWxlfHdoaWxlfHdyaXRlb25seSlcXGIvXG4gIH0pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yQyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiZ2xzbCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJrZXl3b3JkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/glsl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/gml.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/gml.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = gml;\ngml.displayName = \"gml\";\ngml.aliases = [];\nfunction gml(Prism) {\n    Prism.languages.gamemakerlanguage = Prism.languages.gml = Prism.languages.extend(\"clike\", {\n        keyword: /\\b(?:break|case|continue|default|do|else|enum|exit|for|globalvar|if|repeat|return|switch|until|var|while)\\b/,\n        number: /(?:\\b0x[\\da-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ulf]{0,4}/i,\n        operator: /--|\\+\\+|[-+%/=]=?|!=|\\*\\*?=?|<[<=>]?|>[=>]?|&&?|\\^\\^?|\\|\\|?|~|\\b(?:and|at|not|or|with|xor)\\b/,\n        constant: /\\b(?:GM_build_date|GM_version|action_(?:continue|restart|reverse|stop)|all|gamespeed_(?:fps|microseconds)|global|local|noone|other|pi|pointer_(?:invalid|null)|self|timezone_(?:local|utc)|undefined|ev_(?:create|destroy|step|alarm|keyboard|mouse|collision|other|draw|draw_(?:begin|end|post|pre)|keypress|keyrelease|trigger|(?:left|middle|no|right)_button|(?:left|middle|right)_press|(?:left|middle|right)_release|mouse_(?:enter|leave|wheel_down|wheel_up)|global_(?:left|middle|right)_button|global_(?:left|middle|right)_press|global_(?:left|middle|right)_release|joystick(?:1|2)_(?:button1|button2|button3|button4|button5|button6|button7|button8|down|left|right|up)|outside|boundary|game_start|game_end|room_start|room_end|no_more_lives|animation_end|end_of_path|no_more_health|user\\d|gui|gui_begin|gui_end|step_(?:begin|end|normal))|vk_(?:alt|anykey|backspace|control|delete|down|end|enter|escape|home|insert|left|nokey|pagedown|pageup|pause|printscreen|return|right|shift|space|tab|up|f\\d|numpad\\d|add|decimal|divide|lalt|lcontrol|lshift|multiply|ralt|rcontrol|rshift|subtract)|achievement_(?:filter_(?:all_players|favorites_only|friends_only)|friends_info|info|leaderboard_info|our_info|pic_loaded|show_(?:achievement|bank|friend_picker|leaderboard|profile|purchase_prompt|ui)|type_challenge|type_score_challenge)|asset_(?:font|object|path|room|script|shader|sound|sprite|tiles|timeline|unknown)|audio_(?:3d|falloff_(?:exponent_distance|exponent_distance_clamped|inverse_distance|inverse_distance_clamped|linear_distance|linear_distance_clamped|none)|mono|new_system|old_system|stereo)|bm_(?:add|complex|dest_alpha|dest_color|dest_colour|inv_dest_alpha|inv_dest_color|inv_dest_colour|inv_src_alpha|inv_src_color|inv_src_colour|max|normal|one|src_alpha|src_alpha_sat|src_color|src_colour|subtract|zero)|browser_(?:chrome|firefox|ie|ie_mobile|not_a_browser|opera|safari|safari_mobile|tizen|unknown|windows_store)|buffer_(?:bool|f16|f32|f64|fast|fixed|generalerror|grow|invalidtype|network|outofbounds|outofspace|s16|s32|s8|seek_end|seek_relative|seek_start|string|text|u16|u32|u64|u8|vbuffer|wrap)|c_(?:aqua|black|blue|dkgray|fuchsia|gray|green|lime|ltgray|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)|cmpfunc_(?:always|equal|greater|greaterequal|less|lessequal|never|notequal)|cr_(?:appstart|arrow|beam|cross|default|drag|handpoint|hourglass|none|size_all|size_nesw|size_ns|size_nwse|size_we|uparrow)|cull_(?:clockwise|counterclockwise|noculling)|device_(?:emulator|tablet)|device_ios_(?:ipad|ipad_retina|iphone|iphone5|iphone6|iphone6plus|iphone_retina|unknown)|display_(?:landscape|landscape_flipped|portrait|portrait_flipped)|dll_(?:cdecl|cdel|stdcall)|ds_type_(?:grid|list|map|priority|queue|stack)|ef_(?:cloud|ellipse|explosion|firework|flare|rain|ring|smoke|smokeup|snow|spark|star)|fa_(?:archive|bottom|center|directory|hidden|left|middle|readonly|right|sysfile|top|volumeid)|fb_login_(?:default|fallback_to_webview|forcing_safari|forcing_webview|no_fallback_to_webview|use_system_account)|iap_(?:available|canceled|ev_consume|ev_product|ev_purchase|ev_restore|ev_storeload|failed|purchased|refunded|status_available|status_loading|status_processing|status_restoring|status_unavailable|status_uninitialised|storeload_failed|storeload_ok|unavailable)|leaderboard_type_(?:number|time_mins_secs)|lighttype_(?:dir|point)|matrix_(?:projection|view|world)|mb_(?:any|left|middle|none|right)|network_(?:config_(?:connect_timeout|disable_reliable_udp|enable_reliable_udp|use_non_blocking_socket)|socket_(?:bluetooth|tcp|udp)|type_(?:connect|data|disconnect|non_blocking_connect))|of_challenge_(?:lose|tie|win)|os_(?:android|ios|linux|macosx|ps3|ps4|psvita|unknown|uwp|win32|win8native|windows|winphone|xboxone)|phy_debug_render_(?:aabb|collision_pairs|coms|core_shapes|joints|obb|shapes)|phy_joint_(?:anchor_1_x|anchor_1_y|anchor_2_x|anchor_2_y|angle|angle_limits|damping_ratio|frequency|length_1|length_2|lower_angle_limit|max_force|max_length|max_motor_force|max_motor_torque|max_torque|motor_force|motor_speed|motor_torque|reaction_force_x|reaction_force_y|reaction_torque|speed|translation|upper_angle_limit)|phy_particle_data_flag_(?:category|color|colour|position|typeflags|velocity)|phy_particle_flag_(?:colormixing|colourmixing|elastic|powder|spring|tensile|viscous|wall|water|zombie)|phy_particle_group_flag_(?:rigid|solid)|pr_(?:linelist|linestrip|pointlist|trianglefan|trianglelist|trianglestrip)|ps_(?:distr|shape)_(?:diamond|ellipse|gaussian|invgaussian|line|linear|rectangle)|pt_shape_(?:circle|cloud|disk|explosion|flare|line|pixel|ring|smoke|snow|spark|sphere|square|star)|ty_(?:real|string)|gp_(?:face\\d|axislh|axislv|axisrh|axisrv|padd|padl|padr|padu|select|shoulderl|shoulderlb|shoulderr|shoulderrb|start|stickl|stickr)|lb_disp_(?:none|numeric|time_ms|time_sec)|lb_sort_(?:ascending|descending|none)|ov_(?:achievements|community|friends|gamegroup|players|settings)|ugc_(?:filetype_(?:community|microtrans)|list_(?:Favorited|Followed|Published|Subscribed|UsedOrPlayed|VotedDown|VotedOn|VotedUp|WillVoteLater)|match_(?:AllGuides|Artwork|Collections|ControllerBindings|IntegratedGuides|Items|Items_Mtx|Items_ReadyToUse|Screenshots|UsableInGame|Videos|WebGuides)|query_(?:AcceptedForGameRankedByAcceptanceDate|CreatedByFriendsRankedByPublicationDate|FavoritedByFriendsRankedByPublicationDate|NotYetRated)|query_RankedBy(?:NumTimesReported|PublicationDate|TextSearch|TotalVotesAsc|Trend|Vote|VotesUp)|result_success|sortorder_CreationOrder(?:Asc|Desc)|sortorder_(?:ForModeration|LastUpdatedDesc|SubscriptionDateDesc|TitleAsc|VoteScoreDesc)|visibility_(?:friends_only|private|public))|vertex_usage_(?:binormal|blendindices|blendweight|color|colour|depth|fog|normal|position|psize|sample|tangent|texcoord|textcoord)|vertex_type_(?:float\\d|color|colour|ubyte4)|input_type|layerelementtype_(?:background|instance|oldtilemap|particlesystem|sprite|tile|tilemap|undefined)|se_(?:chorus|compressor|echo|equalizer|flanger|gargle|none|reverb)|text_type|tile_(?:flip|index_mask|mirror|rotate)|(?:obj|rm|scr|spr)\\w+)\\b/,\n        variable: /\\b(?:alarm|application_surface|async_load|background_(?:alpha|blend|color|colour|foreground|height|hspeed|htiled|index|showcolor|showcolour|visible|vspeed|vtiled|width|x|xscale|y|yscale)|bbox_(?:bottom|left|right|top)|browser_(?:height|width)|caption_(?:health|lives|score)|current_(?:day|hour|minute|month|second|time|weekday|year)|cursor_sprite|debug_mode|delta_time|direction|display_aa|error_(?:last|occurred)|event_(?:action|number|object|type)|fps|fps_real|friction|game_(?:display|project|save)_(?:id|name)|gamemaker_(?:pro|registered|version)|gravity|gravity_direction|(?:h|v)speed|health|iap_data|id|image_(?:alpha|angle|blend|depth|index|number|speed|xscale|yscale)|instance_(?:count|id)|keyboard_(?:key|lastchar|lastkey|string)|layer|lives|mask_index|mouse_(?:button|lastbutton|x|y)|object_index|os_(?:browser|device|type|version)|path_(?:endaction|index|orientation|position|positionprevious|scale|speed)|persistent|phy_(?:rotation|(?:col_normal|collision|com|linear_velocity|position|speed)_(?:x|y)|angular_(?:damping|velocity)|position_(?:x|y)previous|speed|linear_damping|bullet|fixed_rotation|active|mass|inertia|dynamic|kinematic|sleeping|collision_points)|pointer_(?:invalid|null)|room|room_(?:caption|first|height|last|persistent|speed|width)|score|secure_mode|show_(?:health|lives|score)|solid|speed|sprite_(?:height|index|width|xoffset|yoffset)|temp_directory|timeline_(?:index|loop|position|running|speed)|transition_(?:color|kind|steps)|undefined|view_(?:angle|current|enabled|(?:h|v)(?:border|speed)|(?:h|w|x|y)port|(?:h|w|x|y)view|object|surface_id|visible)|visible|webgl_enabled|working_directory|(?:x|y)(?:previous|start)|x|y|argument(?:_relitive|_count|\\d)|argument|global|local|other|self)\\b/\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/gml.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/gn.js":
/*!*******************************************!*\
  !*** ./node_modules/refractor/lang/gn.js ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = gn;\ngn.displayName = \"gn\";\ngn.aliases = [\n    \"gni\"\n];\nfunction gn(Prism) {\n    // https://gn.googlesource.com/gn/+/refs/heads/main/docs/reference.md#grammar\n    Prism.languages.gn = {\n        comment: {\n            pattern: /#.*/,\n            greedy: true\n        },\n        \"string-literal\": {\n            pattern: /(^|[^\\\\\"])\"(?:[^\\r\\n\"\\\\]|\\\\.)*\"/,\n            lookbehind: true,\n            greedy: true,\n            inside: {\n                interpolation: {\n                    pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[\\s\\S]*?\\}|[a-zA-Z_]\\w*|0x[a-fA-F0-9]{2})/,\n                    lookbehind: true,\n                    inside: {\n                        number: /^\\$0x[\\s\\S]{2}$/,\n                        variable: /^\\$\\w+$/,\n                        \"interpolation-punctuation\": {\n                            pattern: /^\\$\\{|\\}$/,\n                            alias: \"punctuation\"\n                        },\n                        expression: {\n                            pattern: /[\\s\\S]+/,\n                            inside: null // see below\n                        }\n                    }\n                },\n                string: /[\\s\\S]+/\n            }\n        },\n        keyword: /\\b(?:else|if)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        \"builtin-function\": {\n            // a few functions get special highlighting to improve readability\n            pattern: /\\b(?:assert|defined|foreach|import|pool|print|template|tool|toolchain)(?=\\s*\\()/i,\n            alias: \"keyword\"\n        },\n        function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        constant: /\\b(?:current_cpu|current_os|current_toolchain|default_toolchain|host_cpu|host_os|root_build_dir|root_gen_dir|root_out_dir|target_cpu|target_gen_dir|target_os|target_out_dir)\\b/,\n        number: /-?\\b\\d+\\b/,\n        operator: /[-+!=<>]=?|&&|\\|\\|/,\n        punctuation: /[(){}[\\],.]/\n    };\n    Prism.languages.gn[\"string-literal\"].inside[\"interpolation\"].inside[\"expression\"].inside = Prism.languages.gn;\n    Prism.languages.gni = Prism.languages.gn;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZ24uanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsR0FBR0MsV0FBVyxHQUFHO0FBQ2pCRCxHQUFHRSxPQUFPLEdBQUc7SUFBQztDQUFNO0FBQ3BCLFNBQVNGLEdBQUdHLEtBQUs7SUFDZiw2RUFBNkU7SUFDN0VBLE1BQU1DLFNBQVMsQ0FBQ0osRUFBRSxHQUFHO1FBQ25CSyxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0Esa0JBQWtCO1lBQ2hCRCxTQUFTO1lBQ1RFLFlBQVk7WUFDWkQsUUFBUTtZQUNSRSxRQUFRO2dCQUNOQyxlQUFlO29CQUNiSixTQUNFO29CQUNGRSxZQUFZO29CQUNaQyxRQUFRO3dCQUNORSxRQUFRO3dCQUNSQyxVQUFVO3dCQUNWLDZCQUE2Qjs0QkFDM0JOLFNBQVM7NEJBQ1RPLE9BQU87d0JBQ1Q7d0JBQ0FDLFlBQVk7NEJBQ1ZSLFNBQVM7NEJBQ1RHLFFBQVEsS0FBSyxZQUFZO3dCQUMzQjtvQkFDRjtnQkFDRjtnQkFDQU0sUUFBUTtZQUNWO1FBQ0Y7UUFDQUMsU0FBUztRQUNUQyxTQUFTO1FBQ1Qsb0JBQW9CO1lBQ2xCLGtFQUFrRTtZQUNsRVgsU0FDRTtZQUNGTyxPQUFPO1FBQ1Q7UUFDQUssVUFBVTtRQUNWQyxVQUNFO1FBQ0ZSLFFBQVE7UUFDUlMsVUFBVTtRQUNWQyxhQUFhO0lBQ2Y7SUFDQWxCLE1BQU1DLFNBQVMsQ0FBQ0osRUFBRSxDQUFDLGlCQUFpQixDQUFDUyxNQUFNLENBQUMsZ0JBQWdCLENBQUNBLE1BQU0sQ0FDakUsYUFDRCxDQUFDQSxNQUFNLEdBQUdOLE1BQU1DLFNBQVMsQ0FBQ0osRUFBRTtJQUM3QkcsTUFBTUMsU0FBUyxDQUFDa0IsR0FBRyxHQUFHbkIsTUFBTUMsU0FBUyxDQUFDSixFQUFFO0FBQzFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2duLmpzP2FjMjYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gZ25cbmduLmRpc3BsYXlOYW1lID0gJ2duJ1xuZ24uYWxpYXNlcyA9IFsnZ25pJ11cbmZ1bmN0aW9uIGduKFByaXNtKSB7XG4gIC8vIGh0dHBzOi8vZ24uZ29vZ2xlc291cmNlLmNvbS9nbi8rL3JlZnMvaGVhZHMvbWFpbi9kb2NzL3JlZmVyZW5jZS5tZCNncmFtbWFyXG4gIFByaXNtLmxhbmd1YWdlcy5nbiA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvIy4qLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgJ3N0cmluZy1saXRlcmFsJzoge1xuICAgICAgcGF0dGVybjogLyhefFteXFxcXFwiXSlcIig/OlteXFxyXFxuXCJcXFxcXXxcXFxcLikqXCIvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBpbnRlcnBvbGF0aW9uOiB7XG4gICAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAgIC8oKD86XnxbXlxcXFxdKSg/OlxcXFx7Mn0pKilcXCQoPzpcXHtbXFxzXFxTXSo/XFx9fFthLXpBLVpfXVxcdyp8MHhbYS1mQS1GMC05XXsyfSkvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICBudW1iZXI6IC9eXFwkMHhbXFxzXFxTXXsyfSQvLFxuICAgICAgICAgICAgdmFyaWFibGU6IC9eXFwkXFx3KyQvLFxuICAgICAgICAgICAgJ2ludGVycG9sYXRpb24tcHVuY3R1YXRpb24nOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC9eXFwkXFx7fFxcfSQvLFxuICAgICAgICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGV4cHJlc3Npb246IHtcbiAgICAgICAgICAgICAgcGF0dGVybjogL1tcXHNcXFNdKy8sXG4gICAgICAgICAgICAgIGluc2lkZTogbnVsbCAvLyBzZWUgYmVsb3dcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHN0cmluZzogL1tcXHNcXFNdKy9cbiAgICAgIH1cbiAgICB9LFxuICAgIGtleXdvcmQ6IC9cXGIoPzplbHNlfGlmKVxcYi8sXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiLyxcbiAgICAnYnVpbHRpbi1mdW5jdGlvbic6IHtcbiAgICAgIC8vIGEgZmV3IGZ1bmN0aW9ucyBnZXQgc3BlY2lhbCBoaWdobGlnaHRpbmcgdG8gaW1wcm92ZSByZWFkYWJpbGl0eVxuICAgICAgcGF0dGVybjpcbiAgICAgICAgL1xcYig/OmFzc2VydHxkZWZpbmVkfGZvcmVhY2h8aW1wb3J0fHBvb2x8cHJpbnR8dGVtcGxhdGV8dG9vbHx0b29sY2hhaW4pKD89XFxzKlxcKCkvaSxcbiAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICB9LFxuICAgIGZ1bmN0aW9uOiAvXFxiW2Etel9dXFx3Kig/PVxccypcXCgpL2ksXG4gICAgY29uc3RhbnQ6XG4gICAgICAvXFxiKD86Y3VycmVudF9jcHV8Y3VycmVudF9vc3xjdXJyZW50X3Rvb2xjaGFpbnxkZWZhdWx0X3Rvb2xjaGFpbnxob3N0X2NwdXxob3N0X29zfHJvb3RfYnVpbGRfZGlyfHJvb3RfZ2VuX2Rpcnxyb290X291dF9kaXJ8dGFyZ2V0X2NwdXx0YXJnZXRfZ2VuX2Rpcnx0YXJnZXRfb3N8dGFyZ2V0X291dF9kaXIpXFxiLyxcbiAgICBudW1iZXI6IC8tP1xcYlxcZCtcXGIvLFxuICAgIG9wZXJhdG9yOiAvWy0rIT08Pl09P3wmJnxcXHxcXHwvLFxuICAgIHB1bmN0dWF0aW9uOiAvWygpe31bXFxdLC5dL1xuICB9XG4gIFByaXNtLmxhbmd1YWdlcy5nblsnc3RyaW5nLWxpdGVyYWwnXS5pbnNpZGVbJ2ludGVycG9sYXRpb24nXS5pbnNpZGVbXG4gICAgJ2V4cHJlc3Npb24nXG4gIF0uaW5zaWRlID0gUHJpc20ubGFuZ3VhZ2VzLmduXG4gIFByaXNtLmxhbmd1YWdlcy5nbmkgPSBQcmlzbS5sYW5ndWFnZXMuZ25cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiZ24iLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwiZ3JlZWR5IiwibG9va2JlaGluZCIsImluc2lkZSIsImludGVycG9sYXRpb24iLCJudW1iZXIiLCJ2YXJpYWJsZSIsImFsaWFzIiwiZXhwcmVzc2lvbiIsInN0cmluZyIsImtleXdvcmQiLCJib29sZWFuIiwiZnVuY3Rpb24iLCJjb25zdGFudCIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iLCJnbmkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/gn.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/go-module.js":
/*!**************************************************!*\
  !*** ./node_modules/refractor/lang/go-module.js ***!
  \**************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = goModule;\ngoModule.displayName = \"goModule\";\ngoModule.aliases = [];\nfunction goModule(Prism) {\n    // https://go.dev/ref/mod#go-mod-file-module\n    Prism.languages[\"go-mod\"] = Prism.languages[\"go-module\"] = {\n        comment: {\n            pattern: /\\/\\/.*/,\n            greedy: true\n        },\n        version: {\n            pattern: /(^|[\\s()[\\],])v\\d+\\.\\d+\\.\\d+(?:[+-][-+.\\w]*)?(?![^\\s()[\\],])/,\n            lookbehind: true,\n            alias: \"number\"\n        },\n        \"go-version\": {\n            pattern: /((?:^|\\s)go\\s+)\\d+(?:\\.\\d+){1,2}/,\n            lookbehind: true,\n            alias: \"number\"\n        },\n        keyword: {\n            pattern: /^([ \\t]*)(?:exclude|go|module|replace|require|retract)\\b/m,\n            lookbehind: true\n        },\n        operator: /=>/,\n        punctuation: /[()[\\],]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZ28tbW9kdWxlLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLFNBQVNDLFdBQVcsR0FBRztBQUN2QkQsU0FBU0UsT0FBTyxHQUFHLEVBQUU7QUFDckIsU0FBU0YsU0FBU0csS0FBSztJQUNyQiw0Q0FBNEM7SUFDNUNBLE1BQU1DLFNBQVMsQ0FBQyxTQUFTLEdBQUdELE1BQU1DLFNBQVMsQ0FBQyxZQUFZLEdBQUc7UUFDekRDLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsU0FBUztZQUNQRixTQUFTO1lBQ1RHLFlBQVk7WUFDWkMsT0FBTztRQUNUO1FBQ0EsY0FBYztZQUNaSixTQUFTO1lBQ1RHLFlBQVk7WUFDWkMsT0FBTztRQUNUO1FBQ0FDLFNBQVM7WUFDUEwsU0FBUztZQUNURyxZQUFZO1FBQ2Q7UUFDQUcsVUFBVTtRQUNWQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9nby1tb2R1bGUuanM/MzVlNiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBnb01vZHVsZVxuZ29Nb2R1bGUuZGlzcGxheU5hbWUgPSAnZ29Nb2R1bGUnXG5nb01vZHVsZS5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGdvTW9kdWxlKFByaXNtKSB7XG4gIC8vIGh0dHBzOi8vZ28uZGV2L3JlZi9tb2QjZ28tbW9kLWZpbGUtbW9kdWxlXG4gIFByaXNtLmxhbmd1YWdlc1snZ28tbW9kJ10gPSBQcmlzbS5sYW5ndWFnZXNbJ2dvLW1vZHVsZSddID0ge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC9cXC9cXC8uKi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHZlcnNpb246IHtcbiAgICAgIHBhdHRlcm46IC8oXnxbXFxzKClbXFxdLF0pdlxcZCtcXC5cXGQrXFwuXFxkKyg/OlsrLV1bLSsuXFx3XSopPyg/IVteXFxzKClbXFxdLF0pLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ251bWJlcidcbiAgICB9LFxuICAgICdnby12ZXJzaW9uJzoge1xuICAgICAgcGF0dGVybjogLygoPzpefFxccylnb1xccyspXFxkKyg/OlxcLlxcZCspezEsMn0vLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAnbnVtYmVyJ1xuICAgIH0sXG4gICAga2V5d29yZDoge1xuICAgICAgcGF0dGVybjogL14oWyBcXHRdKikoPzpleGNsdWRlfGdvfG1vZHVsZXxyZXBsYWNlfHJlcXVpcmV8cmV0cmFjdClcXGIvbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIG9wZXJhdG9yOiAvPT4vLFxuICAgIHB1bmN0dWF0aW9uOiAvWygpW1xcXSxdL1xuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImdvTW9kdWxlIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImdyZWVkeSIsInZlcnNpb24iLCJsb29rYmVoaW5kIiwiYWxpYXMiLCJrZXl3b3JkIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/go-module.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/go.js":
/*!*******************************************!*\
  !*** ./node_modules/refractor/lang/go.js ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = go;\ngo.displayName = \"go\";\ngo.aliases = [];\nfunction go(Prism) {\n    Prism.languages.go = Prism.languages.extend(\"clike\", {\n        string: {\n            pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,\n            lookbehind: true,\n            greedy: true\n        },\n        keyword: /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n        boolean: /\\b(?:_|false|iota|nil|true)\\b/,\n        number: [\n            // binary and octal integers\n            /\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i,\n            /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i,\n            /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i\n        ],\n        operator: /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n        builtin: /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/\n    });\n    Prism.languages.insertBefore(\"go\", \"string\", {\n        char: {\n            pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,\n            greedy: true\n        }\n    });\n    delete Prism.languages.go[\"class-name\"];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZ28uanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsR0FBR0MsV0FBVyxHQUFHO0FBQ2pCRCxHQUFHRSxPQUFPLEdBQUcsRUFBRTtBQUNmLFNBQVNGLEdBQUdHLEtBQUs7SUFDZkEsTUFBTUMsU0FBUyxDQUFDSixFQUFFLEdBQUdHLE1BQU1DLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLFNBQVM7UUFDbkRDLFFBQVE7WUFDTkMsU0FBUztZQUNUQyxZQUFZO1lBQ1pDLFFBQVE7UUFDVjtRQUNBQyxTQUNFO1FBQ0ZDLFNBQVM7UUFDVEMsUUFBUTtZQUNOLDRCQUE0QjtZQUM1QjtZQUNBO1lBQ0E7U0FDRDtRQUNEQyxVQUNFO1FBQ0ZDLFNBQ0U7SUFDSjtJQUNBWCxNQUFNQyxTQUFTLENBQUNXLFlBQVksQ0FBQyxNQUFNLFVBQVU7UUFDM0NDLE1BQU07WUFDSlQsU0FBUztZQUNURSxRQUFRO1FBQ1Y7SUFDRjtJQUNBLE9BQU9OLE1BQU1DLFNBQVMsQ0FBQ0osRUFBRSxDQUFDLGFBQWE7QUFDekMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZ28uanM/ODA1YyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBnb1xuZ28uZGlzcGxheU5hbWUgPSAnZ28nXG5nby5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGdvKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5nbyA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2NsaWtlJywge1xuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyhefFteXFxcXF0pXCIoPzpcXFxcLnxbXlwiXFxcXFxcclxcbl0pKlwifGBbXmBdKmAvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzpicmVha3xjYXNlfGNoYW58Y29uc3R8Y29udGludWV8ZGVmYXVsdHxkZWZlcnxlbHNlfGZhbGx0aHJvdWdofGZvcnxmdW5jfGdvKD86dG8pP3xpZnxpbXBvcnR8aW50ZXJmYWNlfG1hcHxwYWNrYWdlfHJhbmdlfHJldHVybnxzZWxlY3R8c3RydWN0fHN3aXRjaHx0eXBlfHZhcilcXGIvLFxuICAgIGJvb2xlYW46IC9cXGIoPzpffGZhbHNlfGlvdGF8bmlsfHRydWUpXFxiLyxcbiAgICBudW1iZXI6IFtcbiAgICAgIC8vIGJpbmFyeSBhbmQgb2N0YWwgaW50ZWdlcnNcbiAgICAgIC9cXGIwKD86YlswMV9dK3xvWzAtN19dKylpP1xcYi9pLCAvLyBoZXhhZGVjaW1hbCBpbnRlZ2VycyBhbmQgZmxvYXRzXG4gICAgICAvXFxiMHgoPzpbYS1mXFxkX10rKD86XFwuW2EtZlxcZF9dKik/fFxcLlthLWZcXGRfXSspKD86cFsrLV0/XFxkKyg/Ol9cXGQrKSopP2k/KD8hXFx3KS9pLCAvLyBkZWNpbWFsIGludGVnZXJzIGFuZCBmbG9hdHNcbiAgICAgIC8oPzpcXGJcXGRbXFxkX10qKD86XFwuW1xcZF9dKik/fFxcQlxcLlxcZFtcXGRfXSopKD86ZVsrLV0/W1xcZF9dKyk/aT8oPyFcXHcpL2lcbiAgICBdLFxuICAgIG9wZXJhdG9yOlxuICAgICAgL1sqXFwvJV4hPV09P3xcXCtbPStdP3wtWz0tXT98XFx8Wz18XT98Jig/Oj18JnxcXF49Pyk/fD4oPzo+PT98PSk/fDwoPzo8PT98PXwtKT98Oj18XFwuXFwuXFwuLyxcbiAgICBidWlsdGluOlxuICAgICAgL1xcYig/OmFwcGVuZHxib29sfGJ5dGV8Y2FwfGNsb3NlfGNvbXBsZXh8Y29tcGxleCg/OjY0fDEyOCl8Y29weXxkZWxldGV8ZXJyb3J8ZmxvYXQoPzozMnw2NCl8dT9pbnQoPzo4fDE2fDMyfDY0KT98aW1hZ3xsZW58bWFrZXxuZXd8cGFuaWN8cHJpbnQoPzpsbik/fHJlYWx8cmVjb3ZlcnxydW5lfHN0cmluZ3x1aW50cHRyKVxcYi9cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnZ28nLCAnc3RyaW5nJywge1xuICAgIGNoYXI6IHtcbiAgICAgIHBhdHRlcm46IC8nKD86XFxcXC58W14nXFxcXFxcclxcbl0pezAsMTB9Jy8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9XG4gIH0pXG4gIGRlbGV0ZSBQcmlzbS5sYW5ndWFnZXMuZ29bJ2NsYXNzLW5hbWUnXVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJnbyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwic3RyaW5nIiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJncmVlZHkiLCJrZXl3b3JkIiwiYm9vbGVhbiIsIm51bWJlciIsIm9wZXJhdG9yIiwiYnVpbHRpbiIsImluc2VydEJlZm9yZSIsImNoYXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/go.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/graphql.js":
/*!************************************************!*\
  !*** ./node_modules/refractor/lang/graphql.js ***!
  \************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = graphql;\ngraphql.displayName = \"graphql\";\ngraphql.aliases = [];\nfunction graphql(Prism) {\n    Prism.languages.graphql = {\n        comment: /#.*/,\n        description: {\n            pattern: /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n            greedy: true,\n            alias: \"string\",\n            inside: {\n                \"language-markdown\": {\n                    pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n                    lookbehind: true,\n                    inside: Prism.languages.markdown\n                }\n            }\n        },\n        string: {\n            pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n            greedy: true\n        },\n        number: /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n        boolean: /\\b(?:false|true)\\b/,\n        variable: /\\$[a-z_]\\w*/i,\n        directive: {\n            pattern: /@[a-z_]\\w*/i,\n            alias: \"function\"\n        },\n        \"attr-name\": {\n            pattern: /\\b[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n            greedy: true\n        },\n        \"atom-input\": {\n            pattern: /\\b[A-Z]\\w*Input\\b/,\n            alias: \"class-name\"\n        },\n        scalar: /\\b(?:Boolean|Float|ID|Int|String)\\b/,\n        constant: /\\b[A-Z][A-Z_\\d]*\\b/,\n        \"class-name\": {\n            pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,\n            lookbehind: true\n        },\n        fragment: {\n            pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n            lookbehind: true,\n            alias: \"function\"\n        },\n        \"definition-mutation\": {\n            pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/,\n            lookbehind: true,\n            alias: \"function\"\n        },\n        \"definition-query\": {\n            pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/,\n            lookbehind: true,\n            alias: \"function\"\n        },\n        keyword: /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n        operator: /[!=|&]|\\.{3}/,\n        \"property-query\": /\\w+(?=\\s*\\()/,\n        object: /\\w+(?=\\s*\\{)/,\n        punctuation: /[!(){}\\[\\]:=,]/,\n        property: /\\w+/\n    };\n    Prism.hooks.add(\"after-tokenize\", function afterTokenizeGraphql(env) {\n        if (env.language !== \"graphql\") {\n            return;\n        }\n        /**\n     * get the graphql token stream that we want to customize\n     *\n     * @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n     * @type {Token[]}\n     */ var validTokens = env.tokens.filter(function(token) {\n            return typeof token !== \"string\" && token.type !== \"comment\" && token.type !== \"scalar\";\n        });\n        var currentIndex = 0;\n        /**\n     * Returns whether the token relative to the current index has the given type.\n     *\n     * @param {number} offset\n     * @returns {Token | undefined}\n     */ function getToken(offset) {\n            return validTokens[currentIndex + offset];\n        }\n        /**\n     * Returns whether the token relative to the current index has the given type.\n     *\n     * @param {readonly string[]} types\n     * @param {number} [offset=0]\n     * @returns {boolean}\n     */ function isTokenType(types, offset) {\n            offset = offset || 0;\n            for(var i = 0; i < types.length; i++){\n                var token = getToken(i + offset);\n                if (!token || token.type !== types[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        /**\n     * Returns the index of the closing bracket to an opening bracket.\n     *\n     * It is assumed that `token[currentIndex - 1]` is an opening bracket.\n     *\n     * If no closing bracket could be found, `-1` will be returned.\n     *\n     * @param {RegExp} open\n     * @param {RegExp} close\n     * @returns {number}\n     */ function findClosingBracket(open, close) {\n            var stackHeight = 1;\n            for(var i = currentIndex; i < validTokens.length; i++){\n                var token = validTokens[i];\n                var content = token.content;\n                if (token.type === \"punctuation\" && typeof content === \"string\") {\n                    if (open.test(content)) {\n                        stackHeight++;\n                    } else if (close.test(content)) {\n                        stackHeight--;\n                        if (stackHeight === 0) {\n                            return i;\n                        }\n                    }\n                }\n            }\n            return -1;\n        }\n        /**\n     * Adds an alias to the given token.\n     *\n     * @param {Token} token\n     * @param {string} alias\n     * @returns {void}\n     */ function addAlias(token, alias) {\n            var aliases = token.alias;\n            if (!aliases) {\n                token.alias = aliases = [];\n            } else if (!Array.isArray(aliases)) {\n                token.alias = aliases = [\n                    aliases\n                ];\n            }\n            aliases.push(alias);\n        }\n        for(; currentIndex < validTokens.length;){\n            var startToken = validTokens[currentIndex++] // add special aliases for mutation tokens\n            ;\n            if (startToken.type === \"keyword\" && startToken.content === \"mutation\") {\n                // any array of the names of all input variables (if any)\n                var inputVariables = [];\n                if (isTokenType([\n                    \"definition-mutation\",\n                    \"punctuation\"\n                ]) && getToken(1).content === \"(\") {\n                    // definition\n                    currentIndex += 2 // skip 'definition-mutation' and 'punctuation'\n                    ;\n                    var definitionEnd = findClosingBracket(/^\\($/, /^\\)$/);\n                    if (definitionEnd === -1) {\n                        continue;\n                    } // find all input variables\n                    for(; currentIndex < definitionEnd; currentIndex++){\n                        var t = getToken(0);\n                        if (t.type === \"variable\") {\n                            addAlias(t, \"variable-input\");\n                            inputVariables.push(t.content);\n                        }\n                    }\n                    currentIndex = definitionEnd + 1;\n                }\n                if (isTokenType([\n                    \"punctuation\",\n                    \"property-query\"\n                ]) && getToken(0).content === \"{\") {\n                    currentIndex++ // skip opening bracket\n                    ;\n                    addAlias(getToken(0), \"property-mutation\");\n                    if (inputVariables.length > 0) {\n                        var mutationEnd = findClosingBracket(/^\\{$/, /^\\}$/);\n                        if (mutationEnd === -1) {\n                            continue;\n                        } // give references to input variables a special alias\n                        for(var i = currentIndex; i < mutationEnd; i++){\n                            var varToken = validTokens[i];\n                            if (varToken.type === \"variable\" && inputVariables.indexOf(varToken.content) >= 0) {\n                                addAlias(varToken, \"variable-input\");\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/graphql.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/groovy.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/groovy.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = groovy;\ngroovy.displayName = \"groovy\";\ngroovy.aliases = [];\nfunction groovy(Prism) {\n    Prism.languages.groovy = Prism.languages.extend(\"clike\", {\n        string: [\n            {\n                // https://groovy-lang.org/syntax.html#_dollar_slashy_string\n                pattern: /(\"\"\"|''')(?:[^\\\\]|\\\\[\\s\\S])*?\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,\n                greedy: true\n            },\n            {\n                // TODO: Slash strings (e.g. /foo/) can contain line breaks but this will cause a lot of trouble with\n                // simple division (see JS regex), so find a fix maybe?\n                pattern: /([\"'/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n                greedy: true\n            }\n        ],\n        keyword: /\\b(?:abstract|as|assert|boolean|break|byte|case|catch|char|class|const|continue|def|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|in|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n        number: /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,\n        operator: {\n            pattern: /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n            lookbehind: true\n        },\n        punctuation: /\\.+|[{}[\\];(),:$]/\n    });\n    Prism.languages.insertBefore(\"groovy\", \"string\", {\n        shebang: {\n            pattern: /#!.+/,\n            alias: \"comment\"\n        }\n    });\n    Prism.languages.insertBefore(\"groovy\", \"punctuation\", {\n        \"spock-block\": /\\b(?:and|cleanup|expect|given|setup|then|when|where):/\n    });\n    Prism.languages.insertBefore(\"groovy\", \"function\", {\n        annotation: {\n            pattern: /(^|[^.])@\\w+/,\n            lookbehind: true,\n            alias: \"punctuation\"\n        }\n    }) // Handle string interpolation\n    ;\n    Prism.hooks.add(\"wrap\", function(env) {\n        if (env.language === \"groovy\" && env.type === \"string\") {\n            var delimiter = env.content.value[0];\n            if (delimiter != \"'\") {\n                var pattern = /([^\\\\])(?:\\$(?:\\{.*?\\}|[\\w.]+))/;\n                if (delimiter === \"$\") {\n                    pattern = /([^\\$])(?:\\$(?:\\{.*?\\}|[\\w.]+))/;\n                } // To prevent double HTML-encoding we have to decode env.content first\n                env.content.value = env.content.value.replace(/&lt;/g, \"<\").replace(/&amp;/g, \"&\");\n                env.content = Prism.highlight(env.content.value, {\n                    expression: {\n                        pattern: pattern,\n                        lookbehind: true,\n                        inside: Prism.languages.groovy\n                    }\n                });\n                env.classes.push(delimiter === \"/\" ? \"regex\" : \"gstring\");\n            }\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZ3Jvb3Z5LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLE9BQU9DLFdBQVcsR0FBRztBQUNyQkQsT0FBT0UsT0FBTyxHQUFHLEVBQUU7QUFDbkIsU0FBU0YsT0FBT0csS0FBSztJQUNuQkEsTUFBTUMsU0FBUyxDQUFDSixNQUFNLEdBQUdHLE1BQU1DLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLFNBQVM7UUFDdkRDLFFBQVE7WUFDTjtnQkFDRSw0REFBNEQ7Z0JBQzVEQyxTQUNFO2dCQUNGQyxRQUFRO1lBQ1Y7WUFDQTtnQkFDRSxxR0FBcUc7Z0JBQ3JHLHVEQUF1RDtnQkFDdkRELFNBQVM7Z0JBQ1RDLFFBQVE7WUFDVjtTQUNEO1FBQ0RDLFNBQ0U7UUFDRkMsUUFDRTtRQUNGQyxVQUFVO1lBQ1JKLFNBQ0U7WUFDRkssWUFBWTtRQUNkO1FBQ0FDLGFBQWE7SUFDZjtJQUNBVixNQUFNQyxTQUFTLENBQUNVLFlBQVksQ0FBQyxVQUFVLFVBQVU7UUFDL0NDLFNBQVM7WUFDUFIsU0FBUztZQUNUUyxPQUFPO1FBQ1Q7SUFDRjtJQUNBYixNQUFNQyxTQUFTLENBQUNVLFlBQVksQ0FBQyxVQUFVLGVBQWU7UUFDcEQsZUFBZTtJQUNqQjtJQUNBWCxNQUFNQyxTQUFTLENBQUNVLFlBQVksQ0FBQyxVQUFVLFlBQVk7UUFDakRHLFlBQVk7WUFDVlYsU0FBUztZQUNUSyxZQUFZO1lBQ1pJLE9BQU87UUFDVDtJQUNGLEdBQUcsOEJBQThCOztJQUNqQ2IsTUFBTWUsS0FBSyxDQUFDQyxHQUFHLENBQUMsUUFBUSxTQUFVQyxHQUFHO1FBQ25DLElBQUlBLElBQUlDLFFBQVEsS0FBSyxZQUFZRCxJQUFJRSxJQUFJLEtBQUssVUFBVTtZQUN0RCxJQUFJQyxZQUFZSCxJQUFJSSxPQUFPLENBQUNDLEtBQUssQ0FBQyxFQUFFO1lBQ3BDLElBQUlGLGFBQWEsS0FBSztnQkFDcEIsSUFBSWhCLFVBQVU7Z0JBQ2QsSUFBSWdCLGNBQWMsS0FBSztvQkFDckJoQixVQUFVO2dCQUNaLEVBQUUsc0VBQXNFO2dCQUN4RWEsSUFBSUksT0FBTyxDQUFDQyxLQUFLLEdBQUdMLElBQUlJLE9BQU8sQ0FBQ0MsS0FBSyxDQUNsQ0MsT0FBTyxDQUFDLFNBQVMsS0FDakJBLE9BQU8sQ0FBQyxVQUFVO2dCQUNyQk4sSUFBSUksT0FBTyxHQUFHckIsTUFBTXdCLFNBQVMsQ0FBQ1AsSUFBSUksT0FBTyxDQUFDQyxLQUFLLEVBQUU7b0JBQy9DRyxZQUFZO3dCQUNWckIsU0FBU0E7d0JBQ1RLLFlBQVk7d0JBQ1ppQixRQUFRMUIsTUFBTUMsU0FBUyxDQUFDSixNQUFNO29CQUNoQztnQkFDRjtnQkFDQW9CLElBQUlVLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDUixjQUFjLE1BQU0sVUFBVTtZQUNqRDtRQUNGO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9ncm9vdnkuanM/MmY1NCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBncm9vdnlcbmdyb292eS5kaXNwbGF5TmFtZSA9ICdncm9vdnknXG5ncm9vdnkuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBncm9vdnkoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmdyb292eSA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2NsaWtlJywge1xuICAgIHN0cmluZzogW1xuICAgICAge1xuICAgICAgICAvLyBodHRwczovL2dyb292eS1sYW5nLm9yZy9zeW50YXguaHRtbCNfZG9sbGFyX3NsYXNoeV9zdHJpbmdcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKFwiXCJcInwnJycpKD86W15cXFxcXXxcXFxcW1xcc1xcU10pKj9cXDF8XFwkXFwvKD86W14vJF18XFwkKD86Wy8kXXwoPyFbLyRdKSl8XFwvKD8hXFwkKSkqXFwvXFwkLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAvLyBUT0RPOiBTbGFzaCBzdHJpbmdzIChlLmcuIC9mb28vKSBjYW4gY29udGFpbiBsaW5lIGJyZWFrcyBidXQgdGhpcyB3aWxsIGNhdXNlIGEgbG90IG9mIHRyb3VibGUgd2l0aFxuICAgICAgICAvLyBzaW1wbGUgZGl2aXNpb24gKHNlZSBKUyByZWdleCksIHNvIGZpbmQgYSBmaXggbWF5YmU/XG4gICAgICAgIHBhdHRlcm46IC8oW1wiJy9dKSg/OlxcXFwufCg/IVxcMSlbXlxcXFxcXHJcXG5dKSpcXDEvLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH1cbiAgICBdLFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YWJzdHJhY3R8YXN8YXNzZXJ0fGJvb2xlYW58YnJlYWt8Ynl0ZXxjYXNlfGNhdGNofGNoYXJ8Y2xhc3N8Y29uc3R8Y29udGludWV8ZGVmfGRlZmF1bHR8ZG98ZG91YmxlfGVsc2V8ZW51bXxleHRlbmRzfGZpbmFsfGZpbmFsbHl8ZmxvYXR8Zm9yfGdvdG98aWZ8aW1wbGVtZW50c3xpbXBvcnR8aW58aW5zdGFuY2VvZnxpbnR8aW50ZXJmYWNlfGxvbmd8bmF0aXZlfG5ld3xwYWNrYWdlfHByaXZhdGV8cHJvdGVjdGVkfHB1YmxpY3xyZXR1cm58c2hvcnR8c3RhdGljfHN0cmljdGZwfHN1cGVyfHN3aXRjaHxzeW5jaHJvbml6ZWR8dGhpc3x0aHJvd3x0aHJvd3N8dHJhaXR8dHJhbnNpZW50fHRyeXx2b2lkfHZvbGF0aWxlfHdoaWxlKVxcYi8sXG4gICAgbnVtYmVyOlxuICAgICAgL1xcYig/OjBiWzAxX10rfDB4W1xcZGEtZl9dKyg/OlxcLltcXGRhLWZfcFxcLV0rKT98W1xcZF9dKyg/OlxcLltcXGRfXSspPyg/OmVbKy1dP1xcZCspPylbZ2xpZGZdP1xcYi9pLFxuICAgIG9wZXJhdG9yOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKF58W14uXSkoPzp+fD09P34/fFxcP1suOl0/fFxcKig/OlsuPV18XFwqPT8pP3xcXC5bQCZdfFxcLlxcLjx8XFwuXFwuKD8hXFwuKXwtWy09Pl0/fFxcK1srPV0/fCE9P3w8KD86PD0/fD0+Pyk/fD4oPzo+Pj89P3w9KT98JlsmPV0/fFxcfFt8PV0/fFxcLz0/fFxcXj0/fCU9PykvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgcHVuY3R1YXRpb246IC9cXC4rfFt7fVtcXF07KCksOiRdL1xuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdncm9vdnknLCAnc3RyaW5nJywge1xuICAgIHNoZWJhbmc6IHtcbiAgICAgIHBhdHRlcm46IC8jIS4rLyxcbiAgICAgIGFsaWFzOiAnY29tbWVudCdcbiAgICB9XG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ2dyb292eScsICdwdW5jdHVhdGlvbicsIHtcbiAgICAnc3BvY2stYmxvY2snOiAvXFxiKD86YW5kfGNsZWFudXB8ZXhwZWN0fGdpdmVufHNldHVwfHRoZW58d2hlbnx3aGVyZSk6L1xuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdncm9vdnknLCAnZnVuY3Rpb24nLCB7XG4gICAgYW5ub3RhdGlvbjoge1xuICAgICAgcGF0dGVybjogLyhefFteLl0pQFxcdysvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgfVxuICB9KSAvLyBIYW5kbGUgc3RyaW5nIGludGVycG9sYXRpb25cbiAgUHJpc20uaG9va3MuYWRkKCd3cmFwJywgZnVuY3Rpb24gKGVudikge1xuICAgIGlmIChlbnYubGFuZ3VhZ2UgPT09ICdncm9vdnknICYmIGVudi50eXBlID09PSAnc3RyaW5nJykge1xuICAgICAgdmFyIGRlbGltaXRlciA9IGVudi5jb250ZW50LnZhbHVlWzBdXG4gICAgICBpZiAoZGVsaW1pdGVyICE9IFwiJ1wiKSB7XG4gICAgICAgIHZhciBwYXR0ZXJuID0gLyhbXlxcXFxdKSg/OlxcJCg/Olxcey4qP1xcfXxbXFx3Ll0rKSkvXG4gICAgICAgIGlmIChkZWxpbWl0ZXIgPT09ICckJykge1xuICAgICAgICAgIHBhdHRlcm4gPSAvKFteXFwkXSkoPzpcXCQoPzpcXHsuKj9cXH18W1xcdy5dKykpL1xuICAgICAgICB9IC8vIFRvIHByZXZlbnQgZG91YmxlIEhUTUwtZW5jb2Rpbmcgd2UgaGF2ZSB0byBkZWNvZGUgZW52LmNvbnRlbnQgZmlyc3RcbiAgICAgICAgZW52LmNvbnRlbnQudmFsdWUgPSBlbnYuY29udGVudC52YWx1ZVxuICAgICAgICAgIC5yZXBsYWNlKC8mbHQ7L2csICc8JylcbiAgICAgICAgICAucmVwbGFjZSgvJmFtcDsvZywgJyYnKVxuICAgICAgICBlbnYuY29udGVudCA9IFByaXNtLmhpZ2hsaWdodChlbnYuY29udGVudC52YWx1ZSwge1xuICAgICAgICAgIGV4cHJlc3Npb246IHtcbiAgICAgICAgICAgIHBhdHRlcm46IHBhdHRlcm4sXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgICAgaW5zaWRlOiBQcmlzbS5sYW5ndWFnZXMuZ3Jvb3Z5XG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICBlbnYuY2xhc3Nlcy5wdXNoKGRlbGltaXRlciA9PT0gJy8nID8gJ3JlZ2V4JyA6ICdnc3RyaW5nJylcbiAgICAgIH1cbiAgICB9XG4gIH0pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImdyb292eSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwic3RyaW5nIiwicGF0dGVybiIsImdyZWVkeSIsImtleXdvcmQiLCJudW1iZXIiLCJvcGVyYXRvciIsImxvb2tiZWhpbmQiLCJwdW5jdHVhdGlvbiIsImluc2VydEJlZm9yZSIsInNoZWJhbmciLCJhbGlhcyIsImFubm90YXRpb24iLCJob29rcyIsImFkZCIsImVudiIsImxhbmd1YWdlIiwidHlwZSIsImRlbGltaXRlciIsImNvbnRlbnQiLCJ2YWx1ZSIsInJlcGxhY2UiLCJoaWdobGlnaHQiLCJleHByZXNzaW9uIiwiaW5zaWRlIiwiY2xhc3NlcyIsInB1c2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/groovy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/haml.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/haml.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorRuby = __webpack_require__(/*! ./ruby.js */ \"(ssr)/./node_modules/refractor/lang/ruby.js\");\nmodule.exports = haml;\nhaml.displayName = \"haml\";\nhaml.aliases = [];\nfunction haml(Prism) {\n    Prism.register(refractorRuby) /* TODO\nHandle multiline code after tag\n%foo= some |\nmultiline |\ncode |\n*/ ;\n    (function(Prism) {\n        Prism.languages.haml = {\n            // Multiline stuff should appear before the rest\n            \"multiline-comment\": {\n                pattern: /((?:^|\\r?\\n|\\r)([\\t ]*))(?:\\/|-#).*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)*/,\n                lookbehind: true,\n                alias: \"comment\"\n            },\n            \"multiline-code\": [\n                {\n                    pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*,[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ].*,[\\t ]*)*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)/,\n                    lookbehind: true,\n                    inside: Prism.languages.ruby\n                },\n                {\n                    pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*\\|[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ].*\\|[\\t ]*)*/,\n                    lookbehind: true,\n                    inside: Prism.languages.ruby\n                }\n            ],\n            // See at the end of the file for known filters\n            filter: {\n                pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)):[\\w-]+(?:(?:\\r?\\n|\\r)(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/,\n                lookbehind: true,\n                inside: {\n                    \"filter-name\": {\n                        pattern: /^:[\\w-]+/,\n                        alias: \"symbol\"\n                    }\n                }\n            },\n            markup: {\n                pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)<.+/,\n                lookbehind: true,\n                inside: Prism.languages.markup\n            },\n            doctype: {\n                pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)!!!(?: .+)?/,\n                lookbehind: true\n            },\n            tag: {\n                // Allows for one nested group of braces\n                pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[%.#][\\w\\-#.]*[\\w\\-](?:\\([^)]+\\)|\\{(?:\\{[^}]+\\}|[^{}])+\\}|\\[[^\\]]+\\])*[\\/<>]*/,\n                lookbehind: true,\n                inside: {\n                    attributes: [\n                        {\n                            // Lookbehind tries to prevent interpolations from breaking it all\n                            // Allows for one nested group of braces\n                            pattern: /(^|[^#])\\{(?:\\{[^}]+\\}|[^{}])+\\}/,\n                            lookbehind: true,\n                            inside: Prism.languages.ruby\n                        },\n                        {\n                            pattern: /\\([^)]+\\)/,\n                            inside: {\n                                \"attr-value\": {\n                                    pattern: /(=\\s*)(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|[^)\\s]+)/,\n                                    lookbehind: true\n                                },\n                                \"attr-name\": /[\\w:-]+(?=\\s*!?=|\\s*[,)])/,\n                                punctuation: /[=(),]/\n                            }\n                        },\n                        {\n                            pattern: /\\[[^\\]]+\\]/,\n                            inside: Prism.languages.ruby\n                        }\n                    ],\n                    punctuation: /[<>]/\n                }\n            },\n            code: {\n                pattern: /((?:^|\\r?\\n|\\r)[\\t ]*(?:[~-]|[&!]?=)).+/,\n                lookbehind: true,\n                inside: Prism.languages.ruby\n            },\n            // Interpolations in plain text\n            interpolation: {\n                pattern: /#\\{[^}]+\\}/,\n                inside: {\n                    delimiter: {\n                        pattern: /^#\\{|\\}$/,\n                        alias: \"punctuation\"\n                    },\n                    ruby: {\n                        pattern: /[\\s\\S]+/,\n                        inside: Prism.languages.ruby\n                    }\n                }\n            },\n            punctuation: {\n                pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[~=\\-&!]+/,\n                lookbehind: true\n            }\n        };\n        var filter_pattern = \"((?:^|\\\\r?\\\\n|\\\\r)([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r)(?:\\\\2[\\\\t ].+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+\" // Non exhaustive list of available filters and associated languages\n        ;\n        var filters = [\n            \"css\",\n            {\n                filter: \"coffee\",\n                language: \"coffeescript\"\n            },\n            \"erb\",\n            \"javascript\",\n            \"less\",\n            \"markdown\",\n            \"ruby\",\n            \"scss\",\n            \"textile\"\n        ];\n        var all_filters = {};\n        for(var i = 0, l = filters.length; i < l; i++){\n            var filter = filters[i];\n            filter = typeof filter === \"string\" ? {\n                filter: filter,\n                language: filter\n            } : filter;\n            if (Prism.languages[filter.language]) {\n                all_filters[\"filter-\" + filter.filter] = {\n                    pattern: RegExp(filter_pattern.replace(\"{{filter_name}}\", function() {\n                        return filter.filter;\n                    })),\n                    lookbehind: true,\n                    inside: {\n                        \"filter-name\": {\n                            pattern: /^:[\\w-]+/,\n                            alias: \"symbol\"\n                        },\n                        text: {\n                            pattern: /[\\s\\S]+/,\n                            alias: [\n                                filter.language,\n                                \"language-\" + filter.language\n                            ],\n                            inside: Prism.languages[filter.language]\n                        }\n                    }\n                };\n            }\n        }\n        Prism.languages.insertBefore(\"haml\", \"filter\", all_filters);\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/haml.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/handlebars.js":
/*!***************************************************!*\
  !*** ./node_modules/refractor/lang/handlebars.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorMarkupTemplating = __webpack_require__(/*! ./markup-templating.js */ \"(ssr)/./node_modules/refractor/lang/markup-templating.js\");\nmodule.exports = handlebars;\nhandlebars.displayName = \"handlebars\";\nhandlebars.aliases = [\n    \"hbs\"\n];\nfunction handlebars(Prism) {\n    Prism.register(refractorMarkupTemplating);\n    (function(Prism) {\n        Prism.languages.handlebars = {\n            comment: /\\{\\{![\\s\\S]*?\\}\\}/,\n            delimiter: {\n                pattern: /^\\{\\{\\{?|\\}\\}\\}?$/,\n                alias: \"punctuation\"\n            },\n            string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n            boolean: /\\b(?:false|true)\\b/,\n            block: {\n                pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/,\n                lookbehind: true,\n                alias: \"keyword\"\n            },\n            brackets: {\n                pattern: /\\[[^\\]]+\\]/,\n                inside: {\n                    punctuation: /\\[|\\]/,\n                    variable: /[\\s\\S]+/\n                }\n            },\n            punctuation: /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n            variable: /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n        };\n        Prism.hooks.add(\"before-tokenize\", function(env) {\n            var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n            Prism.languages[\"markup-templating\"].buildPlaceholders(env, \"handlebars\", handlebarsPattern);\n        });\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            Prism.languages[\"markup-templating\"].tokenizePlaceholders(env, \"handlebars\");\n        });\n        Prism.languages.hbs = Prism.languages.handlebars;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvaGFuZGxlYmFycy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLElBQUlBLDRCQUE0QkMsbUJBQU9BLENBQUM7QUFDeENDLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLFdBQVdDLFdBQVcsR0FBRztBQUN6QkQsV0FBV0UsT0FBTyxHQUFHO0lBQUM7Q0FBTTtBQUM1QixTQUFTRixXQUFXRyxLQUFLO0lBQ3ZCQSxNQUFNQyxRQUFRLENBQUNSO0lBQ2IsVUFBVU8sS0FBSztRQUNmQSxNQUFNRSxTQUFTLENBQUNMLFVBQVUsR0FBRztZQUMzQk0sU0FBUztZQUNUQyxXQUFXO2dCQUNUQyxTQUFTO2dCQUNUQyxPQUFPO1lBQ1Q7WUFDQUMsUUFBUTtZQUNSQyxRQUFRO1lBQ1JDLFNBQVM7WUFDVEMsT0FBTztnQkFDTEwsU0FBUztnQkFDVE0sWUFBWTtnQkFDWkwsT0FBTztZQUNUO1lBQ0FNLFVBQVU7Z0JBQ1JQLFNBQVM7Z0JBQ1RRLFFBQVE7b0JBQ05DLGFBQWE7b0JBQ2JDLFVBQVU7Z0JBQ1o7WUFDRjtZQUNBRCxhQUFhO1lBQ2JDLFVBQVU7UUFDWjtRQUNBZixNQUFNZ0IsS0FBSyxDQUFDQyxHQUFHLENBQUMsbUJBQW1CLFNBQVVDLEdBQUc7WUFDOUMsSUFBSUMsb0JBQW9CO1lBQ3hCbkIsTUFBTUUsU0FBUyxDQUFDLG9CQUFvQixDQUFDa0IsaUJBQWlCLENBQ3BERixLQUNBLGNBQ0FDO1FBRUo7UUFDQW5CLE1BQU1nQixLQUFLLENBQUNDLEdBQUcsQ0FBQyxrQkFBa0IsU0FBVUMsR0FBRztZQUM3Q2xCLE1BQU1FLFNBQVMsQ0FBQyxvQkFBb0IsQ0FBQ21CLG9CQUFvQixDQUN2REgsS0FDQTtRQUVKO1FBQ0FsQixNQUFNRSxTQUFTLENBQUNvQixHQUFHLEdBQUd0QixNQUFNRSxTQUFTLENBQUNMLFVBQVU7SUFDbEQsR0FBR0c7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9oYW5kbGViYXJzLmpzP2EwZWQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG52YXIgcmVmcmFjdG9yTWFya3VwVGVtcGxhdGluZyA9IHJlcXVpcmUoJy4vbWFya3VwLXRlbXBsYXRpbmcuanMnKVxubW9kdWxlLmV4cG9ydHMgPSBoYW5kbGViYXJzXG5oYW5kbGViYXJzLmRpc3BsYXlOYW1lID0gJ2hhbmRsZWJhcnMnXG5oYW5kbGViYXJzLmFsaWFzZXMgPSBbJ2hicyddXG5mdW5jdGlvbiBoYW5kbGViYXJzKFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3Rvck1hcmt1cFRlbXBsYXRpbmcpXG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgUHJpc20ubGFuZ3VhZ2VzLmhhbmRsZWJhcnMgPSB7XG4gICAgICBjb21tZW50OiAvXFx7XFx7IVtcXHNcXFNdKj9cXH1cXH0vLFxuICAgICAgZGVsaW1pdGVyOiB7XG4gICAgICAgIHBhdHRlcm46IC9eXFx7XFx7XFx7P3xcXH1cXH1cXH0/JC8sXG4gICAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgICB9LFxuICAgICAgc3RyaW5nOiAvKFtcIiddKSg/OlxcXFwufCg/IVxcMSlbXlxcXFxcXHJcXG5dKSpcXDEvLFxuICAgICAgbnVtYmVyOiAvXFxiMHhbXFxkQS1GYS1mXStcXGJ8KD86XFxiXFxkKyg/OlxcLlxcZCopP3xcXEJcXC5cXGQrKSg/OltFZV1bKy1dP1xcZCspPy8sXG4gICAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvLFxuICAgICAgYmxvY2s6IHtcbiAgICAgICAgcGF0dGVybjogL14oXFxzKig/On5cXHMqKT8pWyNcXC9dXFxTKz8oPz1cXHMqKD86flxccyopPyR8XFxzKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICAgIH0sXG4gICAgICBicmFja2V0czoge1xuICAgICAgICBwYXR0ZXJuOiAvXFxbW15cXF1dK1xcXS8sXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXFxbfFxcXS8sXG4gICAgICAgICAgdmFyaWFibGU6IC9bXFxzXFxTXSsvXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBwdW5jdHVhdGlvbjogL1shXCIjJSYnOigpKissLlxcLzs8PT5AXFxbXFxcXFxcXV5ge3x9fl0vLFxuICAgICAgdmFyaWFibGU6IC9bXiFcIiMlJicoKSorLFxcLzs8PT5AXFxbXFxcXFxcXV5ge3x9flxcc10rL1xuICAgIH1cbiAgICBQcmlzbS5ob29rcy5hZGQoJ2JlZm9yZS10b2tlbml6ZScsIGZ1bmN0aW9uIChlbnYpIHtcbiAgICAgIHZhciBoYW5kbGViYXJzUGF0dGVybiA9IC9cXHtcXHtcXHtbXFxzXFxTXSs/XFx9XFx9XFx9fFxce1xce1tcXHNcXFNdKz9cXH1cXH0vZ1xuICAgICAgUHJpc20ubGFuZ3VhZ2VzWydtYXJrdXAtdGVtcGxhdGluZyddLmJ1aWxkUGxhY2Vob2xkZXJzKFxuICAgICAgICBlbnYsXG4gICAgICAgICdoYW5kbGViYXJzJyxcbiAgICAgICAgaGFuZGxlYmFyc1BhdHRlcm5cbiAgICAgIClcbiAgICB9KVxuICAgIFByaXNtLmhvb2tzLmFkZCgnYWZ0ZXItdG9rZW5pemUnLCBmdW5jdGlvbiAoZW52KSB7XG4gICAgICBQcmlzbS5sYW5ndWFnZXNbJ21hcmt1cC10ZW1wbGF0aW5nJ10udG9rZW5pemVQbGFjZWhvbGRlcnMoXG4gICAgICAgIGVudixcbiAgICAgICAgJ2hhbmRsZWJhcnMnXG4gICAgICApXG4gICAgfSlcbiAgICBQcmlzbS5sYW5ndWFnZXMuaGJzID0gUHJpc20ubGFuZ3VhZ2VzLmhhbmRsZWJhcnNcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yTWFya3VwVGVtcGxhdGluZyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiaGFuZGxlYmFycyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJjb21tZW50IiwiZGVsaW1pdGVyIiwicGF0dGVybiIsImFsaWFzIiwic3RyaW5nIiwibnVtYmVyIiwiYm9vbGVhbiIsImJsb2NrIiwibG9va2JlaGluZCIsImJyYWNrZXRzIiwiaW5zaWRlIiwicHVuY3R1YXRpb24iLCJ2YXJpYWJsZSIsImhvb2tzIiwiYWRkIiwiZW52IiwiaGFuZGxlYmFyc1BhdHRlcm4iLCJidWlsZFBsYWNlaG9sZGVycyIsInRva2VuaXplUGxhY2Vob2xkZXJzIiwiaGJzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/handlebars.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/haskell.js":
/*!************************************************!*\
  !*** ./node_modules/refractor/lang/haskell.js ***!
  \************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = haskell;\nhaskell.displayName = \"haskell\";\nhaskell.aliases = [\n    \"hs\"\n];\nfunction haskell(Prism) {\n    Prism.languages.haskell = {\n        comment: {\n            pattern: /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--(?:(?=.)[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|$)|\\{-[\\s\\S]*?-\\})/m,\n            lookbehind: true\n        },\n        char: {\n            pattern: /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|ACK|BEL|BS|CAN|CR|DC1|DC2|DC3|DC4|DEL|DLE|EM|ENQ|EOT|ESC|ETB|ETX|FF|FS|GS|HT|LF|NAK|NUL|RS|SI|SO|SOH|SP|STX|SUB|SYN|US|VT|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\n            alias: \"string\"\n        },\n        string: {\n            pattern: /\"(?:[^\\\\\"]|\\\\(?:\\S|\\s+\\\\))*\"/,\n            greedy: true\n        },\n        keyword: /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\n        \"import-statement\": {\n            // The imported or hidden names are not included in this import\n            // statement. This is because we want to highlight those exactly like\n            // we do for the names in the program.\n            pattern: /(^[\\t ]*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n            lookbehind: true,\n            inside: {\n                keyword: /\\b(?:as|hiding|import|qualified)\\b/,\n                punctuation: /\\./\n            }\n        },\n        // These are builtin variables only. Constructors are highlighted later as a constant.\n        builtin: /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\n        // decimal integers and floating point numbers | octal integers | hexadecimal integers\n        number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\n        operator: [\n            {\n                // infix operator\n                pattern: /`(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\n                greedy: true\n            },\n            {\n                // function composition\n                pattern: /(\\s)\\.(?=\\s)/,\n                lookbehind: true\n            },\n            // If it stands alone freely, it is the function composition.\n            // It may also be a separator between a module name and an identifier => no\n            // operator. If it comes together with other special characters it is an\n            // operator too.\n            //\n            // This regex means: /[-!#$%*+=?&@|~.:<>^\\\\\\/]+/ without /\\./.\n            /[-!#$%*+=?&@|~:<>^\\\\\\/][-!#$%*+=?&@|~.:<>^\\\\\\/]*|\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+/\n        ],\n        // In Haskell, nearly everything is a variable, do not highlight these.\n        hvariable: {\n            pattern: /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*/,\n            inside: {\n                punctuation: /\\./\n            }\n        },\n        constant: {\n            pattern: /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*/,\n            inside: {\n                punctuation: /\\./\n            }\n        },\n        punctuation: /[{}[\\];(),.:]/\n    };\n    Prism.languages.hs = Prism.languages.haskell;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvaGFza2VsbC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxRQUFRQyxXQUFXLEdBQUc7QUFDdEJELFFBQVFFLE9BQU8sR0FBRztJQUFDO0NBQUs7QUFDeEIsU0FBU0YsUUFBUUcsS0FBSztJQUNwQkEsTUFBTUMsU0FBUyxDQUFDSixPQUFPLEdBQUc7UUFDeEJLLFNBQVM7WUFDUEMsU0FDRTtZQUNGQyxZQUFZO1FBQ2Q7UUFDQUMsTUFBTTtZQUNKRixTQUNFO1lBQ0ZHLE9BQU87UUFDVDtRQUNBQyxRQUFRO1lBQ05KLFNBQVM7WUFDVEssUUFBUTtRQUNWO1FBQ0FDLFNBQ0U7UUFDRixvQkFBb0I7WUFDbEIsK0RBQStEO1lBQy9ELHFFQUFxRTtZQUNyRSxzQ0FBc0M7WUFDdENOLFNBQ0U7WUFDRkMsWUFBWTtZQUNaTSxRQUFRO2dCQUNORCxTQUFTO2dCQUNURSxhQUFhO1lBQ2Y7UUFDRjtRQUNBLHNGQUFzRjtRQUN0RkMsU0FDRTtRQUNGLHNGQUFzRjtRQUN0RkMsUUFBUTtRQUNSQyxVQUFVO1lBQ1I7Z0JBQ0UsaUJBQWlCO2dCQUNqQlgsU0FBUztnQkFDVEssUUFBUTtZQUNWO1lBQ0E7Z0JBQ0UsdUJBQXVCO2dCQUN2QkwsU0FBUztnQkFDVEMsWUFBWTtZQUNkO1lBQ0EsNkRBQTZEO1lBQzdELDJFQUEyRTtZQUMzRSx3RUFBd0U7WUFDeEUsZ0JBQWdCO1lBQ2hCLEVBQUU7WUFDRiw4REFBOEQ7WUFDOUQ7U0FDRDtRQUNELHVFQUF1RTtRQUN2RVcsV0FBVztZQUNUWixTQUFTO1lBQ1RPLFFBQVE7Z0JBQ05DLGFBQWE7WUFDZjtRQUNGO1FBQ0FLLFVBQVU7WUFDUmIsU0FBUztZQUNUTyxRQUFRO2dCQUNOQyxhQUFhO1lBQ2Y7UUFDRjtRQUNBQSxhQUFhO0lBQ2Y7SUFDQVgsTUFBTUMsU0FBUyxDQUFDZ0IsRUFBRSxHQUFHakIsTUFBTUMsU0FBUyxDQUFDSixPQUFPO0FBQzlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2hhc2tlbGwuanM/YTJhYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBoYXNrZWxsXG5oYXNrZWxsLmRpc3BsYXlOYW1lID0gJ2hhc2tlbGwnXG5oYXNrZWxsLmFsaWFzZXMgPSBbJ2hzJ11cbmZ1bmN0aW9uIGhhc2tlbGwoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmhhc2tlbGwgPSB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhefFteLSEjJCUqKz0/JkB8fi46PD5eXFxcXFxcL10pKD86LS0oPzooPz0uKVteLSEjJCUqKz0/JkB8fi46PD5eXFxcXFxcL10uKnwkKXxcXHstW1xcc1xcU10qPy1cXH0pL20sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBjaGFyOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvJyg/OlteXFxcXCddfFxcXFwoPzpbYWJmbnJ0dlxcXFxcIicmXXxcXF5bQS1aQFtcXF1eX118QUNLfEJFTHxCU3xDQU58Q1J8REMxfERDMnxEQzN8REM0fERFTHxETEV8RU18RU5RfEVPVHxFU0N8RVRCfEVUWHxGRnxGU3xHU3xIVHxMRnxOQUt8TlVMfFJTfFNJfFNPfFNPSHxTUHxTVFh8U1VCfFNZTnxVU3xWVHxcXGQrfG9bMC03XSt8eFswLTlhLWZBLUZdKykpJy8sXG4gICAgICBhbGlhczogJ3N0cmluZydcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1wiKD86W15cXFxcXCJdfFxcXFwoPzpcXFN8XFxzK1xcXFwpKSpcIi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86Y2FzZXxjbGFzc3xkYXRhfGRlcml2aW5nfGRvfGVsc2V8aWZ8aW58aW5maXhsfGluZml4cnxpbnN0YW5jZXxsZXR8bW9kdWxlfG5ld3R5cGV8b2Z8cHJpbWl0aXZlfHRoZW58dHlwZXx3aGVyZSlcXGIvLFxuICAgICdpbXBvcnQtc3RhdGVtZW50Jzoge1xuICAgICAgLy8gVGhlIGltcG9ydGVkIG9yIGhpZGRlbiBuYW1lcyBhcmUgbm90IGluY2x1ZGVkIGluIHRoaXMgaW1wb3J0XG4gICAgICAvLyBzdGF0ZW1lbnQuIFRoaXMgaXMgYmVjYXVzZSB3ZSB3YW50IHRvIGhpZ2hsaWdodCB0aG9zZSBleGFjdGx5IGxpa2VcbiAgICAgIC8vIHdlIGRvIGZvciB0aGUgbmFtZXMgaW4gdGhlIHByb2dyYW0uXG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKF5bXFx0IF0qKWltcG9ydFxccysoPzpxdWFsaWZpZWRcXHMrKT8oPzpbQS1aXVtcXHcnXSopKD86XFwuW0EtWl1bXFx3J10qKSooPzpcXHMrYXNcXHMrKD86W0EtWl1bXFx3J10qKSg/OlxcLltBLVpdW1xcdyddKikqKT8oPzpcXHMraGlkaW5nXFxiKT8vbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAga2V5d29yZDogL1xcYig/OmFzfGhpZGluZ3xpbXBvcnR8cXVhbGlmaWVkKVxcYi8sXG4gICAgICAgIHB1bmN0dWF0aW9uOiAvXFwuL1xuICAgICAgfVxuICAgIH0sXG4gICAgLy8gVGhlc2UgYXJlIGJ1aWx0aW4gdmFyaWFibGVzIG9ubHkuIENvbnN0cnVjdG9ycyBhcmUgaGlnaGxpZ2h0ZWQgbGF0ZXIgYXMgYSBjb25zdGFudC5cbiAgICBidWlsdGluOlxuICAgICAgL1xcYig/OmFic3xhY29zfGFjb3NofGFsbHxhbmR8YW55fGFwcGVuZEZpbGV8YXBwcm94UmF0aW9uYWx8YXNUeXBlT2Z8YXNpbnxhc2luaHxhdGFufGF0YW4yfGF0YW5ofGJhc2ljSU9SdW58YnJlYWt8Y2F0Y2h8Y2VpbGluZ3xjaHJ8Y29tcGFyZXxjb25jYXR8Y29uY2F0TWFwfGNvbnN0fGNvc3xjb3NofGN1cnJ5fGN5Y2xlfGRlY29kZUZsb2F0fGRlbm9taW5hdG9yfGRpZ2l0VG9JbnR8ZGl2fGRpdk1vZHxkcm9wfGRyb3BXaGlsZXxlaXRoZXJ8ZWxlbXxlbmNvZGVGbG9hdHxlbnVtRnJvbXxlbnVtRnJvbVRoZW58ZW51bUZyb21UaGVuVG98ZW51bUZyb21Ub3xlcnJvcnxldmVufGV4cHxleHBvbmVudHxmYWlsfGZpbHRlcnxmbGlwfGZsb2F0RGlnaXRzfGZsb2F0UmFkaXh8ZmxvYXRSYW5nZXxmbG9vcnxmbWFwfGZvbGRsfGZvbGRsMXxmb2xkcnxmb2xkcjF8ZnJvbURvdWJsZXxmcm9tRW51bXxmcm9tSW50fGZyb21JbnRlZ2VyfGZyb21JbnRlZ3JhbHxmcm9tUmF0aW9uYWx8ZnN0fGdjZHxnZXRDaGFyfGdldENvbnRlbnRzfGdldExpbmV8Z3JvdXB8aGVhZHxpZHxpblJhbmdlfGluZGV4fGluaXR8aW50VG9EaWdpdHxpbnRlcmFjdHxpb0Vycm9yfGlzQWxwaGF8aXNBbHBoYU51bXxpc0FzY2lpfGlzQ29udHJvbHxpc0Rlbm9ybWFsaXplZHxpc0RpZ2l0fGlzSGV4RGlnaXR8aXNJRUVFfGlzSW5maW5pdGV8aXNMb3dlcnxpc05hTnxpc05lZ2F0aXZlWmVyb3xpc09jdERpZ2l0fGlzUHJpbnR8aXNTcGFjZXxpc1VwcGVyfGl0ZXJhdGV8bGFzdHxsY218bGVuZ3RofGxleHxsZXhEaWdpdHN8bGV4TGl0Q2hhcnxsaW5lc3xsb2d8bG9nQmFzZXxsb29rdXB8bWFwfG1hcE18bWFwTV98bWF4fG1heEJvdW5kfG1heGltdW18bWF5YmV8bWlufG1pbkJvdW5kfG1pbmltdW18bW9kfG5lZ2F0ZXxub3R8bm90RWxlbXxudWxsfG51bWVyYXRvcnxvZGR8b3J8b3JkfG90aGVyd2lzZXxwYWNrfHBpfHByZWR8cHJpbUV4aXRXaXRofHByaW50fHByb2R1Y3R8cHJvcGVyRnJhY3Rpb258cHV0Q2hhcnxwdXRTdHJ8cHV0U3RyTG58cXVvdHxxdW90UmVtfHJhbmdlfHJhbmdlU2l6ZXxyZWFkfHJlYWREZWN8cmVhZEZpbGV8cmVhZEZsb2F0fHJlYWRIZXh8cmVhZElPfHJlYWRJbnR8cmVhZExpc3R8cmVhZExpdENoYXJ8cmVhZExufHJlYWRPY3R8cmVhZFBhcmVufHJlYWRTaWduZWR8cmVhZHN8cmVhZHNQcmVjfHJlYWxUb0ZyYWN8cmVjaXB8cmVtfHJlcGVhdHxyZXBsaWNhdGV8cmV0dXJufHJldmVyc2V8cm91bmR8c2NhbGVGbG9hdHxzY2FubHxzY2FubDF8c2NhbnJ8c2NhbnIxfHNlcXxzZXF1ZW5jZXxzZXF1ZW5jZV98c2hvd3xzaG93Q2hhcnxzaG93SW50fHNob3dMaXN0fHNob3dMaXRDaGFyfHNob3dQYXJlbnxzaG93U2lnbmVkfHNob3dTdHJpbmd8c2hvd3N8c2hvd3NQcmVjfHNpZ25pZmljYW5kfHNpZ251bXxzaW58c2luaHxzbmR8c29ydHxzcGFufHNwbGl0QXR8c3FydHxzdWJ0cmFjdHxzdWNjfHN1bXx0YWlsfHRha2V8dGFrZVdoaWxlfHRhbnx0YW5ofHRocmVhZFRvSU9SZXN1bHR8dG9FbnVtfHRvSW50fHRvSW50ZWdlcnx0b0xvd2VyfHRvUmF0aW9uYWx8dG9VcHBlcnx0cnVuY2F0ZXx1bmN1cnJ5fHVuZGVmaW5lZHx1bmxpbmVzfHVudGlsfHVud29yZHN8dW56aXB8dW56aXAzfHVzZXJFcnJvcnx3b3Jkc3x3cml0ZUZpbGV8emlwfHppcDN8emlwV2l0aHx6aXBXaXRoMylcXGIvLFxuICAgIC8vIGRlY2ltYWwgaW50ZWdlcnMgYW5kIGZsb2F0aW5nIHBvaW50IG51bWJlcnMgfCBvY3RhbCBpbnRlZ2VycyB8IGhleGFkZWNpbWFsIGludGVnZXJzXG4gICAgbnVtYmVyOiAvXFxiKD86XFxkKyg/OlxcLlxcZCspPyg/OmVbKy1dP1xcZCspP3wwb1swLTddK3wweFswLTlhLWZdKylcXGIvaSxcbiAgICBvcGVyYXRvcjogW1xuICAgICAge1xuICAgICAgICAvLyBpbmZpeCBvcGVyYXRvclxuICAgICAgICBwYXR0ZXJuOiAvYCg/OltBLVpdW1xcdyddKlxcLikqW19hLXpdW1xcdyddKmAvLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIC8vIGZ1bmN0aW9uIGNvbXBvc2l0aW9uXG4gICAgICAgIHBhdHRlcm46IC8oXFxzKVxcLig/PVxccykvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LCAvLyBNb3N0IG9mIHRoaXMgaXMgbmVlZGVkIGJlY2F1c2Ugb2YgdGhlIG1lYW5pbmcgb2YgYSBzaW5nbGUgJy4nLlxuICAgICAgLy8gSWYgaXQgc3RhbmRzIGFsb25lIGZyZWVseSwgaXQgaXMgdGhlIGZ1bmN0aW9uIGNvbXBvc2l0aW9uLlxuICAgICAgLy8gSXQgbWF5IGFsc28gYmUgYSBzZXBhcmF0b3IgYmV0d2VlbiBhIG1vZHVsZSBuYW1lIGFuZCBhbiBpZGVudGlmaWVyID0+IG5vXG4gICAgICAvLyBvcGVyYXRvci4gSWYgaXQgY29tZXMgdG9nZXRoZXIgd2l0aCBvdGhlciBzcGVjaWFsIGNoYXJhY3RlcnMgaXQgaXMgYW5cbiAgICAgIC8vIG9wZXJhdG9yIHRvby5cbiAgICAgIC8vXG4gICAgICAvLyBUaGlzIHJlZ2V4IG1lYW5zOiAvWy0hIyQlKis9PyZAfH4uOjw+XlxcXFxcXC9dKy8gd2l0aG91dCAvXFwuLy5cbiAgICAgIC9bLSEjJCUqKz0/JkB8fjo8Pl5cXFxcXFwvXVstISMkJSorPT8mQHx+Ljo8Pl5cXFxcXFwvXSp8XFwuWy0hIyQlKis9PyZAfH4uOjw+XlxcXFxcXC9dKy9cbiAgICBdLFxuICAgIC8vIEluIEhhc2tlbGwsIG5lYXJseSBldmVyeXRoaW5nIGlzIGEgdmFyaWFibGUsIGRvIG5vdCBoaWdobGlnaHQgdGhlc2UuXG4gICAgaHZhcmlhYmxlOiB7XG4gICAgICBwYXR0ZXJuOiAvXFxiKD86W0EtWl1bXFx3J10qXFwuKSpbX2Etel1bXFx3J10qLyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBwdW5jdHVhdGlvbjogL1xcLi9cbiAgICAgIH1cbiAgICB9LFxuICAgIGNvbnN0YW50OiB7XG4gICAgICBwYXR0ZXJuOiAvXFxiKD86W0EtWl1bXFx3J10qXFwuKSpbQS1aXVtcXHcnXSovLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHB1bmN0dWF0aW9uOiAvXFwuL1xuICAgICAgfVxuICAgIH0sXG4gICAgcHVuY3R1YXRpb246IC9be31bXFxdOygpLC46XS9cbiAgfVxuICBQcmlzbS5sYW5ndWFnZXMuaHMgPSBQcmlzbS5sYW5ndWFnZXMuaGFza2VsbFxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJoYXNrZWxsIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJjaGFyIiwiYWxpYXMiLCJzdHJpbmciLCJncmVlZHkiLCJrZXl3b3JkIiwiaW5zaWRlIiwicHVuY3R1YXRpb24iLCJidWlsdGluIiwibnVtYmVyIiwib3BlcmF0b3IiLCJodmFyaWFibGUiLCJjb25zdGFudCIsImhzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/haskell.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/haxe.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/haxe.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = haxe;\nhaxe.displayName = \"haxe\";\nhaxe.aliases = [];\nfunction haxe(Prism) {\n    Prism.languages.haxe = Prism.languages.extend(\"clike\", {\n        string: {\n            // Strings can be multi-line\n            pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n            greedy: true\n        },\n        \"class-name\": [\n            {\n                pattern: /(\\b(?:abstract|class|enum|extends|implements|interface|new|typedef)\\s+)[A-Z_]\\w*/,\n                lookbehind: true\n            },\n            /\\b[A-Z]\\w*/\n        ],\n        // The final look-ahead prevents highlighting of keywords if expressions such as \"haxe.macro.Expr\"\n        keyword: /\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|final|for|from|function|if|implements|import|in|inline|interface|macro|new|null|operator|overload|override|package|private|public|return|static|super|switch|throw|to|try|typedef|untyped|using|var|while)(?!\\.)\\b/,\n        function: {\n            pattern: /\\b[a-z_]\\w*(?=\\s*(?:<[^<>]*>\\s*)?\\()/i,\n            greedy: true\n        },\n        operator: /\\.{3}|\\+\\+|--|&&|\\|\\||->|=>|(?:<<?|>{1,3}|[-+*/%!=&|^])=?|[?:~]/\n    });\n    Prism.languages.insertBefore(\"haxe\", \"string\", {\n        \"string-interpolation\": {\n            pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n            greedy: true,\n            inside: {\n                interpolation: {\n                    pattern: /(^|[^\\\\])\\$(?:\\w+|\\{[^{}]+\\})/,\n                    lookbehind: true,\n                    inside: {\n                        \"interpolation-punctuation\": {\n                            pattern: /^\\$\\{?|\\}$/,\n                            alias: \"punctuation\"\n                        },\n                        expression: {\n                            pattern: /[\\s\\S]+/,\n                            inside: Prism.languages.haxe\n                        }\n                    }\n                },\n                string: /[\\s\\S]+/\n            }\n        }\n    });\n    Prism.languages.insertBefore(\"haxe\", \"class-name\", {\n        regex: {\n            pattern: /~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[a-z]*/,\n            greedy: true,\n            inside: {\n                \"regex-flags\": /\\b[a-z]+$/,\n                \"regex-source\": {\n                    pattern: /^(~\\/)[\\s\\S]+(?=\\/$)/,\n                    lookbehind: true,\n                    alias: \"language-regex\",\n                    inside: Prism.languages.regex\n                },\n                \"regex-delimiter\": /^~\\/|\\/$/\n            }\n        }\n    });\n    Prism.languages.insertBefore(\"haxe\", \"keyword\", {\n        preprocessor: {\n            pattern: /#(?:else|elseif|end|if)\\b.*/,\n            alias: \"property\"\n        },\n        metadata: {\n            pattern: /@:?[\\w.]+/,\n            alias: \"symbol\"\n        },\n        reification: {\n            pattern: /\\$(?:\\w+|(?=\\{))/,\n            alias: \"important\"\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvaGF4ZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDakJBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHRyxNQUFNQyxTQUFTLENBQUNDLE1BQU0sQ0FBQyxTQUFTO1FBQ3JEQyxRQUFRO1lBQ04sNEJBQTRCO1lBQzVCQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBLGNBQWM7WUFDWjtnQkFDRUQsU0FDRTtnQkFDRkUsWUFBWTtZQUNkO1lBQ0E7U0FDRDtRQUNELGtHQUFrRztRQUNsR0MsU0FDRTtRQUNGQyxVQUFVO1lBQ1JKLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FJLFVBQVU7SUFDWjtJQUNBVCxNQUFNQyxTQUFTLENBQUNTLFlBQVksQ0FBQyxRQUFRLFVBQVU7UUFDN0Msd0JBQXdCO1lBQ3RCTixTQUFTO1lBQ1RDLFFBQVE7WUFDUk0sUUFBUTtnQkFDTkMsZUFBZTtvQkFDYlIsU0FBUztvQkFDVEUsWUFBWTtvQkFDWkssUUFBUTt3QkFDTiw2QkFBNkI7NEJBQzNCUCxTQUFTOzRCQUNUUyxPQUFPO3dCQUNUO3dCQUNBQyxZQUFZOzRCQUNWVixTQUFTOzRCQUNUTyxRQUFRWCxNQUFNQyxTQUFTLENBQUNKLElBQUk7d0JBQzlCO29CQUNGO2dCQUNGO2dCQUNBTSxRQUFRO1lBQ1Y7UUFDRjtJQUNGO0lBQ0FILE1BQU1DLFNBQVMsQ0FBQ1MsWUFBWSxDQUFDLFFBQVEsY0FBYztRQUNqREssT0FBTztZQUNMWCxTQUFTO1lBQ1RDLFFBQVE7WUFDUk0sUUFBUTtnQkFDTixlQUFlO2dCQUNmLGdCQUFnQjtvQkFDZFAsU0FBUztvQkFDVEUsWUFBWTtvQkFDWk8sT0FBTztvQkFDUEYsUUFBUVgsTUFBTUMsU0FBUyxDQUFDYyxLQUFLO2dCQUMvQjtnQkFDQSxtQkFBbUI7WUFDckI7UUFDRjtJQUNGO0lBQ0FmLE1BQU1DLFNBQVMsQ0FBQ1MsWUFBWSxDQUFDLFFBQVEsV0FBVztRQUM5Q00sY0FBYztZQUNaWixTQUFTO1lBQ1RTLE9BQU87UUFDVDtRQUNBSSxVQUFVO1lBQ1JiLFNBQVM7WUFDVFMsT0FBTztRQUNUO1FBQ0FLLGFBQWE7WUFDWGQsU0FBUztZQUNUUyxPQUFPO1FBQ1Q7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2hheGUuanM/MjQwMSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBoYXhlXG5oYXhlLmRpc3BsYXlOYW1lID0gJ2hheGUnXG5oYXhlLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gaGF4ZShQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuaGF4ZSA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2NsaWtlJywge1xuICAgIHN0cmluZzoge1xuICAgICAgLy8gU3RyaW5ncyBjYW4gYmUgbXVsdGktbGluZVxuICAgICAgcGF0dGVybjogL1wiKD86W15cIlxcXFxdfFxcXFxbXFxzXFxTXSkqXCIvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICAnY2xhc3MtbmFtZSc6IFtcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKFxcYig/OmFic3RyYWN0fGNsYXNzfGVudW18ZXh0ZW5kc3xpbXBsZW1lbnRzfGludGVyZmFjZXxuZXd8dHlwZWRlZilcXHMrKVtBLVpfXVxcdyovLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LCAvLyBiYXNlZCBvbiBuYW1pbmcgY29udmVudGlvblxuICAgICAgL1xcYltBLVpdXFx3Ki9cbiAgICBdLFxuICAgIC8vIFRoZSBmaW5hbCBsb29rLWFoZWFkIHByZXZlbnRzIGhpZ2hsaWdodGluZyBvZiBrZXl3b3JkcyBpZiBleHByZXNzaW9ucyBzdWNoIGFzIFwiaGF4ZS5tYWNyby5FeHByXCJcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYnRoaXNcXGJ8XFxiKD86YWJzdHJhY3R8YXN8YnJlYWt8Y2FzZXxjYXN0fGNhdGNofGNsYXNzfGNvbnRpbnVlfGRlZmF1bHR8ZG98ZHluYW1pY3xlbHNlfGVudW18ZXh0ZW5kc3xleHRlcm58ZmluYWx8Zm9yfGZyb218ZnVuY3Rpb258aWZ8aW1wbGVtZW50c3xpbXBvcnR8aW58aW5saW5lfGludGVyZmFjZXxtYWNyb3xuZXd8bnVsbHxvcGVyYXRvcnxvdmVybG9hZHxvdmVycmlkZXxwYWNrYWdlfHByaXZhdGV8cHVibGljfHJldHVybnxzdGF0aWN8c3VwZXJ8c3dpdGNofHRocm93fHRvfHRyeXx0eXBlZGVmfHVudHlwZWR8dXNpbmd8dmFyfHdoaWxlKSg/IVxcLilcXGIvLFxuICAgIGZ1bmN0aW9uOiB7XG4gICAgICBwYXR0ZXJuOiAvXFxiW2Etel9dXFx3Kig/PVxccyooPzo8W148Pl0qPlxccyopP1xcKCkvaSxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgb3BlcmF0b3I6IC9cXC57M318XFwrXFwrfC0tfCYmfFxcfFxcfHwtPnw9PnwoPzo8PD98PnsxLDN9fFstKyovJSE9JnxeXSk9P3xbPzp+XS9cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnaGF4ZScsICdzdHJpbmcnLCB7XG4gICAgJ3N0cmluZy1pbnRlcnBvbGF0aW9uJzoge1xuICAgICAgcGF0dGVybjogLycoPzpbXidcXFxcXXxcXFxcW1xcc1xcU10pKicvLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIGludGVycG9sYXRpb246IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKF58W15cXFxcXSlcXCQoPzpcXHcrfFxce1tee31dK1xcfSkvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICAnaW50ZXJwb2xhdGlvbi1wdW5jdHVhdGlvbic6IHtcbiAgICAgICAgICAgICAgcGF0dGVybjogL15cXCRcXHs/fFxcfSQvLFxuICAgICAgICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGV4cHJlc3Npb246IHtcbiAgICAgICAgICAgICAgcGF0dGVybjogL1tcXHNcXFNdKy8sXG4gICAgICAgICAgICAgIGluc2lkZTogUHJpc20ubGFuZ3VhZ2VzLmhheGVcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHN0cmluZzogL1tcXHNcXFNdKy9cbiAgICAgIH1cbiAgICB9XG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ2hheGUnLCAnY2xhc3MtbmFtZScsIHtcbiAgICByZWdleDoge1xuICAgICAgcGF0dGVybjogL35cXC8oPzpbXlxcL1xcXFxcXHJcXG5dfFxcXFwuKStcXC9bYS16XSovLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgICdyZWdleC1mbGFncyc6IC9cXGJbYS16XSskLyxcbiAgICAgICAgJ3JlZ2V4LXNvdXJjZSc6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXih+XFwvKVtcXHNcXFNdKyg/PVxcLyQpLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGFsaWFzOiAnbGFuZ3VhZ2UtcmVnZXgnLFxuICAgICAgICAgIGluc2lkZTogUHJpc20ubGFuZ3VhZ2VzLnJlZ2V4XG4gICAgICAgIH0sXG4gICAgICAgICdyZWdleC1kZWxpbWl0ZXInOiAvXn5cXC98XFwvJC9cbiAgICAgIH1cbiAgICB9XG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ2hheGUnLCAna2V5d29yZCcsIHtcbiAgICBwcmVwcm9jZXNzb3I6IHtcbiAgICAgIHBhdHRlcm46IC8jKD86ZWxzZXxlbHNlaWZ8ZW5kfGlmKVxcYi4qLyxcbiAgICAgIGFsaWFzOiAncHJvcGVydHknXG4gICAgfSxcbiAgICBtZXRhZGF0YToge1xuICAgICAgcGF0dGVybjogL0A6P1tcXHcuXSsvLFxuICAgICAgYWxpYXM6ICdzeW1ib2wnXG4gICAgfSxcbiAgICByZWlmaWNhdGlvbjoge1xuICAgICAgcGF0dGVybjogL1xcJCg/Olxcdyt8KD89XFx7KSkvLFxuICAgICAgYWxpYXM6ICdpbXBvcnRhbnQnXG4gICAgfVxuICB9KVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJoYXhlIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZ3JlZWR5IiwibG9va2JlaGluZCIsImtleXdvcmQiLCJmdW5jdGlvbiIsIm9wZXJhdG9yIiwiaW5zZXJ0QmVmb3JlIiwiaW5zaWRlIiwiaW50ZXJwb2xhdGlvbiIsImFsaWFzIiwiZXhwcmVzc2lvbiIsInJlZ2V4IiwicHJlcHJvY2Vzc29yIiwibWV0YWRhdGEiLCJyZWlmaWNhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/haxe.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/hcl.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/hcl.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = hcl;\nhcl.displayName = \"hcl\";\nhcl.aliases = [];\nfunction hcl(Prism) {\n    Prism.languages.hcl = {\n        comment: /(?:\\/\\/|#).*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        heredoc: {\n            pattern: /<<-?(\\w+\\b)[\\s\\S]*?^[ \\t]*\\1/m,\n            greedy: true,\n            alias: \"string\"\n        },\n        keyword: [\n            {\n                pattern: /(?:data|resource)\\s+(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")(?=\\s+\"[\\w-]+\"\\s+\\{)/i,\n                inside: {\n                    type: {\n                        pattern: /(resource|data|\\s+)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")/i,\n                        lookbehind: true,\n                        alias: \"variable\"\n                    }\n                }\n            },\n            {\n                pattern: /(?:backend|module|output|provider|provisioner|variable)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+(?=\\{)/i,\n                inside: {\n                    type: {\n                        pattern: /(backend|module|output|provider|provisioner|variable)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+/i,\n                        lookbehind: true,\n                        alias: \"variable\"\n                    }\n                }\n            },\n            /[\\w-]+(?=\\s+\\{)/\n        ],\n        property: [\n            /[-\\w\\.]+(?=\\s*=(?!=))/,\n            /\"(?:\\\\[\\s\\S]|[^\\\\\"])+\"(?=\\s*[:=])/\n        ],\n        string: {\n            pattern: /\"(?:[^\\\\$\"]|\\\\[\\s\\S]|\\$(?:(?=\")|\\$+(?!\\$)|[^\"${])|\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\})*\"/,\n            greedy: true,\n            inside: {\n                interpolation: {\n                    pattern: /(^|[^$])\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\}/,\n                    lookbehind: true,\n                    inside: {\n                        type: {\n                            pattern: /(\\b(?:count|data|local|module|path|self|terraform|var)\\b\\.)[\\w\\*]+/i,\n                            lookbehind: true,\n                            alias: \"variable\"\n                        },\n                        keyword: /\\b(?:count|data|local|module|path|self|terraform|var)\\b/i,\n                        function: /\\w+(?=\\()/,\n                        string: {\n                            pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n                            greedy: true\n                        },\n                        number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n                        punctuation: /[!\\$#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~?:]/\n                    }\n                }\n            }\n        },\n        number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n        boolean: /\\b(?:false|true)\\b/i,\n        punctuation: /[=\\[\\]{}]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvaGNsLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLElBQUlDLFdBQVcsR0FBRztBQUNsQkQsSUFBSUUsT0FBTyxHQUFHLEVBQUU7QUFDaEIsU0FBU0YsSUFBSUcsS0FBSztJQUNoQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7UUFDVEMsU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFFBQVE7WUFDUkMsT0FBTztRQUNUO1FBQ0FDLFNBQVM7WUFDUDtnQkFDRUgsU0FDRTtnQkFDRkksUUFBUTtvQkFDTkMsTUFBTTt3QkFDSkwsU0FBUzt3QkFDVE0sWUFBWTt3QkFDWkosT0FBTztvQkFDVDtnQkFDRjtZQUNGO1lBQ0E7Z0JBQ0VGLFNBQ0U7Z0JBQ0ZJLFFBQVE7b0JBQ05DLE1BQU07d0JBQ0pMLFNBQ0U7d0JBQ0ZNLFlBQVk7d0JBQ1pKLE9BQU87b0JBQ1Q7Z0JBQ0Y7WUFDRjtZQUNBO1NBQ0Q7UUFDREssVUFBVTtZQUFDO1lBQXlCO1NBQW9DO1FBQ3hFQyxRQUFRO1lBQ05SLFNBQ0U7WUFDRkMsUUFBUTtZQUNSRyxRQUFRO2dCQUNOSyxlQUFlO29CQUNiVCxTQUFTO29CQUNUTSxZQUFZO29CQUNaRixRQUFRO3dCQUNOQyxNQUFNOzRCQUNKTCxTQUNFOzRCQUNGTSxZQUFZOzRCQUNaSixPQUFPO3dCQUNUO3dCQUNBQyxTQUFTO3dCQUNUTyxVQUFVO3dCQUNWRixRQUFROzRCQUNOUixTQUFTOzRCQUNUQyxRQUFRO3dCQUNWO3dCQUNBVSxRQUFRO3dCQUNSQyxhQUFhO29CQUNmO2dCQUNGO1lBQ0Y7UUFDRjtRQUNBRCxRQUFRO1FBQ1JFLFNBQVM7UUFDVEQsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvaGNsLmpzP2NhMzQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gaGNsXG5oY2wuZGlzcGxheU5hbWUgPSAnaGNsJ1xuaGNsLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gaGNsKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5oY2wgPSB7XG4gICAgY29tbWVudDogLyg/OlxcL1xcL3wjKS4qfFxcL1xcKltcXHNcXFNdKj8oPzpcXCpcXC98JCkvLFxuICAgIGhlcmVkb2M6IHtcbiAgICAgIHBhdHRlcm46IC88PC0/KFxcdytcXGIpW1xcc1xcU10qP15bIFxcdF0qXFwxL20sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBhbGlhczogJ3N0cmluZydcbiAgICB9LFxuICAgIGtleXdvcmQ6IFtcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKD86ZGF0YXxyZXNvdXJjZSlcXHMrKD86XCIoPzpcXFxcW1xcc1xcU118W15cXFxcXCJdKSpcIikoPz1cXHMrXCJbXFx3LV0rXCJcXHMrXFx7KS9pLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICB0eXBlOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvKHJlc291cmNlfGRhdGF8XFxzKykoPzpcIig/OlxcXFxbXFxzXFxTXXxbXlxcXFxcIl0pKlwiKS9pLFxuICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICAgIGFsaWFzOiAndmFyaWFibGUnXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oPzpiYWNrZW5kfG1vZHVsZXxvdXRwdXR8cHJvdmlkZXJ8cHJvdmlzaW9uZXJ8dmFyaWFibGUpXFxzKyg/OltcXHctXSt8XCIoPzpcXFxcW1xcc1xcU118W15cXFxcXCJdKSpcIilcXHMrKD89XFx7KS9pLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICB0eXBlOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgICAvKGJhY2tlbmR8bW9kdWxlfG91dHB1dHxwcm92aWRlcnxwcm92aXNpb25lcnx2YXJpYWJsZSlcXHMrKD86W1xcdy1dK3xcIig/OlxcXFxbXFxzXFxTXXxbXlxcXFxcIl0pKlwiKVxccysvaSxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICBhbGlhczogJ3ZhcmlhYmxlJ1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIC9bXFx3LV0rKD89XFxzK1xceykvXG4gICAgXSxcbiAgICBwcm9wZXJ0eTogWy9bLVxcd1xcLl0rKD89XFxzKj0oPyE9KSkvLCAvXCIoPzpcXFxcW1xcc1xcU118W15cXFxcXCJdKStcIig/PVxccypbOj1dKS9dLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL1wiKD86W15cXFxcJFwiXXxcXFxcW1xcc1xcU118XFwkKD86KD89XCIpfFxcJCsoPyFcXCQpfFteXCIke10pfFxcJFxceyg/Oltee31cIl18XCIoPzpbXlxcXFxcIl18XFxcXFtcXHNcXFNdKSpcIikqXFx9KSpcIi8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgaW50ZXJwb2xhdGlvbjoge1xuICAgICAgICAgIHBhdHRlcm46IC8oXnxbXiRdKVxcJFxceyg/Oltee31cIl18XCIoPzpbXlxcXFxcIl18XFxcXFtcXHNcXFNdKSpcIikqXFx9LyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgdHlwZToge1xuICAgICAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgICAgIC8oXFxiKD86Y291bnR8ZGF0YXxsb2NhbHxtb2R1bGV8cGF0aHxzZWxmfHRlcnJhZm9ybXx2YXIpXFxiXFwuKVtcXHdcXCpdKy9pLFxuICAgICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgICAgICBhbGlhczogJ3ZhcmlhYmxlJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGtleXdvcmQ6IC9cXGIoPzpjb3VudHxkYXRhfGxvY2FsfG1vZHVsZXxwYXRofHNlbGZ8dGVycmFmb3JtfHZhcilcXGIvaSxcbiAgICAgICAgICAgIGZ1bmN0aW9uOiAvXFx3Kyg/PVxcKCkvLFxuICAgICAgICAgICAgc3RyaW5nOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC9cIig/OlxcXFxbXFxzXFxTXXxbXlxcXFxcIl0pKlwiLyxcbiAgICAgICAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbnVtYmVyOiAvXFxiMHhbXFxkYS1mXStcXGJ8XFxiXFxkKyg/OlxcLlxcZCopPyg/OmVbKy1dP1xcZCspPy9pLFxuICAgICAgICAgICAgcHVuY3R1YXRpb246IC9bIVxcJCMlJicoKSorLC5cXC87PD0+QFxcW1xcXFxcXF1eYHt8fX4/Ol0vXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBudW1iZXI6IC9cXGIweFtcXGRhLWZdK1xcYnxcXGJcXGQrKD86XFwuXFxkKik/KD86ZVsrLV0/XFxkKyk/L2ksXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiL2ksXG4gICAgcHVuY3R1YXRpb246IC9bPVxcW1xcXXt9XS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJoY2wiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJoZXJlZG9jIiwicGF0dGVybiIsImdyZWVkeSIsImFsaWFzIiwia2V5d29yZCIsImluc2lkZSIsInR5cGUiLCJsb29rYmVoaW5kIiwicHJvcGVydHkiLCJzdHJpbmciLCJpbnRlcnBvbGF0aW9uIiwiZnVuY3Rpb24iLCJudW1iZXIiLCJwdW5jdHVhdGlvbiIsImJvb2xlYW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/hcl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/hlsl.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/hlsl.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorC = __webpack_require__(/*! ./c.js */ \"(ssr)/./node_modules/refractor/lang/c.js\");\nmodule.exports = hlsl;\nhlsl.displayName = \"hlsl\";\nhlsl.aliases = [];\nfunction hlsl(Prism) {\n    Prism.register(refractorC);\n    Prism.languages.hlsl = Prism.languages.extend(\"c\", {\n        // Regarding keywords and class names:\n        // The list of all keywords was split into 'keyword' and 'class-name' tokens based on whether they are capitalized.\n        // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-keywords\n        // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-reserved-words\n        \"class-name\": [\n            Prism.languages.c[\"class-name\"],\n            /\\b(?:AppendStructuredBuffer|BlendState|Buffer|ByteAddressBuffer|CompileShader|ComputeShader|ConsumeStructuredBuffer|DepthStencilState|DepthStencilView|DomainShader|GeometryShader|Hullshader|InputPatch|LineStream|OutputPatch|PixelShader|PointStream|RWBuffer|RWByteAddressBuffer|RWStructuredBuffer|RWTexture(?:1D|1DArray|2D|2DArray|3D)|RasterizerState|RenderTargetView|SamplerComparisonState|SamplerState|StructuredBuffer|Texture(?:1D|1DArray|2D|2DArray|2DMS|2DMSArray|3D|Cube|CubeArray)|TriangleStream|VertexShader)\\b/\n        ],\n        keyword: [\n            // HLSL keyword\n            /\\b(?:asm|asm_fragment|auto|break|case|catch|cbuffer|centroid|char|class|column_major|compile|compile_fragment|const|const_cast|continue|default|delete|discard|do|dynamic_cast|else|enum|explicit|export|extern|for|friend|fxgroup|goto|groupshared|if|in|inline|inout|interface|line|lineadj|linear|long|matrix|mutable|namespace|new|nointerpolation|noperspective|operator|out|packoffset|pass|pixelfragment|point|precise|private|protected|public|register|reinterpret_cast|return|row_major|sample|sampler|shared|short|signed|sizeof|snorm|stateblock|stateblock_state|static|static_cast|string|struct|switch|tbuffer|technique|technique10|technique11|template|texture|this|throw|triangle|triangleadj|try|typedef|typename|uniform|union|unorm|unsigned|using|vector|vertexfragment|virtual|void|volatile|while)\\b/,\n            /\\b(?:bool|double|dword|float|half|int|min(?:10float|12int|16(?:float|int|uint))|uint)(?:[1-4](?:x[1-4])?)?\\b/\n        ],\n        // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-grammar#floating-point-numbers\n        number: /(?:(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?|\\b0x[\\da-fA-F]+)[fFhHlLuU]?\\b/,\n        boolean: /\\b(?:false|true)\\b/\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvaGxzbC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLElBQUlBLGFBQWFDLG1CQUFPQSxDQUFDO0FBQ3pCQyxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDakJBLE1BQU1DLFFBQVEsQ0FBQ1I7SUFDZk8sTUFBTUUsU0FBUyxDQUFDTCxJQUFJLEdBQUdHLE1BQU1FLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLEtBQUs7UUFDakQsc0NBQXNDO1FBQ3RDLG1IQUFtSDtRQUNuSCxpR0FBaUc7UUFDakcsdUdBQXVHO1FBQ3ZHLGNBQWM7WUFDWkgsTUFBTUUsU0FBUyxDQUFDRSxDQUFDLENBQUMsYUFBYTtZQUMvQjtTQUNEO1FBQ0RDLFNBQVM7WUFDUCxlQUFlO1lBQ2Y7WUFDQTtTQUNEO1FBQ0QsdUhBQXVIO1FBQ3ZIQyxRQUNFO1FBQ0ZDLFNBQVM7SUFDWDtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2hsc2wuanM/NGU0OCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcbnZhciByZWZyYWN0b3JDID0gcmVxdWlyZSgnLi9jLmpzJylcbm1vZHVsZS5leHBvcnRzID0gaGxzbFxuaGxzbC5kaXNwbGF5TmFtZSA9ICdobHNsJ1xuaGxzbC5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGhsc2woUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yQylcbiAgUHJpc20ubGFuZ3VhZ2VzLmhsc2wgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdjJywge1xuICAgIC8vIFJlZ2FyZGluZyBrZXl3b3JkcyBhbmQgY2xhc3MgbmFtZXM6XG4gICAgLy8gVGhlIGxpc3Qgb2YgYWxsIGtleXdvcmRzIHdhcyBzcGxpdCBpbnRvICdrZXl3b3JkJyBhbmQgJ2NsYXNzLW5hbWUnIHRva2VucyBiYXNlZCBvbiB3aGV0aGVyIHRoZXkgYXJlIGNhcGl0YWxpemVkLlxuICAgIC8vIGh0dHBzOi8vZG9jcy5taWNyb3NvZnQuY29tL2VuLXVzL3dpbmRvd3Mvd2luMzIvZGlyZWN0M2RobHNsL2R4LWdyYXBoaWNzLWhsc2wtYXBwZW5kaXgta2V5d29yZHNcbiAgICAvLyBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi11cy93aW5kb3dzL3dpbjMyL2RpcmVjdDNkaGxzbC9keC1ncmFwaGljcy1obHNsLWFwcGVuZGl4LXJlc2VydmVkLXdvcmRzXG4gICAgJ2NsYXNzLW5hbWUnOiBbXG4gICAgICBQcmlzbS5sYW5ndWFnZXMuY1snY2xhc3MtbmFtZSddLFxuICAgICAgL1xcYig/OkFwcGVuZFN0cnVjdHVyZWRCdWZmZXJ8QmxlbmRTdGF0ZXxCdWZmZXJ8Qnl0ZUFkZHJlc3NCdWZmZXJ8Q29tcGlsZVNoYWRlcnxDb21wdXRlU2hhZGVyfENvbnN1bWVTdHJ1Y3R1cmVkQnVmZmVyfERlcHRoU3RlbmNpbFN0YXRlfERlcHRoU3RlbmNpbFZpZXd8RG9tYWluU2hhZGVyfEdlb21ldHJ5U2hhZGVyfEh1bGxzaGFkZXJ8SW5wdXRQYXRjaHxMaW5lU3RyZWFtfE91dHB1dFBhdGNofFBpeGVsU2hhZGVyfFBvaW50U3RyZWFtfFJXQnVmZmVyfFJXQnl0ZUFkZHJlc3NCdWZmZXJ8UldTdHJ1Y3R1cmVkQnVmZmVyfFJXVGV4dHVyZSg/OjFEfDFEQXJyYXl8MkR8MkRBcnJheXwzRCl8UmFzdGVyaXplclN0YXRlfFJlbmRlclRhcmdldFZpZXd8U2FtcGxlckNvbXBhcmlzb25TdGF0ZXxTYW1wbGVyU3RhdGV8U3RydWN0dXJlZEJ1ZmZlcnxUZXh0dXJlKD86MUR8MURBcnJheXwyRHwyREFycmF5fDJETVN8MkRNU0FycmF5fDNEfEN1YmV8Q3ViZUFycmF5KXxUcmlhbmdsZVN0cmVhbXxWZXJ0ZXhTaGFkZXIpXFxiL1xuICAgIF0sXG4gICAga2V5d29yZDogW1xuICAgICAgLy8gSExTTCBrZXl3b3JkXG4gICAgICAvXFxiKD86YXNtfGFzbV9mcmFnbWVudHxhdXRvfGJyZWFrfGNhc2V8Y2F0Y2h8Y2J1ZmZlcnxjZW50cm9pZHxjaGFyfGNsYXNzfGNvbHVtbl9tYWpvcnxjb21waWxlfGNvbXBpbGVfZnJhZ21lbnR8Y29uc3R8Y29uc3RfY2FzdHxjb250aW51ZXxkZWZhdWx0fGRlbGV0ZXxkaXNjYXJkfGRvfGR5bmFtaWNfY2FzdHxlbHNlfGVudW18ZXhwbGljaXR8ZXhwb3J0fGV4dGVybnxmb3J8ZnJpZW5kfGZ4Z3JvdXB8Z290b3xncm91cHNoYXJlZHxpZnxpbnxpbmxpbmV8aW5vdXR8aW50ZXJmYWNlfGxpbmV8bGluZWFkanxsaW5lYXJ8bG9uZ3xtYXRyaXh8bXV0YWJsZXxuYW1lc3BhY2V8bmV3fG5vaW50ZXJwb2xhdGlvbnxub3BlcnNwZWN0aXZlfG9wZXJhdG9yfG91dHxwYWNrb2Zmc2V0fHBhc3N8cGl4ZWxmcmFnbWVudHxwb2ludHxwcmVjaXNlfHByaXZhdGV8cHJvdGVjdGVkfHB1YmxpY3xyZWdpc3RlcnxyZWludGVycHJldF9jYXN0fHJldHVybnxyb3dfbWFqb3J8c2FtcGxlfHNhbXBsZXJ8c2hhcmVkfHNob3J0fHNpZ25lZHxzaXplb2Z8c25vcm18c3RhdGVibG9ja3xzdGF0ZWJsb2NrX3N0YXRlfHN0YXRpY3xzdGF0aWNfY2FzdHxzdHJpbmd8c3RydWN0fHN3aXRjaHx0YnVmZmVyfHRlY2huaXF1ZXx0ZWNobmlxdWUxMHx0ZWNobmlxdWUxMXx0ZW1wbGF0ZXx0ZXh0dXJlfHRoaXN8dGhyb3d8dHJpYW5nbGV8dHJpYW5nbGVhZGp8dHJ5fHR5cGVkZWZ8dHlwZW5hbWV8dW5pZm9ybXx1bmlvbnx1bm9ybXx1bnNpZ25lZHx1c2luZ3x2ZWN0b3J8dmVydGV4ZnJhZ21lbnR8dmlydHVhbHx2b2lkfHZvbGF0aWxlfHdoaWxlKVxcYi8sIC8vIHNjYWxhciwgdmVjdG9yLCBhbmQgbWF0cml4IHR5cGVzXG4gICAgICAvXFxiKD86Ym9vbHxkb3VibGV8ZHdvcmR8ZmxvYXR8aGFsZnxpbnR8bWluKD86MTBmbG9hdHwxMmludHwxNig/OmZsb2F0fGludHx1aW50KSl8dWludCkoPzpbMS00XSg/OnhbMS00XSk/KT9cXGIvXG4gICAgXSxcbiAgICAvLyBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi11cy93aW5kb3dzL3dpbjMyL2RpcmVjdDNkaGxzbC9keC1ncmFwaGljcy1obHNsLWFwcGVuZGl4LWdyYW1tYXIjZmxvYXRpbmctcG9pbnQtbnVtYmVyc1xuICAgIG51bWJlcjpcbiAgICAgIC8oPzooPzpcXGJcXGQrKD86XFwuXFxkKik/fFxcQlxcLlxcZCspKD86W2VFXVsrLV0/XFxkKyk/fFxcYjB4W1xcZGEtZkEtRl0rKVtmRmhIbEx1VV0/XFxiLyxcbiAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvXG4gIH0pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yQyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiaGxzbCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJjIiwia2V5d29yZCIsIm51bWJlciIsImJvb2xlYW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/hlsl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/hoon.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/hoon.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = hoon;\nhoon.displayName = \"hoon\";\nhoon.aliases = [];\nfunction hoon(Prism) {\n    Prism.languages.hoon = {\n        comment: {\n            pattern: /::.*/,\n            greedy: true\n        },\n        string: {\n            pattern: /\"[^\"]*\"|'[^']*'/,\n            greedy: true\n        },\n        constant: /%(?:\\.[ny]|[\\w-]+)/,\n        \"class-name\": /@(?:[a-z0-9-]*[a-z0-9])?|\\*/i,\n        function: /(?:\\+[-+] {2})?(?:[a-z](?:[a-z0-9-]*[a-z0-9])?)/,\n        keyword: /\\.[\\^\\+\\*=\\?]|![><:\\.=\\?!]|=[>|:,\\.\\-\\^<+;/~\\*\\?]|\\?[>|:\\.\\-\\^<\\+&~=@!]|\\|[\\$_%:\\.\\-\\^~\\*=@\\?]|\\+[|\\$\\+\\*]|:[_\\-\\^\\+~\\*]|%[_:\\.\\-\\^\\+~\\*=]|\\^[|:\\.\\-\\+&~\\*=\\?]|\\$[|_%:<>\\-\\^&~@=\\?]|;[:<\\+;\\/~\\*=]|~[>|\\$_%<\\+\\/&=\\?!]|--|==/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvaG9vbi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDakJBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHO1FBQ3JCSyxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FDLFFBQVE7WUFDTkYsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUUsVUFBVTtRQUNWLGNBQWM7UUFDZEMsVUFBVTtRQUNWQyxTQUNFO0lBQ0o7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9ob29uLmpzP2U4ZTYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gaG9vblxuaG9vbi5kaXNwbGF5TmFtZSA9ICdob29uJ1xuaG9vbi5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGhvb24oUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmhvb24gPSB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogLzo6LiovLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIlteXCJdKlwifCdbXiddKicvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBjb25zdGFudDogLyUoPzpcXC5bbnldfFtcXHctXSspLyxcbiAgICAnY2xhc3MtbmFtZSc6IC9AKD86W2EtejAtOS1dKlthLXowLTldKT98XFwqL2ksXG4gICAgZnVuY3Rpb246IC8oPzpcXCtbLStdIHsyfSk/KD86W2Etel0oPzpbYS16MC05LV0qW2EtejAtOV0pPykvLFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFwuW1xcXlxcK1xcKj1cXD9dfCFbPjw6XFwuPVxcPyFdfD1bPnw6LFxcLlxcLVxcXjwrOy9+XFwqXFw/XXxcXD9bPnw6XFwuXFwtXFxePFxcKyZ+PUAhXXxcXHxbXFwkXyU6XFwuXFwtXFxeflxcKj1AXFw/XXxcXCtbfFxcJFxcK1xcKl18OltfXFwtXFxeXFwrflxcKl18JVtfOlxcLlxcLVxcXlxcK35cXCo9XXxcXF5bfDpcXC5cXC1cXCsmflxcKj1cXD9dfFxcJFt8XyU6PD5cXC1cXF4mfkA9XFw/XXw7Wzo8XFwrO1xcL35cXCo9XXx+Wz58XFwkXyU8XFwrXFwvJj1cXD8hXXwtLXw9PS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJob29uIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImdyZWVkeSIsInN0cmluZyIsImNvbnN0YW50IiwiZnVuY3Rpb24iLCJrZXl3b3JkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/hoon.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/hpkp.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/hpkp.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = hpkp;\nhpkp.displayName = \"hpkp\";\nhpkp.aliases = [];\nfunction hpkp(Prism) {\n    /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hpkp-cheat-sheet/\n   */ Prism.languages.hpkp = {\n        directive: {\n            pattern: /\\b(?:includeSubDomains|max-age|pin-sha256|preload|report-to|report-uri|strict)(?=[\\s;=]|$)/i,\n            alias: \"property\"\n        },\n        operator: /=/,\n        punctuation: /;/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvaHBrcC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDakI7Ozs7R0FJQyxHQUNEQSxNQUFNQyxTQUFTLENBQUNKLElBQUksR0FBRztRQUNyQkssV0FBVztZQUNUQyxTQUNFO1lBQ0ZDLE9BQU87UUFDVDtRQUNBQyxVQUFVO1FBQ1ZDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2hwa3AuanM/NGExOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBocGtwXG5ocGtwLmRpc3BsYXlOYW1lID0gJ2hwa3AnXG5ocGtwLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gaHBrcChQcmlzbSkge1xuICAvKipcbiAgICogT3JpZ2luYWwgYnkgU2NvdHQgSGVsbWUuXG4gICAqXG4gICAqIFJlZmVyZW5jZTogaHR0cHM6Ly9zY290dGhlbG1lLmNvLnVrL2hwa3AtY2hlYXQtc2hlZXQvXG4gICAqL1xuICBQcmlzbS5sYW5ndWFnZXMuaHBrcCA9IHtcbiAgICBkaXJlY3RpdmU6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC9cXGIoPzppbmNsdWRlU3ViRG9tYWluc3xtYXgtYWdlfHBpbi1zaGEyNTZ8cHJlbG9hZHxyZXBvcnQtdG98cmVwb3J0LXVyaXxzdHJpY3QpKD89W1xcczs9XXwkKS9pLFxuICAgICAgYWxpYXM6ICdwcm9wZXJ0eSdcbiAgICB9LFxuICAgIG9wZXJhdG9yOiAvPS8sXG4gICAgcHVuY3R1YXRpb246IC87L1xuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImhwa3AiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImRpcmVjdGl2ZSIsInBhdHRlcm4iLCJhbGlhcyIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/hpkp.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/hsts.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/hsts.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = hsts;\nhsts.displayName = \"hsts\";\nhsts.aliases = [];\nfunction hsts(Prism) {\n    /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hsts-cheat-sheet/\n   */ Prism.languages.hsts = {\n        directive: {\n            pattern: /\\b(?:includeSubDomains|max-age|preload)(?=[\\s;=]|$)/i,\n            alias: \"property\"\n        },\n        operator: /=/,\n        punctuation: /;/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvaHN0cy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDakI7Ozs7R0FJQyxHQUNEQSxNQUFNQyxTQUFTLENBQUNKLElBQUksR0FBRztRQUNyQkssV0FBVztZQUNUQyxTQUFTO1lBQ1RDLE9BQU87UUFDVDtRQUNBQyxVQUFVO1FBQ1ZDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2hzdHMuanM/MTRmOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBoc3RzXG5oc3RzLmRpc3BsYXlOYW1lID0gJ2hzdHMnXG5oc3RzLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gaHN0cyhQcmlzbSkge1xuICAvKipcbiAgICogT3JpZ2luYWwgYnkgU2NvdHQgSGVsbWUuXG4gICAqXG4gICAqIFJlZmVyZW5jZTogaHR0cHM6Ly9zY290dGhlbG1lLmNvLnVrL2hzdHMtY2hlYXQtc2hlZXQvXG4gICAqL1xuICBQcmlzbS5sYW5ndWFnZXMuaHN0cyA9IHtcbiAgICBkaXJlY3RpdmU6IHtcbiAgICAgIHBhdHRlcm46IC9cXGIoPzppbmNsdWRlU3ViRG9tYWluc3xtYXgtYWdlfHByZWxvYWQpKD89W1xcczs9XXwkKS9pLFxuICAgICAgYWxpYXM6ICdwcm9wZXJ0eSdcbiAgICB9LFxuICAgIG9wZXJhdG9yOiAvPS8sXG4gICAgcHVuY3R1YXRpb246IC87L1xuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImhzdHMiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImRpcmVjdGl2ZSIsInBhdHRlcm4iLCJhbGlhcyIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/hsts.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/http.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/http.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = http;\nhttp.displayName = \"http\";\nhttp.aliases = [];\nfunction http(Prism) {\n    ;\n    (function(Prism) {\n        /**\n     * @param {string} name\n     * @returns {RegExp}\n     */ function headerValueOf(name) {\n            return RegExp(\"(^(?:\" + name + \"):[ \t]*(?![ \t]))[^]+\", \"i\");\n        }\n        Prism.languages.http = {\n            \"request-line\": {\n                pattern: /^(?:CONNECT|DELETE|GET|HEAD|OPTIONS|PATCH|POST|PRI|PUT|SEARCH|TRACE)\\s(?:https?:\\/\\/|\\/)\\S*\\sHTTP\\/[\\d.]+/m,\n                inside: {\n                    // HTTP Method\n                    method: {\n                        pattern: /^[A-Z]+\\b/,\n                        alias: \"property\"\n                    },\n                    // Request Target e.g. http://example.com, /path/to/file\n                    \"request-target\": {\n                        pattern: /^(\\s)(?:https?:\\/\\/|\\/)\\S*(?=\\s)/,\n                        lookbehind: true,\n                        alias: \"url\",\n                        inside: Prism.languages.uri\n                    },\n                    // HTTP Version\n                    \"http-version\": {\n                        pattern: /^(\\s)HTTP\\/[\\d.]+/,\n                        lookbehind: true,\n                        alias: \"property\"\n                    }\n                }\n            },\n            \"response-status\": {\n                pattern: /^HTTP\\/[\\d.]+ \\d+ .+/m,\n                inside: {\n                    // HTTP Version\n                    \"http-version\": {\n                        pattern: /^HTTP\\/[\\d.]+/,\n                        alias: \"property\"\n                    },\n                    // Status Code\n                    \"status-code\": {\n                        pattern: /^(\\s)\\d+(?=\\s)/,\n                        lookbehind: true,\n                        alias: \"number\"\n                    },\n                    // Reason Phrase\n                    \"reason-phrase\": {\n                        pattern: /^(\\s).+/,\n                        lookbehind: true,\n                        alias: \"string\"\n                    }\n                }\n            },\n            header: {\n                pattern: /^[\\w-]+:.+(?:(?:\\r\\n?|\\n)[ \\t].+)*/m,\n                inside: {\n                    \"header-value\": [\n                        {\n                            pattern: headerValueOf(/Content-Security-Policy/.source),\n                            lookbehind: true,\n                            alias: [\n                                \"csp\",\n                                \"languages-csp\"\n                            ],\n                            inside: Prism.languages.csp\n                        },\n                        {\n                            pattern: headerValueOf(/Public-Key-Pins(?:-Report-Only)?/.source),\n                            lookbehind: true,\n                            alias: [\n                                \"hpkp\",\n                                \"languages-hpkp\"\n                            ],\n                            inside: Prism.languages.hpkp\n                        },\n                        {\n                            pattern: headerValueOf(/Strict-Transport-Security/.source),\n                            lookbehind: true,\n                            alias: [\n                                \"hsts\",\n                                \"languages-hsts\"\n                            ],\n                            inside: Prism.languages.hsts\n                        },\n                        {\n                            pattern: headerValueOf(/[^:]+/.source),\n                            lookbehind: true\n                        }\n                    ],\n                    \"header-name\": {\n                        pattern: /^[^:]+/,\n                        alias: \"keyword\"\n                    },\n                    punctuation: /^:/\n                }\n            }\n        } // Create a mapping of Content-Type headers to language definitions\n        ;\n        var langs = Prism.languages;\n        var httpLanguages = {\n            \"application/javascript\": langs.javascript,\n            \"application/json\": langs.json || langs.javascript,\n            \"application/xml\": langs.xml,\n            \"text/xml\": langs.xml,\n            \"text/html\": langs.html,\n            \"text/css\": langs.css,\n            \"text/plain\": langs.plain\n        } // Declare which types can also be suffixes\n        ;\n        var suffixTypes = {\n            \"application/json\": true,\n            \"application/xml\": true\n        };\n        /**\n     * Returns a pattern for the given content type which matches it and any type which has it as a suffix.\n     *\n     * @param {string} contentType\n     * @returns {string}\n     */ function getSuffixPattern(contentType) {\n            var suffix = contentType.replace(/^[a-z]+\\//, \"\");\n            var suffixPattern = \"\\\\w+/(?:[\\\\w.-]+\\\\+)+\" + suffix + \"(?![+\\\\w.-])\";\n            return \"(?:\" + contentType + \"|\" + suffixPattern + \")\";\n        } // Insert each content type parser that has its associated language\n        // currently loaded.\n        var options;\n        for(var contentType in httpLanguages){\n            if (httpLanguages[contentType]) {\n                options = options || {};\n                var pattern = suffixTypes[contentType] ? getSuffixPattern(contentType) : contentType;\n                options[contentType.replace(/\\//g, \"-\")] = {\n                    pattern: RegExp(\"(\" + /content-type:\\s*/.source + pattern + /(?:(?:\\r\\n?|\\n)[\\w-].*)*(?:\\r(?:\\n|(?!\\n))|\\n)/.source + \")\" + // This is a little interesting:\n                    // The HTTP format spec required 1 empty line before the body to make everything unambiguous.\n                    // However, when writing code by hand (e.g. to display on a website) people can forget about this,\n                    // so we want to be liberal here. We will allow the empty line to be omitted if the first line of\n                    // the body does not start with a [\\w-] character (as headers do).\n                    /[^ \\t\\w-][\\s\\S]*/.source, \"i\"),\n                    lookbehind: true,\n                    inside: httpLanguages[contentType]\n                };\n            }\n        }\n        if (options) {\n            Prism.languages.insertBefore(\"http\", \"header\", options);\n        }\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/http.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/ichigojam.js":
/*!**************************************************!*\
  !*** ./node_modules/refractor/lang/ichigojam.js ***!
  \**************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = ichigojam;\nichigojam.displayName = \"ichigojam\";\nichigojam.aliases = [];\nfunction ichigojam(Prism) {\n    // according to the offical reference (EN)\n    // https://ichigojam.net/IchigoJam-en.html\n    Prism.languages.ichigojam = {\n        comment: /(?:\\B'|REM)(?:[^\\n\\r]*)/i,\n        string: {\n            pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^\\w +\\-.])*\"/,\n            greedy: true\n        },\n        number: /\\B#[0-9A-F]+|\\B`[01]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n        keyword: /\\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GOTO|GSB|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RIGHT|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\\$|\\b)/i,\n        function: /\\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\\$|\\b)/i,\n        label: /(?:\\B@\\S+)/,\n        operator: /<[=>]?|>=?|\\|\\||&&|[+\\-*\\/=|&^~!]|\\b(?:AND|NOT|OR)\\b/i,\n        punctuation: /[\\[,;:()\\]]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvaWNoaWdvamFtLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLFVBQVVDLFdBQVcsR0FBRztBQUN4QkQsVUFBVUUsT0FBTyxHQUFHLEVBQUU7QUFDdEIsU0FBU0YsVUFBVUcsS0FBSztJQUN0QiwwQ0FBMEM7SUFDMUMsMENBQTBDO0lBQzFDQSxNQUFNQyxTQUFTLENBQUNKLFNBQVMsR0FBRztRQUMxQkssU0FBUztRQUNUQyxRQUFRO1lBQ05DLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FDLFFBQVE7UUFDUkMsU0FDRTtRQUNGQyxVQUNFO1FBQ0ZDLE9BQU87UUFDUEMsVUFBVTtRQUNWQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9pY2hpZ29qYW0uanM/Y2E1NSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBpY2hpZ29qYW1cbmljaGlnb2phbS5kaXNwbGF5TmFtZSA9ICdpY2hpZ29qYW0nXG5pY2hpZ29qYW0uYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBpY2hpZ29qYW0oUHJpc20pIHtcbiAgLy8gYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2FsIHJlZmVyZW5jZSAoRU4pXG4gIC8vIGh0dHBzOi8vaWNoaWdvamFtLm5ldC9JY2hpZ29KYW0tZW4uaHRtbFxuICBQcmlzbS5sYW5ndWFnZXMuaWNoaWdvamFtID0ge1xuICAgIGNvbW1lbnQ6IC8oPzpcXEInfFJFTSkoPzpbXlxcblxccl0qKS9pLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1wiKD86XCJcInxbISMkJSYnKCkqLFxcLzo7PD0+P15cXHcgK1xcLS5dKSpcIi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIG51bWJlcjogL1xcQiNbMC05QS1GXSt8XFxCYFswMV0rfCg/OlxcYlxcZCsoPzpcXC5cXGQqKT98XFxCXFwuXFxkKykoPzpFWystXT9cXGQrKT8vaSxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OkJFRVB8QlBTfENBU0V8Q0xFQVJ8Q0xLfENMT3xDTFB8Q0xTfENMVHxDTFZ8Q09OVHxDT1BZfEVMU0V8RU5EfEZJTEV8RklMRVN8Rk9SfEdPU1VCfEdPVE98R1NCfElGfElOUFVUfEtCRHxMRUR8TEVUfExJU1R8TE9BRHxMT0NBVEV8TFJVTnxORVd8TkVYVHxPVVR8UExBWXxQT0tFfFBSSU5UfFBXTXxSRU18UkVOVU18UkVTRVR8UkVUVVJOfFJJR0hUfFJUTnxSVU58U0FWRXxTQ1JPTEx8U0xFRVB8U1JORHxTVEVQfFNUT1B8U1VCfFRFTVBPfFRIRU58VE98VUFSVHxWSURFT3xXQUlUKSg/OlxcJHxcXGIpL2ksXG4gICAgZnVuY3Rpb246XG4gICAgICAvXFxiKD86QUJTfEFOQXxBU0N8QklOfEJUTnxERUN8RU5EfEZSRUV8SEVMUHxIRVh8STJDUnxJMkNXfElOfElOS0VZfExFTnxMSU5FfFBFRUt8Uk5EfFNDUnxTT1VORHxTVFJ8VElDS3xVU1J8VkVSfFZQRUVLfFpFUikoPzpcXCR8XFxiKS9pLFxuICAgIGxhYmVsOiAvKD86XFxCQFxcUyspLyxcbiAgICBvcGVyYXRvcjogLzxbPT5dP3w+PT98XFx8XFx8fCYmfFsrXFwtKlxcLz18Jl5+IV18XFxiKD86QU5EfE5PVHxPUilcXGIvaSxcbiAgICBwdW5jdHVhdGlvbjogL1tcXFssOzooKVxcXV0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiaWNoaWdvamFtIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50Iiwic3RyaW5nIiwicGF0dGVybiIsImdyZWVkeSIsIm51bWJlciIsImtleXdvcmQiLCJmdW5jdGlvbiIsImxhYmVsIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/ichigojam.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/icon.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/icon.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = icon;\nicon.displayName = \"icon\";\nicon.aliases = [];\nfunction icon(Prism) {\n    Prism.languages.icon = {\n        comment: /#.*/,\n        string: {\n            pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n_]|\\\\.|_(?!\\1)(?:\\r\\n|[\\s\\S]))*\\1/,\n            greedy: true\n        },\n        number: /\\b(?:\\d+r[a-z\\d]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b|\\.\\d+\\b/i,\n        \"builtin-keyword\": {\n            pattern: /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\\b/,\n            alias: \"variable\"\n        },\n        directive: {\n            pattern: /\\$\\w+/,\n            alias: \"builtin\"\n        },\n        keyword: /\\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\\b/,\n        function: /\\b(?!\\d)\\w+(?=\\s*[({]|\\s*!\\s*\\[)/,\n        operator: /[+-]:(?!=)|(?:[\\/?@^%&]|\\+\\+?|--?|==?=?|~==?=?|\\*\\*?|\\|\\|\\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\\\|~]/,\n        punctuation: /[\\[\\](){},;]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvaWNvbi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDakJBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHO1FBQ3JCSyxTQUFTO1FBQ1RDLFFBQVE7WUFDTkMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsUUFBUTtRQUNSLG1CQUFtQjtZQUNqQkYsU0FDRTtZQUNGRyxPQUFPO1FBQ1Q7UUFDQUMsV0FBVztZQUNUSixTQUFTO1lBQ1RHLE9BQU87UUFDVDtRQUNBRSxTQUNFO1FBQ0ZDLFVBQVU7UUFDVkMsVUFDRTtRQUNGQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9pY29uLmpzPzc3ZjQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gaWNvblxuaWNvbi5kaXNwbGF5TmFtZSA9ICdpY29uJ1xuaWNvbi5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGljb24oUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmljb24gPSB7XG4gICAgY29tbWVudDogLyMuKi8sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvKFtcIiddKSg/Oig/IVxcMSlbXlxcXFxcXHJcXG5fXXxcXFxcLnxfKD8hXFwxKSg/OlxcclxcbnxbXFxzXFxTXSkpKlxcMS8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIG51bWJlcjogL1xcYig/OlxcZCtyW2EtelxcZF0rfFxcZCsoPzpcXC5cXGQrKT8oPzplWystXT9cXGQrKT8pXFxifFxcLlxcZCtcXGIvaSxcbiAgICAnYnVpbHRpbi1rZXl3b3JkJzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyYoPzphbGxvY2F0ZWR8YXNjaWl8Y2xvY2t8Y29sbGVjdGlvbnN8Y3NldHxjdXJyZW50fGRhdGV8ZGF0ZWxpbmV8ZGlnaXRzfGR1bXB8ZXxlcnJvcig/Om51bWJlcnx0ZXh0fHZhbHVlKT98ZXJyb3V0fGZhaWx8ZmVhdHVyZXN8ZmlsZXxob3N0fGlucHV0fGxjYXNlfGxldHRlcnN8bGV2ZWx8bGluZXxtYWlufG51bGx8b3V0cHV0fHBoaXxwaXxwb3N8cHJvZ25hbWV8cmFuZG9tfHJlZ2lvbnN8c291cmNlfHN0b3JhZ2V8c3ViamVjdHx0aW1lfHRyYWNlfHVjYXNlfHZlcnNpb24pXFxiLyxcbiAgICAgIGFsaWFzOiAndmFyaWFibGUnXG4gICAgfSxcbiAgICBkaXJlY3RpdmU6IHtcbiAgICAgIHBhdHRlcm46IC9cXCRcXHcrLyxcbiAgICAgIGFsaWFzOiAnYnVpbHRpbidcbiAgICB9LFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YnJlYWt8Ynl8Y2FzZXxjcmVhdGV8ZGVmYXVsdHxkb3xlbHNlfGVuZHxldmVyeXxmYWlsfGdsb2JhbHxpZnxpbml0aWFsfGludm9jYWJsZXxsaW5rfGxvY2FsfG5leHR8bm90fG9mfHByb2NlZHVyZXxyZWNvcmR8cmVwZWF0fHJldHVybnxzdGF0aWN8c3VzcGVuZHx0aGVufHRvfHVudGlsfHdoaWxlKVxcYi8sXG4gICAgZnVuY3Rpb246IC9cXGIoPyFcXGQpXFx3Kyg/PVxccypbKHtdfFxccyohXFxzKlxcWykvLFxuICAgIG9wZXJhdG9yOlxuICAgICAgL1srLV06KD8hPSl8KD86W1xcLz9AXiUmXXxcXCtcXCs/fC0tP3w9PT89P3x+PT0/PT98XFwqXFwqP3xcXHxcXHxcXHw/fDwoPzotPj98PD89Pyl8Pj4/PT8pKD86Oj0pP3w6KD86PTo/KT98WyEuXFxcXHx+XS8sXG4gICAgcHVuY3R1YXRpb246IC9bXFxbXFxdKCl7fSw7XS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJpY29uIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50Iiwic3RyaW5nIiwicGF0dGVybiIsImdyZWVkeSIsIm51bWJlciIsImFsaWFzIiwiZGlyZWN0aXZlIiwia2V5d29yZCIsImZ1bmN0aW9uIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/icon.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/icu-message-format.js":
/*!***********************************************************!*\
  !*** ./node_modules/refractor/lang/icu-message-format.js ***!
  \***********************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = icuMessageFormat;\nicuMessageFormat.displayName = \"icuMessageFormat\";\nicuMessageFormat.aliases = [];\nfunction icuMessageFormat(Prism) {\n    // https://unicode-org.github.io/icu/userguide/format_parse/messages/\n    // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/MessageFormat.html\n    ;\n    (function(Prism) {\n        /**\n     * @param {string} source\n     * @param {number} level\n     * @returns {string}\n     */ function nested(source, level) {\n            if (level <= 0) {\n                return /[]/.source;\n            } else {\n                return source.replace(/<SELF>/g, function() {\n                    return nested(source, level - 1);\n                });\n            }\n        }\n        var stringPattern = /'[{}:=,](?:[^']|'')*'(?!')/;\n        var escape = {\n            pattern: /''/,\n            greedy: true,\n            alias: \"operator\"\n        };\n        var string = {\n            pattern: stringPattern,\n            greedy: true,\n            inside: {\n                escape: escape\n            }\n        };\n        var argumentSource = nested(/\\{(?:[^{}']|'(?![{},'])|''|<STR>|<SELF>)*\\}/.source.replace(/<STR>/g, function() {\n            return stringPattern.source;\n        }), 8);\n        var nestedMessage = {\n            pattern: RegExp(argumentSource),\n            inside: {\n                message: {\n                    pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\n                    lookbehind: true,\n                    inside: null // see below\n                },\n                \"message-delimiter\": {\n                    pattern: /./,\n                    alias: \"punctuation\"\n                }\n            }\n        };\n        Prism.languages[\"icu-message-format\"] = {\n            argument: {\n                pattern: RegExp(argumentSource),\n                greedy: true,\n                inside: {\n                    content: {\n                        pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\n                        lookbehind: true,\n                        inside: {\n                            \"argument-name\": {\n                                pattern: /^(\\s*)[^{}:=,\\s]+/,\n                                lookbehind: true\n                            },\n                            \"choice-style\": {\n                                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4c/classicu_1_1ChoiceFormat.html#details\n                                pattern: /^(\\s*,\\s*choice\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                                lookbehind: true,\n                                inside: {\n                                    punctuation: /\\|/,\n                                    range: {\n                                        pattern: /^(\\s*)[+-]?(?:\\d+(?:\\.\\d*)?|\\u221e)\\s*[<#\\u2264]/,\n                                        lookbehind: true,\n                                        inside: {\n                                            operator: /[<#\\u2264]/,\n                                            number: /\\S+/\n                                        }\n                                    },\n                                    rest: null // see below\n                                }\n                            },\n                            \"plural-style\": {\n                                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/PluralFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\n                                pattern: /^(\\s*,\\s*(?:plural|selectordinal)\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                                lookbehind: true,\n                                inside: {\n                                    offset: /^offset:\\s*\\d+/,\n                                    \"nested-message\": nestedMessage,\n                                    selector: {\n                                        pattern: /=\\d+|[^{}:=,\\s]+/,\n                                        inside: {\n                                            keyword: /^(?:few|many|one|other|two|zero)$/\n                                        }\n                                    }\n                                }\n                            },\n                            \"select-style\": {\n                                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/SelectFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\n                                pattern: /^(\\s*,\\s*select\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                                lookbehind: true,\n                                inside: {\n                                    \"nested-message\": nestedMessage,\n                                    selector: {\n                                        pattern: /[^{}:=,\\s]+/,\n                                        inside: {\n                                            keyword: /^other$/\n                                        }\n                                    }\n                                }\n                            },\n                            keyword: /\\b(?:choice|plural|select|selectordinal)\\b/,\n                            \"arg-type\": {\n                                pattern: /\\b(?:date|duration|number|ordinal|spellout|time)\\b/,\n                                alias: \"keyword\"\n                            },\n                            \"arg-skeleton\": {\n                                pattern: /(,\\s*)::[^{}:=,\\s]+/,\n                                lookbehind: true\n                            },\n                            \"arg-style\": {\n                                pattern: /(,\\s*)(?:currency|full|integer|long|medium|percent|short)(?=\\s*$)/,\n                                lookbehind: true\n                            },\n                            \"arg-style-text\": {\n                                pattern: RegExp(/(^\\s*,\\s*(?=\\S))/.source + nested(/(?:[^{}']|'[^']*'|\\{(?:<SELF>)?\\})+/.source, 8) + \"$\"),\n                                lookbehind: true,\n                                alias: \"string\"\n                            },\n                            punctuation: /,/\n                        }\n                    },\n                    \"argument-delimiter\": {\n                        pattern: /./,\n                        alias: \"operator\"\n                    }\n                }\n            },\n            escape: escape,\n            string: string\n        };\n        nestedMessage.inside.message.inside = Prism.languages[\"icu-message-format\"];\n        Prism.languages[\"icu-message-format\"].argument.inside.content.inside[\"choice-style\"].inside.rest = Prism.languages[\"icu-message-format\"];\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/icu-message-format.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/idris.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/idris.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorHaskell = __webpack_require__(/*! ./haskell.js */ \"(ssr)/./node_modules/refractor/lang/haskell.js\");\nmodule.exports = idris;\nidris.displayName = \"idris\";\nidris.aliases = [\n    \"idr\"\n];\nfunction idris(Prism) {\n    Prism.register(refractorHaskell);\n    Prism.languages.idris = Prism.languages.extend(\"haskell\", {\n        comment: {\n            pattern: /(?:(?:--|\\|\\|\\|).*$|\\{-[\\s\\S]*?-\\})/m\n        },\n        keyword: /\\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\\b/,\n        builtin: undefined\n    });\n    Prism.languages.insertBefore(\"idris\", \"keyword\", {\n        \"import-statement\": {\n            pattern: /(^\\s*import\\s+)(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*/m,\n            lookbehind: true,\n            inside: {\n                punctuation: /\\./\n            }\n        }\n    });\n    Prism.languages.idr = Prism.languages.idris;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvaWRyaXMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxJQUFJQSxtQkFBbUJDLG1CQUFPQSxDQUFDO0FBQy9CQyxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxNQUFNQyxXQUFXLEdBQUc7QUFDcEJELE1BQU1FLE9BQU8sR0FBRztJQUFDO0NBQU07QUFDdkIsU0FBU0YsTUFBTUcsS0FBSztJQUNsQkEsTUFBTUMsUUFBUSxDQUFDUjtJQUNmTyxNQUFNRSxTQUFTLENBQUNMLEtBQUssR0FBR0csTUFBTUUsU0FBUyxDQUFDQyxNQUFNLENBQUMsV0FBVztRQUN4REMsU0FBUztZQUNQQyxTQUFTO1FBQ1g7UUFDQUMsU0FDRTtRQUNGQyxTQUFTQztJQUNYO0lBQ0FSLE1BQU1FLFNBQVMsQ0FBQ08sWUFBWSxDQUFDLFNBQVMsV0FBVztRQUMvQyxvQkFBb0I7WUFDbEJKLFNBQVM7WUFDVEssWUFBWTtZQUNaQyxRQUFRO2dCQUNOQyxhQUFhO1lBQ2Y7UUFDRjtJQUNGO0lBQ0FaLE1BQU1FLFNBQVMsQ0FBQ1csR0FBRyxHQUFHYixNQUFNRSxTQUFTLENBQUNMLEtBQUs7QUFDN0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvaWRyaXMuanM/MThmZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcbnZhciByZWZyYWN0b3JIYXNrZWxsID0gcmVxdWlyZSgnLi9oYXNrZWxsLmpzJylcbm1vZHVsZS5leHBvcnRzID0gaWRyaXNcbmlkcmlzLmRpc3BsYXlOYW1lID0gJ2lkcmlzJ1xuaWRyaXMuYWxpYXNlcyA9IFsnaWRyJ11cbmZ1bmN0aW9uIGlkcmlzKFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3Rvckhhc2tlbGwpXG4gIFByaXNtLmxhbmd1YWdlcy5pZHJpcyA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2hhc2tlbGwnLCB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogLyg/Oig/Oi0tfFxcfFxcfFxcfCkuKiR8XFx7LVtcXHNcXFNdKj8tXFx9KS9tXG4gICAgfSxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OlR5cGV8Y2FzZXxjbGFzc3xjb2RhdGF8Y29uc3RydWN0b3J8Y29yZWNvcmR8ZGF0YXxkb3xkc2x8ZWxzZXxleHBvcnR8aWZ8aW1wbGVtZW50YXRpb258aW1wbGljaXR8aW1wb3J0fGltcG9zc2libGV8aW58aW5maXh8aW5maXhsfGluZml4cnxpbnN0YW5jZXxpbnRlcmZhY2V8bGV0fG1vZHVsZXxtdXR1YWx8bmFtZXNwYWNlfG9mfHBhcmFtZXRlcnN8cGFydGlhbHxwb3N0dWxhdGV8cHJpdmF0ZXxwcm9vZnxwdWJsaWN8cXVvdGVHb2FsfHJlY29yZHxyZXdyaXRlfHN5bnRheHx0aGVufHRvdGFsfHVzaW5nfHdoZXJlfHdpdGgpXFxiLyxcbiAgICBidWlsdGluOiB1bmRlZmluZWRcbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnaWRyaXMnLCAna2V5d29yZCcsIHtcbiAgICAnaW1wb3J0LXN0YXRlbWVudCc6IHtcbiAgICAgIHBhdHRlcm46IC8oXlxccyppbXBvcnRcXHMrKSg/OltBLVpdW1xcdyddKikoPzpcXC5bQS1aXVtcXHcnXSopKi9tLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBwdW5jdHVhdGlvbjogL1xcLi9cbiAgICAgIH1cbiAgICB9XG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5pZHIgPSBQcmlzbS5sYW5ndWFnZXMuaWRyaXNcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JIYXNrZWxsIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJpZHJpcyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJjb21tZW50IiwicGF0dGVybiIsImtleXdvcmQiLCJidWlsdGluIiwidW5kZWZpbmVkIiwiaW5zZXJ0QmVmb3JlIiwibG9va2JlaGluZCIsImluc2lkZSIsInB1bmN0dWF0aW9uIiwiaWRyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/idris.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/iecst.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/iecst.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = iecst;\niecst.displayName = \"iecst\";\niecst.aliases = [];\nfunction iecst(Prism) {\n    Prism.languages.iecst = {\n        comment: [\n            {\n                pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\(\\*[\\s\\S]*?(?:\\*\\)|$)|\\{[\\s\\S]*?(?:\\}|$))/,\n                lookbehind: true,\n                greedy: true\n            },\n            {\n                pattern: /(^|[^\\\\:])\\/\\/.*/,\n                lookbehind: true,\n                greedy: true\n            }\n        ],\n        string: {\n            pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true\n        },\n        keyword: [\n            /\\b(?:END_)?(?:PROGRAM|CONFIGURATION|INTERFACE|FUNCTION_BLOCK|FUNCTION|ACTION|TRANSITION|TYPE|STRUCT|(?:INITIAL_)?STEP|NAMESPACE|LIBRARY|CHANNEL|FOLDER|RESOURCE|VAR_(?:ACCESS|CONFIG|EXTERNAL|GLOBAL|INPUT|IN_OUT|OUTPUT|TEMP)|VAR|METHOD|PROPERTY)\\b/i,\n            /\\b(?:AT|BY|(?:END_)?(?:CASE|FOR|IF|REPEAT|WHILE)|CONSTANT|CONTINUE|DO|ELSE|ELSIF|EXIT|EXTENDS|FROM|GET|GOTO|IMPLEMENTS|JMP|NON_RETAIN|OF|PRIVATE|PROTECTED|PUBLIC|RETAIN|RETURN|SET|TASK|THEN|TO|UNTIL|USING|WITH|__CATCH|__ENDTRY|__FINALLY|__TRY)\\b/\n        ],\n        \"class-name\": /\\b(?:ANY|ARRAY|BOOL|BYTE|U?(?:D|L|S)?INT|(?:D|L)?WORD|DATE(?:_AND_TIME)?|DT|L?REAL|POINTER|STRING|TIME(?:_OF_DAY)?|TOD)\\b/,\n        address: {\n            pattern: /%[IQM][XBWDL][\\d.]*|%[IQ][\\d.]*/,\n            alias: \"symbol\"\n        },\n        number: /\\b(?:16#[\\da-f]+|2#[01_]+|0x[\\da-f]+)\\b|\\b(?:D|DT|T|TOD)#[\\d_shmd:]*|\\b[A-Z]*#[\\d.,_]*|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n        boolean: /\\b(?:FALSE|NULL|TRUE)\\b/,\n        operator: /S?R?:?=>?|&&?|\\*\\*?|<[=>]?|>=?|[-:^/+#]|\\b(?:AND|EQ|EXPT|GE|GT|LE|LT|MOD|NE|NOT|OR|XOR)\\b/,\n        function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        punctuation: /[()[\\].,;]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvaWVjc3QuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsTUFBTUMsV0FBVyxHQUFHO0FBQ3BCRCxNQUFNRSxPQUFPLEdBQUcsRUFBRTtBQUNsQixTQUFTRixNQUFNRyxLQUFLO0lBQ2xCQSxNQUFNQyxTQUFTLENBQUNKLEtBQUssR0FBRztRQUN0QkssU0FBUztZQUNQO2dCQUNFQyxTQUNFO2dCQUNGQyxZQUFZO2dCQUNaQyxRQUFRO1lBQ1Y7WUFDQTtnQkFDRUYsU0FBUztnQkFDVEMsWUFBWTtnQkFDWkMsUUFBUTtZQUNWO1NBQ0Q7UUFDREMsUUFBUTtZQUNOSCxTQUFTO1lBQ1RFLFFBQVE7UUFDVjtRQUNBRSxTQUFTO1lBQ1A7WUFDQTtTQUNEO1FBQ0QsY0FDRTtRQUNGQyxTQUFTO1lBQ1BMLFNBQVM7WUFDVE0sT0FBTztRQUNUO1FBQ0FDLFFBQ0U7UUFDRkMsU0FBUztRQUNUQyxVQUNFO1FBQ0ZDLFVBQVU7UUFDVkMsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvaWVjc3QuanM/ZjdmYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBpZWNzdFxuaWVjc3QuZGlzcGxheU5hbWUgPSAnaWVjc3QnXG5pZWNzdC5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGllY3N0KFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5pZWNzdCA9IHtcbiAgICBjb21tZW50OiBbXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhefFteXFxcXF0pKD86XFwvXFwqW1xcc1xcU10qPyg/OlxcKlxcL3wkKXxcXChcXCpbXFxzXFxTXSo/KD86XFwqXFwpfCQpfFxce1tcXHNcXFNdKj8oPzpcXH18JCkpLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvKF58W15cXFxcOl0pXFwvXFwvLiovLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH1cbiAgICBdLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyhbXCInXSkoPzpcXFxcKD86XFxyXFxufFtcXHNcXFNdKXwoPyFcXDEpW15cXFxcXFxyXFxuXSkqXFwxLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAga2V5d29yZDogW1xuICAgICAgL1xcYig/OkVORF8pPyg/OlBST0dSQU18Q09ORklHVVJBVElPTnxJTlRFUkZBQ0V8RlVOQ1RJT05fQkxPQ0t8RlVOQ1RJT058QUNUSU9OfFRSQU5TSVRJT058VFlQRXxTVFJVQ1R8KD86SU5JVElBTF8pP1NURVB8TkFNRVNQQUNFfExJQlJBUll8Q0hBTk5FTHxGT0xERVJ8UkVTT1VSQ0V8VkFSXyg/OkFDQ0VTU3xDT05GSUd8RVhURVJOQUx8R0xPQkFMfElOUFVUfElOX09VVHxPVVRQVVR8VEVNUCl8VkFSfE1FVEhPRHxQUk9QRVJUWSlcXGIvaSxcbiAgICAgIC9cXGIoPzpBVHxCWXwoPzpFTkRfKT8oPzpDQVNFfEZPUnxJRnxSRVBFQVR8V0hJTEUpfENPTlNUQU5UfENPTlRJTlVFfERPfEVMU0V8RUxTSUZ8RVhJVHxFWFRFTkRTfEZST018R0VUfEdPVE98SU1QTEVNRU5UU3xKTVB8Tk9OX1JFVEFJTnxPRnxQUklWQVRFfFBST1RFQ1RFRHxQVUJMSUN8UkVUQUlOfFJFVFVSTnxTRVR8VEFTS3xUSEVOfFRPfFVOVElMfFVTSU5HfFdJVEh8X19DQVRDSHxfX0VORFRSWXxfX0ZJTkFMTFl8X19UUlkpXFxiL1xuICAgIF0sXG4gICAgJ2NsYXNzLW5hbWUnOlxuICAgICAgL1xcYig/OkFOWXxBUlJBWXxCT09MfEJZVEV8VT8oPzpEfEx8Uyk/SU5UfCg/OkR8TCk/V09SRHxEQVRFKD86X0FORF9USU1FKT98RFR8TD9SRUFMfFBPSU5URVJ8U1RSSU5HfFRJTUUoPzpfT0ZfREFZKT98VE9EKVxcYi8sXG4gICAgYWRkcmVzczoge1xuICAgICAgcGF0dGVybjogLyVbSVFNXVtYQldETF1bXFxkLl0qfCVbSVFdW1xcZC5dKi8sXG4gICAgICBhbGlhczogJ3N5bWJvbCdcbiAgICB9LFxuICAgIG51bWJlcjpcbiAgICAgIC9cXGIoPzoxNiNbXFxkYS1mXSt8MiNbMDFfXSt8MHhbXFxkYS1mXSspXFxifFxcYig/OkR8RFR8VHxUT0QpI1tcXGRfc2htZDpdKnxcXGJbQS1aXSojW1xcZC4sX10qfCg/OlxcYlxcZCsoPzpcXC5cXGQqKT98XFxCXFwuXFxkKykoPzplWystXT9cXGQrKT8vaSxcbiAgICBib29sZWFuOiAvXFxiKD86RkFMU0V8TlVMTHxUUlVFKVxcYi8sXG4gICAgb3BlcmF0b3I6XG4gICAgICAvUz9SPzo/PT4/fCYmP3xcXCpcXCo/fDxbPT5dP3w+PT98Wy06Xi8rI118XFxiKD86QU5EfEVRfEVYUFR8R0V8R1R8TEV8TFR8TU9EfE5FfE5PVHxPUnxYT1IpXFxiLyxcbiAgICBmdW5jdGlvbjogL1xcYlthLXpfXVxcdyooPz1cXHMqXFwoKS9pLFxuICAgIHB1bmN0dWF0aW9uOiAvWygpW1xcXS4sO10vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiaWVjc3QiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImdyZWVkeSIsInN0cmluZyIsImtleXdvcmQiLCJhZGRyZXNzIiwiYWxpYXMiLCJudW1iZXIiLCJib29sZWFuIiwib3BlcmF0b3IiLCJmdW5jdGlvbiIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/iecst.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/ignore.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/ignore.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = ignore;\nignore.displayName = \"ignore\";\nignore.aliases = [\n    \"gitignore\",\n    \"hgignore\",\n    \"npmignore\"\n];\nfunction ignore(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.ignore = {\n            // https://git-scm.com/docs/gitignore\n            comment: /^#.*/m,\n            entry: {\n                pattern: /\\S(?:.*(?:(?:\\\\ )|\\S))?/,\n                alias: \"string\",\n                inside: {\n                    operator: /^!|\\*\\*?|\\?/,\n                    regex: {\n                        pattern: /(^|[^\\\\])\\[[^\\[\\]]*\\]/,\n                        lookbehind: true\n                    },\n                    punctuation: /\\//\n                }\n            }\n        };\n        Prism.languages.gitignore = Prism.languages.ignore;\n        Prism.languages.hgignore = Prism.languages.ignore;\n        Prism.languages.npmignore = Prism.languages.ignore;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvaWdub3JlLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLE9BQU9DLFdBQVcsR0FBRztBQUNyQkQsT0FBT0UsT0FBTyxHQUFHO0lBQUM7SUFBYTtJQUFZO0NBQVk7QUFDdkQsU0FBU0YsT0FBT0csS0FBSzs7SUFDakIsVUFBVUEsS0FBSztRQUNmQSxNQUFNQyxTQUFTLENBQUNKLE1BQU0sR0FBRztZQUN2QixxQ0FBcUM7WUFDckNLLFNBQVM7WUFDVEMsT0FBTztnQkFDTEMsU0FBUztnQkFDVEMsT0FBTztnQkFDUEMsUUFBUTtvQkFDTkMsVUFBVTtvQkFDVkMsT0FBTzt3QkFDTEosU0FBUzt3QkFDVEssWUFBWTtvQkFDZDtvQkFDQUMsYUFBYTtnQkFDZjtZQUNGO1FBQ0Y7UUFDQVYsTUFBTUMsU0FBUyxDQUFDVSxTQUFTLEdBQUdYLE1BQU1DLFNBQVMsQ0FBQ0osTUFBTTtRQUNsREcsTUFBTUMsU0FBUyxDQUFDVyxRQUFRLEdBQUdaLE1BQU1DLFNBQVMsQ0FBQ0osTUFBTTtRQUNqREcsTUFBTUMsU0FBUyxDQUFDWSxTQUFTLEdBQUdiLE1BQU1DLFNBQVMsQ0FBQ0osTUFBTTtJQUNwRCxHQUFHRztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2lnbm9yZS5qcz8wNDhhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGlnbm9yZVxuaWdub3JlLmRpc3BsYXlOYW1lID0gJ2lnbm9yZSdcbmlnbm9yZS5hbGlhc2VzID0gWydnaXRpZ25vcmUnLCAnaGdpZ25vcmUnLCAnbnBtaWdub3JlJ11cbmZ1bmN0aW9uIGlnbm9yZShQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIFByaXNtLmxhbmd1YWdlcy5pZ25vcmUgPSB7XG4gICAgICAvLyBodHRwczovL2dpdC1zY20uY29tL2RvY3MvZ2l0aWdub3JlXG4gICAgICBjb21tZW50OiAvXiMuKi9tLFxuICAgICAgZW50cnk6IHtcbiAgICAgICAgcGF0dGVybjogL1xcUyg/Oi4qKD86KD86XFxcXCApfFxcUykpPy8sXG4gICAgICAgIGFsaWFzOiAnc3RyaW5nJyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgb3BlcmF0b3I6IC9eIXxcXCpcXCo/fFxcPy8sXG4gICAgICAgICAgcmVnZXg6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKVxcW1teXFxbXFxdXSpcXF0vLFxuICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICAgIH0sXG4gICAgICAgICAgcHVuY3R1YXRpb246IC9cXC8vXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzLmdpdGlnbm9yZSA9IFByaXNtLmxhbmd1YWdlcy5pZ25vcmVcbiAgICBQcmlzbS5sYW5ndWFnZXMuaGdpZ25vcmUgPSBQcmlzbS5sYW5ndWFnZXMuaWdub3JlXG4gICAgUHJpc20ubGFuZ3VhZ2VzLm5wbWlnbm9yZSA9IFByaXNtLmxhbmd1YWdlcy5pZ25vcmVcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImlnbm9yZSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsImVudHJ5IiwicGF0dGVybiIsImFsaWFzIiwiaW5zaWRlIiwib3BlcmF0b3IiLCJyZWdleCIsImxvb2tiZWhpbmQiLCJwdW5jdHVhdGlvbiIsImdpdGlnbm9yZSIsImhnaWdub3JlIiwibnBtaWdub3JlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/ignore.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/inform7.js":
/*!************************************************!*\
  !*** ./node_modules/refractor/lang/inform7.js ***!
  \************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = inform7;\ninform7.displayName = \"inform7\";\ninform7.aliases = [];\nfunction inform7(Prism) {\n    Prism.languages.inform7 = {\n        string: {\n            pattern: /\"[^\"]*\"/,\n            inside: {\n                substitution: {\n                    pattern: /\\[[^\\[\\]]+\\]/,\n                    inside: {\n                        delimiter: {\n                            pattern: /\\[|\\]/,\n                            alias: \"punctuation\"\n                        } // See rest below\n                    }\n                }\n            }\n        },\n        comment: {\n            pattern: /\\[[^\\[\\]]+\\]/,\n            greedy: true\n        },\n        title: {\n            pattern: /^[ \\t]*(?:book|chapter|part(?! of)|section|table|volume)\\b.+/im,\n            alias: \"important\"\n        },\n        number: {\n            pattern: /(^|[^-])(?:\\b\\d+(?:\\.\\d+)?(?:\\^\\d+)?(?:(?!\\d)\\w+)?|\\b(?:eight|eleven|five|four|nine|one|seven|six|ten|three|twelve|two))\\b(?!-)/i,\n            lookbehind: true\n        },\n        verb: {\n            pattern: /(^|[^-])\\b(?:answering|applying to|are|asking|attacking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:ing|s)?|consulting|contain(?:ing|s)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:s|ve|ving)|hold(?:ing|s)?|impl(?:ies|y)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:ing|s)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:ing|s)?|setting|showing|singing|sleeping|smelling|squeezing|support(?:ing|s)?|swearing|switching|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:ing|s)?|var(?:ies|y|ying)|waiting|waking|waving|wear(?:ing|s)?)\\b(?!-)/i,\n            lookbehind: true,\n            alias: \"operator\"\n        },\n        keyword: {\n            pattern: /(^|[^-])\\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|the story|unless)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\\b(?!-)/i,\n            lookbehind: true\n        },\n        property: {\n            pattern: /(^|[^-])\\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: off| on)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\\b(?!-)/i,\n            lookbehind: true,\n            alias: \"symbol\"\n        },\n        position: {\n            pattern: /(^|[^-])\\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\\b(?!-)/i,\n            lookbehind: true,\n            alias: \"keyword\"\n        },\n        type: {\n            pattern: /(^|[^-])\\b(?:actions?|activit(?:ies|y)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\\b(?!-)/i,\n            lookbehind: true,\n            alias: \"variable\"\n        },\n        punctuation: /[.,:;(){}]/\n    };\n    Prism.languages.inform7[\"string\"].inside[\"substitution\"].inside.rest = Prism.languages.inform7 // We don't want the remaining text in the substitution to be highlighted as the string.\n    ;\n    Prism.languages.inform7[\"string\"].inside[\"substitution\"].inside.rest.text = {\n        pattern: /\\S(?:\\s*\\S)*/,\n        alias: \"comment\"\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvaW5mb3JtNy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxRQUFRQyxXQUFXLEdBQUc7QUFDdEJELFFBQVFFLE9BQU8sR0FBRyxFQUFFO0FBQ3BCLFNBQVNGLFFBQVFHLEtBQUs7SUFDcEJBLE1BQU1DLFNBQVMsQ0FBQ0osT0FBTyxHQUFHO1FBQ3hCSyxRQUFRO1lBQ05DLFNBQVM7WUFDVEMsUUFBUTtnQkFDTkMsY0FBYztvQkFDWkYsU0FBUztvQkFDVEMsUUFBUTt3QkFDTkUsV0FBVzs0QkFDVEgsU0FBUzs0QkFDVEksT0FBTzt3QkFDVCxFQUFFLGlCQUFpQjtvQkFDckI7Z0JBQ0Y7WUFDRjtRQUNGO1FBQ0FDLFNBQVM7WUFDUEwsU0FBUztZQUNUTSxRQUFRO1FBQ1Y7UUFDQUMsT0FBTztZQUNMUCxTQUFTO1lBQ1RJLE9BQU87UUFDVDtRQUNBSSxRQUFRO1lBQ05SLFNBQ0U7WUFDRlMsWUFBWTtRQUNkO1FBQ0FDLE1BQU07WUFDSlYsU0FDRTtZQUNGUyxZQUFZO1lBQ1pMLE9BQU87UUFDVDtRQUNBTyxTQUFTO1lBQ1BYLFNBQ0U7WUFDRlMsWUFBWTtRQUNkO1FBQ0FHLFVBQVU7WUFDUlosU0FDRTtZQUNGUyxZQUFZO1lBQ1pMLE9BQU87UUFDVDtRQUNBUyxVQUFVO1lBQ1JiLFNBQ0U7WUFDRlMsWUFBWTtZQUNaTCxPQUFPO1FBQ1Q7UUFDQVUsTUFBTTtZQUNKZCxTQUNFO1lBQ0ZTLFlBQVk7WUFDWkwsT0FBTztRQUNUO1FBQ0FXLGFBQWE7SUFDZjtJQUNBbEIsTUFBTUMsU0FBUyxDQUFDSixPQUFPLENBQUMsU0FBUyxDQUFDTyxNQUFNLENBQUMsZUFBZSxDQUFDQSxNQUFNLENBQUNlLElBQUksR0FDbEVuQixNQUFNQyxTQUFTLENBQUNKLE9BQU8sQ0FBQyx3RkFBd0Y7O0lBQ2xIRyxNQUFNQyxTQUFTLENBQUNKLE9BQU8sQ0FBQyxTQUFTLENBQUNPLE1BQU0sQ0FBQyxlQUFlLENBQUNBLE1BQU0sQ0FBQ2UsSUFBSSxDQUFDQyxJQUFJLEdBQUc7UUFDMUVqQixTQUFTO1FBQ1RJLE9BQU87SUFDVDtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2luZm9ybTcuanM/MzI4ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBpbmZvcm03XG5pbmZvcm03LmRpc3BsYXlOYW1lID0gJ2luZm9ybTcnXG5pbmZvcm03LmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gaW5mb3JtNyhQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuaW5mb3JtNyA9IHtcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIlteXCJdKlwiLyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBzdWJzdGl0dXRpb246IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXFxbW15cXFtcXF1dK1xcXS8sXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICBkZWxpbWl0ZXI6IHtcbiAgICAgICAgICAgICAgcGF0dGVybjogL1xcW3xcXF0vLFxuICAgICAgICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgICAgICAgfSAvLyBTZWUgcmVzdCBiZWxvd1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogL1xcW1teXFxbXFxdXStcXF0vLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICB0aXRsZToge1xuICAgICAgcGF0dGVybjogL15bIFxcdF0qKD86Ym9va3xjaGFwdGVyfHBhcnQoPyEgb2YpfHNlY3Rpb258dGFibGV8dm9sdW1lKVxcYi4rL2ltLFxuICAgICAgYWxpYXM6ICdpbXBvcnRhbnQnXG4gICAgfSxcbiAgICBudW1iZXI6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXnxbXi1dKSg/OlxcYlxcZCsoPzpcXC5cXGQrKT8oPzpcXF5cXGQrKT8oPzooPyFcXGQpXFx3Kyk/fFxcYig/OmVpZ2h0fGVsZXZlbnxmaXZlfGZvdXJ8bmluZXxvbmV8c2V2ZW58c2l4fHRlbnx0aHJlZXx0d2VsdmV8dHdvKSlcXGIoPyEtKS9pLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgdmVyYjoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhefFteLV0pXFxiKD86YW5zd2VyaW5nfGFwcGx5aW5nIHRvfGFyZXxhc2tpbmd8YXR0YWNraW5nfGJlKD86aW5nKT98YnVybmluZ3xidXlpbmd8Y2FsbGVkfGNhcnJpZXN8Y2FycnkoPyEgb3V0KXxjYXJyeWluZ3xjbGltYmluZ3xjbG9zaW5nfGNvbmNlYWwoPzppbmd8cyk/fGNvbnN1bHRpbmd8Y29udGFpbig/OmluZ3xzKT98Y3V0dGluZ3xkcmlua2luZ3xkcm9wcGluZ3xlYXRpbmd8ZW5jbG9zKD86ZXM/fGluZyl8ZW50ZXJpbmd8ZXhhbWluaW5nfGV4aXRpbmd8Z2V0dGluZ3xnaXZpbmd8Z29pbmd8aGEoPzpzfHZlfHZpbmcpfGhvbGQoPzppbmd8cyk/fGltcGwoPzppZXN8eSl8aW5jb3Jwb3JhdCg/OmVzP3xpbmcpfGluc2VydGluZ3xpc3xqdW1waW5nfGtpc3Npbmd8bGlzdGVuaW5nfGxvY2tpbmd8bG9va2luZ3xtZWFuKD86aW5nfHMpP3xvcGVuaW5nfHByb3ZpZCg/OmVzP3xpbmcpfHB1bGxpbmd8cHVzaGluZ3xwdXR0aW5nfHJlbGF0KD86ZXM/fGluZyl8cmVtb3Zpbmd8c2VhcmNoaW5nfHNlZSg/OmluZ3xzKT98c2V0dGluZ3xzaG93aW5nfHNpbmdpbmd8c2xlZXBpbmd8c21lbGxpbmd8c3F1ZWV6aW5nfHN1cHBvcnQoPzppbmd8cyk/fHN3ZWFyaW5nfHN3aXRjaGluZ3x0YWtpbmd8dGFzdGluZ3x0ZWxsaW5nfHRoaW5raW5nfHRocm93aW5nfHRvdWNoaW5nfHR1cm5pbmd8dHlpbmd8dW5sb2NrKD86aW5nfHMpP3x2YXIoPzppZXN8eXx5aW5nKXx3YWl0aW5nfHdha2luZ3x3YXZpbmd8d2Vhcig/OmluZ3xzKT8pXFxiKD8hLSkvaSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ29wZXJhdG9yJ1xuICAgIH0sXG4gICAga2V5d29yZDoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhefFteLV0pXFxiKD86YWZ0ZXJ8YmVmb3JlfGNhcnJ5IG91dHxjaGVja3xjb250aW51ZSB0aGUgYWN0aW9ufGRlZmluaXRpb24oPz0gKjopfGRvIG5vdGhpbmd8ZWxzZXxlbmQgKD86aWZ8dGhlIHN0b3J5fHVubGVzcyl8ZXZlcnkgdHVybnxpZnxpbmNsdWRlfGluc3RlYWQoPzogb2YpP3xsZXR8bW92ZXxub3xub3d8b3RoZXJ3aXNlfHJlcGVhdHxyZXBvcnR8cmVzdW1lIHRoZSBzdG9yeXxydWxlIGZvcnxydW5uaW5nIHRocm91Z2h8c2F5KD86aW5nKT98c3RvcCB0aGUgYWN0aW9ufHRlc3R8dHJ5KD86aW5nKT98dW5kZXJzdGFuZHx1bmxlc3N8dXNlfHdoZW58d2hpbGV8eWVzKVxcYig/IS0pL2ksXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBwcm9wZXJ0eToge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhefFteLV0pXFxiKD86YWRqYWNlbnQoPyEgdG8pfGNhcnJpZWR8Y2xvc2VkfGNvbmNlYWxlZHxjb250YWluZWR8ZGFya3xkZXNjcmliZWR8ZWRpYmxlfGVtcHR5fGVuY2xvc2VkfGVudGVyYWJsZXxldmVufGZlbWFsZXxmaXhlZCBpbiBwbGFjZXxmdWxsfGhhbmRsZWR8aGVsZHxpbXByb3Blci1uYW1lZHxpbmNvcnBvcmF0ZWR8aW5lZGlibGV8aW52aXNpYmxlfGxpZ2h0ZWR8bGl0fGxvY2soPzphYmxlfGVkKXxtYWxlfG1hcmtlZCBmb3IgbGlzdGluZ3xtZW50aW9uZWR8bmVnYXRpdmV8bmV1dGVyfG5vbi0oPzplbXB0eXxmdWxsfHJlY3VycmluZyl8b2RkfG9wYXF1ZXxvcGVuKD86YWJsZSk/fHBsdXJhbC1uYW1lZHxwb3J0YWJsZXxwb3NpdGl2ZXxwcml2YXRlbHktbmFtZWR8cHJvcGVyLW5hbWVkfHByb3ZpZGVkfHB1YmxpY2FsbHktbmFtZWR8cHVzaGFibGUgYmV0d2VlbiByb29tc3xyZWN1cnJpbmd8cmVsYXRlZHxydWJiaW5nfHNjZW5lcnl8c2VlbnxzaW5ndWxhci1uYW1lZHxzdXBwb3J0ZWR8c3dpbmdpbmd8c3dpdGNoKD86YWJsZXxlZCg/OiBvZmZ8IG9uKT8pfHRvdWNoKD86YWJsZXxlZCl8dHJhbnNwYXJlbnR8dW5jb25jZWFsZWR8dW5kZXNjcmliZWR8dW5saXR8dW5sb2NrZWR8dW5tYXJrZWQgZm9yIGxpc3Rpbmd8dW5tZW50aW9uZWR8dW5vcGVuYWJsZXx1bnRvdWNoYWJsZXx1bnZpc2l0ZWR8dmFyaWFibGV8dmlzaWJsZXx2aXNpdGVkfHdlYXJhYmxlfHdvcm4pXFxiKD8hLSkvaSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ3N5bWJvbCdcbiAgICB9LFxuICAgIHBvc2l0aW9uOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKF58W14tXSlcXGIoPzphYm92ZXxhZGphY2VudCB0b3xiYWNrIHNpZGUgb2Z8YmVsb3d8YmV0d2Vlbnxkb3dufGVhc3R8ZXZlcnl3aGVyZXxmcm9udCBzaWRlfGhlcmV8aW58aW5zaWRlKD86IGZyb20pP3xub3J0aCg/OmVhc3R8d2VzdCk/fG5vd2hlcmV8b24oPzogdG9wIG9mKT98b3RoZXIgc2lkZXxvdXRzaWRlKD86IGZyb20pP3xwYXJ0cz8gb2Z8cmVnaW9uYWxseSBpbnxzb3V0aCg/OmVhc3R8d2VzdCk/fHRocm91Z2h8dXB8d2VzdHx3aXRoaW4pXFxiKD8hLSkvaSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgfSxcbiAgICB0eXBlOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKF58W14tXSlcXGIoPzphY3Rpb25zP3xhY3Rpdml0KD86aWVzfHkpfGFjdG9ycz98YW5pbWFscz98YmFja2Ryb3BzP3xjb250YWluZXJzP3xkZXZpY2VzP3xkaXJlY3Rpb25zP3xkb29ycz98aG9sZGVycz98a2luZHM/fGxpc3RzP3xtW2FlXW58bm9ib2R5fG5vdGhpbmd8bm91bnM/fG51bWJlcnM/fG9iamVjdHM/fHBlb3BsZXxwZXJzb25zP3xwbGF5ZXIoPzoncyBob2xkYWxsKT98cmVnaW9ucz98cmVsYXRpb25zP3xyb29tcz98cnVsZSg/OmJvb2spP3M/fHNjZW5lcz98c29tZW9uZXxzb21ldGhpbmd8c3VwcG9ydGVycz98dGFibGVzP3x0ZXh0cz98dGhpbmdzP3x0aW1lfHZlaGljbGVzP3x3b21bYWVdbilcXGIoPyEtKS9pLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAndmFyaWFibGUnXG4gICAgfSxcbiAgICBwdW5jdHVhdGlvbjogL1suLDo7KCl7fV0vXG4gIH1cbiAgUHJpc20ubGFuZ3VhZ2VzLmluZm9ybTdbJ3N0cmluZyddLmluc2lkZVsnc3Vic3RpdHV0aW9uJ10uaW5zaWRlLnJlc3QgPVxuICAgIFByaXNtLmxhbmd1YWdlcy5pbmZvcm03IC8vIFdlIGRvbid0IHdhbnQgdGhlIHJlbWFpbmluZyB0ZXh0IGluIHRoZSBzdWJzdGl0dXRpb24gdG8gYmUgaGlnaGxpZ2h0ZWQgYXMgdGhlIHN0cmluZy5cbiAgUHJpc20ubGFuZ3VhZ2VzLmluZm9ybTdbJ3N0cmluZyddLmluc2lkZVsnc3Vic3RpdHV0aW9uJ10uaW5zaWRlLnJlc3QudGV4dCA9IHtcbiAgICBwYXR0ZXJuOiAvXFxTKD86XFxzKlxcUykqLyxcbiAgICBhbGlhczogJ2NvbW1lbnQnXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiaW5mb3JtNyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwic3RyaW5nIiwicGF0dGVybiIsImluc2lkZSIsInN1YnN0aXR1dGlvbiIsImRlbGltaXRlciIsImFsaWFzIiwiY29tbWVudCIsImdyZWVkeSIsInRpdGxlIiwibnVtYmVyIiwibG9va2JlaGluZCIsInZlcmIiLCJrZXl3b3JkIiwicHJvcGVydHkiLCJwb3NpdGlvbiIsInR5cGUiLCJwdW5jdHVhdGlvbiIsInJlc3QiLCJ0ZXh0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/inform7.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/ini.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/ini.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = ini;\nini.displayName = \"ini\";\nini.aliases = [];\nfunction ini(Prism) {\n    Prism.languages.ini = {\n        /**\n     * The component mimics the behavior of the Win32 API parser.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}\n     */ comment: {\n            pattern: /(^[ \\f\\t\\v]*)[#;][^\\n\\r]*/m,\n            lookbehind: true\n        },\n        section: {\n            pattern: /(^[ \\f\\t\\v]*)\\[[^\\n\\r\\]]*\\]?/m,\n            lookbehind: true,\n            inside: {\n                \"section-name\": {\n                    pattern: /(^\\[[ \\f\\t\\v]*)[^ \\f\\t\\v\\]]+(?:[ \\f\\t\\v]+[^ \\f\\t\\v\\]]+)*/,\n                    lookbehind: true,\n                    alias: \"selector\"\n                },\n                punctuation: /\\[|\\]/\n            }\n        },\n        key: {\n            pattern: /(^[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v=]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v=]+)*(?=[ \\f\\t\\v]*=)/m,\n            lookbehind: true,\n            alias: \"attr-name\"\n        },\n        value: {\n            pattern: /(=[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v]+)*/,\n            lookbehind: true,\n            alias: \"attr-value\",\n            inside: {\n                \"inner-value\": {\n                    pattern: /^(\"|').+(?=\\1$)/,\n                    lookbehind: true\n                }\n            }\n        },\n        punctuation: /=/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvaW5pLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLElBQUlDLFdBQVcsR0FBRztBQUNsQkQsSUFBSUUsT0FBTyxHQUFHLEVBQUU7QUFDaEIsU0FBU0YsSUFBSUcsS0FBSztJQUNoQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEI7Ozs7S0FJQyxHQUNESyxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsWUFBWTtRQUNkO1FBQ0FDLFNBQVM7WUFDUEYsU0FBUztZQUNUQyxZQUFZO1lBQ1pFLFFBQVE7Z0JBQ04sZ0JBQWdCO29CQUNkSCxTQUFTO29CQUNUQyxZQUFZO29CQUNaRyxPQUFPO2dCQUNUO2dCQUNBQyxhQUFhO1lBQ2Y7UUFDRjtRQUNBQyxLQUFLO1lBQ0hOLFNBQ0U7WUFDRkMsWUFBWTtZQUNaRyxPQUFPO1FBQ1Q7UUFDQUcsT0FBTztZQUNMUCxTQUFTO1lBQ1RDLFlBQVk7WUFDWkcsT0FBTztZQUNQRCxRQUFRO2dCQUNOLGVBQWU7b0JBQ2JILFNBQVM7b0JBQ1RDLFlBQVk7Z0JBQ2Q7WUFDRjtRQUNGO1FBQ0FJLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2luaS5qcz8wNWVkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGluaVxuaW5pLmRpc3BsYXlOYW1lID0gJ2luaSdcbmluaS5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGluaShQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuaW5pID0ge1xuICAgIC8qKlxuICAgICAqIFRoZSBjb21wb25lbnQgbWltaWNzIHRoZSBiZWhhdmlvciBvZiB0aGUgV2luMzIgQVBJIHBhcnNlci5cbiAgICAgKlxuICAgICAqIEBzZWUge0BsaW5rIGh0dHBzOi8vZ2l0aHViLmNvbS9QcmlzbUpTL3ByaXNtL2lzc3Vlcy8yNzc1I2lzc3VlY29tbWVudC03ODc0Nzc3MjN9XG4gICAgICovXG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogLyheWyBcXGZcXHRcXHZdKilbIztdW15cXG5cXHJdKi9tLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgc2VjdGlvbjoge1xuICAgICAgcGF0dGVybjogLyheWyBcXGZcXHRcXHZdKilcXFtbXlxcblxcclxcXV0qXFxdPy9tLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICAnc2VjdGlvbi1uYW1lJzoge1xuICAgICAgICAgIHBhdHRlcm46IC8oXlxcW1sgXFxmXFx0XFx2XSopW14gXFxmXFx0XFx2XFxdXSsoPzpbIFxcZlxcdFxcdl0rW14gXFxmXFx0XFx2XFxdXSspKi8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBhbGlhczogJ3NlbGVjdG9yJ1xuICAgICAgICB9LFxuICAgICAgICBwdW5jdHVhdGlvbjogL1xcW3xcXF0vXG4gICAgICB9XG4gICAgfSxcbiAgICBrZXk6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXlsgXFxmXFx0XFx2XSopW14gXFxmXFxuXFxyXFx0XFx2PV0rKD86WyBcXGZcXHRcXHZdK1teIFxcZlxcblxcclxcdFxcdj1dKykqKD89WyBcXGZcXHRcXHZdKj0pL20sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdhdHRyLW5hbWUnXG4gICAgfSxcbiAgICB2YWx1ZToge1xuICAgICAgcGF0dGVybjogLyg9WyBcXGZcXHRcXHZdKilbXiBcXGZcXG5cXHJcXHRcXHZdKyg/OlsgXFxmXFx0XFx2XStbXiBcXGZcXG5cXHJcXHRcXHZdKykqLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ2F0dHItdmFsdWUnLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgICdpbm5lci12YWx1ZSc6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXihcInwnKS4rKD89XFwxJCkvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgcHVuY3R1YXRpb246IC89L1xuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImluaSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwic2VjdGlvbiIsImluc2lkZSIsImFsaWFzIiwicHVuY3R1YXRpb24iLCJrZXkiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/ini.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/io.js":
/*!*******************************************!*\
  !*** ./node_modules/refractor/lang/io.js ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = io;\nio.displayName = \"io\";\nio.aliases = [];\nfunction io(Prism) {\n    Prism.languages.io = {\n        comment: {\n            pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\/\\/.*|#.*)/,\n            lookbehind: true,\n            greedy: true\n        },\n        \"triple-quoted-string\": {\n            pattern: /\"\"\"(?:\\\\[\\s\\S]|(?!\"\"\")[^\\\\])*\"\"\"/,\n            greedy: true,\n            alias: \"string\"\n        },\n        string: {\n            pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n            greedy: true\n        },\n        keyword: /\\b(?:activate|activeCoroCount|asString|block|break|call|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getEnvironmentVariable|getSlot|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|try|type|uniqueId|updateSlot|wait|while|write|yield)\\b/,\n        builtin: /\\b(?:Array|AudioDevice|AudioMixer|BigNum|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Random|Regex|SGML|SGMLElement|SGMLParser|SQLite|Sequence|Server|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink)\\b/,\n        boolean: /\\b(?:false|nil|true)\\b/,\n        number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e-?\\d+)?/i,\n        operator: /[=!*/%+\\-^&|]=|>>?=?|<<?=?|:?:?=|\\+\\+?|--?|\\*\\*?|\\/\\/?|%|\\|\\|?|&&?|\\b(?:and|not|or|return)\\b|@@?|\\?\\??|\\.\\./,\n        punctuation: /[{}[\\];(),.:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvaW8uanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsR0FBR0MsV0FBVyxHQUFHO0FBQ2pCRCxHQUFHRSxPQUFPLEdBQUcsRUFBRTtBQUNmLFNBQVNGLEdBQUdHLEtBQUs7SUFDZkEsTUFBTUMsU0FBUyxDQUFDSixFQUFFLEdBQUc7UUFDbkJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxZQUFZO1lBQ1pDLFFBQVE7UUFDVjtRQUNBLHdCQUF3QjtZQUN0QkYsU0FBUztZQUNURSxRQUFRO1lBQ1JDLE9BQU87UUFDVDtRQUNBQyxRQUFRO1lBQ05KLFNBQVM7WUFDVEUsUUFBUTtRQUNWO1FBQ0FHLFNBQ0U7UUFDRkMsU0FDRTtRQUNGQyxTQUFTO1FBQ1RDLFFBQVE7UUFDUkMsVUFDRTtRQUNGQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9pby5qcz83MDdkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGlvXG5pby5kaXNwbGF5TmFtZSA9ICdpbydcbmlvLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gaW8oUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmlvID0ge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKSg/OlxcL1xcKltcXHNcXFNdKj8oPzpcXCpcXC98JCl8XFwvXFwvLip8Iy4qKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICAndHJpcGxlLXF1b3RlZC1zdHJpbmcnOiB7XG4gICAgICBwYXR0ZXJuOiAvXCJcIlwiKD86XFxcXFtcXHNcXFNdfCg/IVwiXCJcIilbXlxcXFxdKSpcIlwiXCIvLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgYWxpYXM6ICdzdHJpbmcnXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIig/OlxcXFwufFteXFxcXFxcclxcblwiXSkqXCIvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OmFjdGl2YXRlfGFjdGl2ZUNvcm9Db3VudHxhc1N0cmluZ3xibG9ja3xicmVha3xjYWxsfGNhdGNofGNsb25lfGNvbGxlY3RHYXJiYWdlfGNvbXBpbGVTdHJpbmd8Y29udGludWV8ZG98ZG9GaWxlfGRvTWVzc2FnZXxkb1N0cmluZ3xlbHNlfGVsc2VpZnxleGl0fGZvcnxmb3JlYWNofGZvcndhcmR8Z2V0RW52aXJvbm1lbnRWYXJpYWJsZXxnZXRTbG90fGhhc1Nsb3R8aWZ8aWZGYWxzZXxpZk5pbHxpZk5pbEV2YWx8aWZUcnVlfGlzQWN0aXZlfGlzTmlsfGlzUmVzdW1hYmxlfGxpc3R8bWVzc2FnZXxtZXRob2R8cGFyZW50fHBhc3N8cGF1c2V8cGVyZm9ybXxwZXJmb3JtV2l0aEFyZ0xpc3R8cHJpbnR8cHJpbnRsbnxwcm90b3xyYWlzZXxyYWlzZVJlc3VtYWJsZXxyZW1vdmVTbG90fHJlc2VuZHxyZXN1bWV8c2NoZWR1bGVyU2xlZXBTZWNvbmRzfHNlbGZ8c2VuZGVyfHNldFNjaGVkdWxlclNsZWVwU2Vjb25kc3xzZXRTbG90fHNoYWxsb3dDb3B5fHNsb3ROYW1lc3xzdXBlcnxzeXN0ZW18dGhlbnx0aGlzQmxvY2t8dGhpc0NvbnRleHR8dHJ5fHR5cGV8dW5pcXVlSWR8dXBkYXRlU2xvdHx3YWl0fHdoaWxlfHdyaXRlfHlpZWxkKVxcYi8sXG4gICAgYnVpbHRpbjpcbiAgICAgIC9cXGIoPzpBcnJheXxBdWRpb0RldmljZXxBdWRpb01peGVyfEJpZ051bXxCbG9ja3xCb3h8QnVmZmVyfENGdW5jdGlvbnxDR0l8Q29sb3J8Q3Vyc2VzfERCTXxETlNSZXNvbHZlcnxET0Nvbm5lY3Rpb258RE9Qcm94eXxET1NlcnZlcnxEYXRlfERpcmVjdG9yeXxEdXJhdGlvbnxEeW5MaWJ8RXJyb3J8RXhjZXB0aW9ufEZGVHxGaWxlfEZubWF0Y2h8Rm9udHxGdXR1cmV8R0x8R0xFfEdMU2Npc3NvcnxHTFV8R0xVQ3lsaW5kZXJ8R0xVUXVhZHJpY3xHTFVTcGhlcmV8R0xVVHxIb3N0fEltYWdlfEltcG9ydGVyfExpbmtMaXN0fExpc3R8TG9iYnl8TG9jYWxzfE1ENXxNUDNEZWNvZGVyfE1QM0VuY29kZXJ8TWFwfE1lc3NhZ2V8TW92aWV8Tm90aWZpY2F0aW9ufE51bWJlcnxPYmplY3R8T3BlbkdMfFBvaW50fFByb3Rvc3xSYW5kb218UmVnZXh8U0dNTHxTR01MRWxlbWVudHxTR01MUGFyc2VyfFNRTGl0ZXxTZXF1ZW5jZXxTZXJ2ZXJ8U2hvd01lc3NhZ2V8U2xlZXB5Q2F0fFNsZWVweUNhdEN1cnNvcnxTb2NrZXR8U29ja2V0TWFuYWdlcnxTb3VuZHxTb3VwfFN0b3JlfFN0cmluZ3xUcmVlfFVEUFNlbmRlcnxVUERSZWNlaXZlcnxVUkx8VXNlcnxXYXJuaW5nfFdlYWtMaW5rKVxcYi8sXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfG5pbHx0cnVlKVxcYi8sXG4gICAgbnVtYmVyOiAvXFxiMHhbXFxkYS1mXStcXGJ8KD86XFxiXFxkKyg/OlxcLlxcZCopP3xcXEJcXC5cXGQrKSg/OmUtP1xcZCspPy9pLFxuICAgIG9wZXJhdG9yOlxuICAgICAgL1s9ISovJStcXC1eJnxdPXw+Pj89P3w8PD89P3w6Pzo/PXxcXCtcXCs/fC0tP3xcXCpcXCo/fFxcL1xcLz98JXxcXHxcXHw/fCYmP3xcXGIoPzphbmR8bm90fG9yfHJldHVybilcXGJ8QEA/fFxcP1xcPz98XFwuXFwuLyxcbiAgICBwdW5jdHVhdGlvbjogL1t7fVtcXF07KCksLjpdL1xuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImlvIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJncmVlZHkiLCJhbGlhcyIsInN0cmluZyIsImtleXdvcmQiLCJidWlsdGluIiwiYm9vbGVhbiIsIm51bWJlciIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/io.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/j.js":
/*!******************************************!*\
  !*** ./node_modules/refractor/lang/j.js ***!
  \******************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = j;\nj.displayName = \"j\";\nj.aliases = [];\nfunction j(Prism) {\n    Prism.languages.j = {\n        comment: {\n            pattern: /\\bNB\\..*/,\n            greedy: true\n        },\n        string: {\n            pattern: /'(?:''|[^'\\r\\n])*'/,\n            greedy: true\n        },\n        keyword: /\\b(?:(?:CR|LF|adverb|conjunction|def|define|dyad|monad|noun|verb)\\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\\w+|goto_\\w+|if|label_\\w+|return|select|throw|try|while|whilst)\\.)/,\n        verb: {\n            // Negative look-ahead prevents bad highlighting\n            // of ^: ;. =. =: !. !:\n            pattern: /(?!\\^:|;\\.|[=!][.:])(?:\\{(?:\\.|::?)?|p(?:\\.\\.?|:)|[=!\\]]|[<>+*\\-%$|,#][.:]?|[?^]\\.?|[;\\[]:?|[~}\"i][.:]|[ACeEIjLor]\\.|(?:[_\\/\\\\qsux]|_?\\d):)/,\n            alias: \"keyword\"\n        },\n        number: /\\b_?(?:(?!\\d:)\\d+(?:\\.\\d+)?(?:(?:ad|ar|[ejpx])_?\\d+(?:\\.\\d+)?)*(?:b_?[\\da-z]+(?:\\.[\\da-z]+)?)?|_\\b(?!\\.))/,\n        adverb: {\n            pattern: /[~}]|[\\/\\\\]\\.?|[bfM]\\.|t[.:]/,\n            alias: \"builtin\"\n        },\n        operator: /[=a][.:]|_\\./,\n        conjunction: {\n            pattern: /&(?:\\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\\.|`:?|[\\^LS]:|\"/,\n            alias: \"variable\"\n        },\n        punctuation: /[()]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvai5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxFQUFFQyxXQUFXLEdBQUc7QUFDaEJELEVBQUVFLE9BQU8sR0FBRyxFQUFFO0FBQ2QsU0FBU0YsRUFBRUcsS0FBSztJQUNkQSxNQUFNQyxTQUFTLENBQUNKLENBQUMsR0FBRztRQUNsQkssU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBQyxRQUFRO1lBQ05GLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FFLFNBQ0U7UUFDRkMsTUFBTTtZQUNKLGdEQUFnRDtZQUNoRCx1QkFBdUI7WUFDdkJKLFNBQ0U7WUFDRkssT0FBTztRQUNUO1FBQ0FDLFFBQ0U7UUFDRkMsUUFBUTtZQUNOUCxTQUFTO1lBQ1RLLE9BQU87UUFDVDtRQUNBRyxVQUFVO1FBQ1ZDLGFBQWE7WUFDWFQsU0FBUztZQUNUSyxPQUFPO1FBQ1Q7UUFDQUssYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvai5qcz8xNzFkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGpcbmouZGlzcGxheU5hbWUgPSAnaidcbmouYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBqKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5qID0ge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC9cXGJOQlxcLi4qLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvJyg/OicnfFteJ1xcclxcbl0pKicvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/Oig/OkNSfExGfGFkdmVyYnxjb25qdW5jdGlvbnxkZWZ8ZGVmaW5lfGR5YWR8bW9uYWR8bm91bnx2ZXJiKVxcYnwoPzphc3NlcnR8YnJlYWt8Y2FzZXxjYXRjaFtkdF0/fGNvbnRpbnVlfGRvfGVsc2V8ZWxzZWlmfGVuZHxmY2FzZXxmb3J8Zm9yX1xcdyt8Z290b19cXHcrfGlmfGxhYmVsX1xcdyt8cmV0dXJufHNlbGVjdHx0aHJvd3x0cnl8d2hpbGV8d2hpbHN0KVxcLikvLFxuICAgIHZlcmI6IHtcbiAgICAgIC8vIE5lZ2F0aXZlIGxvb2stYWhlYWQgcHJldmVudHMgYmFkIGhpZ2hsaWdodGluZ1xuICAgICAgLy8gb2YgXjogOy4gPS4gPTogIS4gITpcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oPyFcXF46fDtcXC58Wz0hXVsuOl0pKD86XFx7KD86XFwufDo6Pyk/fHAoPzpcXC5cXC4/fDopfFs9IVxcXV18Wzw+KypcXC0lJHwsI11bLjpdP3xbP15dXFwuP3xbO1xcW106P3xbfn1cImldWy46XXxbQUNlRUlqTG9yXVxcLnwoPzpbX1xcL1xcXFxxc3V4XXxfP1xcZCk6KS8sXG4gICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgfSxcbiAgICBudW1iZXI6XG4gICAgICAvXFxiXz8oPzooPyFcXGQ6KVxcZCsoPzpcXC5cXGQrKT8oPzooPzphZHxhcnxbZWpweF0pXz9cXGQrKD86XFwuXFxkKyk/KSooPzpiXz9bXFxkYS16XSsoPzpcXC5bXFxkYS16XSspPyk/fF9cXGIoPyFcXC4pKS8sXG4gICAgYWR2ZXJiOiB7XG4gICAgICBwYXR0ZXJuOiAvW359XXxbXFwvXFxcXF1cXC4/fFtiZk1dXFwufHRbLjpdLyxcbiAgICAgIGFsaWFzOiAnYnVpbHRpbidcbiAgICB9LFxuICAgIG9wZXJhdG9yOiAvWz1hXVsuOl18X1xcLi8sXG4gICAgY29uanVuY3Rpb246IHtcbiAgICAgIHBhdHRlcm46IC8mKD86XFwuOj98Oik/fFsuOkBdWy46XT98WyFEXVsuOl18WztkSFRdXFwufGA6P3xbXFxeTFNdOnxcIi8sXG4gICAgICBhbGlhczogJ3ZhcmlhYmxlJ1xuICAgIH0sXG4gICAgcHVuY3R1YXRpb246IC9bKCldL1xuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImoiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwiZ3JlZWR5Iiwic3RyaW5nIiwia2V5d29yZCIsInZlcmIiLCJhbGlhcyIsIm51bWJlciIsImFkdmVyYiIsIm9wZXJhdG9yIiwiY29uanVuY3Rpb24iLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/j.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/java.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/java.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = java;\njava.displayName = \"java\";\njava.aliases = [];\nfunction java(Prism) {\n    ;\n    (function(Prism) {\n        var keywords = /\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\b/ // full package (optional) + parent classes (optional)\n        ;\n        var classNamePrefix = /(^|[^\\w.])(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/.source // based on the java naming conventions\n        ;\n        var className = {\n            pattern: RegExp(classNamePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n            lookbehind: true,\n            inside: {\n                namespace: {\n                    pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n                    inside: {\n                        punctuation: /\\./\n                    }\n                },\n                punctuation: /\\./\n            }\n        };\n        Prism.languages.java = Prism.languages.extend(\"clike\", {\n            string: {\n                pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n                lookbehind: true,\n                greedy: true\n            },\n            \"class-name\": [\n                className,\n                {\n                    // variables and parameters\n                    // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n                    pattern: RegExp(classNamePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()])/.source),\n                    lookbehind: true,\n                    inside: className.inside\n                }\n            ],\n            keyword: keywords,\n            function: [\n                Prism.languages.clike.function,\n                {\n                    pattern: /(::\\s*)[a-z_]\\w*/,\n                    lookbehind: true\n                }\n            ],\n            number: /\\b0b[01][01_]*L?\\b|\\b0x(?:\\.[\\da-f_p+-]+|[\\da-f_]+(?:\\.[\\da-f_p+-]+)?)\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n            operator: {\n                pattern: /(^|[^.])(?:<<=?|>>>?=?|->|--|\\+\\+|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,\n                lookbehind: true\n            }\n        });\n        Prism.languages.insertBefore(\"java\", \"string\", {\n            \"triple-quoted-string\": {\n                // http://openjdk.java.net/jeps/355#Description\n                pattern: /\"\"\"[ \\t]*[\\r\\n](?:(?:\"|\"\")?(?:\\\\.|[^\"\\\\]))*\"\"\"/,\n                greedy: true,\n                alias: \"string\"\n            },\n            char: {\n                pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){1,6}'/,\n                greedy: true\n            }\n        });\n        Prism.languages.insertBefore(\"java\", \"class-name\", {\n            annotation: {\n                pattern: /(^|[^.])@\\w+(?:\\s*\\.\\s*\\w+)*/,\n                lookbehind: true,\n                alias: \"punctuation\"\n            },\n            generics: {\n                pattern: /<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&))*>)*>)*>)*>/,\n                inside: {\n                    \"class-name\": className,\n                    keyword: keywords,\n                    punctuation: /[<>(),.:]/,\n                    operator: /[?&|]/\n                }\n            },\n            namespace: {\n                pattern: RegExp(/(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)(?!<keyword>)[a-z]\\w*(?:\\.[a-z]\\w*)*\\.?/.source.replace(/<keyword>/g, function() {\n                    return keywords.source;\n                })),\n                lookbehind: true,\n                inside: {\n                    punctuation: /\\./\n                }\n            }\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvamF2YS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7O0lBQ2YsVUFBVUEsS0FBSztRQUNmLElBQUlDLFdBQ0YsaWRBQWlkLHNEQUFzRDs7UUFDemdCLElBQUlDLGtCQUFrQix1REFDbkJDLE1BQU0sQ0FBQyx1Q0FBdUM7O1FBQ2pELElBQUlDLFlBQVk7WUFDZEMsU0FBU0MsT0FBT0osa0JBQWtCLGdDQUFnQ0MsTUFBTTtZQUN4RUksWUFBWTtZQUNaQyxRQUFRO2dCQUNOQyxXQUFXO29CQUNUSixTQUFTO29CQUNURyxRQUFRO3dCQUNORSxhQUFhO29CQUNmO2dCQUNGO2dCQUNBQSxhQUFhO1lBQ2Y7UUFDRjtRQUNBVixNQUFNVyxTQUFTLENBQUNkLElBQUksR0FBR0csTUFBTVcsU0FBUyxDQUFDQyxNQUFNLENBQUMsU0FBUztZQUNyREMsUUFBUTtnQkFDTlIsU0FBUztnQkFDVEUsWUFBWTtnQkFDWk8sUUFBUTtZQUNWO1lBQ0EsY0FBYztnQkFDWlY7Z0JBQ0E7b0JBQ0UsMkJBQTJCO29CQUMzQix3SEFBd0g7b0JBQ3hIQyxTQUFTQyxPQUNQSixrQkFBa0IsK0JBQStCQyxNQUFNO29CQUV6REksWUFBWTtvQkFDWkMsUUFBUUosVUFBVUksTUFBTTtnQkFDMUI7YUFDRDtZQUNETyxTQUFTZDtZQUNUZSxVQUFVO2dCQUNSaEIsTUFBTVcsU0FBUyxDQUFDTSxLQUFLLENBQUNELFFBQVE7Z0JBQzlCO29CQUNFWCxTQUFTO29CQUNURSxZQUFZO2dCQUNkO2FBQ0Q7WUFDRFcsUUFDRTtZQUNGQyxVQUFVO2dCQUNSZCxTQUNFO2dCQUNGRSxZQUFZO1lBQ2Q7UUFDRjtRQUNBUCxNQUFNVyxTQUFTLENBQUNTLFlBQVksQ0FBQyxRQUFRLFVBQVU7WUFDN0Msd0JBQXdCO2dCQUN0QiwrQ0FBK0M7Z0JBQy9DZixTQUFTO2dCQUNUUyxRQUFRO2dCQUNSTyxPQUFPO1lBQ1Q7WUFDQUMsTUFBTTtnQkFDSmpCLFNBQVM7Z0JBQ1RTLFFBQVE7WUFDVjtRQUNGO1FBQ0FkLE1BQU1XLFNBQVMsQ0FBQ1MsWUFBWSxDQUFDLFFBQVEsY0FBYztZQUNqREcsWUFBWTtnQkFDVmxCLFNBQVM7Z0JBQ1RFLFlBQVk7Z0JBQ1pjLE9BQU87WUFDVDtZQUNBRyxVQUFVO2dCQUNSbkIsU0FDRTtnQkFDRkcsUUFBUTtvQkFDTixjQUFjSjtvQkFDZFcsU0FBU2Q7b0JBQ1RTLGFBQWE7b0JBQ2JTLFVBQVU7Z0JBQ1o7WUFDRjtZQUNBVixXQUFXO2dCQUNUSixTQUFTQyxPQUNQLHFKQUFxSkgsTUFBTSxDQUFDc0IsT0FBTyxDQUNqSyxjQUNBO29CQUNFLE9BQU94QixTQUFTRSxNQUFNO2dCQUN4QjtnQkFHSkksWUFBWTtnQkFDWkMsUUFBUTtvQkFDTkUsYUFBYTtnQkFDZjtZQUNGO1FBQ0Y7SUFDRixHQUFHVjtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2phdmEuanM/YWVmMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBqYXZhXG5qYXZhLmRpc3BsYXlOYW1lID0gJ2phdmEnXG5qYXZhLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gamF2YShQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIHZhciBrZXl3b3JkcyA9XG4gICAgICAvXFxiKD86YWJzdHJhY3R8YXNzZXJ0fGJvb2xlYW58YnJlYWt8Ynl0ZXxjYXNlfGNhdGNofGNoYXJ8Y2xhc3N8Y29uc3R8Y29udGludWV8ZGVmYXVsdHxkb3xkb3VibGV8ZWxzZXxlbnVtfGV4cG9ydHN8ZXh0ZW5kc3xmaW5hbHxmaW5hbGx5fGZsb2F0fGZvcnxnb3RvfGlmfGltcGxlbWVudHN8aW1wb3J0fGluc3RhbmNlb2Z8aW50fGludGVyZmFjZXxsb25nfG1vZHVsZXxuYXRpdmV8bmV3fG5vbi1zZWFsZWR8bnVsbHxvcGVufG9wZW5zfHBhY2thZ2V8cGVybWl0c3xwcml2YXRlfHByb3RlY3RlZHxwcm92aWRlc3xwdWJsaWN8cmVjb3JkfHJlcXVpcmVzfHJldHVybnxzZWFsZWR8c2hvcnR8c3RhdGljfHN0cmljdGZwfHN1cGVyfHN3aXRjaHxzeW5jaHJvbml6ZWR8dGhpc3x0aHJvd3x0aHJvd3N8dG98dHJhbnNpZW50fHRyYW5zaXRpdmV8dHJ5fHVzZXN8dmFyfHZvaWR8dm9sYXRpbGV8d2hpbGV8d2l0aHx5aWVsZClcXGIvIC8vIGZ1bGwgcGFja2FnZSAob3B0aW9uYWwpICsgcGFyZW50IGNsYXNzZXMgKG9wdGlvbmFsKVxuICAgIHZhciBjbGFzc05hbWVQcmVmaXggPSAvKF58W15cXHcuXSkoPzpbYS16XVxcdypcXHMqXFwuXFxzKikqKD86W0EtWl1cXHcqXFxzKlxcLlxccyopKi9cbiAgICAgIC5zb3VyY2UgLy8gYmFzZWQgb24gdGhlIGphdmEgbmFtaW5nIGNvbnZlbnRpb25zXG4gICAgdmFyIGNsYXNzTmFtZSA9IHtcbiAgICAgIHBhdHRlcm46IFJlZ0V4cChjbGFzc05hbWVQcmVmaXggKyAvW0EtWl0oPzpbXFxkX0EtWl0qW2Etel1cXHcqKT9cXGIvLnNvdXJjZSksXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIG5hbWVzcGFjZToge1xuICAgICAgICAgIHBhdHRlcm46IC9eW2Etel1cXHcqKD86XFxzKlxcLlxccypbYS16XVxcdyopKig/OlxccypcXC4pPy8sXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICBwdW5jdHVhdGlvbjogL1xcLi9cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHB1bmN0dWF0aW9uOiAvXFwuL1xuICAgICAgfVxuICAgIH1cbiAgICBQcmlzbS5sYW5ndWFnZXMuamF2YSA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2NsaWtlJywge1xuICAgICAgc3RyaW5nOiB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKVwiKD86XFxcXC58W15cIlxcXFxcXHJcXG5dKSpcIi8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgICdjbGFzcy1uYW1lJzogW1xuICAgICAgICBjbGFzc05hbWUsXG4gICAgICAgIHtcbiAgICAgICAgICAvLyB2YXJpYWJsZXMgYW5kIHBhcmFtZXRlcnNcbiAgICAgICAgICAvLyB0aGlzIHRvIHN1cHBvcnQgY2xhc3MgbmFtZXMgKG9yIGdlbmVyaWMgcGFyYW1ldGVycykgd2hpY2ggZG8gbm90IGNvbnRhaW4gYSBsb3dlciBjYXNlIGxldHRlciAoYWxzbyB3b3JrcyBmb3IgbWV0aG9kcylcbiAgICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoXG4gICAgICAgICAgICBjbGFzc05hbWVQcmVmaXggKyAvW0EtWl1cXHcqKD89XFxzK1xcdytcXHMqWzssPSgpXSkvLnNvdXJjZVxuICAgICAgICAgICksXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IGNsYXNzTmFtZS5pbnNpZGVcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIGtleXdvcmQ6IGtleXdvcmRzLFxuICAgICAgZnVuY3Rpb246IFtcbiAgICAgICAgUHJpc20ubGFuZ3VhZ2VzLmNsaWtlLmZ1bmN0aW9uLFxuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogLyg6OlxccyopW2Etel9dXFx3Ki8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgbnVtYmVyOlxuICAgICAgICAvXFxiMGJbMDFdWzAxX10qTD9cXGJ8XFxiMHgoPzpcXC5bXFxkYS1mX3ArLV0rfFtcXGRhLWZfXSsoPzpcXC5bXFxkYS1mX3ArLV0rKT8pXFxifCg/OlxcYlxcZFtcXGRfXSooPzpcXC5bXFxkX10qKT98XFxCXFwuXFxkW1xcZF9dKikoPzplWystXT9cXGRbXFxkX10qKT9bZGZsXT8vaSxcbiAgICAgIG9wZXJhdG9yOiB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhefFteLl0pKD86PDw9P3w+Pj4/PT98LT58LS18XFwrXFwrfCYmfFxcfFxcfHw6OnxbPzp+XXxbLSsqLyUmfF4hPTw+XT0/KS9tLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9XG4gICAgfSlcbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdqYXZhJywgJ3N0cmluZycsIHtcbiAgICAgICd0cmlwbGUtcXVvdGVkLXN0cmluZyc6IHtcbiAgICAgICAgLy8gaHR0cDovL29wZW5qZGsuamF2YS5uZXQvamVwcy8zNTUjRGVzY3JpcHRpb25cbiAgICAgICAgcGF0dGVybjogL1wiXCJcIlsgXFx0XSpbXFxyXFxuXSg/Oig/OlwifFwiXCIpPyg/OlxcXFwufFteXCJcXFxcXSkpKlwiXCJcIi8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdzdHJpbmcnXG4gICAgICB9LFxuICAgICAgY2hhcjoge1xuICAgICAgICBwYXR0ZXJuOiAvJyg/OlxcXFwufFteJ1xcXFxcXHJcXG5dKXsxLDZ9Jy8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfVxuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnamF2YScsICdjbGFzcy1uYW1lJywge1xuICAgICAgYW5ub3RhdGlvbjoge1xuICAgICAgICBwYXR0ZXJuOiAvKF58W14uXSlAXFx3Kyg/OlxccypcXC5cXHMqXFx3KykqLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbidcbiAgICAgIH0sXG4gICAgICBnZW5lcmljczoge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC88KD86W1xcd1xccywuP118Jig/ISYpfDwoPzpbXFx3XFxzLC4/XXwmKD8hJil8PCg/OltcXHdcXHMsLj9dfCYoPyEmKXw8KD86W1xcd1xccywuP118Jig/ISYpKSo+KSo+KSo+KSo+LyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgJ2NsYXNzLW5hbWUnOiBjbGFzc05hbWUsXG4gICAgICAgICAga2V5d29yZDoga2V5d29yZHMsXG4gICAgICAgICAgcHVuY3R1YXRpb246IC9bPD4oKSwuOl0vLFxuICAgICAgICAgIG9wZXJhdG9yOiAvWz8mfF0vXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBuYW1lc3BhY2U6IHtcbiAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgIC8oXFxiKD86ZXhwb3J0c3xpbXBvcnQoPzpcXHMrc3RhdGljKT98bW9kdWxlfG9wZW58b3BlbnN8cGFja2FnZXxwcm92aWRlc3xyZXF1aXJlc3x0b3x0cmFuc2l0aXZlfHVzZXN8d2l0aClcXHMrKSg/ITxrZXl3b3JkPilbYS16XVxcdyooPzpcXC5bYS16XVxcdyopKlxcLj8vLnNvdXJjZS5yZXBsYWNlKFxuICAgICAgICAgICAgLzxrZXl3b3JkPi9nLFxuICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICByZXR1cm4ga2V5d29yZHMuc291cmNlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgKVxuICAgICAgICApLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjogL1xcLi9cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJqYXZhIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJrZXl3b3JkcyIsImNsYXNzTmFtZVByZWZpeCIsInNvdXJjZSIsImNsYXNzTmFtZSIsInBhdHRlcm4iLCJSZWdFeHAiLCJsb29rYmVoaW5kIiwiaW5zaWRlIiwibmFtZXNwYWNlIiwicHVuY3R1YXRpb24iLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJzdHJpbmciLCJncmVlZHkiLCJrZXl3b3JkIiwiZnVuY3Rpb24iLCJjbGlrZSIsIm51bWJlciIsIm9wZXJhdG9yIiwiaW5zZXJ0QmVmb3JlIiwiYWxpYXMiLCJjaGFyIiwiYW5ub3RhdGlvbiIsImdlbmVyaWNzIiwicmVwbGFjZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/java.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/javadoc.js":
/*!************************************************!*\
  !*** ./node_modules/refractor/lang/javadoc.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorJava = __webpack_require__(/*! ./java.js */ \"(ssr)/./node_modules/refractor/lang/java.js\");\nvar refractorJavadoclike = __webpack_require__(/*! ./javadoclike.js */ \"(ssr)/./node_modules/refractor/lang/javadoclike.js\");\nmodule.exports = javadoc;\njavadoc.displayName = \"javadoc\";\njavadoc.aliases = [];\nfunction javadoc(Prism) {\n    Prism.register(refractorJava);\n    Prism.register(refractorJavadoclike);\n    (function(Prism) {\n        var codeLinePattern = /(^(?:[\\t ]*(?:\\*\\s*)*))[^*\\s].*$/m;\n        var memberReference = /#\\s*\\w+(?:\\s*\\([^()]*\\))?/.source;\n        var reference = /(?:\\b[a-zA-Z]\\w+\\s*\\.\\s*)*\\b[A-Z]\\w*(?:\\s*<mem>)?|<mem>/.source.replace(/<mem>/g, function() {\n            return memberReference;\n        });\n        Prism.languages.javadoc = Prism.languages.extend(\"javadoclike\", {});\n        Prism.languages.insertBefore(\"javadoc\", \"keyword\", {\n            reference: {\n                pattern: RegExp(/(@(?:exception|link|linkplain|see|throws|value)\\s+(?:\\*\\s*)?)/.source + \"(?:\" + reference + \")\"),\n                lookbehind: true,\n                inside: {\n                    function: {\n                        pattern: /(#\\s*)\\w+(?=\\s*\\()/,\n                        lookbehind: true\n                    },\n                    field: {\n                        pattern: /(#\\s*)\\w+/,\n                        lookbehind: true\n                    },\n                    namespace: {\n                        pattern: /\\b(?:[a-z]\\w*\\s*\\.\\s*)+/,\n                        inside: {\n                            punctuation: /\\./\n                        }\n                    },\n                    \"class-name\": /\\b[A-Z]\\w*/,\n                    keyword: Prism.languages.java.keyword,\n                    punctuation: /[#()[\\],.]/\n                }\n            },\n            \"class-name\": {\n                // @param <T> the first generic type parameter\n                pattern: /(@param\\s+)<[A-Z]\\w*>/,\n                lookbehind: true,\n                inside: {\n                    punctuation: /[.<>]/\n                }\n            },\n            \"code-section\": [\n                {\n                    pattern: /(\\{@code\\s+(?!\\s))(?:[^\\s{}]|\\s+(?![\\s}])|\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\})+(?=\\s*\\})/,\n                    lookbehind: true,\n                    inside: {\n                        code: {\n                            // there can't be any HTML inside of {@code} tags\n                            pattern: codeLinePattern,\n                            lookbehind: true,\n                            inside: Prism.languages.java,\n                            alias: \"language-java\"\n                        }\n                    }\n                },\n                {\n                    pattern: /(<(code|pre|tt)>(?!<code>)\\s*)\\S(?:\\S|\\s+\\S)*?(?=\\s*<\\/\\2>)/,\n                    lookbehind: true,\n                    inside: {\n                        line: {\n                            pattern: codeLinePattern,\n                            lookbehind: true,\n                            inside: {\n                                // highlight HTML tags and entities\n                                tag: Prism.languages.markup.tag,\n                                entity: Prism.languages.markup.entity,\n                                code: {\n                                    // everything else is Java code\n                                    pattern: /.+/,\n                                    inside: Prism.languages.java,\n                                    alias: \"language-java\"\n                                }\n                            }\n                        }\n                    }\n                }\n            ],\n            tag: Prism.languages.markup.tag,\n            entity: Prism.languages.markup.entity\n        });\n        Prism.languages.javadoclike.addSupport(\"java\", Prism.languages.javadoc);\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvamF2YWRvYy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLElBQUlBLGdCQUFnQkMsbUJBQU9BLENBQUM7QUFDNUIsSUFBSUMsdUJBQXVCRCxtQkFBT0EsQ0FBQztBQUNuQ0UsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsUUFBUUMsV0FBVyxHQUFHO0FBQ3RCRCxRQUFRRSxPQUFPLEdBQUcsRUFBRTtBQUNwQixTQUFTRixRQUFRRyxLQUFLO0lBQ3BCQSxNQUFNQyxRQUFRLENBQUNUO0lBQ2ZRLE1BQU1DLFFBQVEsQ0FBQ1A7SUFDYixVQUFVTSxLQUFLO1FBQ2YsSUFBSUUsa0JBQWtCO1FBQ3RCLElBQUlDLGtCQUFrQiw0QkFBNEJDLE1BQU07UUFDeEQsSUFBSUMsWUFDRiwwREFBMERELE1BQU0sQ0FBQ0UsT0FBTyxDQUN0RSxVQUNBO1lBQ0UsT0FBT0g7UUFDVDtRQUVKSCxNQUFNTyxTQUFTLENBQUNWLE9BQU8sR0FBR0csTUFBTU8sU0FBUyxDQUFDQyxNQUFNLENBQUMsZUFBZSxDQUFDO1FBQ2pFUixNQUFNTyxTQUFTLENBQUNFLFlBQVksQ0FBQyxXQUFXLFdBQVc7WUFDakRKLFdBQVc7Z0JBQ1RLLFNBQVNDLE9BQ1AsZ0VBQ0dQLE1BQU0sR0FDUCxRQUNBQyxZQUNBO2dCQUVKTyxZQUFZO2dCQUNaQyxRQUFRO29CQUNOQyxVQUFVO3dCQUNSSixTQUFTO3dCQUNURSxZQUFZO29CQUNkO29CQUNBRyxPQUFPO3dCQUNMTCxTQUFTO3dCQUNURSxZQUFZO29CQUNkO29CQUNBSSxXQUFXO3dCQUNUTixTQUFTO3dCQUNURyxRQUFROzRCQUNOSSxhQUFhO3dCQUNmO29CQUNGO29CQUNBLGNBQWM7b0JBQ2RDLFNBQVNsQixNQUFNTyxTQUFTLENBQUNZLElBQUksQ0FBQ0QsT0FBTztvQkFDckNELGFBQWE7Z0JBQ2Y7WUFDRjtZQUNBLGNBQWM7Z0JBQ1osOENBQThDO2dCQUM5Q1AsU0FBUztnQkFDVEUsWUFBWTtnQkFDWkMsUUFBUTtvQkFDTkksYUFBYTtnQkFDZjtZQUNGO1lBQ0EsZ0JBQWdCO2dCQUNkO29CQUNFUCxTQUNFO29CQUNGRSxZQUFZO29CQUNaQyxRQUFRO3dCQUNOTyxNQUFNOzRCQUNKLGlEQUFpRDs0QkFDakRWLFNBQVNSOzRCQUNUVSxZQUFZOzRCQUNaQyxRQUFRYixNQUFNTyxTQUFTLENBQUNZLElBQUk7NEJBQzVCRSxPQUFPO3dCQUNUO29CQUNGO2dCQUNGO2dCQUNBO29CQUNFWCxTQUNFO29CQUNGRSxZQUFZO29CQUNaQyxRQUFRO3dCQUNOUyxNQUFNOzRCQUNKWixTQUFTUjs0QkFDVFUsWUFBWTs0QkFDWkMsUUFBUTtnQ0FDTixtQ0FBbUM7Z0NBQ25DVSxLQUFLdkIsTUFBTU8sU0FBUyxDQUFDaUIsTUFBTSxDQUFDRCxHQUFHO2dDQUMvQkUsUUFBUXpCLE1BQU1PLFNBQVMsQ0FBQ2lCLE1BQU0sQ0FBQ0MsTUFBTTtnQ0FDckNMLE1BQU07b0NBQ0osK0JBQStCO29DQUMvQlYsU0FBUztvQ0FDVEcsUUFBUWIsTUFBTU8sU0FBUyxDQUFDWSxJQUFJO29DQUM1QkUsT0FBTztnQ0FDVDs0QkFDRjt3QkFDRjtvQkFDRjtnQkFDRjthQUNEO1lBQ0RFLEtBQUt2QixNQUFNTyxTQUFTLENBQUNpQixNQUFNLENBQUNELEdBQUc7WUFDL0JFLFFBQVF6QixNQUFNTyxTQUFTLENBQUNpQixNQUFNLENBQUNDLE1BQU07UUFDdkM7UUFDQXpCLE1BQU1PLFNBQVMsQ0FBQ21CLFdBQVcsQ0FBQ0MsVUFBVSxDQUFDLFFBQVEzQixNQUFNTyxTQUFTLENBQUNWLE9BQU87SUFDeEUsR0FBR0c7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9qYXZhZG9jLmpzP2Y0YjEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG52YXIgcmVmcmFjdG9ySmF2YSA9IHJlcXVpcmUoJy4vamF2YS5qcycpXG52YXIgcmVmcmFjdG9ySmF2YWRvY2xpa2UgPSByZXF1aXJlKCcuL2phdmFkb2NsaWtlLmpzJylcbm1vZHVsZS5leHBvcnRzID0gamF2YWRvY1xuamF2YWRvYy5kaXNwbGF5TmFtZSA9ICdqYXZhZG9jJ1xuamF2YWRvYy5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGphdmFkb2MoUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9ySmF2YSlcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9ySmF2YWRvY2xpa2UpXG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIGNvZGVMaW5lUGF0dGVybiA9IC8oXig/OltcXHQgXSooPzpcXCpcXHMqKSopKVteKlxcc10uKiQvbVxuICAgIHZhciBtZW1iZXJSZWZlcmVuY2UgPSAvI1xccypcXHcrKD86XFxzKlxcKFteKCldKlxcKSk/Ly5zb3VyY2VcbiAgICB2YXIgcmVmZXJlbmNlID1cbiAgICAgIC8oPzpcXGJbYS16QS1aXVxcdytcXHMqXFwuXFxzKikqXFxiW0EtWl1cXHcqKD86XFxzKjxtZW0+KT98PG1lbT4vLnNvdXJjZS5yZXBsYWNlKFxuICAgICAgICAvPG1lbT4vZyxcbiAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHJldHVybiBtZW1iZXJSZWZlcmVuY2VcbiAgICAgICAgfVxuICAgICAgKVxuICAgIFByaXNtLmxhbmd1YWdlcy5qYXZhZG9jID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnamF2YWRvY2xpa2UnLCB7fSlcbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdqYXZhZG9jJywgJ2tleXdvcmQnLCB7XG4gICAgICByZWZlcmVuY2U6IHtcbiAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgIC8oQCg/OmV4Y2VwdGlvbnxsaW5rfGxpbmtwbGFpbnxzZWV8dGhyb3dzfHZhbHVlKVxccysoPzpcXCpcXHMqKT8pL1xuICAgICAgICAgICAgLnNvdXJjZSArXG4gICAgICAgICAgICAnKD86JyArXG4gICAgICAgICAgICByZWZlcmVuY2UgK1xuICAgICAgICAgICAgJyknXG4gICAgICAgICksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIGZ1bmN0aW9uOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvKCNcXHMqKVxcdysoPz1cXHMqXFwoKS8sXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgICAgfSxcbiAgICAgICAgICBmaWVsZDoge1xuICAgICAgICAgICAgcGF0dGVybjogLygjXFxzKilcXHcrLyxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgICB9LFxuICAgICAgICAgIG5hbWVzcGFjZToge1xuICAgICAgICAgICAgcGF0dGVybjogL1xcYig/OlthLXpdXFx3KlxccypcXC5cXHMqKSsvLFxuICAgICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXFwuL1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgJ2NsYXNzLW5hbWUnOiAvXFxiW0EtWl1cXHcqLyxcbiAgICAgICAgICBrZXl3b3JkOiBQcmlzbS5sYW5ndWFnZXMuamF2YS5rZXl3b3JkLFxuICAgICAgICAgIHB1bmN0dWF0aW9uOiAvWyMoKVtcXF0sLl0vXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICAnY2xhc3MtbmFtZSc6IHtcbiAgICAgICAgLy8gQHBhcmFtIDxUPiB0aGUgZmlyc3QgZ2VuZXJpYyB0eXBlIHBhcmFtZXRlclxuICAgICAgICBwYXR0ZXJuOiAvKEBwYXJhbVxccyspPFtBLVpdXFx3Kj4vLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjogL1suPD5dL1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgJ2NvZGUtc2VjdGlvbic6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAvKFxce0Bjb2RlXFxzKyg/IVxccykpKD86W15cXHN7fV18XFxzKyg/IVtcXHN9XSl8XFx7KD86W157fV18XFx7KD86W157fV18XFx7KD86W157fV18XFx7W157fV0qXFx9KSpcXH0pKlxcfSkqXFx9KSsoPz1cXHMqXFx9KS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIGNvZGU6IHtcbiAgICAgICAgICAgICAgLy8gdGhlcmUgY2FuJ3QgYmUgYW55IEhUTUwgaW5zaWRlIG9mIHtAY29kZX0gdGFnc1xuICAgICAgICAgICAgICBwYXR0ZXJuOiBjb2RlTGluZVBhdHRlcm4sXG4gICAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICAgIGluc2lkZTogUHJpc20ubGFuZ3VhZ2VzLmphdmEsXG4gICAgICAgICAgICAgIGFsaWFzOiAnbGFuZ3VhZ2UtamF2YSdcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgLyg8KGNvZGV8cHJlfHR0KT4oPyE8Y29kZT4pXFxzKilcXFMoPzpcXFN8XFxzK1xcUykqPyg/PVxccyo8XFwvXFwyPikvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICBsaW5lOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IGNvZGVMaW5lUGF0dGVybixcbiAgICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICAgICAgLy8gaGlnaGxpZ2h0IEhUTUwgdGFncyBhbmQgZW50aXRpZXNcbiAgICAgICAgICAgICAgICB0YWc6IFByaXNtLmxhbmd1YWdlcy5tYXJrdXAudGFnLFxuICAgICAgICAgICAgICAgIGVudGl0eTogUHJpc20ubGFuZ3VhZ2VzLm1hcmt1cC5lbnRpdHksXG4gICAgICAgICAgICAgICAgY29kZToge1xuICAgICAgICAgICAgICAgICAgLy8gZXZlcnl0aGluZyBlbHNlIGlzIEphdmEgY29kZVxuICAgICAgICAgICAgICAgICAgcGF0dGVybjogLy4rLyxcbiAgICAgICAgICAgICAgICAgIGluc2lkZTogUHJpc20ubGFuZ3VhZ2VzLmphdmEsXG4gICAgICAgICAgICAgICAgICBhbGlhczogJ2xhbmd1YWdlLWphdmEnXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgdGFnOiBQcmlzbS5sYW5ndWFnZXMubWFya3VwLnRhZyxcbiAgICAgIGVudGl0eTogUHJpc20ubGFuZ3VhZ2VzLm1hcmt1cC5lbnRpdHlcbiAgICB9KVxuICAgIFByaXNtLmxhbmd1YWdlcy5qYXZhZG9jbGlrZS5hZGRTdXBwb3J0KCdqYXZhJywgUHJpc20ubGFuZ3VhZ2VzLmphdmFkb2MpXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3RvckphdmEiLCJyZXF1aXJlIiwicmVmcmFjdG9ySmF2YWRvY2xpa2UiLCJtb2R1bGUiLCJleHBvcnRzIiwiamF2YWRvYyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJjb2RlTGluZVBhdHRlcm4iLCJtZW1iZXJSZWZlcmVuY2UiLCJzb3VyY2UiLCJyZWZlcmVuY2UiLCJyZXBsYWNlIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwiaW5zZXJ0QmVmb3JlIiwicGF0dGVybiIsIlJlZ0V4cCIsImxvb2tiZWhpbmQiLCJpbnNpZGUiLCJmdW5jdGlvbiIsImZpZWxkIiwibmFtZXNwYWNlIiwicHVuY3R1YXRpb24iLCJrZXl3b3JkIiwiamF2YSIsImNvZGUiLCJhbGlhcyIsImxpbmUiLCJ0YWciLCJtYXJrdXAiLCJlbnRpdHkiLCJqYXZhZG9jbGlrZSIsImFkZFN1cHBvcnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/javadoc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/javadoclike.js":
/*!****************************************************!*\
  !*** ./node_modules/refractor/lang/javadoclike.js ***!
  \****************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = javadoclike;\njavadoclike.displayName = \"javadoclike\";\njavadoclike.aliases = [];\nfunction javadoclike(Prism) {\n    ;\n    (function(Prism) {\n        var javaDocLike = Prism.languages.javadoclike = {\n            parameter: {\n                pattern: /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:arg|arguments|param)\\s+)\\w+/m,\n                lookbehind: true\n            },\n            keyword: {\n                // keywords are the first word in a line preceded be an `@` or surrounded by curly braces.\n                // @word, {@word}\n                pattern: /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,\n                lookbehind: true\n            },\n            punctuation: /[{}]/\n        };\n        /**\n     * Adds doc comment support to the given language and calls a given callback on each doc comment pattern.\n     *\n     * @param {string} lang the language add doc comment support to.\n     * @param {(pattern: {inside: {rest: undefined}}) => void} callback the function called with each doc comment pattern as argument.\n     */ function docCommentSupport(lang, callback) {\n            var tokenName = \"doc-comment\";\n            var grammar = Prism.languages[lang];\n            if (!grammar) {\n                return;\n            }\n            var token = grammar[tokenName];\n            if (!token) {\n                // add doc comment: /** */\n                var definition = {};\n                definition[tokenName] = {\n                    pattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,\n                    lookbehind: true,\n                    alias: \"comment\"\n                };\n                grammar = Prism.languages.insertBefore(lang, \"comment\", definition);\n                token = grammar[tokenName];\n            }\n            if (token instanceof RegExp) {\n                // convert regex to object\n                token = grammar[tokenName] = {\n                    pattern: token\n                };\n            }\n            if (Array.isArray(token)) {\n                for(var i = 0, l = token.length; i < l; i++){\n                    if (token[i] instanceof RegExp) {\n                        token[i] = {\n                            pattern: token[i]\n                        };\n                    }\n                    callback(token[i]);\n                }\n            } else {\n                callback(token);\n            }\n        }\n        /**\n     * Adds doc-comment support to the given languages for the given documentation language.\n     *\n     * @param {string[]|string} languages\n     * @param {Object} docLanguage\n     */ function addSupport(languages, docLanguage) {\n            if (typeof languages === \"string\") {\n                languages = [\n                    languages\n                ];\n            }\n            languages.forEach(function(lang) {\n                docCommentSupport(lang, function(pattern) {\n                    if (!pattern.inside) {\n                        pattern.inside = {};\n                    }\n                    pattern.inside.rest = docLanguage;\n                });\n            });\n        }\n        Object.defineProperty(javaDocLike, \"addSupport\", {\n            value: addSupport\n        });\n        javaDocLike.addSupport([\n            \"java\",\n            \"javascript\",\n            \"php\"\n        ], javaDocLike);\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvamF2YWRvY2xpa2UuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsWUFBWUMsV0FBVyxHQUFHO0FBQzFCRCxZQUFZRSxPQUFPLEdBQUcsRUFBRTtBQUN4QixTQUFTRixZQUFZRyxLQUFLOztJQUN0QixVQUFVQSxLQUFLO1FBQ2YsSUFBSUMsY0FBZUQsTUFBTUUsU0FBUyxDQUFDTCxXQUFXLEdBQUc7WUFDL0NNLFdBQVc7Z0JBQ1RDLFNBQ0U7Z0JBQ0ZDLFlBQVk7WUFDZDtZQUNBQyxTQUFTO2dCQUNQLDBGQUEwRjtnQkFDMUYsaUJBQWlCO2dCQUNqQkYsU0FBUztnQkFDVEMsWUFBWTtZQUNkO1lBQ0FFLGFBQWE7UUFDZjtRQUNBOzs7OztLQUtDLEdBQ0QsU0FBU0Msa0JBQWtCQyxJQUFJLEVBQUVDLFFBQVE7WUFDdkMsSUFBSUMsWUFBWTtZQUNoQixJQUFJQyxVQUFVWixNQUFNRSxTQUFTLENBQUNPLEtBQUs7WUFDbkMsSUFBSSxDQUFDRyxTQUFTO2dCQUNaO1lBQ0Y7WUFDQSxJQUFJQyxRQUFRRCxPQUFPLENBQUNELFVBQVU7WUFDOUIsSUFBSSxDQUFDRSxPQUFPO2dCQUNWLDBCQUEwQjtnQkFDMUIsSUFBSUMsYUFBYSxDQUFDO2dCQUNsQkEsVUFBVSxDQUFDSCxVQUFVLEdBQUc7b0JBQ3RCUCxTQUFTO29CQUNUQyxZQUFZO29CQUNaVSxPQUFPO2dCQUNUO2dCQUNBSCxVQUFVWixNQUFNRSxTQUFTLENBQUNjLFlBQVksQ0FBQ1AsTUFBTSxXQUFXSztnQkFDeERELFFBQVFELE9BQU8sQ0FBQ0QsVUFBVTtZQUM1QjtZQUNBLElBQUlFLGlCQUFpQkksUUFBUTtnQkFDM0IsMEJBQTBCO2dCQUMxQkosUUFBUUQsT0FBTyxDQUFDRCxVQUFVLEdBQUc7b0JBQzNCUCxTQUFTUztnQkFDWDtZQUNGO1lBQ0EsSUFBSUssTUFBTUMsT0FBTyxDQUFDTixRQUFRO2dCQUN4QixJQUFLLElBQUlPLElBQUksR0FBR0MsSUFBSVIsTUFBTVMsTUFBTSxFQUFFRixJQUFJQyxHQUFHRCxJQUFLO29CQUM1QyxJQUFJUCxLQUFLLENBQUNPLEVBQUUsWUFBWUgsUUFBUTt3QkFDOUJKLEtBQUssQ0FBQ08sRUFBRSxHQUFHOzRCQUNUaEIsU0FBU1MsS0FBSyxDQUFDTyxFQUFFO3dCQUNuQjtvQkFDRjtvQkFDQVYsU0FBU0csS0FBSyxDQUFDTyxFQUFFO2dCQUNuQjtZQUNGLE9BQU87Z0JBQ0xWLFNBQVNHO1lBQ1g7UUFDRjtRQUNBOzs7OztLQUtDLEdBQ0QsU0FBU1UsV0FBV3JCLFNBQVMsRUFBRXNCLFdBQVc7WUFDeEMsSUFBSSxPQUFPdEIsY0FBYyxVQUFVO2dCQUNqQ0EsWUFBWTtvQkFBQ0E7aUJBQVU7WUFDekI7WUFDQUEsVUFBVXVCLE9BQU8sQ0FBQyxTQUFVaEIsSUFBSTtnQkFDOUJELGtCQUFrQkMsTUFBTSxTQUFVTCxPQUFPO29CQUN2QyxJQUFJLENBQUNBLFFBQVFzQixNQUFNLEVBQUU7d0JBQ25CdEIsUUFBUXNCLE1BQU0sR0FBRyxDQUFDO29CQUNwQjtvQkFDQXRCLFFBQVFzQixNQUFNLENBQUNDLElBQUksR0FBR0g7Z0JBQ3hCO1lBQ0Y7UUFDRjtRQUNBSSxPQUFPQyxjQUFjLENBQUM1QixhQUFhLGNBQWM7WUFDL0M2QixPQUFPUDtRQUNUO1FBQ0F0QixZQUFZc0IsVUFBVSxDQUFDO1lBQUM7WUFBUTtZQUFjO1NBQU0sRUFBRXRCO0lBQ3hELEdBQUdEO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvamF2YWRvY2xpa2UuanM/NjIzYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBqYXZhZG9jbGlrZVxuamF2YWRvY2xpa2UuZGlzcGxheU5hbWUgPSAnamF2YWRvY2xpa2UnXG5qYXZhZG9jbGlrZS5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGphdmFkb2NsaWtlKFByaXNtKSB7XG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIGphdmFEb2NMaWtlID0gKFByaXNtLmxhbmd1YWdlcy5qYXZhZG9jbGlrZSA9IHtcbiAgICAgIHBhcmFtZXRlcjoge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXltcXHQgXSooPzpcXC97M318XFwqfFxcL1xcKlxcKilcXHMqQCg/OmFyZ3xhcmd1bWVudHN8cGFyYW0pXFxzKylcXHcrL20sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBrZXl3b3JkOiB7XG4gICAgICAgIC8vIGtleXdvcmRzIGFyZSB0aGUgZmlyc3Qgd29yZCBpbiBhIGxpbmUgcHJlY2VkZWQgYmUgYW4gYEBgIG9yIHN1cnJvdW5kZWQgYnkgY3VybHkgYnJhY2VzLlxuICAgICAgICAvLyBAd29yZCwge0B3b3JkfVxuICAgICAgICBwYXR0ZXJuOiAvKF5bXFx0IF0qKD86XFwvezN9fFxcKnxcXC9cXCpcXCopXFxzKnxcXHspQFthLXpdW2EtekEtWi1dK1xcYi9tLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAgcHVuY3R1YXRpb246IC9be31dL1xuICAgIH0pXG4gICAgLyoqXG4gICAgICogQWRkcyBkb2MgY29tbWVudCBzdXBwb3J0IHRvIHRoZSBnaXZlbiBsYW5ndWFnZSBhbmQgY2FsbHMgYSBnaXZlbiBjYWxsYmFjayBvbiBlYWNoIGRvYyBjb21tZW50IHBhdHRlcm4uXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gbGFuZyB0aGUgbGFuZ3VhZ2UgYWRkIGRvYyBjb21tZW50IHN1cHBvcnQgdG8uXG4gICAgICogQHBhcmFtIHsocGF0dGVybjoge2luc2lkZToge3Jlc3Q6IHVuZGVmaW5lZH19KSA9PiB2b2lkfSBjYWxsYmFjayB0aGUgZnVuY3Rpb24gY2FsbGVkIHdpdGggZWFjaCBkb2MgY29tbWVudCBwYXR0ZXJuIGFzIGFyZ3VtZW50LlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGRvY0NvbW1lbnRTdXBwb3J0KGxhbmcsIGNhbGxiYWNrKSB7XG4gICAgICB2YXIgdG9rZW5OYW1lID0gJ2RvYy1jb21tZW50J1xuICAgICAgdmFyIGdyYW1tYXIgPSBQcmlzbS5sYW5ndWFnZXNbbGFuZ11cbiAgICAgIGlmICghZ3JhbW1hcikge1xuICAgICAgICByZXR1cm5cbiAgICAgIH1cbiAgICAgIHZhciB0b2tlbiA9IGdyYW1tYXJbdG9rZW5OYW1lXVxuICAgICAgaWYgKCF0b2tlbikge1xuICAgICAgICAvLyBhZGQgZG9jIGNvbW1lbnQ6IC8qKiAqL1xuICAgICAgICB2YXIgZGVmaW5pdGlvbiA9IHt9XG4gICAgICAgIGRlZmluaXRpb25bdG9rZW5OYW1lXSA9IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKF58W15cXFxcXSlcXC9cXCpcXCpbXi9dW1xcc1xcU10qPyg/OlxcKlxcL3wkKS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBhbGlhczogJ2NvbW1lbnQnXG4gICAgICAgIH1cbiAgICAgICAgZ3JhbW1hciA9IFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUobGFuZywgJ2NvbW1lbnQnLCBkZWZpbml0aW9uKVxuICAgICAgICB0b2tlbiA9IGdyYW1tYXJbdG9rZW5OYW1lXVxuICAgICAgfVxuICAgICAgaWYgKHRva2VuIGluc3RhbmNlb2YgUmVnRXhwKSB7XG4gICAgICAgIC8vIGNvbnZlcnQgcmVnZXggdG8gb2JqZWN0XG4gICAgICAgIHRva2VuID0gZ3JhbW1hclt0b2tlbk5hbWVdID0ge1xuICAgICAgICAgIHBhdHRlcm46IHRva2VuXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHRva2VuKSkge1xuICAgICAgICBmb3IgKHZhciBpID0gMCwgbCA9IHRva2VuLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgIGlmICh0b2tlbltpXSBpbnN0YW5jZW9mIFJlZ0V4cCkge1xuICAgICAgICAgICAgdG9rZW5baV0gPSB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IHRva2VuW2ldXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGNhbGxiYWNrKHRva2VuW2ldKVxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjYWxsYmFjayh0b2tlbilcbiAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQWRkcyBkb2MtY29tbWVudCBzdXBwb3J0IHRvIHRoZSBnaXZlbiBsYW5ndWFnZXMgZm9yIHRoZSBnaXZlbiBkb2N1bWVudGF0aW9uIGxhbmd1YWdlLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmdbXXxzdHJpbmd9IGxhbmd1YWdlc1xuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBkb2NMYW5ndWFnZVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGFkZFN1cHBvcnQobGFuZ3VhZ2VzLCBkb2NMYW5ndWFnZSkge1xuICAgICAgaWYgKHR5cGVvZiBsYW5ndWFnZXMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGxhbmd1YWdlcyA9IFtsYW5ndWFnZXNdXG4gICAgICB9XG4gICAgICBsYW5ndWFnZXMuZm9yRWFjaChmdW5jdGlvbiAobGFuZykge1xuICAgICAgICBkb2NDb21tZW50U3VwcG9ydChsYW5nLCBmdW5jdGlvbiAocGF0dGVybikge1xuICAgICAgICAgIGlmICghcGF0dGVybi5pbnNpZGUpIHtcbiAgICAgICAgICAgIHBhdHRlcm4uaW5zaWRlID0ge31cbiAgICAgICAgICB9XG4gICAgICAgICAgcGF0dGVybi5pbnNpZGUucmVzdCA9IGRvY0xhbmd1YWdlXG4gICAgICAgIH0pXG4gICAgICB9KVxuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoamF2YURvY0xpa2UsICdhZGRTdXBwb3J0Jywge1xuICAgICAgdmFsdWU6IGFkZFN1cHBvcnRcbiAgICB9KVxuICAgIGphdmFEb2NMaWtlLmFkZFN1cHBvcnQoWydqYXZhJywgJ2phdmFzY3JpcHQnLCAncGhwJ10sIGphdmFEb2NMaWtlKVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiamF2YWRvY2xpa2UiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImphdmFEb2NMaWtlIiwibGFuZ3VhZ2VzIiwicGFyYW1ldGVyIiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJrZXl3b3JkIiwicHVuY3R1YXRpb24iLCJkb2NDb21tZW50U3VwcG9ydCIsImxhbmciLCJjYWxsYmFjayIsInRva2VuTmFtZSIsImdyYW1tYXIiLCJ0b2tlbiIsImRlZmluaXRpb24iLCJhbGlhcyIsImluc2VydEJlZm9yZSIsIlJlZ0V4cCIsIkFycmF5IiwiaXNBcnJheSIsImkiLCJsIiwibGVuZ3RoIiwiYWRkU3VwcG9ydCIsImRvY0xhbmd1YWdlIiwiZm9yRWFjaCIsImluc2lkZSIsInJlc3QiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/javadoclike.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/javascript.js":
/*!***************************************************!*\
  !*** ./node_modules/refractor/lang/javascript.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = javascript;\njavascript.displayName = \"javascript\";\njavascript.aliases = [\n    \"js\"\n];\nfunction javascript(Prism) {\n    Prism.languages.javascript = Prism.languages.extend(\"clike\", {\n        \"class-name\": [\n            Prism.languages.clike[\"class-name\"],\n            {\n                pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n                lookbehind: true\n            }\n        ],\n        keyword: [\n            {\n                pattern: /((?:^|\\})\\s*)catch\\b/,\n                lookbehind: true\n            },\n            {\n                pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n                lookbehind: true\n            }\n        ],\n        // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n        function: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n        number: {\n            pattern: RegExp(/(^|[^\\w$])/.source + \"(?:\" + // constant\n            (/NaN|Infinity/.source + \"|\" + // binary integer\n            /0[bB][01]+(?:_[01]+)*n?/.source + \"|\" + // octal integer\n            /0[oO][0-7]+(?:_[0-7]+)*n?/.source + \"|\" + // hexadecimal integer\n            /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source + \"|\" + // decimal bigint\n            /\\d+(?:_\\d+)*n/.source + \"|\" + // decimal number (integer or float) but no bigint\n            /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source) + \")\" + /(?![\\w$])/.source),\n            lookbehind: true\n        },\n        operator: /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n    });\n    Prism.languages.javascript[\"class-name\"][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n    Prism.languages.insertBefore(\"javascript\", \"keyword\", {\n        regex: {\n            // eslint-disable-next-line regexp/no-dupe-characters-character-class\n            pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n            lookbehind: true,\n            greedy: true,\n            inside: {\n                \"regex-source\": {\n                    pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n                    lookbehind: true,\n                    alias: \"language-regex\",\n                    inside: Prism.languages.regex\n                },\n                \"regex-delimiter\": /^\\/|\\/$/,\n                \"regex-flags\": /^[a-z]+$/\n            }\n        },\n        // This must be declared before keyword because we use \"function\" inside the look-forward\n        \"function-variable\": {\n            pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n            alias: \"function\"\n        },\n        parameter: [\n            {\n                pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n                lookbehind: true,\n                inside: Prism.languages.javascript\n            },\n            {\n                pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n                lookbehind: true,\n                inside: Prism.languages.javascript\n            },\n            {\n                pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n                lookbehind: true,\n                inside: Prism.languages.javascript\n            },\n            {\n                pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n                lookbehind: true,\n                inside: Prism.languages.javascript\n            }\n        ],\n        constant: /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n    });\n    Prism.languages.insertBefore(\"javascript\", \"string\", {\n        hashbang: {\n            pattern: /^#!.*/,\n            greedy: true,\n            alias: \"comment\"\n        },\n        \"template-string\": {\n            pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n            greedy: true,\n            inside: {\n                \"template-punctuation\": {\n                    pattern: /^`|`$/,\n                    alias: \"string\"\n                },\n                interpolation: {\n                    pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n                    lookbehind: true,\n                    inside: {\n                        \"interpolation-punctuation\": {\n                            pattern: /^\\$\\{|\\}$/,\n                            alias: \"punctuation\"\n                        },\n                        rest: Prism.languages.javascript\n                    }\n                },\n                string: /[\\s\\S]+/\n            }\n        },\n        \"string-property\": {\n            pattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n            lookbehind: true,\n            greedy: true,\n            alias: \"property\"\n        }\n    });\n    Prism.languages.insertBefore(\"javascript\", \"operator\", {\n        \"literal-property\": {\n            pattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n            lookbehind: true,\n            alias: \"property\"\n        }\n    });\n    if (Prism.languages.markup) {\n        Prism.languages.markup.tag.addInlined(\"script\", \"javascript\") // add attribute support for all DOM events.\n        ;\n        // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n        Prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, \"javascript\");\n    }\n    Prism.languages.js = Prism.languages.javascript;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/javascript.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/javastacktrace.js":
/*!*******************************************************!*\
  !*** ./node_modules/refractor/lang/javastacktrace.js ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = javastacktrace;\njavastacktrace.displayName = \"javastacktrace\";\njavastacktrace.aliases = [];\nfunction javastacktrace(Prism) {\n    // Specification:\n    // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/Throwable.html#printStackTrace()\n    Prism.languages.javastacktrace = {\n        // java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n        // Caused by: java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n        // Caused by: com.example.myproject.MyProjectServletException\n        // Caused by: MidLevelException: LowLevelException\n        // Suppressed: Resource$CloseFailException: Resource ID = 0\n        summary: {\n            pattern: /^([\\t ]*)(?:(?:Caused by:|Suppressed:|Exception in thread \"[^\"]*\")[\\t ]+)?[\\w$.]+(?::.*)?$/m,\n            lookbehind: true,\n            inside: {\n                keyword: {\n                    pattern: /^([\\t ]*)(?:(?:Caused by|Suppressed)(?=:)|Exception in thread)/m,\n                    lookbehind: true\n                },\n                // the current thread if the summary starts with 'Exception in thread'\n                string: {\n                    pattern: /^(\\s*)\"[^\"]*\"/,\n                    lookbehind: true\n                },\n                exceptions: {\n                    pattern: /^(:?\\s*)[\\w$.]+(?=:|$)/,\n                    lookbehind: true,\n                    inside: {\n                        \"class-name\": /[\\w$]+$/,\n                        namespace: /\\b[a-z]\\w*\\b/,\n                        punctuation: /\\./\n                    }\n                },\n                message: {\n                    pattern: /(:\\s*)\\S.*/,\n                    lookbehind: true,\n                    alias: \"string\"\n                },\n                punctuation: /:/\n            }\n        },\n        // at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1166)\n        // at org.hsqldb.jdbc.Util.throwError(Unknown Source) here could be some notes\n        // at java.base/java.lang.Class.forName0(Native Method)\n        // at Util.<init>(Unknown Source)\n        // at com.foo.loader/foo@9.0/com.foo.Main.run(Main.java:101)\n        // at com.foo.loader//com.foo.bar.App.run(App.java:12)\n        // at acme@2.1/org.acme.Lib.test(Lib.java:80)\n        // at MyClass.mash(MyClass.java:9)\n        //\n        // More information:\n        // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/StackTraceElement.html#toString()\n        //\n        // A valid Java module name is defined as:\n        //   \"A module name consists of one or more Java identifiers (§3.8) separated by \".\" tokens.\"\n        // https://docs.oracle.com/javase/specs/jls/se9/html/jls-6.html#jls-ModuleName\n        //\n        // A Java module version is defined by this class:\n        // https://docs.oracle.com/javase/9/docs/api/java/lang/module/ModuleDescriptor.Version.html\n        // This is the implementation of the `parse` method in JDK13:\n        // https://github.com/matcdac/jdk/blob/2305df71d1b7710266ae0956d73927a225132c0f/src/java.base/share/classes/java/lang/module/ModuleDescriptor.java#L1108\n        // However, to keep this simple, a version will be matched by the pattern /@[\\w$.+-]*/.\n        \"stack-frame\": {\n            pattern: /^([\\t ]*)at (?:[\\w$./]|@[\\w$.+-]*\\/)+(?:<init>)?\\([^()]*\\)/m,\n            lookbehind: true,\n            inside: {\n                keyword: {\n                    pattern: /^(\\s*)at(?= )/,\n                    lookbehind: true\n                },\n                source: [\n                    // (Main.java:15)\n                    // (Main.scala:15)\n                    {\n                        pattern: /(\\()\\w+\\.\\w+:\\d+(?=\\))/,\n                        lookbehind: true,\n                        inside: {\n                            file: /^\\w+\\.\\w+/,\n                            punctuation: /:/,\n                            \"line-number\": {\n                                pattern: /\\b\\d+\\b/,\n                                alias: \"number\"\n                            }\n                        }\n                    },\n                    // (Native Method)\n                    // (...something...)\n                    {\n                        pattern: /(\\()[^()]*(?=\\))/,\n                        lookbehind: true,\n                        inside: {\n                            keyword: /^(?:Native Method|Unknown Source)$/\n                        }\n                    }\n                ],\n                \"class-name\": /[\\w$]+(?=\\.(?:<init>|[\\w$]+)\\()/,\n                function: /(?:<init>|[\\w$]+)(?=\\()/,\n                \"class-loader\": {\n                    pattern: /(\\s)[a-z]\\w*(?:\\.[a-z]\\w*)*(?=\\/[\\w@$.]*\\/)/,\n                    lookbehind: true,\n                    alias: \"namespace\",\n                    inside: {\n                        punctuation: /\\./\n                    }\n                },\n                module: {\n                    pattern: /([\\s/])[a-z]\\w*(?:\\.[a-z]\\w*)*(?:@[\\w$.+-]*)?(?=\\/)/,\n                    lookbehind: true,\n                    inside: {\n                        version: {\n                            pattern: /(@)[\\s\\S]+/,\n                            lookbehind: true,\n                            alias: \"number\"\n                        },\n                        punctuation: /[@.]/\n                    }\n                },\n                namespace: {\n                    pattern: /(?:\\b[a-z]\\w*\\.)+/,\n                    inside: {\n                        punctuation: /\\./\n                    }\n                },\n                punctuation: /[()/.]/\n            }\n        },\n        // ... 32 more\n        // ... 32 common frames omitted\n        more: {\n            pattern: /^([\\t ]*)\\.{3} \\d+ [a-z]+(?: [a-z]+)*/m,\n            lookbehind: true,\n            inside: {\n                punctuation: /\\.{3}/,\n                number: /\\d+/,\n                keyword: /\\b[a-z]+(?: [a-z]+)*\\b/\n            }\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/javastacktrace.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/jexl.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/jexl.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = jexl;\njexl.displayName = \"jexl\";\njexl.aliases = [];\nfunction jexl(Prism) {\n    Prism.languages.jexl = {\n        string: /([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        transform: {\n            pattern: /(\\|\\s*)[a-zA-Zа-яА-Я_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$][\\wа-яА-Я\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$]*/,\n            alias: \"function\",\n            lookbehind: true\n        },\n        function: /[a-zA-Zа-яА-Я_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$][\\wа-яА-Я\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$]*\\s*(?=\\()/,\n        number: /\\b\\d+(?:\\.\\d+)?\\b|\\B\\.\\d+\\b/,\n        operator: /[<>!]=?|-|\\+|&&|==|\\|\\|?|\\/\\/?|[?:*^%]/,\n        boolean: /\\b(?:false|true)\\b/,\n        keyword: /\\bin\\b/,\n        punctuation: /[{}[\\](),.]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvamV4bC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDakJBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHO1FBQ3JCSyxRQUFRO1FBQ1JDLFdBQVc7WUFDVEMsU0FDRTtZQUNGQyxPQUFPO1lBQ1BDLFlBQVk7UUFDZDtRQUNBQyxVQUNFO1FBQ0ZDLFFBQVE7UUFDUkMsVUFBVTtRQUNWQyxTQUFTO1FBQ1RDLFNBQVM7UUFDVEMsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvamV4bC5qcz8zZmJlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGpleGxcbmpleGwuZGlzcGxheU5hbWUgPSAnamV4bCdcbmpleGwuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBqZXhsKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5qZXhsID0ge1xuICAgIHN0cmluZzogLyhbXCInXSkoPzpcXFxcW1xcc1xcU118KD8hXFwxKVteXFxcXF0pKlxcMS8sXG4gICAgdHJhbnNmb3JtOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKFxcfFxccyopW2EtekEtWtCwLdGP0JAt0K9fXFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMEZGJF1bXFx30LAt0Y/QkC3Qr1xcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDBGRiRdKi8sXG4gICAgICBhbGlhczogJ2Z1bmN0aW9uJyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIGZ1bmN0aW9uOlxuICAgICAgL1thLXpBLVrQsC3Rj9CQLdCvX1xcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDBGRiRdW1xcd9CwLdGP0JAt0K9cXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAwRkYkXSpcXHMqKD89XFwoKS8sXG4gICAgbnVtYmVyOiAvXFxiXFxkKyg/OlxcLlxcZCspP1xcYnxcXEJcXC5cXGQrXFxiLyxcbiAgICBvcGVyYXRvcjogL1s8PiFdPT98LXxcXCt8JiZ8PT18XFx8XFx8P3xcXC9cXC8/fFs/OipeJV0vLFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAga2V5d29yZDogL1xcYmluXFxiLyxcbiAgICBwdW5jdHVhdGlvbjogL1t7fVtcXF0oKSwuXS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJqZXhsIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJzdHJpbmciLCJ0cmFuc2Zvcm0iLCJwYXR0ZXJuIiwiYWxpYXMiLCJsb29rYmVoaW5kIiwiZnVuY3Rpb24iLCJudW1iZXIiLCJvcGVyYXRvciIsImJvb2xlYW4iLCJrZXl3b3JkIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/jexl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/jolie.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/jolie.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = jolie;\njolie.displayName = \"jolie\";\njolie.aliases = [];\nfunction jolie(Prism) {\n    Prism.languages.jolie = Prism.languages.extend(\"clike\", {\n        string: {\n            pattern: /(^|[^\\\\])\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n            lookbehind: true,\n            greedy: true\n        },\n        \"class-name\": {\n            pattern: /((?:\\b(?:as|courier|embed|in|inputPort|outputPort|service)\\b|@)[ \\t]*)\\w+/,\n            lookbehind: true\n        },\n        keyword: /\\b(?:as|cH|comp|concurrent|constants|courier|cset|csets|default|define|else|embed|embedded|execution|exit|extender|for|foreach|forward|from|global|if|import|in|include|init|inputPort|install|instanceof|interface|is_defined|linkIn|linkOut|main|new|nullProcess|outputPort|over|private|provide|public|scope|sequential|service|single|spawn|synchronized|this|throw|throws|type|undef|until|while|with)\\b/,\n        function: /\\b[a-z_]\\w*(?=[ \\t]*[@(])/i,\n        number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?l?/i,\n        operator: /-[-=>]?|\\+[+=]?|<[<=]?|[>=*!]=?|&&|\\|\\||[?\\/%^@|]/,\n        punctuation: /[()[\\]{},;.:]/,\n        builtin: /\\b(?:Byte|any|bool|char|double|enum|float|int|length|long|ranges|regex|string|undefined|void)\\b/\n    });\n    Prism.languages.insertBefore(\"jolie\", \"keyword\", {\n        aggregates: {\n            pattern: /(\\bAggregates\\s*:\\s*)(?:\\w+(?:\\s+with\\s+\\w+)?\\s*,\\s*)*\\w+(?:\\s+with\\s+\\w+)?/,\n            lookbehind: true,\n            inside: {\n                keyword: /\\bwith\\b/,\n                \"class-name\": /\\w+/,\n                punctuation: /,/\n            }\n        },\n        redirects: {\n            pattern: /(\\bRedirects\\s*:\\s*)(?:\\w+\\s*=>\\s*\\w+\\s*,\\s*)*(?:\\w+\\s*=>\\s*\\w+)/,\n            lookbehind: true,\n            inside: {\n                punctuation: /,/,\n                \"class-name\": /\\w+/,\n                operator: /=>/\n            }\n        },\n        property: {\n            pattern: /\\b(?:Aggregates|[Ii]nterfaces|Java|Javascript|Jolie|[Ll]ocation|OneWay|[Pp]rotocol|Redirects|RequestResponse)\\b(?=[ \\t]*:)/\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvam9saWUuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsTUFBTUMsV0FBVyxHQUFHO0FBQ3BCRCxNQUFNRSxPQUFPLEdBQUcsRUFBRTtBQUNsQixTQUFTRixNQUFNRyxLQUFLO0lBQ2xCQSxNQUFNQyxTQUFTLENBQUNKLEtBQUssR0FBR0csTUFBTUMsU0FBUyxDQUFDQyxNQUFNLENBQUMsU0FBUztRQUN0REMsUUFBUTtZQUNOQyxTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsUUFBUTtRQUNWO1FBQ0EsY0FBYztZQUNaRixTQUNFO1lBQ0ZDLFlBQVk7UUFDZDtRQUNBRSxTQUNFO1FBQ0ZDLFVBQVU7UUFDVkMsUUFBUTtRQUNSQyxVQUFVO1FBQ1ZDLGFBQWE7UUFDYkMsU0FDRTtJQUNKO0lBQ0FaLE1BQU1DLFNBQVMsQ0FBQ1ksWUFBWSxDQUFDLFNBQVMsV0FBVztRQUMvQ0MsWUFBWTtZQUNWVixTQUNFO1lBQ0ZDLFlBQVk7WUFDWlUsUUFBUTtnQkFDTlIsU0FBUztnQkFDVCxjQUFjO2dCQUNkSSxhQUFhO1lBQ2Y7UUFDRjtRQUNBSyxXQUFXO1lBQ1RaLFNBQ0U7WUFDRkMsWUFBWTtZQUNaVSxRQUFRO2dCQUNOSixhQUFhO2dCQUNiLGNBQWM7Z0JBQ2RELFVBQVU7WUFDWjtRQUNGO1FBQ0FPLFVBQVU7WUFDUmIsU0FDRTtRQUNKO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9qb2xpZS5qcz9jNjAzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGpvbGllXG5qb2xpZS5kaXNwbGF5TmFtZSA9ICdqb2xpZSdcbmpvbGllLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gam9saWUoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmpvbGllID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnY2xpa2UnLCB7XG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvKF58W15cXFxcXSlcIig/OlxcXFxbXFxzXFxTXXxbXlwiXFxcXF0pKlwiLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgICdjbGFzcy1uYW1lJzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLygoPzpcXGIoPzphc3xjb3VyaWVyfGVtYmVkfGlufGlucHV0UG9ydHxvdXRwdXRQb3J0fHNlcnZpY2UpXFxifEApWyBcXHRdKilcXHcrLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YXN8Y0h8Y29tcHxjb25jdXJyZW50fGNvbnN0YW50c3xjb3VyaWVyfGNzZXR8Y3NldHN8ZGVmYXVsdHxkZWZpbmV8ZWxzZXxlbWJlZHxlbWJlZGRlZHxleGVjdXRpb258ZXhpdHxleHRlbmRlcnxmb3J8Zm9yZWFjaHxmb3J3YXJkfGZyb218Z2xvYmFsfGlmfGltcG9ydHxpbnxpbmNsdWRlfGluaXR8aW5wdXRQb3J0fGluc3RhbGx8aW5zdGFuY2VvZnxpbnRlcmZhY2V8aXNfZGVmaW5lZHxsaW5rSW58bGlua091dHxtYWlufG5ld3xudWxsUHJvY2Vzc3xvdXRwdXRQb3J0fG92ZXJ8cHJpdmF0ZXxwcm92aWRlfHB1YmxpY3xzY29wZXxzZXF1ZW50aWFsfHNlcnZpY2V8c2luZ2xlfHNwYXdufHN5bmNocm9uaXplZHx0aGlzfHRocm93fHRocm93c3x0eXBlfHVuZGVmfHVudGlsfHdoaWxlfHdpdGgpXFxiLyxcbiAgICBmdW5jdGlvbjogL1xcYlthLXpfXVxcdyooPz1bIFxcdF0qW0AoXSkvaSxcbiAgICBudW1iZXI6IC8oPzpcXGJcXGQrKD86XFwuXFxkKik/fFxcQlxcLlxcZCspKD86ZVsrLV0/XFxkKyk/bD8vaSxcbiAgICBvcGVyYXRvcjogLy1bLT0+XT98XFwrWys9XT98PFs8PV0/fFs+PSohXT0/fCYmfFxcfFxcfHxbP1xcLyVeQHxdLyxcbiAgICBwdW5jdHVhdGlvbjogL1soKVtcXF17fSw7LjpdLyxcbiAgICBidWlsdGluOlxuICAgICAgL1xcYig/OkJ5dGV8YW55fGJvb2x8Y2hhcnxkb3VibGV8ZW51bXxmbG9hdHxpbnR8bGVuZ3RofGxvbmd8cmFuZ2VzfHJlZ2V4fHN0cmluZ3x1bmRlZmluZWR8dm9pZClcXGIvXG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ2pvbGllJywgJ2tleXdvcmQnLCB7XG4gICAgYWdncmVnYXRlczoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhcXGJBZ2dyZWdhdGVzXFxzKjpcXHMqKSg/OlxcdysoPzpcXHMrd2l0aFxccytcXHcrKT9cXHMqLFxccyopKlxcdysoPzpcXHMrd2l0aFxccytcXHcrKT8vLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBrZXl3b3JkOiAvXFxid2l0aFxcYi8sXG4gICAgICAgICdjbGFzcy1uYW1lJzogL1xcdysvLFxuICAgICAgICBwdW5jdHVhdGlvbjogLywvXG4gICAgICB9XG4gICAgfSxcbiAgICByZWRpcmVjdHM6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXFxiUmVkaXJlY3RzXFxzKjpcXHMqKSg/OlxcdytcXHMqPT5cXHMqXFx3K1xccyosXFxzKikqKD86XFx3K1xccyo9PlxccypcXHcrKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHB1bmN0dWF0aW9uOiAvLC8sXG4gICAgICAgICdjbGFzcy1uYW1lJzogL1xcdysvLFxuICAgICAgICBvcGVyYXRvcjogLz0+L1xuICAgICAgfVxuICAgIH0sXG4gICAgcHJvcGVydHk6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC9cXGIoPzpBZ2dyZWdhdGVzfFtJaV1udGVyZmFjZXN8SmF2YXxKYXZhc2NyaXB0fEpvbGllfFtMbF1vY2F0aW9ufE9uZVdheXxbUHBdcm90b2NvbHxSZWRpcmVjdHN8UmVxdWVzdFJlc3BvbnNlKVxcYig/PVsgXFx0XSo6KS9cbiAgICB9XG4gIH0pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImpvbGllIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJzdHJpbmciLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImdyZWVkeSIsImtleXdvcmQiLCJmdW5jdGlvbiIsIm51bWJlciIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iLCJidWlsdGluIiwiaW5zZXJ0QmVmb3JlIiwiYWdncmVnYXRlcyIsImluc2lkZSIsInJlZGlyZWN0cyIsInByb3BlcnR5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/jolie.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/jq.js":
/*!*******************************************!*\
  !*** ./node_modules/refractor/lang/jq.js ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = jq;\njq.displayName = \"jq\";\njq.aliases = [];\nfunction jq(Prism) {\n    ;\n    (function(Prism) {\n        var interpolation = /\\\\\\((?:[^()]|\\([^()]*\\))*\\)/.source;\n        var string = RegExp(/(^|[^\\\\])\"(?:[^\"\\r\\n\\\\]|\\\\[^\\r\\n(]|__)*\"/.source.replace(/__/g, function() {\n            return interpolation;\n        }));\n        var stringInterpolation = {\n            interpolation: {\n                pattern: RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + interpolation),\n                lookbehind: true,\n                inside: {\n                    content: {\n                        pattern: /^(\\\\\\()[\\s\\S]+(?=\\)$)/,\n                        lookbehind: true,\n                        inside: null // see below\n                    },\n                    punctuation: /^\\\\\\(|\\)$/\n                }\n            }\n        };\n        var jq = Prism.languages.jq = {\n            comment: /#.*/,\n            property: {\n                pattern: RegExp(string.source + /(?=\\s*:(?!:))/.source),\n                lookbehind: true,\n                greedy: true,\n                inside: stringInterpolation\n            },\n            string: {\n                pattern: string,\n                lookbehind: true,\n                greedy: true,\n                inside: stringInterpolation\n            },\n            function: {\n                pattern: /(\\bdef\\s+)[a-z_]\\w+/i,\n                lookbehind: true\n            },\n            variable: /\\B\\$\\w+/,\n            \"property-literal\": {\n                pattern: /\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n                alias: \"property\"\n            },\n            keyword: /\\b(?:as|break|catch|def|elif|else|end|foreach|if|import|include|label|module|modulemeta|null|reduce|then|try|while)\\b/,\n            boolean: /\\b(?:false|true)\\b/,\n            number: /(?:\\b\\d+\\.|\\B\\.)?\\b\\d+(?:[eE][+-]?\\d+)?\\b/,\n            operator: [\n                {\n                    pattern: /\\|=?/,\n                    alias: \"pipe\"\n                },\n                /\\.\\.|[!=<>]?=|\\?\\/\\/|\\/\\/=?|[-+*/%]=?|[<>?]|\\b(?:and|not|or)\\b/\n            ],\n            \"c-style-function\": {\n                pattern: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n                alias: \"function\"\n            },\n            punctuation: /::|[()\\[\\]{},:;]|\\.(?=\\s*[\\[\\w$])/,\n            dot: {\n                pattern: /\\./,\n                alias: \"important\"\n            }\n        };\n        stringInterpolation.interpolation.inside.content.inside = jq;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvanEuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsR0FBR0MsV0FBVyxHQUFHO0FBQ2pCRCxHQUFHRSxPQUFPLEdBQUcsRUFBRTtBQUNmLFNBQVNGLEdBQUdHLEtBQUs7O0lBQ2IsVUFBVUEsS0FBSztRQUNmLElBQUlDLGdCQUFnQiw4QkFBOEJDLE1BQU07UUFDeEQsSUFBSUMsU0FBU0MsT0FDWCwyQ0FBMkNGLE1BQU0sQ0FBQ0csT0FBTyxDQUN2RCxPQUNBO1lBQ0UsT0FBT0o7UUFDVDtRQUdKLElBQUlLLHNCQUFzQjtZQUN4QkwsZUFBZTtnQkFDYk0sU0FBU0gsT0FBTywwQkFBMEJGLE1BQU0sR0FBR0Q7Z0JBQ25ETyxZQUFZO2dCQUNaQyxRQUFRO29CQUNOQyxTQUFTO3dCQUNQSCxTQUFTO3dCQUNUQyxZQUFZO3dCQUNaQyxRQUFRLEtBQUssWUFBWTtvQkFDM0I7b0JBQ0FFLGFBQWE7Z0JBQ2Y7WUFDRjtRQUNGO1FBQ0EsSUFBSWQsS0FBTUcsTUFBTVksU0FBUyxDQUFDZixFQUFFLEdBQUc7WUFDN0JnQixTQUFTO1lBQ1RDLFVBQVU7Z0JBQ1JQLFNBQVNILE9BQU9ELE9BQU9ELE1BQU0sR0FBRyxnQkFBZ0JBLE1BQU07Z0JBQ3RETSxZQUFZO2dCQUNaTyxRQUFRO2dCQUNSTixRQUFRSDtZQUNWO1lBQ0FILFFBQVE7Z0JBQ05JLFNBQVNKO2dCQUNUSyxZQUFZO2dCQUNaTyxRQUFRO2dCQUNSTixRQUFRSDtZQUNWO1lBQ0FVLFVBQVU7Z0JBQ1JULFNBQVM7Z0JBQ1RDLFlBQVk7WUFDZDtZQUNBUyxVQUFVO1lBQ1Ysb0JBQW9CO2dCQUNsQlYsU0FBUztnQkFDVFcsT0FBTztZQUNUO1lBQ0FDLFNBQ0U7WUFDRkMsU0FBUztZQUNUQyxRQUFRO1lBQ1JDLFVBQVU7Z0JBQ1I7b0JBQ0VmLFNBQVM7b0JBQ1RXLE9BQU87Z0JBQ1Q7Z0JBQ0E7YUFDRDtZQUNELG9CQUFvQjtnQkFDbEJYLFNBQVM7Z0JBQ1RXLE9BQU87WUFDVDtZQUNBUCxhQUFhO1lBQ2JZLEtBQUs7Z0JBQ0hoQixTQUFTO2dCQUNUVyxPQUFPO1lBQ1Q7UUFDRjtRQUNBWixvQkFBb0JMLGFBQWEsQ0FBQ1EsTUFBTSxDQUFDQyxPQUFPLENBQUNELE1BQU0sR0FBR1o7SUFDNUQsR0FBR0c7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9qcS5qcz9iMWVmIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGpxXG5qcS5kaXNwbGF5TmFtZSA9ICdqcSdcbmpxLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24ganEoUHJpc20pIHtcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIgaW50ZXJwb2xhdGlvbiA9IC9cXFxcXFwoKD86W14oKV18XFwoW14oKV0qXFwpKSpcXCkvLnNvdXJjZVxuICAgIHZhciBzdHJpbmcgPSBSZWdFeHAoXG4gICAgICAvKF58W15cXFxcXSlcIig/OlteXCJcXHJcXG5cXFxcXXxcXFxcW15cXHJcXG4oXXxfXykqXCIvLnNvdXJjZS5yZXBsYWNlKFxuICAgICAgICAvX18vZyxcbiAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHJldHVybiBpbnRlcnBvbGF0aW9uXG4gICAgICAgIH1cbiAgICAgIClcbiAgICApXG4gICAgdmFyIHN0cmluZ0ludGVycG9sYXRpb24gPSB7XG4gICAgICBpbnRlcnBvbGF0aW9uOiB7XG4gICAgICAgIHBhdHRlcm46IFJlZ0V4cCgvKCg/Ol58W15cXFxcXSkoPzpcXFxcezJ9KSopLy5zb3VyY2UgKyBpbnRlcnBvbGF0aW9uKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgY29udGVudDoge1xuICAgICAgICAgICAgcGF0dGVybjogL14oXFxcXFxcKClbXFxzXFxTXSsoPz1cXCkkKS8sXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgICAgaW5zaWRlOiBudWxsIC8vIHNlZSBiZWxvd1xuICAgICAgICAgIH0sXG4gICAgICAgICAgcHVuY3R1YXRpb246IC9eXFxcXFxcKHxcXCkkL1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHZhciBqcSA9IChQcmlzbS5sYW5ndWFnZXMuanEgPSB7XG4gICAgICBjb21tZW50OiAvIy4qLyxcbiAgICAgIHByb3BlcnR5OiB7XG4gICAgICAgIHBhdHRlcm46IFJlZ0V4cChzdHJpbmcuc291cmNlICsgLyg/PVxccyo6KD8hOikpLy5zb3VyY2UpLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGluc2lkZTogc3RyaW5nSW50ZXJwb2xhdGlvblxuICAgICAgfSxcbiAgICAgIHN0cmluZzoge1xuICAgICAgICBwYXR0ZXJuOiBzdHJpbmcsXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiBzdHJpbmdJbnRlcnBvbGF0aW9uXG4gICAgICB9LFxuICAgICAgZnVuY3Rpb246IHtcbiAgICAgICAgcGF0dGVybjogLyhcXGJkZWZcXHMrKVthLXpfXVxcdysvaSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHZhcmlhYmxlOiAvXFxCXFwkXFx3Ky8sXG4gICAgICAncHJvcGVydHktbGl0ZXJhbCc6IHtcbiAgICAgICAgcGF0dGVybjogL1xcYlthLXpfXVxcdyooPz1cXHMqOig/ITopKS9pLFxuICAgICAgICBhbGlhczogJ3Byb3BlcnR5J1xuICAgICAgfSxcbiAgICAgIGtleXdvcmQ6XG4gICAgICAgIC9cXGIoPzphc3xicmVha3xjYXRjaHxkZWZ8ZWxpZnxlbHNlfGVuZHxmb3JlYWNofGlmfGltcG9ydHxpbmNsdWRlfGxhYmVsfG1vZHVsZXxtb2R1bGVtZXRhfG51bGx8cmVkdWNlfHRoZW58dHJ5fHdoaWxlKVxcYi8sXG4gICAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvLFxuICAgICAgbnVtYmVyOiAvKD86XFxiXFxkK1xcLnxcXEJcXC4pP1xcYlxcZCsoPzpbZUVdWystXT9cXGQrKT9cXGIvLFxuICAgICAgb3BlcmF0b3I6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IC9cXHw9Py8sXG4gICAgICAgICAgYWxpYXM6ICdwaXBlJ1xuICAgICAgICB9LFxuICAgICAgICAvXFwuXFwufFshPTw+XT89fFxcP1xcL1xcL3xcXC9cXC89P3xbLSsqLyVdPT98Wzw+P118XFxiKD86YW5kfG5vdHxvcilcXGIvXG4gICAgICBdLFxuICAgICAgJ2Mtc3R5bGUtZnVuY3Rpb24nOiB7XG4gICAgICAgIHBhdHRlcm46IC9cXGJbYS16X11cXHcqKD89XFxzKlxcKCkvaSxcbiAgICAgICAgYWxpYXM6ICdmdW5jdGlvbidcbiAgICAgIH0sXG4gICAgICBwdW5jdHVhdGlvbjogLzo6fFsoKVxcW1xcXXt9LDo7XXxcXC4oPz1cXHMqW1xcW1xcdyRdKS8sXG4gICAgICBkb3Q6IHtcbiAgICAgICAgcGF0dGVybjogL1xcLi8sXG4gICAgICAgIGFsaWFzOiAnaW1wb3J0YW50J1xuICAgICAgfVxuICAgIH0pXG4gICAgc3RyaW5nSW50ZXJwb2xhdGlvbi5pbnRlcnBvbGF0aW9uLmluc2lkZS5jb250ZW50Lmluc2lkZSA9IGpxXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJqcSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwiaW50ZXJwb2xhdGlvbiIsInNvdXJjZSIsInN0cmluZyIsIlJlZ0V4cCIsInJlcGxhY2UiLCJzdHJpbmdJbnRlcnBvbGF0aW9uIiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJpbnNpZGUiLCJjb250ZW50IiwicHVuY3R1YXRpb24iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicHJvcGVydHkiLCJncmVlZHkiLCJmdW5jdGlvbiIsInZhcmlhYmxlIiwiYWxpYXMiLCJrZXl3b3JkIiwiYm9vbGVhbiIsIm51bWJlciIsIm9wZXJhdG9yIiwiZG90Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/jq.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/js-extras.js":
/*!**************************************************!*\
  !*** ./node_modules/refractor/lang/js-extras.js ***!
  \**************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = jsExtras;\njsExtras.displayName = \"jsExtras\";\njsExtras.aliases = [];\nfunction jsExtras(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.insertBefore(\"javascript\", \"function-variable\", {\n            \"method-variable\": {\n                pattern: RegExp(\"(\\\\.\\\\s*)\" + Prism.languages.javascript[\"function-variable\"].pattern.source),\n                lookbehind: true,\n                alias: [\n                    \"function-variable\",\n                    \"method\",\n                    \"function\",\n                    \"property-access\"\n                ]\n            }\n        });\n        Prism.languages.insertBefore(\"javascript\", \"function\", {\n            method: {\n                pattern: RegExp(\"(\\\\.\\\\s*)\" + Prism.languages.javascript[\"function\"].source),\n                lookbehind: true,\n                alias: [\n                    \"function\",\n                    \"property-access\"\n                ]\n            }\n        });\n        Prism.languages.insertBefore(\"javascript\", \"constant\", {\n            \"known-class-name\": [\n                {\n                    // standard built-ins\n                    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n                    pattern: /\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b/,\n                    alias: \"class-name\"\n                },\n                {\n                    // errors\n                    pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n                    alias: \"class-name\"\n                }\n            ]\n        });\n        /**\n     * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n     *\n     * @param {string} source\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */ function withId(source, flags) {\n            return RegExp(source.replace(/<ID>/g, function() {\n                return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source;\n            }), flags);\n        }\n        Prism.languages.insertBefore(\"javascript\", \"keyword\", {\n            imports: {\n                // https://tc39.es/ecma262/#sec-imports\n                pattern: withId(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source),\n                lookbehind: true,\n                inside: Prism.languages.javascript\n            },\n            exports: {\n                // https://tc39.es/ecma262/#sec-exports\n                pattern: withId(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source),\n                lookbehind: true,\n                inside: Prism.languages.javascript\n            }\n        });\n        Prism.languages.javascript[\"keyword\"].unshift({\n            pattern: /\\b(?:as|default|export|from|import)\\b/,\n            alias: \"module\"\n        }, {\n            pattern: /\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b/,\n            alias: \"control-flow\"\n        }, {\n            pattern: /\\bnull\\b/,\n            alias: [\n                \"null\",\n                \"nil\"\n            ]\n        }, {\n            pattern: /\\bundefined\\b/,\n            alias: \"nil\"\n        });\n        Prism.languages.insertBefore(\"javascript\", \"operator\", {\n            spread: {\n                pattern: /\\.{3}/,\n                alias: \"operator\"\n            },\n            arrow: {\n                pattern: /=>/,\n                alias: \"operator\"\n            }\n        });\n        Prism.languages.insertBefore(\"javascript\", \"punctuation\", {\n            \"property-access\": {\n                pattern: withId(/(\\.\\s*)#?<ID>/.source),\n                lookbehind: true\n            },\n            \"maybe-class-name\": {\n                pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n                lookbehind: true\n            },\n            dom: {\n                // this contains only a few commonly used DOM variables\n                pattern: /\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b/,\n                alias: \"variable\"\n            },\n            console: {\n                pattern: /\\bconsole(?=\\s*\\.)/,\n                alias: \"class-name\"\n            }\n        }) // add 'maybe-class-name' to tokens which might be a class name\n        ;\n        var maybeClassNameTokens = [\n            \"function\",\n            \"function-variable\",\n            \"method\",\n            \"method-variable\",\n            \"property-access\"\n        ];\n        for(var i = 0; i < maybeClassNameTokens.length; i++){\n            var token = maybeClassNameTokens[i];\n            var value = Prism.languages.javascript[token] // convert regex to object\n            ;\n            if (Prism.util.type(value) === \"RegExp\") {\n                value = Prism.languages.javascript[token] = {\n                    pattern: value\n                };\n            } // keep in mind that we don't support arrays\n            var inside = value.inside || {};\n            value.inside = inside;\n            inside[\"maybe-class-name\"] = /^[A-Z][\\s\\S]*/;\n        }\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvanMtZXh0cmFzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLFNBQVNDLFdBQVcsR0FBRztBQUN2QkQsU0FBU0UsT0FBTyxHQUFHLEVBQUU7QUFDckIsU0FBU0YsU0FBU0csS0FBSzs7SUFDbkIsVUFBVUEsS0FBSztRQUNmQSxNQUFNQyxTQUFTLENBQUNDLFlBQVksQ0FBQyxjQUFjLHFCQUFxQjtZQUM5RCxtQkFBbUI7Z0JBQ2pCQyxTQUFTQyxPQUNQLGNBQ0VKLE1BQU1DLFNBQVMsQ0FBQ0ksVUFBVSxDQUFDLG9CQUFvQixDQUFDRixPQUFPLENBQUNHLE1BQU07Z0JBRWxFQyxZQUFZO2dCQUNaQyxPQUFPO29CQUFDO29CQUFxQjtvQkFBVTtvQkFBWTtpQkFBa0I7WUFDdkU7UUFDRjtRQUNBUixNQUFNQyxTQUFTLENBQUNDLFlBQVksQ0FBQyxjQUFjLFlBQVk7WUFDckRPLFFBQVE7Z0JBQ05OLFNBQVNDLE9BQ1AsY0FBY0osTUFBTUMsU0FBUyxDQUFDSSxVQUFVLENBQUMsV0FBVyxDQUFDQyxNQUFNO2dCQUU3REMsWUFBWTtnQkFDWkMsT0FBTztvQkFBQztvQkFBWTtpQkFBa0I7WUFDeEM7UUFDRjtRQUNBUixNQUFNQyxTQUFTLENBQUNDLFlBQVksQ0FBQyxjQUFjLFlBQVk7WUFDckQsb0JBQW9CO2dCQUNsQjtvQkFDRSxxQkFBcUI7b0JBQ3JCLG1GQUFtRjtvQkFDbkZDLFNBQ0U7b0JBQ0ZLLE9BQU87Z0JBQ1Q7Z0JBQ0E7b0JBQ0UsU0FBUztvQkFDVEwsU0FBUztvQkFDVEssT0FBTztnQkFDVDthQUNEO1FBQ0g7UUFDQTs7Ozs7O0tBTUMsR0FDRCxTQUFTRSxPQUFPSixNQUFNLEVBQUVLLEtBQUs7WUFDM0IsT0FBT1AsT0FDTEUsT0FBT00sT0FBTyxDQUFDLFNBQVM7Z0JBQ3RCLE9BQU8seURBQXlETixNQUFNO1lBQ3hFLElBQ0FLO1FBRUo7UUFDQVgsTUFBTUMsU0FBUyxDQUFDQyxZQUFZLENBQUMsY0FBYyxXQUFXO1lBQ3BEVyxTQUFTO2dCQUNQLHVDQUF1QztnQkFDdkNWLFNBQVNPLE9BQ1AsNEdBQ0dKLE1BQU07Z0JBRVhDLFlBQVk7Z0JBQ1pPLFFBQVFkLE1BQU1DLFNBQVMsQ0FBQ0ksVUFBVTtZQUNwQztZQUNBVCxTQUFTO2dCQUNQLHVDQUF1QztnQkFDdkNPLFNBQVNPLE9BQ1AsbUVBQ0dKLE1BQU07Z0JBRVhDLFlBQVk7Z0JBQ1pPLFFBQVFkLE1BQU1DLFNBQVMsQ0FBQ0ksVUFBVTtZQUNwQztRQUNGO1FBQ0FMLE1BQU1DLFNBQVMsQ0FBQ0ksVUFBVSxDQUFDLFVBQVUsQ0FBQ1UsT0FBTyxDQUMzQztZQUNFWixTQUFTO1lBQ1RLLE9BQU87UUFDVCxHQUNBO1lBQ0VMLFNBQ0U7WUFDRkssT0FBTztRQUNULEdBQ0E7WUFDRUwsU0FBUztZQUNUSyxPQUFPO2dCQUFDO2dCQUFRO2FBQU07UUFDeEIsR0FDQTtZQUNFTCxTQUFTO1lBQ1RLLE9BQU87UUFDVDtRQUVGUixNQUFNQyxTQUFTLENBQUNDLFlBQVksQ0FBQyxjQUFjLFlBQVk7WUFDckRjLFFBQVE7Z0JBQ05iLFNBQVM7Z0JBQ1RLLE9BQU87WUFDVDtZQUNBUyxPQUFPO2dCQUNMZCxTQUFTO2dCQUNUSyxPQUFPO1lBQ1Q7UUFDRjtRQUNBUixNQUFNQyxTQUFTLENBQUNDLFlBQVksQ0FBQyxjQUFjLGVBQWU7WUFDeEQsbUJBQW1CO2dCQUNqQkMsU0FBU08sT0FBTyxnQkFBZ0JKLE1BQU07Z0JBQ3RDQyxZQUFZO1lBQ2Q7WUFDQSxvQkFBb0I7Z0JBQ2xCSixTQUFTO2dCQUNUSSxZQUFZO1lBQ2Q7WUFDQVcsS0FBSztnQkFDSCx1REFBdUQ7Z0JBQ3ZEZixTQUNFO2dCQUNGSyxPQUFPO1lBQ1Q7WUFDQVcsU0FBUztnQkFDUGhCLFNBQVM7Z0JBQ1RLLE9BQU87WUFDVDtRQUNGLEdBQUcsK0RBQStEOztRQUNsRSxJQUFJWSx1QkFBdUI7WUFDekI7WUFDQTtZQUNBO1lBQ0E7WUFDQTtTQUNEO1FBQ0QsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlELHFCQUFxQkUsTUFBTSxFQUFFRCxJQUFLO1lBQ3BELElBQUlFLFFBQVFILG9CQUFvQixDQUFDQyxFQUFFO1lBQ25DLElBQUlHLFFBQVF4QixNQUFNQyxTQUFTLENBQUNJLFVBQVUsQ0FBQ2tCLE1BQU0sQ0FBQywwQkFBMEI7O1lBQ3hFLElBQUl2QixNQUFNeUIsSUFBSSxDQUFDQyxJQUFJLENBQUNGLFdBQVcsVUFBVTtnQkFDdkNBLFFBQVF4QixNQUFNQyxTQUFTLENBQUNJLFVBQVUsQ0FBQ2tCLE1BQU0sR0FBRztvQkFDMUNwQixTQUFTcUI7Z0JBQ1g7WUFDRixFQUFFLDRDQUE0QztZQUM5QyxJQUFJVixTQUFTVSxNQUFNVixNQUFNLElBQUksQ0FBQztZQUM5QlUsTUFBTVYsTUFBTSxHQUFHQTtZQUNmQSxNQUFNLENBQUMsbUJBQW1CLEdBQUc7UUFDL0I7SUFDRixHQUFHZDtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2pzLWV4dHJhcy5qcz8xZTBhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGpzRXh0cmFzXG5qc0V4dHJhcy5kaXNwbGF5TmFtZSA9ICdqc0V4dHJhcydcbmpzRXh0cmFzLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24ganNFeHRyYXMoUHJpc20pIHtcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdqYXZhc2NyaXB0JywgJ2Z1bmN0aW9uLXZhcmlhYmxlJywge1xuICAgICAgJ21ldGhvZC12YXJpYWJsZSc6IHtcbiAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgICcoXFxcXC5cXFxccyopJyArXG4gICAgICAgICAgICBQcmlzbS5sYW5ndWFnZXMuamF2YXNjcmlwdFsnZnVuY3Rpb24tdmFyaWFibGUnXS5wYXR0ZXJuLnNvdXJjZVxuICAgICAgICApLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogWydmdW5jdGlvbi12YXJpYWJsZScsICdtZXRob2QnLCAnZnVuY3Rpb24nLCAncHJvcGVydHktYWNjZXNzJ11cbiAgICAgIH1cbiAgICB9KVxuICAgIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ2phdmFzY3JpcHQnLCAnZnVuY3Rpb24nLCB7XG4gICAgICBtZXRob2Q6IHtcbiAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgICcoXFxcXC5cXFxccyopJyArIFByaXNtLmxhbmd1YWdlcy5qYXZhc2NyaXB0WydmdW5jdGlvbiddLnNvdXJjZVxuICAgICAgICApLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogWydmdW5jdGlvbicsICdwcm9wZXJ0eS1hY2Nlc3MnXVxuICAgICAgfVxuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnamF2YXNjcmlwdCcsICdjb25zdGFudCcsIHtcbiAgICAgICdrbm93bi1jbGFzcy1uYW1lJzogW1xuICAgICAgICB7XG4gICAgICAgICAgLy8gc3RhbmRhcmQgYnVpbHQtaW5zXG4gICAgICAgICAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHNcbiAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgL1xcYig/Oig/OkZsb2F0KD86MzJ8NjQpfCg/OkludHxVaW50KSg/Ojh8MTZ8MzIpfFVpbnQ4Q2xhbXBlZCk/QXJyYXl8QXJyYXlCdWZmZXJ8QmlnSW50fEJvb2xlYW58RGF0YVZpZXd8RGF0ZXxFcnJvcnxGdW5jdGlvbnxJbnRsfEpTT058KD86V2Vhayk/KD86TWFwfFNldCl8TWF0aHxOdW1iZXJ8T2JqZWN0fFByb21pc2V8UHJveHl8UmVmbGVjdHxSZWdFeHB8U3RyaW5nfFN5bWJvbHxXZWJBc3NlbWJseSlcXGIvLFxuICAgICAgICAgIGFsaWFzOiAnY2xhc3MtbmFtZSdcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIC8vIGVycm9yc1xuICAgICAgICAgIHBhdHRlcm46IC9cXGIoPzpbQS1aXVxcdyopRXJyb3JcXGIvLFxuICAgICAgICAgIGFsaWFzOiAnY2xhc3MtbmFtZSdcbiAgICAgICAgfVxuICAgICAgXVxuICAgIH0pXG4gICAgLyoqXG4gICAgICogUmVwbGFjZXMgdGhlIGA8SUQ+YCBwbGFjZWhvbGRlciBpbiB0aGUgZ2l2ZW4gcGF0dGVybiB3aXRoIGEgcGF0dGVybiBmb3IgZ2VuZXJhbCBKUyBpZGVudGlmaWVycy5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzb3VyY2VcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gW2ZsYWdzXVxuICAgICAqIEByZXR1cm5zIHtSZWdFeHB9XG4gICAgICovXG4gICAgZnVuY3Rpb24gd2l0aElkKHNvdXJjZSwgZmxhZ3MpIHtcbiAgICAgIHJldHVybiBSZWdFeHAoXG4gICAgICAgIHNvdXJjZS5yZXBsYWNlKC88SUQ+L2csIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gLyg/IVxccylbXyRhLXpBLVpcXHhBMC1cXHVGRkZGXSg/Oig/IVxccylbJFxcd1xceEEwLVxcdUZGRkZdKSovLnNvdXJjZVxuICAgICAgICB9KSxcbiAgICAgICAgZmxhZ3NcbiAgICAgIClcbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnamF2YXNjcmlwdCcsICdrZXl3b3JkJywge1xuICAgICAgaW1wb3J0czoge1xuICAgICAgICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWltcG9ydHNcbiAgICAgICAgcGF0dGVybjogd2l0aElkKFxuICAgICAgICAgIC8oXFxiaW1wb3J0XFxiXFxzKikoPzo8SUQ+KD86XFxzKixcXHMqKD86XFwqXFxzKmFzXFxzKzxJRD58XFx7W157fV0qXFx9KSk/fFxcKlxccyphc1xccys8SUQ+fFxce1tee31dKlxcfSkoPz1cXHMqXFxiZnJvbVxcYikvXG4gICAgICAgICAgICAuc291cmNlXG4gICAgICAgICksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGluc2lkZTogUHJpc20ubGFuZ3VhZ2VzLmphdmFzY3JpcHRcbiAgICAgIH0sXG4gICAgICBleHBvcnRzOiB7XG4gICAgICAgIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtZXhwb3J0c1xuICAgICAgICBwYXR0ZXJuOiB3aXRoSWQoXG4gICAgICAgICAgLyhcXGJleHBvcnRcXGJcXHMqKSg/OlxcKig/Olxccyphc1xccys8SUQ+KT8oPz1cXHMqXFxiZnJvbVxcYil8XFx7W157fV0qXFx9KS9cbiAgICAgICAgICAgIC5zb3VyY2VcbiAgICAgICAgKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiBQcmlzbS5sYW5ndWFnZXMuamF2YXNjcmlwdFxuICAgICAgfVxuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmphdmFzY3JpcHRbJ2tleXdvcmQnXS51bnNoaWZ0KFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvXFxiKD86YXN8ZGVmYXVsdHxleHBvcnR8ZnJvbXxpbXBvcnQpXFxiLyxcbiAgICAgICAgYWxpYXM6ICdtb2R1bGUnXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC9cXGIoPzphd2FpdHxicmVha3xjYXRjaHxjb250aW51ZXxkb3xlbHNlfGZpbmFsbHl8Zm9yfGlmfHJldHVybnxzd2l0Y2h8dGhyb3d8dHJ5fHdoaWxlfHlpZWxkKVxcYi8sXG4gICAgICAgIGFsaWFzOiAnY29udHJvbC1mbG93J1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogL1xcYm51bGxcXGIvLFxuICAgICAgICBhbGlhczogWydudWxsJywgJ25pbCddXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvXFxidW5kZWZpbmVkXFxiLyxcbiAgICAgICAgYWxpYXM6ICduaWwnXG4gICAgICB9XG4gICAgKVxuICAgIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ2phdmFzY3JpcHQnLCAnb3BlcmF0b3InLCB7XG4gICAgICBzcHJlYWQ6IHtcbiAgICAgICAgcGF0dGVybjogL1xcLnszfS8sXG4gICAgICAgIGFsaWFzOiAnb3BlcmF0b3InXG4gICAgICB9LFxuICAgICAgYXJyb3c6IHtcbiAgICAgICAgcGF0dGVybjogLz0+LyxcbiAgICAgICAgYWxpYXM6ICdvcGVyYXRvcidcbiAgICAgIH1cbiAgICB9KVxuICAgIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ2phdmFzY3JpcHQnLCAncHVuY3R1YXRpb24nLCB7XG4gICAgICAncHJvcGVydHktYWNjZXNzJzoge1xuICAgICAgICBwYXR0ZXJuOiB3aXRoSWQoLyhcXC5cXHMqKSM/PElEPi8uc291cmNlKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgICdtYXliZS1jbGFzcy1uYW1lJzoge1xuICAgICAgICBwYXR0ZXJuOiAvKF58W14kXFx3XFx4QTAtXFx1RkZGRl0pW0EtWl1bJFxcd1xceEEwLVxcdUZGRkZdKy8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBkb206IHtcbiAgICAgICAgLy8gdGhpcyBjb250YWlucyBvbmx5IGEgZmV3IGNvbW1vbmx5IHVzZWQgRE9NIHZhcmlhYmxlc1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC9cXGIoPzpkb2N1bWVudHwoPzpsb2NhbHxzZXNzaW9uKVN0b3JhZ2V8bG9jYXRpb258bmF2aWdhdG9yfHBlcmZvcm1hbmNlfHdpbmRvdylcXGIvLFxuICAgICAgICBhbGlhczogJ3ZhcmlhYmxlJ1xuICAgICAgfSxcbiAgICAgIGNvbnNvbGU6IHtcbiAgICAgICAgcGF0dGVybjogL1xcYmNvbnNvbGUoPz1cXHMqXFwuKS8sXG4gICAgICAgIGFsaWFzOiAnY2xhc3MtbmFtZSdcbiAgICAgIH1cbiAgICB9KSAvLyBhZGQgJ21heWJlLWNsYXNzLW5hbWUnIHRvIHRva2VucyB3aGljaCBtaWdodCBiZSBhIGNsYXNzIG5hbWVcbiAgICB2YXIgbWF5YmVDbGFzc05hbWVUb2tlbnMgPSBbXG4gICAgICAnZnVuY3Rpb24nLFxuICAgICAgJ2Z1bmN0aW9uLXZhcmlhYmxlJyxcbiAgICAgICdtZXRob2QnLFxuICAgICAgJ21ldGhvZC12YXJpYWJsZScsXG4gICAgICAncHJvcGVydHktYWNjZXNzJ1xuICAgIF1cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG1heWJlQ2xhc3NOYW1lVG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgdG9rZW4gPSBtYXliZUNsYXNzTmFtZVRva2Vuc1tpXVxuICAgICAgdmFyIHZhbHVlID0gUHJpc20ubGFuZ3VhZ2VzLmphdmFzY3JpcHRbdG9rZW5dIC8vIGNvbnZlcnQgcmVnZXggdG8gb2JqZWN0XG4gICAgICBpZiAoUHJpc20udXRpbC50eXBlKHZhbHVlKSA9PT0gJ1JlZ0V4cCcpIHtcbiAgICAgICAgdmFsdWUgPSBQcmlzbS5sYW5ndWFnZXMuamF2YXNjcmlwdFt0b2tlbl0gPSB7XG4gICAgICAgICAgcGF0dGVybjogdmFsdWVcbiAgICAgICAgfVxuICAgICAgfSAvLyBrZWVwIGluIG1pbmQgdGhhdCB3ZSBkb24ndCBzdXBwb3J0IGFycmF5c1xuICAgICAgdmFyIGluc2lkZSA9IHZhbHVlLmluc2lkZSB8fCB7fVxuICAgICAgdmFsdWUuaW5zaWRlID0gaW5zaWRlXG4gICAgICBpbnNpZGVbJ21heWJlLWNsYXNzLW5hbWUnXSA9IC9eW0EtWl1bXFxzXFxTXSovXG4gICAgfVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwianNFeHRyYXMiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImluc2VydEJlZm9yZSIsInBhdHRlcm4iLCJSZWdFeHAiLCJqYXZhc2NyaXB0Iiwic291cmNlIiwibG9va2JlaGluZCIsImFsaWFzIiwibWV0aG9kIiwid2l0aElkIiwiZmxhZ3MiLCJyZXBsYWNlIiwiaW1wb3J0cyIsImluc2lkZSIsInVuc2hpZnQiLCJzcHJlYWQiLCJhcnJvdyIsImRvbSIsImNvbnNvbGUiLCJtYXliZUNsYXNzTmFtZVRva2VucyIsImkiLCJsZW5ndGgiLCJ0b2tlbiIsInZhbHVlIiwidXRpbCIsInR5cGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/js-extras.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/js-templates.js":
/*!*****************************************************!*\
  !*** ./node_modules/refractor/lang/js-templates.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = jsTemplates;\njsTemplates.displayName = \"jsTemplates\";\njsTemplates.aliases = [];\nfunction jsTemplates(Prism) {\n    ;\n    (function(Prism) {\n        var templateString = Prism.languages.javascript[\"template-string\"] // see the pattern in prism-javascript.js\n        ;\n        var templateLiteralPattern = templateString.pattern.source;\n        var interpolationObject = templateString.inside[\"interpolation\"];\n        var interpolationPunctuationObject = interpolationObject.inside[\"interpolation-punctuation\"];\n        var interpolationPattern = interpolationObject.pattern.source;\n        /**\n     * Creates a new pattern to match a template string with a special tag.\n     *\n     * This will return `undefined` if there is no grammar with the given language id.\n     *\n     * @param {string} language The language id of the embedded language. E.g. `markdown`.\n     * @param {string} tag The regex pattern to match the tag.\n     * @returns {object | undefined}\n     * @example\n     * createTemplate('css', /\\bcss/.source);\n     */ function createTemplate(language, tag) {\n            if (!Prism.languages[language]) {\n                return undefined;\n            }\n            return {\n                pattern: RegExp(\"((?:\" + tag + \")\\\\s*)\" + templateLiteralPattern),\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    \"template-punctuation\": {\n                        pattern: /^`|`$/,\n                        alias: \"string\"\n                    },\n                    \"embedded-code\": {\n                        pattern: /[\\s\\S]+/,\n                        alias: language\n                    }\n                }\n            };\n        }\n        Prism.languages.javascript[\"template-string\"] = [\n            // styled-jsx:\n            //   css`a { color: #25F; }`\n            // styled-components:\n            //   styled.h1`color: red;`\n            createTemplate(\"css\", /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source),\n            // div.innerHTML = `<p></p>`\n            createTemplate(\"html\", /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source),\n            createTemplate(\"svg\", /\\bsvg/.source),\n            createTemplate(\"markdown\", /\\b(?:markdown|md)/.source),\n            createTemplate(\"graphql\", /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source),\n            createTemplate(\"sql\", /\\bsql/.source),\n            templateString\n        ].filter(Boolean);\n        /**\n     * Returns a specific placeholder literal for the given language.\n     *\n     * @param {number} counter\n     * @param {string} language\n     * @returns {string}\n     */ function getPlaceholder(counter, language) {\n            return \"___\" + language.toUpperCase() + \"_\" + counter + \"___\";\n        }\n        /**\n     * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n     *\n     * @param {string} code\n     * @param {any} grammar\n     * @param {string} language\n     * @returns {(string|Token)[]}\n     */ function tokenizeWithHooks(code, grammar, language) {\n            var env = {\n                code: code,\n                grammar: grammar,\n                language: language\n            };\n            Prism.hooks.run(\"before-tokenize\", env);\n            env.tokens = Prism.tokenize(env.code, env.grammar);\n            Prism.hooks.run(\"after-tokenize\", env);\n            return env.tokens;\n        }\n        /**\n     * Returns the token of the given JavaScript interpolation expression.\n     *\n     * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n     * @returns {Token}\n     */ function tokenizeInterpolationExpression(expression) {\n            var tempGrammar = {};\n            tempGrammar[\"interpolation-punctuation\"] = interpolationPunctuationObject;\n            /** @type {Array} */ var tokens = Prism.tokenize(expression, tempGrammar);\n            if (tokens.length === 3) {\n                /**\n         * The token array will look like this\n         * [\n         *     [\"interpolation-punctuation\", \"${\"]\n         *     \"...\" // JavaScript expression of the interpolation\n         *     [\"interpolation-punctuation\", \"}\"]\n         * ]\n         */ var args = [\n                    1,\n                    1\n                ];\n                args.push.apply(args, tokenizeWithHooks(tokens[1], Prism.languages.javascript, \"javascript\"));\n                tokens.splice.apply(tokens, args);\n            }\n            return new Prism.Token(\"interpolation\", tokens, interpolationObject.alias, expression);\n        }\n        /**\n     * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n     *\n     * This function has 3 phases:\n     *\n     * 1. Replace all JavaScript interpolation expression with a placeholder.\n     *    The placeholder will have the syntax of a identify of the target language.\n     * 2. Tokenize the code with placeholders.\n     * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n     *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n     *    tokenized as two tokens by the grammar of the embedded language.\n     *\n     * @param {string} code\n     * @param {object} grammar\n     * @param {string} language\n     * @returns {Token}\n     */ function tokenizeEmbedded(code, grammar, language) {\n            // 1. First filter out all interpolations\n            // because they might be escaped, we need a lookbehind, so we use Prism\n            /** @type {(Token|string)[]} */ var _tokens = Prism.tokenize(code, {\n                interpolation: {\n                    pattern: RegExp(interpolationPattern),\n                    lookbehind: true\n                }\n            }) // replace all interpolations with a placeholder which is not in the code already\n            ;\n            var placeholderCounter = 0;\n            /** @type {Object<string, string>} */ var placeholderMap = {};\n            var embeddedCode = _tokens.map(function(token) {\n                if (typeof token === \"string\") {\n                    return token;\n                } else {\n                    var interpolationExpression = token.content;\n                    var placeholder;\n                    while(code.indexOf(placeholder = getPlaceholder(placeholderCounter++, language)) !== -1){\n                    /* noop */ }\n                    placeholderMap[placeholder] = interpolationExpression;\n                    return placeholder;\n                }\n            }).join(\"\") // 2. Tokenize the embedded code\n            ;\n            var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language) // 3. Re-insert the interpolation\n            ;\n            var placeholders = Object.keys(placeholderMap);\n            placeholderCounter = 0;\n            /**\n       *\n       * @param {(Token|string)[]} tokens\n       * @returns {void}\n       */ function walkTokens(tokens) {\n                for(var i = 0; i < tokens.length; i++){\n                    if (placeholderCounter >= placeholders.length) {\n                        return;\n                    }\n                    var token = tokens[i];\n                    if (typeof token === \"string\" || typeof token.content === \"string\") {\n                        var placeholder = placeholders[placeholderCounter];\n                        var s = typeof token === \"string\" ? token : /** @type {string} */ token.content;\n                        var index = s.indexOf(placeholder);\n                        if (index !== -1) {\n                            ++placeholderCounter;\n                            var before = s.substring(0, index);\n                            var middle = tokenizeInterpolationExpression(placeholderMap[placeholder]);\n                            var after = s.substring(index + placeholder.length);\n                            var replacement = [];\n                            if (before) {\n                                replacement.push(before);\n                            }\n                            replacement.push(middle);\n                            if (after) {\n                                var afterTokens = [\n                                    after\n                                ];\n                                walkTokens(afterTokens);\n                                replacement.push.apply(replacement, afterTokens);\n                            }\n                            if (typeof token === \"string\") {\n                                tokens.splice.apply(tokens, [\n                                    i,\n                                    1\n                                ].concat(replacement));\n                                i += replacement.length - 1;\n                            } else {\n                                token.content = replacement;\n                            }\n                        }\n                    } else {\n                        var content = token.content;\n                        if (Array.isArray(content)) {\n                            walkTokens(content);\n                        } else {\n                            walkTokens([\n                                content\n                            ]);\n                        }\n                    }\n                }\n            }\n            walkTokens(embeddedTokens);\n            return new Prism.Token(language, embeddedTokens, \"language-\" + language, code);\n        }\n        /**\n     * The languages for which JS templating will handle tagged template literals.\n     *\n     * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n     */ var supportedLanguages = {\n            javascript: true,\n            js: true,\n            typescript: true,\n            ts: true,\n            jsx: true,\n            tsx: true\n        };\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            if (!(env.language in supportedLanguages)) {\n                return;\n            }\n            /**\n       * Finds and tokenizes all template strings with an embedded languages.\n       *\n       * @param {(Token | string)[]} tokens\n       * @returns {void}\n       */ function findTemplateStrings(tokens) {\n                for(var i = 0, l = tokens.length; i < l; i++){\n                    var token = tokens[i];\n                    if (typeof token === \"string\") {\n                        continue;\n                    }\n                    var content = token.content;\n                    if (!Array.isArray(content)) {\n                        if (typeof content !== \"string\") {\n                            findTemplateStrings([\n                                content\n                            ]);\n                        }\n                        continue;\n                    }\n                    if (token.type === \"template-string\") {\n                        /**\n             * A JavaScript template-string token will look like this:\n             *\n             * [\"template-string\", [\n             *     [\"template-punctuation\", \"`\"],\n             *     (\n             *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n             *         or\n             *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n             *                                  It also has an alias which is the language of the embedded code.\n             *     ),\n             *     [\"template-punctuation\", \"`\"]\n             * ]]\n             */ var embedded = content[1];\n                        if (content.length === 3 && typeof embedded !== \"string\" && embedded.type === \"embedded-code\") {\n                            // get string content\n                            var code = stringContent(embedded);\n                            var alias = embedded.alias;\n                            var language = Array.isArray(alias) ? alias[0] : alias;\n                            var grammar = Prism.languages[language];\n                            if (!grammar) {\n                                continue;\n                            }\n                            content[1] = tokenizeEmbedded(code, grammar, language);\n                        }\n                    } else {\n                        findTemplateStrings(content);\n                    }\n                }\n            }\n            findTemplateStrings(env.tokens);\n        });\n        /**\n     * Returns the string content of a token or token stream.\n     *\n     * @param {string | Token | (string | Token)[]} value\n     * @returns {string}\n     */ function stringContent(value) {\n            if (typeof value === \"string\") {\n                return value;\n            } else if (Array.isArray(value)) {\n                return value.map(stringContent).join(\"\");\n            } else {\n                return stringContent(value.content);\n            }\n        }\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/js-templates.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/jsdoc.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/jsdoc.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorJavadoclike = __webpack_require__(/*! ./javadoclike.js */ \"(ssr)/./node_modules/refractor/lang/javadoclike.js\");\nvar refractorTypescript = __webpack_require__(/*! ./typescript.js */ \"(ssr)/./node_modules/refractor/lang/typescript.js\");\nmodule.exports = jsdoc;\njsdoc.displayName = \"jsdoc\";\njsdoc.aliases = [];\nfunction jsdoc(Prism) {\n    Prism.register(refractorJavadoclike);\n    Prism.register(refractorTypescript);\n    (function(Prism) {\n        var javascript = Prism.languages.javascript;\n        var type = /\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})+\\}/.source;\n        var parameterPrefix = \"(@(?:arg|argument|param|property)\\\\s+(?:\" + type + \"\\\\s+)?)\";\n        Prism.languages.jsdoc = Prism.languages.extend(\"javadoclike\", {\n            parameter: {\n                // @param {string} foo - foo bar\n                pattern: RegExp(parameterPrefix + /(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?=\\s|$)/.source),\n                lookbehind: true,\n                inside: {\n                    punctuation: /\\./\n                }\n            }\n        });\n        Prism.languages.insertBefore(\"jsdoc\", \"keyword\", {\n            \"optional-parameter\": {\n                // @param {string} [baz.foo=\"bar\"] foo bar\n                pattern: RegExp(parameterPrefix + /\\[(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?:=[^[\\]]+)?\\](?=\\s|$)/.source),\n                lookbehind: true,\n                inside: {\n                    parameter: {\n                        pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n                        lookbehind: true,\n                        inside: {\n                            punctuation: /\\./\n                        }\n                    },\n                    code: {\n                        pattern: /(=)[\\s\\S]*(?=\\]$)/,\n                        lookbehind: true,\n                        inside: javascript,\n                        alias: \"language-javascript\"\n                    },\n                    punctuation: /[=[\\]]/\n                }\n            },\n            \"class-name\": [\n                {\n                    pattern: RegExp(/(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\\s+(?:<TYPE>\\s+)?)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/.source.replace(/<TYPE>/g, function() {\n                        return type;\n                    })),\n                    lookbehind: true,\n                    inside: {\n                        punctuation: /\\./\n                    }\n                },\n                {\n                    pattern: RegExp(\"(@[a-z]+\\\\s+)\" + type),\n                    lookbehind: true,\n                    inside: {\n                        string: javascript.string,\n                        number: javascript.number,\n                        boolean: javascript.boolean,\n                        keyword: Prism.languages.typescript.keyword,\n                        operator: /=>|\\.\\.\\.|[&|?:*]/,\n                        punctuation: /[.,;=<>{}()[\\]]/\n                    }\n                }\n            ],\n            example: {\n                pattern: /(@example\\s+(?!\\s))(?:[^@\\s]|\\s+(?!\\s))+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n                lookbehind: true,\n                inside: {\n                    code: {\n                        pattern: /^([\\t ]*(?:\\*\\s*)?)\\S.*$/m,\n                        lookbehind: true,\n                        inside: javascript,\n                        alias: \"language-javascript\"\n                    }\n                }\n            }\n        });\n        Prism.languages.javadoclike.addSupport(\"javascript\", Prism.languages.jsdoc);\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvanNkb2MuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxJQUFJQSx1QkFBdUJDLG1CQUFPQSxDQUFDO0FBQ25DLElBQUlDLHNCQUFzQkQsbUJBQU9BLENBQUM7QUFDbENFLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLE1BQU1DLFdBQVcsR0FBRztBQUNwQkQsTUFBTUUsT0FBTyxHQUFHLEVBQUU7QUFDbEIsU0FBU0YsTUFBTUcsS0FBSztJQUNsQkEsTUFBTUMsUUFBUSxDQUFDVDtJQUNmUSxNQUFNQyxRQUFRLENBQUNQO0lBQ2IsVUFBVU0sS0FBSztRQUNmLElBQUlFLGFBQWFGLE1BQU1HLFNBQVMsQ0FBQ0QsVUFBVTtRQUMzQyxJQUFJRSxPQUFPLDJDQUEyQ0MsTUFBTTtRQUM1RCxJQUFJQyxrQkFDRiw2Q0FBNkNGLE9BQU87UUFDdERKLE1BQU1HLFNBQVMsQ0FBQ04sS0FBSyxHQUFHRyxNQUFNRyxTQUFTLENBQUNJLE1BQU0sQ0FBQyxlQUFlO1lBQzVEQyxXQUFXO2dCQUNULGdDQUFnQztnQkFDaENDLFNBQVNDLE9BQ1BKLGtCQUFrQix1Q0FBdUNELE1BQU07Z0JBRWpFTSxZQUFZO2dCQUNaQyxRQUFRO29CQUNOQyxhQUFhO2dCQUNmO1lBQ0Y7UUFDRjtRQUNBYixNQUFNRyxTQUFTLENBQUNXLFlBQVksQ0FBQyxTQUFTLFdBQVc7WUFDL0Msc0JBQXNCO2dCQUNwQiwwQ0FBMEM7Z0JBQzFDTCxTQUFTQyxPQUNQSixrQkFDRSx3REFBd0RELE1BQU07Z0JBRWxFTSxZQUFZO2dCQUNaQyxRQUFRO29CQUNOSixXQUFXO3dCQUNUQyxTQUFTO3dCQUNURSxZQUFZO3dCQUNaQyxRQUFROzRCQUNOQyxhQUFhO3dCQUNmO29CQUNGO29CQUNBRSxNQUFNO3dCQUNKTixTQUFTO3dCQUNURSxZQUFZO3dCQUNaQyxRQUFRVjt3QkFDUmMsT0FBTztvQkFDVDtvQkFDQUgsYUFBYTtnQkFDZjtZQUNGO1lBQ0EsY0FBYztnQkFDWjtvQkFDRUosU0FBU0MsT0FDUCxtSEFBbUhMLE1BQU0sQ0FBQ1ksT0FBTyxDQUMvSCxXQUNBO3dCQUNFLE9BQU9iO29CQUNUO29CQUdKTyxZQUFZO29CQUNaQyxRQUFRO3dCQUNOQyxhQUFhO29CQUNmO2dCQUNGO2dCQUNBO29CQUNFSixTQUFTQyxPQUFPLGtCQUFrQk47b0JBQ2xDTyxZQUFZO29CQUNaQyxRQUFRO3dCQUNOTSxRQUFRaEIsV0FBV2dCLE1BQU07d0JBQ3pCQyxRQUFRakIsV0FBV2lCLE1BQU07d0JBQ3pCQyxTQUFTbEIsV0FBV2tCLE9BQU87d0JBQzNCQyxTQUFTckIsTUFBTUcsU0FBUyxDQUFDbUIsVUFBVSxDQUFDRCxPQUFPO3dCQUMzQ0UsVUFBVTt3QkFDVlYsYUFBYTtvQkFDZjtnQkFDRjthQUNEO1lBQ0RXLFNBQVM7Z0JBQ1BmLFNBQ0U7Z0JBQ0ZFLFlBQVk7Z0JBQ1pDLFFBQVE7b0JBQ05HLE1BQU07d0JBQ0pOLFNBQVM7d0JBQ1RFLFlBQVk7d0JBQ1pDLFFBQVFWO3dCQUNSYyxPQUFPO29CQUNUO2dCQUNGO1lBQ0Y7UUFDRjtRQUNBaEIsTUFBTUcsU0FBUyxDQUFDc0IsV0FBVyxDQUFDQyxVQUFVLENBQUMsY0FBYzFCLE1BQU1HLFNBQVMsQ0FBQ04sS0FBSztJQUM1RSxHQUFHRztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2pzZG9jLmpzPzkzNjAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG52YXIgcmVmcmFjdG9ySmF2YWRvY2xpa2UgPSByZXF1aXJlKCcuL2phdmFkb2NsaWtlLmpzJylcbnZhciByZWZyYWN0b3JUeXBlc2NyaXB0ID0gcmVxdWlyZSgnLi90eXBlc2NyaXB0LmpzJylcbm1vZHVsZS5leHBvcnRzID0ganNkb2NcbmpzZG9jLmRpc3BsYXlOYW1lID0gJ2pzZG9jJ1xuanNkb2MuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBqc2RvYyhQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JKYXZhZG9jbGlrZSlcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yVHlwZXNjcmlwdClcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIgamF2YXNjcmlwdCA9IFByaXNtLmxhbmd1YWdlcy5qYXZhc2NyaXB0XG4gICAgdmFyIHR5cGUgPSAvXFx7KD86W157fV18XFx7KD86W157fV18XFx7W157fV0qXFx9KSpcXH0pK1xcfS8uc291cmNlXG4gICAgdmFyIHBhcmFtZXRlclByZWZpeCA9XG4gICAgICAnKEAoPzphcmd8YXJndW1lbnR8cGFyYW18cHJvcGVydHkpXFxcXHMrKD86JyArIHR5cGUgKyAnXFxcXHMrKT8pJ1xuICAgIFByaXNtLmxhbmd1YWdlcy5qc2RvYyA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2phdmFkb2NsaWtlJywge1xuICAgICAgcGFyYW1ldGVyOiB7XG4gICAgICAgIC8vIEBwYXJhbSB7c3RyaW5nfSBmb28gLSBmb28gYmFyXG4gICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICBwYXJhbWV0ZXJQcmVmaXggKyAvKD86KD8hXFxzKVskXFx3XFx4QTAtXFx1RkZGRi5dKSsoPz1cXHN8JCkvLnNvdXJjZVxuICAgICAgICApLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjogL1xcLi9cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnanNkb2MnLCAna2V5d29yZCcsIHtcbiAgICAgICdvcHRpb25hbC1wYXJhbWV0ZXInOiB7XG4gICAgICAgIC8vIEBwYXJhbSB7c3RyaW5nfSBbYmF6LmZvbz1cImJhclwiXSBmb28gYmFyXG4gICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICBwYXJhbWV0ZXJQcmVmaXggK1xuICAgICAgICAgICAgL1xcWyg/Oig/IVxccylbJFxcd1xceEEwLVxcdUZGRkYuXSkrKD86PVteW1xcXV0rKT9cXF0oPz1cXHN8JCkvLnNvdXJjZVxuICAgICAgICApLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwYXJhbWV0ZXI6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC8oXlxcWylbJFxcd1xceEEwLVxcdUZGRkZcXC5dKy8sXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXFwuL1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY29kZToge1xuICAgICAgICAgICAgcGF0dGVybjogLyg9KVtcXHNcXFNdKig/PVxcXSQpLyxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICBpbnNpZGU6IGphdmFzY3JpcHQsXG4gICAgICAgICAgICBhbGlhczogJ2xhbmd1YWdlLWphdmFzY3JpcHQnXG4gICAgICAgICAgfSxcbiAgICAgICAgICBwdW5jdHVhdGlvbjogL1s9W1xcXV0vXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICAnY2xhc3MtbmFtZSc6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICAgIC8oQCg/OmF1Z21lbnRzfGNsYXNzfGV4dGVuZHN8aW50ZXJmYWNlfG1lbWJlcm9mIT98dGVtcGxhdGV8dGhpc3x0eXBlZGVmKVxccysoPzo8VFlQRT5cXHMrKT8pW0EtWl1cXHcqKD86XFwuW0EtWl1cXHcqKSovLnNvdXJjZS5yZXBsYWNlKFxuICAgICAgICAgICAgICAvPFRZUEU+L2csXG4gICAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHlwZVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApXG4gICAgICAgICAgKSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgcHVuY3R1YXRpb246IC9cXC4vXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogUmVnRXhwKCcoQFthLXpdK1xcXFxzKyknICsgdHlwZSksXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIHN0cmluZzogamF2YXNjcmlwdC5zdHJpbmcsXG4gICAgICAgICAgICBudW1iZXI6IGphdmFzY3JpcHQubnVtYmVyLFxuICAgICAgICAgICAgYm9vbGVhbjogamF2YXNjcmlwdC5ib29sZWFuLFxuICAgICAgICAgICAga2V5d29yZDogUHJpc20ubGFuZ3VhZ2VzLnR5cGVzY3JpcHQua2V5d29yZCxcbiAgICAgICAgICAgIG9wZXJhdG9yOiAvPT58XFwuXFwuXFwufFsmfD86Kl0vLFxuICAgICAgICAgICAgcHVuY3R1YXRpb246IC9bLiw7PTw+e30oKVtcXF1dL1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIGV4YW1wbGU6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKEBleGFtcGxlXFxzKyg/IVxccykpKD86W15AXFxzXXxcXHMrKD8hXFxzKSkrPyg/PVxccyooPzpcXCpcXHMqKT8oPzpAXFx3fFxcKlxcLykpLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgY29kZToge1xuICAgICAgICAgICAgcGF0dGVybjogL14oW1xcdCBdKig/OlxcKlxccyopPylcXFMuKiQvbSxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICBpbnNpZGU6IGphdmFzY3JpcHQsXG4gICAgICAgICAgICBhbGlhczogJ2xhbmd1YWdlLWphdmFzY3JpcHQnXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSlcbiAgICBQcmlzbS5sYW5ndWFnZXMuamF2YWRvY2xpa2UuYWRkU3VwcG9ydCgnamF2YXNjcmlwdCcsIFByaXNtLmxhbmd1YWdlcy5qc2RvYylcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9ySmF2YWRvY2xpa2UiLCJyZXF1aXJlIiwicmVmcmFjdG9yVHlwZXNjcmlwdCIsIm1vZHVsZSIsImV4cG9ydHMiLCJqc2RvYyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJqYXZhc2NyaXB0IiwibGFuZ3VhZ2VzIiwidHlwZSIsInNvdXJjZSIsInBhcmFtZXRlclByZWZpeCIsImV4dGVuZCIsInBhcmFtZXRlciIsInBhdHRlcm4iLCJSZWdFeHAiLCJsb29rYmVoaW5kIiwiaW5zaWRlIiwicHVuY3R1YXRpb24iLCJpbnNlcnRCZWZvcmUiLCJjb2RlIiwiYWxpYXMiLCJyZXBsYWNlIiwic3RyaW5nIiwibnVtYmVyIiwiYm9vbGVhbiIsImtleXdvcmQiLCJ0eXBlc2NyaXB0Iiwib3BlcmF0b3IiLCJleGFtcGxlIiwiamF2YWRvY2xpa2UiLCJhZGRTdXBwb3J0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/jsdoc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/json.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/json.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = json;\njson.displayName = \"json\";\njson.aliases = [\n    \"webmanifest\"\n];\nfunction json(Prism) {\n    // https://www.json.org/json-en.html\n    Prism.languages.json = {\n        property: {\n            pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n            lookbehind: true,\n            greedy: true\n        },\n        string: {\n            pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n            lookbehind: true,\n            greedy: true\n        },\n        comment: {\n            pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n            greedy: true\n        },\n        number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n        punctuation: /[{}[\\],]/,\n        operator: /:/,\n        boolean: /\\b(?:false|true)\\b/,\n        null: {\n            pattern: /\\bnull\\b/,\n            alias: \"keyword\"\n        }\n    };\n    Prism.languages.webmanifest = Prism.languages.json;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvanNvbi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRztJQUFDO0NBQWM7QUFDOUIsU0FBU0YsS0FBS0csS0FBSztJQUNqQixvQ0FBb0M7SUFDcENBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHO1FBQ3JCSyxVQUFVO1lBQ1JDLFNBQVM7WUFDVEMsWUFBWTtZQUNaQyxRQUFRO1FBQ1Y7UUFDQUMsUUFBUTtZQUNOSCxTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsUUFBUTtRQUNWO1FBQ0FFLFNBQVM7WUFDUEosU0FBUztZQUNURSxRQUFRO1FBQ1Y7UUFDQUcsUUFBUTtRQUNSQyxhQUFhO1FBQ2JDLFVBQVU7UUFDVkMsU0FBUztRQUNUQyxNQUFNO1lBQ0pULFNBQVM7WUFDVFUsT0FBTztRQUNUO0lBQ0Y7SUFDQWIsTUFBTUMsU0FBUyxDQUFDYSxXQUFXLEdBQUdkLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSTtBQUNwRCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9qc29uLmpzP2I3MzIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0ganNvblxuanNvbi5kaXNwbGF5TmFtZSA9ICdqc29uJ1xuanNvbi5hbGlhc2VzID0gWyd3ZWJtYW5pZmVzdCddXG5mdW5jdGlvbiBqc29uKFByaXNtKSB7XG4gIC8vIGh0dHBzOi8vd3d3Lmpzb24ub3JnL2pzb24tZW4uaHRtbFxuICBQcmlzbS5sYW5ndWFnZXMuanNvbiA9IHtcbiAgICBwcm9wZXJ0eToge1xuICAgICAgcGF0dGVybjogLyhefFteXFxcXF0pXCIoPzpcXFxcLnxbXlxcXFxcIlxcclxcbl0pKlwiKD89XFxzKjopLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyhefFteXFxcXF0pXCIoPzpcXFxcLnxbXlxcXFxcIlxcclxcbl0pKlwiKD8hXFxzKjopLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC9cXC9cXC8uKnxcXC9cXCpbXFxzXFxTXSo/KD86XFwqXFwvfCQpLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgbnVtYmVyOiAvLT9cXGJcXGQrKD86XFwuXFxkKyk/KD86ZVsrLV0/XFxkKyk/XFxiL2ksXG4gICAgcHVuY3R1YXRpb246IC9be31bXFxdLF0vLFxuICAgIG9wZXJhdG9yOiAvOi8sXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiLyxcbiAgICBudWxsOiB7XG4gICAgICBwYXR0ZXJuOiAvXFxibnVsbFxcYi8sXG4gICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgfVxuICB9XG4gIFByaXNtLmxhbmd1YWdlcy53ZWJtYW5pZmVzdCA9IFByaXNtLmxhbmd1YWdlcy5qc29uXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImpzb24iLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsInByb3BlcnR5IiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJncmVlZHkiLCJzdHJpbmciLCJjb21tZW50IiwibnVtYmVyIiwicHVuY3R1YXRpb24iLCJvcGVyYXRvciIsImJvb2xlYW4iLCJudWxsIiwiYWxpYXMiLCJ3ZWJtYW5pZmVzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/json.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/json5.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/json5.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorJson = __webpack_require__(/*! ./json.js */ \"(ssr)/./node_modules/refractor/lang/json.js\");\nmodule.exports = json5;\njson5.displayName = \"json5\";\njson5.aliases = [];\nfunction json5(Prism) {\n    Prism.register(refractorJson);\n    (function(Prism) {\n        var string = /(\"|')(?:\\\\(?:\\r\\n?|\\n|.)|(?!\\1)[^\\\\\\r\\n])*\\1/;\n        Prism.languages.json5 = Prism.languages.extend(\"json\", {\n            property: [\n                {\n                    pattern: RegExp(string.source + \"(?=\\\\s*:)\"),\n                    greedy: true\n                },\n                {\n                    pattern: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/,\n                    alias: \"unquoted\"\n                }\n            ],\n            string: {\n                pattern: string,\n                greedy: true\n            },\n            number: /[+-]?\\b(?:NaN|Infinity|0x[a-fA-F\\d]+)\\b|[+-]?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvanNvbjUuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxJQUFJQSxnQkFBZ0JDLG1CQUFPQSxDQUFDO0FBQzVCQyxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxNQUFNQyxXQUFXLEdBQUc7QUFDcEJELE1BQU1FLE9BQU8sR0FBRyxFQUFFO0FBQ2xCLFNBQVNGLE1BQU1HLEtBQUs7SUFDbEJBLE1BQU1DLFFBQVEsQ0FBQ1I7SUFDYixVQUFVTyxLQUFLO1FBQ2YsSUFBSUUsU0FBUztRQUNiRixNQUFNRyxTQUFTLENBQUNOLEtBQUssR0FBR0csTUFBTUcsU0FBUyxDQUFDQyxNQUFNLENBQUMsUUFBUTtZQUNyREMsVUFBVTtnQkFDUjtvQkFDRUMsU0FBU0MsT0FBT0wsT0FBT00sTUFBTSxHQUFHO29CQUNoQ0MsUUFBUTtnQkFDVjtnQkFDQTtvQkFDRUgsU0FDRTtvQkFDRkksT0FBTztnQkFDVDthQUNEO1lBQ0RSLFFBQVE7Z0JBQ05JLFNBQVNKO2dCQUNUTyxRQUFRO1lBQ1Y7WUFDQUUsUUFDRTtRQUNKO0lBQ0YsR0FBR1g7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9qc29uNS5qcz85NjEzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xudmFyIHJlZnJhY3Rvckpzb24gPSByZXF1aXJlKCcuL2pzb24uanMnKVxubW9kdWxlLmV4cG9ydHMgPSBqc29uNVxuanNvbjUuZGlzcGxheU5hbWUgPSAnanNvbjUnXG5qc29uNS5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGpzb241KFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3Rvckpzb24pXG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIHN0cmluZyA9IC8oXCJ8JykoPzpcXFxcKD86XFxyXFxuP3xcXG58Lil8KD8hXFwxKVteXFxcXFxcclxcbl0pKlxcMS9cbiAgICBQcmlzbS5sYW5ndWFnZXMuanNvbjUgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdqc29uJywge1xuICAgICAgcHJvcGVydHk6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IFJlZ0V4cChzdHJpbmcuc291cmNlICsgJyg/PVxcXFxzKjopJyksXG4gICAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgLyg/IVxccylbXyRhLXpBLVpcXHhBMC1cXHVGRkZGXSg/Oig/IVxccylbJFxcd1xceEEwLVxcdUZGRkZdKSooPz1cXHMqOikvLFxuICAgICAgICAgIGFsaWFzOiAndW5xdW90ZWQnXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBzdHJpbmc6IHtcbiAgICAgICAgcGF0dGVybjogc3RyaW5nLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICBudW1iZXI6XG4gICAgICAgIC9bKy1dP1xcYig/Ok5hTnxJbmZpbml0eXwweFthLWZBLUZcXGRdKylcXGJ8WystXT8oPzpcXGJcXGQrKD86XFwuXFxkKik/fFxcQlxcLlxcZCspKD86W2VFXVsrLV0/XFxkK1xcYik/L1xuICAgIH0pXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3Rvckpzb24iLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImpzb241IiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsInN0cmluZyIsImxhbmd1YWdlcyIsImV4dGVuZCIsInByb3BlcnR5IiwicGF0dGVybiIsIlJlZ0V4cCIsInNvdXJjZSIsImdyZWVkeSIsImFsaWFzIiwibnVtYmVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/json5.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/jsonp.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/jsonp.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorJson = __webpack_require__(/*! ./json.js */ \"(ssr)/./node_modules/refractor/lang/json.js\");\nmodule.exports = jsonp;\njsonp.displayName = \"jsonp\";\njsonp.aliases = [];\nfunction jsonp(Prism) {\n    Prism.register(refractorJson);\n    Prism.languages.jsonp = Prism.languages.extend(\"json\", {\n        punctuation: /[{}[\\]();,.]/\n    });\n    Prism.languages.insertBefore(\"jsonp\", \"punctuation\", {\n        function: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*\\()/\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvanNvbnAuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxJQUFJQSxnQkFBZ0JDLG1CQUFPQSxDQUFDO0FBQzVCQyxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxNQUFNQyxXQUFXLEdBQUc7QUFDcEJELE1BQU1FLE9BQU8sR0FBRyxFQUFFO0FBQ2xCLFNBQVNGLE1BQU1HLEtBQUs7SUFDbEJBLE1BQU1DLFFBQVEsQ0FBQ1I7SUFDZk8sTUFBTUUsU0FBUyxDQUFDTCxLQUFLLEdBQUdHLE1BQU1FLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLFFBQVE7UUFDckRDLGFBQWE7SUFDZjtJQUNBSixNQUFNRSxTQUFTLENBQUNHLFlBQVksQ0FBQyxTQUFTLGVBQWU7UUFDbkRDLFVBQVU7SUFDWjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2pzb25wLmpzP2FmNDAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG52YXIgcmVmcmFjdG9ySnNvbiA9IHJlcXVpcmUoJy4vanNvbi5qcycpXG5tb2R1bGUuZXhwb3J0cyA9IGpzb25wXG5qc29ucC5kaXNwbGF5TmFtZSA9ICdqc29ucCdcbmpzb25wLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24ganNvbnAoUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9ySnNvbilcbiAgUHJpc20ubGFuZ3VhZ2VzLmpzb25wID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnanNvbicsIHtcbiAgICBwdW5jdHVhdGlvbjogL1t7fVtcXF0oKTssLl0vXG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ2pzb25wJywgJ3B1bmN0dWF0aW9uJywge1xuICAgIGZ1bmN0aW9uOiAvKD8hXFxzKVtfJGEtekEtWlxceEEwLVxcdUZGRkZdKD86KD8hXFxzKVskXFx3XFx4QTAtXFx1RkZGRl0pKig/PVxccypcXCgpL1xuICB9KVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3Rvckpzb24iLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImpzb25wIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImV4dGVuZCIsInB1bmN0dWF0aW9uIiwiaW5zZXJ0QmVmb3JlIiwiZnVuY3Rpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/jsonp.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/jsstacktrace.js":
/*!*****************************************************!*\
  !*** ./node_modules/refractor/lang/jsstacktrace.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = jsstacktrace;\njsstacktrace.displayName = \"jsstacktrace\";\njsstacktrace.aliases = [];\nfunction jsstacktrace(Prism) {\n    Prism.languages.jsstacktrace = {\n        \"error-message\": {\n            pattern: /^\\S.*/m,\n            alias: \"string\"\n        },\n        \"stack-frame\": {\n            pattern: /(^[ \\t]+)at[ \\t].*/m,\n            lookbehind: true,\n            inside: {\n                \"not-my-code\": {\n                    pattern: /^at[ \\t]+(?!\\s)(?:node\\.js|<unknown>|.*(?:node_modules|\\(<anonymous>\\)|\\(<unknown>|<anonymous>$|\\(internal\\/|\\(node\\.js)).*/m,\n                    alias: \"comment\"\n                },\n                filename: {\n                    pattern: /(\\bat\\s+(?!\\s)|\\()(?:[a-zA-Z]:)?[^():]+(?=:)/,\n                    lookbehind: true,\n                    alias: \"url\"\n                },\n                function: {\n                    pattern: /(\\bat\\s+(?:new\\s+)?)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF<][.$\\w\\xA0-\\uFFFF<>]*/,\n                    lookbehind: true,\n                    inside: {\n                        punctuation: /\\./\n                    }\n                },\n                punctuation: /[()]/,\n                keyword: /\\b(?:at|new)\\b/,\n                alias: {\n                    pattern: /\\[(?:as\\s+)?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\]/,\n                    alias: \"variable\"\n                },\n                \"line-number\": {\n                    pattern: /:\\d+(?::\\d+)?\\b/,\n                    alias: \"number\",\n                    inside: {\n                        punctuation: /:/\n                    }\n                }\n            }\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvanNzdGFja3RyYWNlLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLGFBQWFDLFdBQVcsR0FBRztBQUMzQkQsYUFBYUUsT0FBTyxHQUFHLEVBQUU7QUFDekIsU0FBU0YsYUFBYUcsS0FBSztJQUN6QkEsTUFBTUMsU0FBUyxDQUFDSixZQUFZLEdBQUc7UUFDN0IsaUJBQWlCO1lBQ2ZLLFNBQVM7WUFDVEMsT0FBTztRQUNUO1FBQ0EsZUFBZTtZQUNiRCxTQUFTO1lBQ1RFLFlBQVk7WUFDWkMsUUFBUTtnQkFDTixlQUFlO29CQUNiSCxTQUNFO29CQUNGQyxPQUFPO2dCQUNUO2dCQUNBRyxVQUFVO29CQUNSSixTQUFTO29CQUNURSxZQUFZO29CQUNaRCxPQUFPO2dCQUNUO2dCQUNBSSxVQUFVO29CQUNSTCxTQUNFO29CQUNGRSxZQUFZO29CQUNaQyxRQUFRO3dCQUNORyxhQUFhO29CQUNmO2dCQUNGO2dCQUNBQSxhQUFhO2dCQUNiQyxTQUFTO2dCQUNUTixPQUFPO29CQUNMRCxTQUFTO29CQUNUQyxPQUFPO2dCQUNUO2dCQUNBLGVBQWU7b0JBQ2JELFNBQVM7b0JBQ1RDLE9BQU87b0JBQ1BFLFFBQVE7d0JBQ05HLGFBQWE7b0JBQ2Y7Z0JBQ0Y7WUFDRjtRQUNGO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9qc3N0YWNrdHJhY2UuanM/ZjFmOCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBqc3N0YWNrdHJhY2Vcbmpzc3RhY2t0cmFjZS5kaXNwbGF5TmFtZSA9ICdqc3N0YWNrdHJhY2UnXG5qc3N0YWNrdHJhY2UuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBqc3N0YWNrdHJhY2UoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmpzc3RhY2t0cmFjZSA9IHtcbiAgICAnZXJyb3ItbWVzc2FnZSc6IHtcbiAgICAgIHBhdHRlcm46IC9eXFxTLiovbSxcbiAgICAgIGFsaWFzOiAnc3RyaW5nJ1xuICAgIH0sXG4gICAgJ3N0YWNrLWZyYW1lJzoge1xuICAgICAgcGF0dGVybjogLyheWyBcXHRdKylhdFsgXFx0XS4qL20sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgICdub3QtbXktY29kZSc6IHtcbiAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgL15hdFsgXFx0XSsoPyFcXHMpKD86bm9kZVxcLmpzfDx1bmtub3duPnwuKig/Om5vZGVfbW9kdWxlc3xcXCg8YW5vbnltb3VzPlxcKXxcXCg8dW5rbm93bj58PGFub255bW91cz4kfFxcKGludGVybmFsXFwvfFxcKG5vZGVcXC5qcykpLiovbSxcbiAgICAgICAgICBhbGlhczogJ2NvbW1lbnQnXG4gICAgICAgIH0sXG4gICAgICAgIGZpbGVuYW1lOiB7XG4gICAgICAgICAgcGF0dGVybjogLyhcXGJhdFxccysoPyFcXHMpfFxcKCkoPzpbYS16QS1aXTopP1teKCk6XSsoPz06KS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBhbGlhczogJ3VybCdcbiAgICAgICAgfSxcbiAgICAgICAgZnVuY3Rpb246IHtcbiAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgLyhcXGJhdFxccysoPzpuZXdcXHMrKT8pKD8hXFxzKVtfJGEtekEtWlxceEEwLVxcdUZGRkY8XVsuJFxcd1xceEEwLVxcdUZGRkY8Pl0qLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgcHVuY3R1YXRpb246IC9cXC4vXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBwdW5jdHVhdGlvbjogL1soKV0vLFxuICAgICAgICBrZXl3b3JkOiAvXFxiKD86YXR8bmV3KVxcYi8sXG4gICAgICAgIGFsaWFzOiB7XG4gICAgICAgICAgcGF0dGVybjogL1xcWyg/OmFzXFxzKyk/KD8hXFxzKVtfJGEtekEtWlxceEEwLVxcdUZGRkZdWyRcXHdcXHhBMC1cXHVGRkZGXSpcXF0vLFxuICAgICAgICAgIGFsaWFzOiAndmFyaWFibGUnXG4gICAgICAgIH0sXG4gICAgICAgICdsaW5lLW51bWJlcic6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvOlxcZCsoPzo6XFxkKyk/XFxiLyxcbiAgICAgICAgICBhbGlhczogJ251bWJlcicsXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICBwdW5jdHVhdGlvbjogLzovXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImpzc3RhY2t0cmFjZSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwicGF0dGVybiIsImFsaWFzIiwibG9va2JlaGluZCIsImluc2lkZSIsImZpbGVuYW1lIiwiZnVuY3Rpb24iLCJwdW5jdHVhdGlvbiIsImtleXdvcmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/jsstacktrace.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/jsx.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/jsx.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = jsx;\njsx.displayName = \"jsx\";\njsx.aliases = [];\nfunction jsx(Prism) {\n    ;\n    (function(Prism) {\n        var javascript = Prism.util.clone(Prism.languages.javascript);\n        var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source;\n        var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source;\n        var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n        /**\n     * @param {string} source\n     * @param {string} [flags]\n     */ function re(source, flags) {\n            source = source.replace(/<S>/g, function() {\n                return space;\n            }).replace(/<BRACES>/g, function() {\n                return braces;\n            }).replace(/<SPREAD>/g, function() {\n                return spread;\n            });\n            return RegExp(source, flags);\n        }\n        spread = re(spread).source;\n        Prism.languages.jsx = Prism.languages.extend(\"markup\", javascript);\n        Prism.languages.jsx.tag.pattern = re(/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source);\n        Prism.languages.jsx.tag.inside[\"tag\"].pattern = /^<\\/?[^\\s>\\/]*/;\n        Prism.languages.jsx.tag.inside[\"attr-value\"].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/;\n        Prism.languages.jsx.tag.inside[\"tag\"].inside[\"class-name\"] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n        Prism.languages.jsx.tag.inside[\"comment\"] = javascript[\"comment\"];\n        Prism.languages.insertBefore(\"inside\", \"attr-name\", {\n            spread: {\n                pattern: re(/<SPREAD>/.source),\n                inside: Prism.languages.jsx\n            }\n        }, Prism.languages.jsx.tag);\n        Prism.languages.insertBefore(\"inside\", \"special-attr\", {\n            script: {\n                // Allow for two levels of nesting\n                pattern: re(/=<BRACES>/.source),\n                alias: \"language-javascript\",\n                inside: {\n                    \"script-punctuation\": {\n                        pattern: /^=(?=\\{)/,\n                        alias: \"punctuation\"\n                    },\n                    rest: Prism.languages.jsx\n                }\n            }\n        }, Prism.languages.jsx.tag) // The following will handle plain text inside tags\n        ;\n        var stringifyToken = function(token) {\n            if (!token) {\n                return \"\";\n            }\n            if (typeof token === \"string\") {\n                return token;\n            }\n            if (typeof token.content === \"string\") {\n                return token.content;\n            }\n            return token.content.map(stringifyToken).join(\"\");\n        };\n        var walkTokens = function(tokens) {\n            var openedTags = [];\n            for(var i = 0; i < tokens.length; i++){\n                var token = tokens[i];\n                var notTagNorBrace = false;\n                if (typeof token !== \"string\") {\n                    if (token.type === \"tag\" && token.content[0] && token.content[0].type === \"tag\") {\n                        // We found a tag, now find its kind\n                        if (token.content[0].content[0].content === \"</\") {\n                            // Closing tag\n                            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n                                // Pop matching opening tag\n                                openedTags.pop();\n                            }\n                        } else {\n                            if (token.content[token.content.length - 1].content === \"/>\") {\n                            // Autoclosed tag, ignore\n                            } else {\n                                // Opening tag\n                                openedTags.push({\n                                    tagName: stringifyToken(token.content[0].content[1]),\n                                    openedBraces: 0\n                                });\n                            }\n                        }\n                    } else if (openedTags.length > 0 && token.type === \"punctuation\" && token.content === \"{\") {\n                        // Here we might have entered a JSX context inside a tag\n                        openedTags[openedTags.length - 1].openedBraces++;\n                    } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === \"punctuation\" && token.content === \"}\") {\n                        // Here we might have left a JSX context inside a tag\n                        openedTags[openedTags.length - 1].openedBraces--;\n                    } else {\n                        notTagNorBrace = true;\n                    }\n                }\n                if (notTagNorBrace || typeof token === \"string\") {\n                    if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n                        // Here we are inside a tag, and not inside a JSX context.\n                        // That's plain text: drop any tokens matched.\n                        var plainText = stringifyToken(token) // And merge text with adjacent text\n                        ;\n                        if (i < tokens.length - 1 && (typeof tokens[i + 1] === \"string\" || tokens[i + 1].type === \"plain-text\")) {\n                            plainText += stringifyToken(tokens[i + 1]);\n                            tokens.splice(i + 1, 1);\n                        }\n                        if (i > 0 && (typeof tokens[i - 1] === \"string\" || tokens[i - 1].type === \"plain-text\")) {\n                            plainText = stringifyToken(tokens[i - 1]) + plainText;\n                            tokens.splice(i - 1, 1);\n                            i--;\n                        }\n                        tokens[i] = new Prism.Token(\"plain-text\", plainText, null, plainText);\n                    }\n                }\n                if (token.content && typeof token.content !== \"string\") {\n                    walkTokens(token.content);\n                }\n            }\n        };\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            if (env.language !== \"jsx\" && env.language !== \"tsx\") {\n                return;\n            }\n            walkTokens(env.tokens);\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/jsx.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/julia.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/julia.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = julia;\njulia.displayName = \"julia\";\njulia.aliases = [];\nfunction julia(Prism) {\n    Prism.languages.julia = {\n        comment: {\n            // support one level of nested comments\n            // https://github.com/JuliaLang/julia/pull/6128\n            pattern: /(^|[^\\\\])(?:#=(?:[^#=]|=(?!#)|#(?!=)|#=(?:[^#=]|=(?!#)|#(?!=))*=#)*=#|#.*)/,\n            lookbehind: true\n        },\n        regex: {\n            // https://docs.julialang.org/en/v1/manual/strings/#Regular-Expressions-1\n            pattern: /r\"(?:\\\\.|[^\"\\\\\\r\\n])*\"[imsx]{0,4}/,\n            greedy: true\n        },\n        string: {\n            // https://docs.julialang.org/en/v1/manual/strings/#String-Basics-1\n            // https://docs.julialang.org/en/v1/manual/strings/#non-standard-string-literals-1\n            // https://docs.julialang.org/en/v1/manual/running-external-programs/#Running-External-Programs-1\n            pattern: /\"\"\"[\\s\\S]+?\"\"\"|(?:\\b\\w+)?\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`(?:[^\\\\`\\r\\n]|\\\\.)*`/,\n            greedy: true\n        },\n        char: {\n            // https://docs.julialang.org/en/v1/manual/strings/#man-characters-1\n            pattern: /(^|[^\\w'])'(?:\\\\[^\\r\\n][^'\\r\\n]*|[^\\\\\\r\\n])'/,\n            lookbehind: true,\n            greedy: true\n        },\n        keyword: /\\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|in|let|local|macro|module|print|println|quote|return|struct|try|type|typealias|using|while)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        number: /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[box])?(?:[\\da-f]+(?:_[\\da-f]+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[efp][+-]?\\d+(?:_\\d+)*)?j?/i,\n        // https://docs.julialang.org/en/v1/manual/mathematical-operations/\n        // https://docs.julialang.org/en/v1/manual/mathematical-operations/#Operator-Precedence-and-Associativity-1\n        operator: /&&|\\|\\||[-+*^%÷⊻&$\\\\]=?|\\/[\\/=]?|!=?=?|\\|[=>]?|<(?:<=?|[=:|])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥'√∛]/,\n        punctuation: /::?|[{}[\\]();,.?]/,\n        // https://docs.julialang.org/en/v1/base/numbers/#Base.im\n        constant: /\\b(?:(?:Inf|NaN)(?:16|32|64)?|im|pi)\\b|[πℯ]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvanVsaWEuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsTUFBTUMsV0FBVyxHQUFHO0FBQ3BCRCxNQUFNRSxPQUFPLEdBQUcsRUFBRTtBQUNsQixTQUFTRixNQUFNRyxLQUFLO0lBQ2xCQSxNQUFNQyxTQUFTLENBQUNKLEtBQUssR0FBRztRQUN0QkssU0FBUztZQUNQLHVDQUF1QztZQUN2QywrQ0FBK0M7WUFDL0NDLFNBQ0U7WUFDRkMsWUFBWTtRQUNkO1FBQ0FDLE9BQU87WUFDTCx5RUFBeUU7WUFDekVGLFNBQVM7WUFDVEcsUUFBUTtRQUNWO1FBQ0FDLFFBQVE7WUFDTixtRUFBbUU7WUFDbkUsa0ZBQWtGO1lBQ2xGLGlHQUFpRztZQUNqR0osU0FDRTtZQUNGRyxRQUFRO1FBQ1Y7UUFDQUUsTUFBTTtZQUNKLG9FQUFvRTtZQUNwRUwsU0FBUztZQUNUQyxZQUFZO1lBQ1pFLFFBQVE7UUFDVjtRQUNBRyxTQUNFO1FBQ0ZDLFNBQVM7UUFDVEMsUUFDRTtRQUNGLG1FQUFtRTtRQUNuRSwyR0FBMkc7UUFDM0dDLFVBQ0U7UUFDRkMsYUFBYTtRQUNiLHlEQUF5RDtRQUN6REMsVUFBVTtJQUNaO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvanVsaWEuanM/YzNlZCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBqdWxpYVxuanVsaWEuZGlzcGxheU5hbWUgPSAnanVsaWEnXG5qdWxpYS5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGp1bGlhKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5qdWxpYSA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICAvLyBzdXBwb3J0IG9uZSBsZXZlbCBvZiBuZXN0ZWQgY29tbWVudHNcbiAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9KdWxpYUxhbmcvanVsaWEvcHVsbC82MTI4XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKF58W15cXFxcXSkoPzojPSg/OlteIz1dfD0oPyEjKXwjKD8hPSl8Iz0oPzpbXiM9XXw9KD8hIyl8Iyg/IT0pKSo9IykqPSN8Iy4qKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICByZWdleDoge1xuICAgICAgLy8gaHR0cHM6Ly9kb2NzLmp1bGlhbGFuZy5vcmcvZW4vdjEvbWFudWFsL3N0cmluZ3MvI1JlZ3VsYXItRXhwcmVzc2lvbnMtMVxuICAgICAgcGF0dGVybjogL3JcIig/OlxcXFwufFteXCJcXFxcXFxyXFxuXSkqXCJbaW1zeF17MCw0fS8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgLy8gaHR0cHM6Ly9kb2NzLmp1bGlhbGFuZy5vcmcvZW4vdjEvbWFudWFsL3N0cmluZ3MvI1N0cmluZy1CYXNpY3MtMVxuICAgICAgLy8gaHR0cHM6Ly9kb2NzLmp1bGlhbGFuZy5vcmcvZW4vdjEvbWFudWFsL3N0cmluZ3MvI25vbi1zdGFuZGFyZC1zdHJpbmctbGl0ZXJhbHMtMVxuICAgICAgLy8gaHR0cHM6Ly9kb2NzLmp1bGlhbGFuZy5vcmcvZW4vdjEvbWFudWFsL3J1bm5pbmctZXh0ZXJuYWwtcHJvZ3JhbXMvI1J1bm5pbmctRXh0ZXJuYWwtUHJvZ3JhbXMtMVxuICAgICAgcGF0dGVybjpcbiAgICAgICAgL1wiXCJcIltcXHNcXFNdKz9cIlwiXCJ8KD86XFxiXFx3Kyk/XCIoPzpcXFxcLnxbXlwiXFxcXFxcclxcbl0pKlwifGAoPzpbXlxcXFxgXFxyXFxuXXxcXFxcLikqYC8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGNoYXI6IHtcbiAgICAgIC8vIGh0dHBzOi8vZG9jcy5qdWxpYWxhbmcub3JnL2VuL3YxL21hbnVhbC9zdHJpbmdzLyNtYW4tY2hhcmFjdGVycy0xXG4gICAgICBwYXR0ZXJuOiAvKF58W15cXHcnXSknKD86XFxcXFteXFxyXFxuXVteJ1xcclxcbl0qfFteXFxcXFxcclxcbl0pJy8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OmFic3RyYWN0fGJhcmVtb2R1bGV8YmVnaW58Yml0c3R5cGV8YnJlYWt8Y2F0Y2h8Y2NhbGx8Y29uc3R8Y29udGludWV8ZG98ZWxzZXxlbHNlaWZ8ZW5kfGV4cG9ydHxmaW5hbGx5fGZvcnxmdW5jdGlvbnxnbG9iYWx8aWZ8aW1tdXRhYmxlfGltcG9ydHxpbXBvcnRhbGx8aW58bGV0fGxvY2FsfG1hY3JvfG1vZHVsZXxwcmludHxwcmludGxufHF1b3RlfHJldHVybnxzdHJ1Y3R8dHJ5fHR5cGV8dHlwZWFsaWFzfHVzaW5nfHdoaWxlKVxcYi8sXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiLyxcbiAgICBudW1iZXI6XG4gICAgICAvKD86XFxiKD89XFxkKXxcXEIoPz1cXC4pKSg/OjBbYm94XSk/KD86W1xcZGEtZl0rKD86X1tcXGRhLWZdKykqKD86XFwuKD86XFxkKyg/Ol9cXGQrKSopPyk/fFxcLlxcZCsoPzpfXFxkKykqKSg/OltlZnBdWystXT9cXGQrKD86X1xcZCspKik/aj8vaSxcbiAgICAvLyBodHRwczovL2RvY3MuanVsaWFsYW5nLm9yZy9lbi92MS9tYW51YWwvbWF0aGVtYXRpY2FsLW9wZXJhdGlvbnMvXG4gICAgLy8gaHR0cHM6Ly9kb2NzLmp1bGlhbGFuZy5vcmcvZW4vdjEvbWFudWFsL21hdGhlbWF0aWNhbC1vcGVyYXRpb25zLyNPcGVyYXRvci1QcmVjZWRlbmNlLWFuZC1Bc3NvY2lhdGl2aXR5LTFcbiAgICBvcGVyYXRvcjpcbiAgICAgIC8mJnxcXHxcXHx8Wy0rKl4lw7fiirsmJFxcXFxdPT98XFwvW1xcLz1dP3whPT89P3xcXHxbPT5dP3w8KD86PD0/fFs9OnxdKT98Pig/Oj18Pj4/PT8pP3w9PT89P3xbfuKJoOKJpOKJpSfiiJriiJtdLyxcbiAgICBwdW5jdHVhdGlvbjogLzo6P3xbe31bXFxdKCk7LC4/XS8sXG4gICAgLy8gaHR0cHM6Ly9kb2NzLmp1bGlhbGFuZy5vcmcvZW4vdjEvYmFzZS9udW1iZXJzLyNCYXNlLmltXG4gICAgY29uc3RhbnQ6IC9cXGIoPzooPzpJbmZ8TmFOKSg/OjE2fDMyfDY0KT98aW18cGkpXFxifFvPgOKEr10vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwianVsaWEiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsInJlZ2V4IiwiZ3JlZWR5Iiwic3RyaW5nIiwiY2hhciIsImtleXdvcmQiLCJib29sZWFuIiwibnVtYmVyIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiIsImNvbnN0YW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/julia.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/keepalived.js":
/*!***************************************************!*\
  !*** ./node_modules/refractor/lang/keepalived.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = keepalived;\nkeepalived.displayName = \"keepalived\";\nkeepalived.aliases = [];\nfunction keepalived(Prism) {\n    Prism.languages.keepalived = {\n        comment: {\n            pattern: /[#!].*/,\n            greedy: true\n        },\n        string: {\n            pattern: /(^|[^\\\\])(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/,\n            lookbehind: true,\n            greedy: true\n        },\n        // support IPv4, IPv6, subnet mask\n        ip: {\n            pattern: RegExp(/\\b(?:(?:(?:[\\da-f]{1,4}:){7}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){6}:[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){5}:(?:[\\da-f]{1,4}:)?[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){4}:(?:[\\da-f]{1,4}:){0,2}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){3}:(?:[\\da-f]{1,4}:){0,3}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){2}:(?:[\\da-f]{1,4}:){0,4}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){6}<ipv4>|(?:[\\da-f]{1,4}:){0,5}:<ipv4>|::(?:[\\da-f]{1,4}:){0,5}<ipv4>|[\\da-f]{1,4}::(?:[\\da-f]{1,4}:){0,5}[\\da-f]{1,4}|::(?:[\\da-f]{1,4}:){0,6}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){1,7}:)(?:\\/\\d{1,3})?|<ipv4>(?:\\/\\d{1,2})?)\\b/.source.replace(/<ipv4>/g, function() {\n                return /(?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d))/.source;\n            }), \"i\"),\n            alias: \"number\"\n        },\n        // support *nix / Windows, directory / file\n        path: {\n            pattern: /(\\s)\\/(?:[^\\/\\s]+\\/)*[^\\/\\s]*|\\b[a-zA-Z]:\\\\(?:[^\\\\\\s]+\\\\)*[^\\\\\\s]*/,\n            lookbehind: true,\n            alias: \"string\"\n        },\n        variable: /\\$\\{?\\w+\\}?/,\n        email: {\n            pattern: /[\\w-]+@[\\w-]+(?:\\.[\\w-]{2,3}){1,2}/,\n            alias: \"string\"\n        },\n        \"conditional-configuration\": {\n            pattern: /@\\^?[\\w-]+/,\n            alias: \"variable\"\n        },\n        operator: /=/,\n        property: /\\b(?:BFD_CHECK|DNS_CHECK|FILE_CHECK|HTTP_GET|MISC_CHECK|NAME|PING_CHECK|SCRIPTS|SMTP_CHECK|SSL|SSL_GET|TCP_CHECK|UDP_CHECK|accept|advert_int|alpha|auth_pass|auth_type|authentication|bfd_cpu_affinity|bfd_instance|bfd_no_swap|bfd_priority|bfd_process_name|bfd_rlimit_rttime|bfd_rt_priority|bind_if|bind_port|bindto|ca|certificate|check_unicast_src|checker|checker_cpu_affinity|checker_log_all_failures|checker_no_swap|checker_priority|checker_rlimit_rttime|checker_rt_priority|child_wait_time|connect_ip|connect_port|connect_timeout|dbus_service_name|debug|default_interface|delay|delay_before_retry|delay_loop|digest|dont_track_primary|dynamic|dynamic_interfaces|enable_(?:dbus|script_security|sni|snmp_checker|snmp_rfc|snmp_rfcv2|snmp_rfcv3|snmp_vrrp|traps)|end|fall|fast_recovery|file|flag-[123]|fork_delay|full_command|fwmark|garp_group|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|global_defs|global_tracking|gna_interval|group|ha_suspend|hashed|helo_name|higher_prio_send_advert|hoplimit|http_protocol|hysteresis|idle_tx|include|inhibit_on_failure|init_fail|init_file|instance|interface|interfaces|interval|ip_family|ipvs_process_name|keepalived.conf|kernel_rx_buf_size|key|linkbeat_interfaces|linkbeat_use_polling|log_all_failures|log_unknown_vrids|lower_prio_no_advert|lthreshold|lvs_flush|lvs_flush_onstop|lvs_method|lvs_netlink_cmd_rcv_bufs|lvs_netlink_cmd_rcv_bufs_force|lvs_netlink_monitor_rcv_bufs|lvs_netlink_monitor_rcv_bufs_force|lvs_notify_fifo|lvs_notify_fifo_script|lvs_sched|lvs_sync_daemon|max_auto_priority|max_hops|mcast_src_ip|mh-fallback|mh-port|min_auto_priority_delay|min_rx|min_tx|misc_dynamic|misc_path|misc_timeout|multiplier|name|namespace_with_ipsets|native_ipv6|neighbor_ip|net_namespace|net_namespace_ipvs|nftables|nftables_counters|nftables_ifindex|nftables_priority|no_accept|no_checker_emails|no_email_faults|nopreempt|notification_email|notification_email_from|notify|notify_backup|notify_deleted|notify_down|notify_fault|notify_fifo|notify_fifo_script|notify_master|notify_master_rx_lower_pri|notify_priority_changes|notify_stop|notify_up|old_unicast_checksum|omega|ops|param_match|passive|password|path|persistence_engine|persistence_granularity|persistence_timeout|preempt|preempt_delay|priority|process|process_monitor_rcv_bufs|process_monitor_rcv_bufs_force|process_name|process_names|promote_secondaries|protocol|proxy_arp|proxy_arp_pvlan|quorum|quorum_down|quorum_max|quorum_up|random_seed|real_server|regex|regex_max_offset|regex_min_offset|regex_no_match|regex_options|regex_stack|reload_repeat|reload_time_file|require_reply|retry|rise|router_id|rs_init_notifies|script|script_user|sh-fallback|sh-port|shutdown_script|shutdown_script_timeout|skip_check_adv_addr|smtp_alert|smtp_alert_checker|smtp_alert_vrrp|smtp_connect_timeout|smtp_helo_name|smtp_server|snmp_socket|sorry_server|sorry_server_inhibit|sorry_server_lvs_method|source_ip|start|startup_script|startup_script_timeout|state|static_ipaddress|static_routes|static_rules|status_code|step|strict_mode|sync_group_tracking_weight|terminate_delay|timeout|track_bfd|track_file|track_group|track_interface|track_process|track_script|track_src_ip|ttl|type|umask|unicast_peer|unicast_src_ip|unicast_ttl|url|use_ipvlan|use_pid_dir|use_vmac|user|uthreshold|val[123]|version|virtual_ipaddress|virtual_ipaddress_excluded|virtual_router_id|virtual_routes|virtual_rules|virtual_server|virtual_server_group|virtualhost|vmac_xmit_base|vrrp|vrrp_(?:check_unicast_src|cpu_affinity|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|gna_interval|higher_prio_send_advert|instance|ipsets|iptables|lower_prio_no_advert|mcast_group4|mcast_group6|min_garp|netlink_cmd_rcv_bufs|netlink_cmd_rcv_bufs_force|netlink_monitor_rcv_bufs|netlink_monitor_rcv_bufs_force|no_swap|notify_fifo|notify_fifo_script|notify_priority_changes|priority|process_name|rlimit_rttime|rt_priority|rx_bufs_multiplier|rx_bufs_policy|script|skip_check_adv_addr|startup_delay|strict|sync_group|track_process|version)|warmup|weight)\\b/,\n        constant: /\\b(?:A|AAAA|AH|BACKUP|CNAME|DR|MASTER|MX|NAT|NS|PASS|SCTP|SOA|TCP|TUN|TXT|UDP|dh|fo|lblc|lblcr|lc|mh|nq|ovf|rr|sed|sh|wlc|wrr)\\b/,\n        number: {\n            pattern: /(^|[^\\w.-])-?\\d+(?:\\.\\d+)?/,\n            lookbehind: true\n        },\n        boolean: /\\b(?:false|no|off|on|true|yes)\\b/,\n        punctuation: /[\\{\\}]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/keepalived.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/keyman.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/keyman.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = keyman;\nkeyman.displayName = \"keyman\";\nkeyman.aliases = [];\nfunction keyman(Prism) {\n    Prism.languages.keyman = {\n        comment: {\n            pattern: /\\bc .*/i,\n            greedy: true\n        },\n        string: {\n            pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n            greedy: true\n        },\n        \"virtual-key\": {\n            pattern: /\\[\\s*(?:(?:ALT|CAPS|CTRL|LALT|LCTRL|NCAPS|RALT|RCTRL|SHIFT)\\s+)*(?:[TKU]_[\\w?]+|[A-E]\\d\\d?|\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*\\]/i,\n            greedy: true,\n            alias: \"function\" // alias for styles\n        },\n        // https://help.keyman.com/developer/language/guide/headers\n        \"header-keyword\": {\n            pattern: /&\\w+/,\n            alias: \"bold\" // alias for styles\n        },\n        \"header-statement\": {\n            pattern: /\\b(?:bitmap|bitmaps|caps always off|caps on only|copyright|hotkey|language|layout|message|name|shift frees caps|version)\\b/i,\n            alias: \"bold\" // alias for styles\n        },\n        \"rule-keyword\": {\n            pattern: /\\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|reset|return|save|set|store|use)\\b/i,\n            alias: \"keyword\"\n        },\n        \"structural-keyword\": {\n            pattern: /\\b(?:ansi|begin|group|match|nomatch|unicode|using keys)\\b/i,\n            alias: \"keyword\"\n        },\n        \"compile-target\": {\n            pattern: /\\$(?:keyman|keymanonly|keymanweb|kmfl|weaver):/i,\n            alias: \"property\"\n        },\n        // U+####, x###, d### characters and numbers\n        number: /\\b(?:U\\+[\\dA-F]+|d\\d+|x[\\da-f]+|\\d+)\\b/i,\n        operator: /[+>\\\\$]|\\.\\./,\n        punctuation: /[()=,]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcva2V5bWFuLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLE9BQU9DLFdBQVcsR0FBRztBQUNyQkQsT0FBT0UsT0FBTyxHQUFHLEVBQUU7QUFDbkIsU0FBU0YsT0FBT0csS0FBSztJQUNuQkEsTUFBTUMsU0FBUyxDQUFDSixNQUFNLEdBQUc7UUFDdkJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsUUFBUTtZQUNORixTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBLGVBQWU7WUFDYkQsU0FDRTtZQUNGQyxRQUFRO1lBQ1JFLE9BQU8sV0FBVyxtQkFBbUI7UUFDdkM7UUFDQSwyREFBMkQ7UUFDM0Qsa0JBQWtCO1lBQ2hCSCxTQUFTO1lBQ1RHLE9BQU8sT0FBTyxtQkFBbUI7UUFDbkM7UUFDQSxvQkFBb0I7WUFDbEJILFNBQ0U7WUFDRkcsT0FBTyxPQUFPLG1CQUFtQjtRQUNuQztRQUNBLGdCQUFnQjtZQUNkSCxTQUNFO1lBQ0ZHLE9BQU87UUFDVDtRQUNBLHNCQUFzQjtZQUNwQkgsU0FBUztZQUNURyxPQUFPO1FBQ1Q7UUFDQSxrQkFBa0I7WUFDaEJILFNBQVM7WUFDVEcsT0FBTztRQUNUO1FBQ0EsNENBQTRDO1FBQzVDQyxRQUFRO1FBQ1JDLFVBQVU7UUFDVkMsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcva2V5bWFuLmpzP2E3ZTciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0ga2V5bWFuXG5rZXltYW4uZGlzcGxheU5hbWUgPSAna2V5bWFuJ1xua2V5bWFuLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24ga2V5bWFuKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5rZXltYW4gPSB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogL1xcYmMgLiovaSxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvXCJbXlwiXFxyXFxuXSpcInwnW14nXFxyXFxuXSonLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgJ3ZpcnR1YWwta2V5Jzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL1xcW1xccyooPzooPzpBTFR8Q0FQU3xDVFJMfExBTFR8TENUUkx8TkNBUFN8UkFMVHxSQ1RSTHxTSElGVClcXHMrKSooPzpbVEtVXV9bXFx3P10rfFtBLUVdXFxkXFxkP3xcIlteXCJcXHJcXG5dKlwifCdbXidcXHJcXG5dKicpXFxzKlxcXS9pLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgYWxpYXM6ICdmdW5jdGlvbicgLy8gYWxpYXMgZm9yIHN0eWxlc1xuICAgIH0sXG4gICAgLy8gaHR0cHM6Ly9oZWxwLmtleW1hbi5jb20vZGV2ZWxvcGVyL2xhbmd1YWdlL2d1aWRlL2hlYWRlcnNcbiAgICAnaGVhZGVyLWtleXdvcmQnOiB7XG4gICAgICBwYXR0ZXJuOiAvJlxcdysvLFxuICAgICAgYWxpYXM6ICdib2xkJyAvLyBhbGlhcyBmb3Igc3R5bGVzXG4gICAgfSxcbiAgICAnaGVhZGVyLXN0YXRlbWVudCc6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC9cXGIoPzpiaXRtYXB8Yml0bWFwc3xjYXBzIGFsd2F5cyBvZmZ8Y2FwcyBvbiBvbmx5fGNvcHlyaWdodHxob3RrZXl8bGFuZ3VhZ2V8bGF5b3V0fG1lc3NhZ2V8bmFtZXxzaGlmdCBmcmVlcyBjYXBzfHZlcnNpb24pXFxiL2ksXG4gICAgICBhbGlhczogJ2JvbGQnIC8vIGFsaWFzIGZvciBzdHlsZXNcbiAgICB9LFxuICAgICdydWxlLWtleXdvcmQnOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvXFxiKD86YW55fGJhc2VsYXlvdXR8YmVlcHxjYWxsfGNvbnRleHR8ZGVhZGtleXxka3xpZnxpbmRleHxsYXllcnxub3Rhbnl8bnVsfG91dHN8cGxhdGZvcm18cmVzZXR8cmV0dXJufHNhdmV8c2V0fHN0b3JlfHVzZSlcXGIvaSxcbiAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICB9LFxuICAgICdzdHJ1Y3R1cmFsLWtleXdvcmQnOiB7XG4gICAgICBwYXR0ZXJuOiAvXFxiKD86YW5zaXxiZWdpbnxncm91cHxtYXRjaHxub21hdGNofHVuaWNvZGV8dXNpbmcga2V5cylcXGIvaSxcbiAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICB9LFxuICAgICdjb21waWxlLXRhcmdldCc6IHtcbiAgICAgIHBhdHRlcm46IC9cXCQoPzprZXltYW58a2V5bWFub25seXxrZXltYW53ZWJ8a21mbHx3ZWF2ZXIpOi9pLFxuICAgICAgYWxpYXM6ICdwcm9wZXJ0eSdcbiAgICB9LFxuICAgIC8vIFUrIyMjIywgeCMjIywgZCMjIyBjaGFyYWN0ZXJzIGFuZCBudW1iZXJzXG4gICAgbnVtYmVyOiAvXFxiKD86VVxcK1tcXGRBLUZdK3xkXFxkK3x4W1xcZGEtZl0rfFxcZCspXFxiL2ksXG4gICAgb3BlcmF0b3I6IC9bKz5cXFxcJF18XFwuXFwuLyxcbiAgICBwdW5jdHVhdGlvbjogL1soKT0sXS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJrZXltYW4iLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwiZ3JlZWR5Iiwic3RyaW5nIiwiYWxpYXMiLCJudW1iZXIiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/keyman.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/kotlin.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/kotlin.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = kotlin;\nkotlin.displayName = \"kotlin\";\nkotlin.aliases = [\n    \"kt\",\n    \"kts\"\n];\nfunction kotlin(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.kotlin = Prism.languages.extend(\"clike\", {\n            keyword: {\n                // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n                pattern: /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n                lookbehind: true\n            },\n            function: [\n                {\n                    pattern: /(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,\n                    greedy: true\n                },\n                {\n                    pattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,\n                    lookbehind: true,\n                    greedy: true\n                }\n            ],\n            number: /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n            operator: /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n        });\n        delete Prism.languages.kotlin[\"class-name\"];\n        var interpolationInside = {\n            \"interpolation-punctuation\": {\n                pattern: /^\\$\\{?|\\}$/,\n                alias: \"punctuation\"\n            },\n            expression: {\n                pattern: /[\\s\\S]+/,\n                inside: Prism.languages.kotlin\n            }\n        };\n        Prism.languages.insertBefore(\"kotlin\", \"string\", {\n            // https://kotlinlang.org/spec/expressions.html#string-interpolation-expressions\n            \"string-literal\": [\n                {\n                    pattern: /\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/,\n                    alias: \"multiline\",\n                    inside: {\n                        interpolation: {\n                            pattern: /\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n                            inside: interpolationInside\n                        },\n                        string: /[\\s\\S]+/\n                    }\n                },\n                {\n                    pattern: /\"(?:[^\"\\\\\\r\\n$]|\\\\.|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/,\n                    alias: \"singleline\",\n                    inside: {\n                        interpolation: {\n                            pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n                            lookbehind: true,\n                            inside: interpolationInside\n                        },\n                        string: /[\\s\\S]+/\n                    }\n                }\n            ],\n            char: {\n                // https://kotlinlang.org/spec/expressions.html#character-literals\n                pattern: /'(?:[^'\\\\\\r\\n]|\\\\(?:.|u[a-fA-F0-9]{0,4}))'/,\n                greedy: true\n            }\n        });\n        delete Prism.languages.kotlin[\"string\"];\n        Prism.languages.insertBefore(\"kotlin\", \"keyword\", {\n            annotation: {\n                pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n                alias: \"builtin\"\n            }\n        });\n        Prism.languages.insertBefore(\"kotlin\", \"function\", {\n            label: {\n                pattern: /\\b\\w+@|@\\w+\\b/,\n                alias: \"symbol\"\n            }\n        });\n        Prism.languages.kt = Prism.languages.kotlin;\n        Prism.languages.kts = Prism.languages.kotlin;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcva290bGluLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLE9BQU9DLFdBQVcsR0FBRztBQUNyQkQsT0FBT0UsT0FBTyxHQUFHO0lBQUM7SUFBTTtDQUFNO0FBQzlCLFNBQVNGLE9BQU9HLEtBQUs7O0lBQ2pCLFVBQVVBLEtBQUs7UUFDZkEsTUFBTUMsU0FBUyxDQUFDSixNQUFNLEdBQUdHLE1BQU1DLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLFNBQVM7WUFDdkRDLFNBQVM7Z0JBQ1AsMkVBQTJFO2dCQUMzRUMsU0FDRTtnQkFDRkMsWUFBWTtZQUNkO1lBQ0FDLFVBQVU7Z0JBQ1I7b0JBQ0VGLFNBQVM7b0JBQ1RHLFFBQVE7Z0JBQ1Y7Z0JBQ0E7b0JBQ0VILFNBQVM7b0JBQ1RDLFlBQVk7b0JBQ1pFLFFBQVE7Z0JBQ1Y7YUFDRDtZQUNEQyxRQUNFO1lBQ0ZDLFVBQ0U7UUFDSjtRQUNBLE9BQU9ULE1BQU1DLFNBQVMsQ0FBQ0osTUFBTSxDQUFDLGFBQWE7UUFDM0MsSUFBSWEsc0JBQXNCO1lBQ3hCLDZCQUE2QjtnQkFDM0JOLFNBQVM7Z0JBQ1RPLE9BQU87WUFDVDtZQUNBQyxZQUFZO2dCQUNWUixTQUFTO2dCQUNUUyxRQUFRYixNQUFNQyxTQUFTLENBQUNKLE1BQU07WUFDaEM7UUFDRjtRQUNBRyxNQUFNQyxTQUFTLENBQUNhLFlBQVksQ0FBQyxVQUFVLFVBQVU7WUFDL0MsZ0ZBQWdGO1lBQ2hGLGtCQUFrQjtnQkFDaEI7b0JBQ0VWLFNBQVM7b0JBQ1RPLE9BQU87b0JBQ1BFLFFBQVE7d0JBQ05FLGVBQWU7NEJBQ2JYLFNBQVM7NEJBQ1RTLFFBQVFIO3dCQUNWO3dCQUNBTSxRQUFRO29CQUNWO2dCQUNGO2dCQUNBO29CQUNFWixTQUFTO29CQUNUTyxPQUFPO29CQUNQRSxRQUFRO3dCQUNORSxlQUFlOzRCQUNiWCxTQUFTOzRCQUNUQyxZQUFZOzRCQUNaUSxRQUFRSDt3QkFDVjt3QkFDQU0sUUFBUTtvQkFDVjtnQkFDRjthQUNEO1lBQ0RDLE1BQU07Z0JBQ0osa0VBQWtFO2dCQUNsRWIsU0FBUztnQkFDVEcsUUFBUTtZQUNWO1FBQ0Y7UUFDQSxPQUFPUCxNQUFNQyxTQUFTLENBQUNKLE1BQU0sQ0FBQyxTQUFTO1FBQ3ZDRyxNQUFNQyxTQUFTLENBQUNhLFlBQVksQ0FBQyxVQUFVLFdBQVc7WUFDaERJLFlBQVk7Z0JBQ1ZkLFNBQVM7Z0JBQ1RPLE9BQU87WUFDVDtRQUNGO1FBQ0FYLE1BQU1DLFNBQVMsQ0FBQ2EsWUFBWSxDQUFDLFVBQVUsWUFBWTtZQUNqREssT0FBTztnQkFDTGYsU0FBUztnQkFDVE8sT0FBTztZQUNUO1FBQ0Y7UUFDQVgsTUFBTUMsU0FBUyxDQUFDbUIsRUFBRSxHQUFHcEIsTUFBTUMsU0FBUyxDQUFDSixNQUFNO1FBQzNDRyxNQUFNQyxTQUFTLENBQUNvQixHQUFHLEdBQUdyQixNQUFNQyxTQUFTLENBQUNKLE1BQU07SUFDOUMsR0FBR0c7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9rb3RsaW4uanM/NGEyMSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBrb3RsaW5cbmtvdGxpbi5kaXNwbGF5TmFtZSA9ICdrb3RsaW4nXG5rb3RsaW4uYWxpYXNlcyA9IFsna3QnLCAna3RzJ11cbmZ1bmN0aW9uIGtvdGxpbihQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIFByaXNtLmxhbmd1YWdlcy5rb3RsaW4gPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdjbGlrZScsIHtcbiAgICAgIGtleXdvcmQ6IHtcbiAgICAgICAgLy8gVGhlIGxvb2tiZWhpbmQgcHJldmVudHMgd3JvbmcgaGlnaGxpZ2h0aW5nIG9mIGUuZy4ga290bGluLnByb3BlcnRpZXMuZ2V0XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhefFteLl0pXFxiKD86YWJzdHJhY3R8YWN0dWFsfGFubm90YXRpb258YXN8YnJlYWt8Ynl8Y2F0Y2h8Y2xhc3N8Y29tcGFuaW9ufGNvbnN0fGNvbnN0cnVjdG9yfGNvbnRpbnVlfGNyb3NzaW5saW5lfGRhdGF8ZG98ZHluYW1pY3xlbHNlfGVudW18ZXhwZWN0fGV4dGVybmFsfGZpbmFsfGZpbmFsbHl8Zm9yfGZ1bnxnZXR8aWZ8aW1wb3J0fGlufGluZml4fGluaXR8aW5saW5lfGlubmVyfGludGVyZmFjZXxpbnRlcm5hbHxpc3xsYXRlaW5pdHxub2lubGluZXxudWxsfG9iamVjdHxvcGVufG9wZXJhdG9yfG91dHxvdmVycmlkZXxwYWNrYWdlfHByaXZhdGV8cHJvdGVjdGVkfHB1YmxpY3xyZWlmaWVkfHJldHVybnxzZWFsZWR8c2V0fHN1cGVyfHN1c3BlbmR8dGFpbHJlY3x0aGlzfHRocm93fHRvfHRyeXx0eXBlYWxpYXN8dmFsfHZhcnx2YXJhcmd8d2hlbnx3aGVyZXx3aGlsZSlcXGIvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAgZnVuY3Rpb246IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IC8oPzpgW15cXHJcXG5gXStgfFxcYlxcdyspKD89XFxzKlxcKCkvLFxuICAgICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogLyhcXC4pKD86YFteXFxyXFxuYF0rYHxcXHcrKSg/PVxccypcXHspLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgbnVtYmVyOlxuICAgICAgICAvXFxiKD86MFt4WF1bXFxkYS1mQS1GXSsoPzpfW1xcZGEtZkEtRl0rKSp8MFtiQl1bMDFdKyg/Ol9bMDFdKykqfFxcZCsoPzpfXFxkKykqKD86XFwuXFxkKyg/Ol9cXGQrKSopPyg/OltlRV1bKy1dP1xcZCsoPzpfXFxkKykqKT9bZkZMXT8pXFxiLyxcbiAgICAgIG9wZXJhdG9yOlxuICAgICAgICAvXFwrWys9XT98LVstPT5dP3w9PT89P3whKD86IXw9PT8pP3xbXFwvKiU8Pl09P3xbPzpdOj98XFwuXFwufCYmfFxcfFxcfHxcXGIoPzphbmR8aW52fG9yfHNobHxzaHJ8dXNocnx4b3IpXFxiL1xuICAgIH0pXG4gICAgZGVsZXRlIFByaXNtLmxhbmd1YWdlcy5rb3RsaW5bJ2NsYXNzLW5hbWUnXVxuICAgIHZhciBpbnRlcnBvbGF0aW9uSW5zaWRlID0ge1xuICAgICAgJ2ludGVycG9sYXRpb24tcHVuY3R1YXRpb24nOiB7XG4gICAgICAgIHBhdHRlcm46IC9eXFwkXFx7P3xcXH0kLyxcbiAgICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbidcbiAgICAgIH0sXG4gICAgICBleHByZXNzaW9uOiB7XG4gICAgICAgIHBhdHRlcm46IC9bXFxzXFxTXSsvLFxuICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy5rb3RsaW5cbiAgICAgIH1cbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgna290bGluJywgJ3N0cmluZycsIHtcbiAgICAgIC8vIGh0dHBzOi8va290bGlubGFuZy5vcmcvc3BlYy9leHByZXNzaW9ucy5odG1sI3N0cmluZy1pbnRlcnBvbGF0aW9uLWV4cHJlc3Npb25zXG4gICAgICAnc3RyaW5nLWxpdGVyYWwnOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXCJcIlwiKD86W14kXXxcXCQoPzooPyFcXHspfFxce1tee31dKlxcfSkpKj9cIlwiXCIvLFxuICAgICAgICAgIGFsaWFzOiAnbXVsdGlsaW5lJyxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIGludGVycG9sYXRpb246IHtcbiAgICAgICAgICAgICAgcGF0dGVybjogL1xcJCg/OlthLXpfXVxcdyp8XFx7W157fV0qXFx9KS9pLFxuICAgICAgICAgICAgICBpbnNpZGU6IGludGVycG9sYXRpb25JbnNpZGVcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdHJpbmc6IC9bXFxzXFxTXSsvXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogL1wiKD86W15cIlxcXFxcXHJcXG4kXXxcXFxcLnxcXCQoPzooPyFcXHspfFxce1tee31dKlxcfSkpKlwiLyxcbiAgICAgICAgICBhbGlhczogJ3NpbmdsZWxpbmUnLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgaW50ZXJwb2xhdGlvbjoge1xuICAgICAgICAgICAgICBwYXR0ZXJuOiAvKCg/Ol58W15cXFxcXSkoPzpcXFxcezJ9KSopXFwkKD86W2Etel9dXFx3KnxcXHtbXnt9XSpcXH0pL2ksXG4gICAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICAgIGluc2lkZTogaW50ZXJwb2xhdGlvbkluc2lkZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHN0cmluZzogL1tcXHNcXFNdKy9cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBjaGFyOiB7XG4gICAgICAgIC8vIGh0dHBzOi8va290bGlubGFuZy5vcmcvc3BlYy9leHByZXNzaW9ucy5odG1sI2NoYXJhY3Rlci1saXRlcmFsc1xuICAgICAgICBwYXR0ZXJuOiAvJyg/OlteJ1xcXFxcXHJcXG5dfFxcXFwoPzoufHVbYS1mQS1GMC05XXswLDR9KSknLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9XG4gICAgfSlcbiAgICBkZWxldGUgUHJpc20ubGFuZ3VhZ2VzLmtvdGxpblsnc3RyaW5nJ11cbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdrb3RsaW4nLCAna2V5d29yZCcsIHtcbiAgICAgIGFubm90YXRpb246IHtcbiAgICAgICAgcGF0dGVybjogL1xcQkAoPzpcXHcrOik/KD86W0EtWl1cXHcqfFxcW1teXFxdXStcXF0pLyxcbiAgICAgICAgYWxpYXM6ICdidWlsdGluJ1xuICAgICAgfVxuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgna290bGluJywgJ2Z1bmN0aW9uJywge1xuICAgICAgbGFiZWw6IHtcbiAgICAgICAgcGF0dGVybjogL1xcYlxcdytAfEBcXHcrXFxiLyxcbiAgICAgICAgYWxpYXM6ICdzeW1ib2wnXG4gICAgICB9XG4gICAgfSlcbiAgICBQcmlzbS5sYW5ndWFnZXMua3QgPSBQcmlzbS5sYW5ndWFnZXMua290bGluXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmt0cyA9IFByaXNtLmxhbmd1YWdlcy5rb3RsaW5cbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImtvdGxpbiIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwia2V5d29yZCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiZnVuY3Rpb24iLCJncmVlZHkiLCJudW1iZXIiLCJvcGVyYXRvciIsImludGVycG9sYXRpb25JbnNpZGUiLCJhbGlhcyIsImV4cHJlc3Npb24iLCJpbnNpZGUiLCJpbnNlcnRCZWZvcmUiLCJpbnRlcnBvbGF0aW9uIiwic3RyaW5nIiwiY2hhciIsImFubm90YXRpb24iLCJsYWJlbCIsImt0Iiwia3RzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/kotlin.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/kumir.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/kumir.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = kumir;\nkumir.displayName = \"kumir\";\nkumir.aliases = [\n    \"kum\"\n];\nfunction kumir(Prism) {\n    ;\n    (function(Prism) {\n        /**\n     * Regular expression for characters that are not allowed in identifiers.\n     *\n     * @type {string}\n     */ var nonId = /\\s\\x00-\\x1f\\x22-\\x2f\\x3a-\\x3f\\x5b-\\x5e\\x60\\x7b-\\x7e/.source;\n        /**\n     * Surround a regular expression for IDs with patterns for non-ID sequences.\n     *\n     * @param {string} pattern A regular expression for identifiers.\n     * @param {string} [flags] The regular expression flags.\n     * @returns {RegExp} A wrapped regular expression for identifiers.\n     */ function wrapId(pattern, flags) {\n            return RegExp(pattern.replace(/<nonId>/g, nonId), flags);\n        }\n        Prism.languages.kumir = {\n            comment: {\n                pattern: /\\|.*/\n            },\n            prolog: {\n                pattern: /#.*/,\n                greedy: true\n            },\n            string: {\n                pattern: /\"[^\\n\\r\"]*\"|'[^\\n\\r']*'/,\n                greedy: true\n            },\n            boolean: {\n                pattern: wrapId(/(^|[<nonId>])(?:да|нет)(?=[<nonId>]|$)/.source),\n                lookbehind: true\n            },\n            \"operator-word\": {\n                pattern: wrapId(/(^|[<nonId>])(?:и|или|не)(?=[<nonId>]|$)/.source),\n                lookbehind: true,\n                alias: \"keyword\"\n            },\n            \"system-variable\": {\n                pattern: wrapId(/(^|[<nonId>])знач(?=[<nonId>]|$)/.source),\n                lookbehind: true,\n                alias: \"keyword\"\n            },\n            type: [\n                {\n                    pattern: wrapId(/(^|[<nonId>])(?:вещ|лит|лог|сим|цел)(?:\\x20*таб)?(?=[<nonId>]|$)/.source),\n                    lookbehind: true,\n                    alias: \"builtin\"\n                },\n                {\n                    pattern: wrapId(/(^|[<nonId>])(?:компл|сканкод|файл|цвет)(?=[<nonId>]|$)/.source),\n                    lookbehind: true,\n                    alias: \"important\"\n                }\n            ],\n            /**\n       * Should be performed after searching for type names because of \"таб\".\n       * \"таб\" is a reserved word, but never used without a preceding type name.\n       * \"НАЗНАЧИТЬ\", \"Фввод\", and \"Фвывод\" are not reserved words.\n       */ keyword: {\n                pattern: wrapId(/(^|[<nonId>])(?:алг|арг(?:\\x20*рез)?|ввод|ВКЛЮЧИТЬ|вс[её]|выбор|вывод|выход|дано|для|до|дс|если|иначе|исп|использовать|кон(?:(?:\\x20+|_)исп)?|кц(?:(?:\\x20+|_)при)?|надо|нач|нс|нц|от|пауза|пока|при|раза?|рез|стоп|таб|то|утв|шаг)(?=[<nonId>]|$)/.source),\n                lookbehind: true\n            },\n            /** Should be performed after searching for reserved words. */ name: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: wrapId(/(^|[<nonId>])[^\\d<nonId>][^<nonId>]*(?:\\x20+[^<nonId>]+)*(?=[<nonId>]|$)/.source),\n                lookbehind: true\n            },\n            /** Should be performed after searching for names. */ number: {\n                pattern: wrapId(/(^|[<nonId>])(?:\\B\\$[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?=[<nonId>]|$)/.source, \"i\"),\n                lookbehind: true\n            },\n            /** Should be performed after searching for words. */ punctuation: /:=|[(),:;\\[\\]]/,\n            /**\n       * Should be performed after searching for\n       * - numeric constants (because of \"+\" and \"-\");\n       * - punctuation marks (because of \":=\" and \"=\").\n       */ \"operator-char\": {\n                pattern: /\\*\\*?|<[=>]?|>=?|[-+/=]/,\n                alias: \"operator\"\n            }\n        };\n        Prism.languages.kum = Prism.languages.kumir;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcva3VtaXIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsTUFBTUMsV0FBVyxHQUFHO0FBQ3BCRCxNQUFNRSxPQUFPLEdBQUc7SUFBQztDQUFNO0FBQ3ZCLFNBQVNGLE1BQU1HLEtBQUs7O0lBRWhCLFVBQVVBLEtBQUs7UUFDZjs7OztLQUlDLEdBQ0QsSUFBSUMsUUFBUSxzREFBc0RDLE1BQU07UUFDeEU7Ozs7OztLQU1DLEdBQ0QsU0FBU0MsT0FBT0MsT0FBTyxFQUFFQyxLQUFLO1lBQzVCLE9BQU9DLE9BQU9GLFFBQVFHLE9BQU8sQ0FBQyxZQUFZTixRQUFRSTtRQUNwRDtRQUNBTCxNQUFNUSxTQUFTLENBQUNYLEtBQUssR0FBRztZQUN0QlksU0FBUztnQkFDUEwsU0FBUztZQUNYO1lBQ0FNLFFBQVE7Z0JBQ05OLFNBQVM7Z0JBQ1RPLFFBQVE7WUFDVjtZQUNBQyxRQUFRO2dCQUNOUixTQUFTO2dCQUNUTyxRQUFRO1lBQ1Y7WUFDQUUsU0FBUztnQkFDUFQsU0FBU0QsT0FBTyx5Q0FBeUNELE1BQU07Z0JBQy9EWSxZQUFZO1lBQ2Q7WUFDQSxpQkFBaUI7Z0JBQ2ZWLFNBQVNELE9BQU8sMkNBQTJDRCxNQUFNO2dCQUNqRVksWUFBWTtnQkFDWkMsT0FBTztZQUNUO1lBQ0EsbUJBQW1CO2dCQUNqQlgsU0FBU0QsT0FBTyxtQ0FBbUNELE1BQU07Z0JBQ3pEWSxZQUFZO2dCQUNaQyxPQUFPO1lBQ1Q7WUFDQUMsTUFBTTtnQkFDSjtvQkFDRVosU0FBU0QsT0FDUCxtRUFDR0QsTUFBTTtvQkFFWFksWUFBWTtvQkFDWkMsT0FBTztnQkFDVDtnQkFDQTtvQkFDRVgsU0FBU0QsT0FDUCwwREFBMERELE1BQU07b0JBRWxFWSxZQUFZO29CQUNaQyxPQUFPO2dCQUNUO2FBQ0Q7WUFDRDs7OztPQUlDLEdBQ0RFLFNBQVM7Z0JBQ1BiLFNBQVNELE9BQ1AscVBBQ0dELE1BQU07Z0JBRVhZLFlBQVk7WUFDZDtZQUNBLDREQUE0RCxHQUM1REksTUFBTTtnQkFDSiwrREFBK0Q7Z0JBQy9EZCxTQUFTRCxPQUNQLDJFQUNHRCxNQUFNO2dCQUVYWSxZQUFZO1lBQ2Q7WUFDQSxtREFBbUQsR0FDbkRLLFFBQVE7Z0JBQ05mLFNBQVNELE9BQ1AsMkZBQ0dELE1BQU0sRUFDVDtnQkFFRlksWUFBWTtZQUNkO1lBQ0EsbURBQW1ELEdBQ25ETSxhQUFhO1lBQ2I7Ozs7T0FJQyxHQUNELGlCQUFpQjtnQkFDZmhCLFNBQVM7Z0JBQ1RXLE9BQU87WUFDVDtRQUNGO1FBQ0FmLE1BQU1RLFNBQVMsQ0FBQ2EsR0FBRyxHQUFHckIsTUFBTVEsU0FBUyxDQUFDWCxLQUFLO0lBQzdDLEdBQUdHO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcva3VtaXIuanM/MTZlNyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBrdW1pclxua3VtaXIuZGlzcGxheU5hbWUgPSAna3VtaXInXG5rdW1pci5hbGlhc2VzID0gWydrdW0nXVxuZnVuY3Rpb24ga3VtaXIoUHJpc20pIHtcbiAgLyogZXNsaW50LWRpc2FibGUgcmVnZXhwL25vLWR1cGUtY2hhcmFjdGVycy1jaGFyYWN0ZXItY2xhc3MgKi9cbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICAvKipcbiAgICAgKiBSZWd1bGFyIGV4cHJlc3Npb24gZm9yIGNoYXJhY3RlcnMgdGhhdCBhcmUgbm90IGFsbG93ZWQgaW4gaWRlbnRpZmllcnMuXG4gICAgICpcbiAgICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgICAqL1xuICAgIHZhciBub25JZCA9IC9cXHNcXHgwMC1cXHgxZlxceDIyLVxceDJmXFx4M2EtXFx4M2ZcXHg1Yi1cXHg1ZVxceDYwXFx4N2ItXFx4N2UvLnNvdXJjZVxuICAgIC8qKlxuICAgICAqIFN1cnJvdW5kIGEgcmVndWxhciBleHByZXNzaW9uIGZvciBJRHMgd2l0aCBwYXR0ZXJucyBmb3Igbm9uLUlEIHNlcXVlbmNlcy5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBwYXR0ZXJuIEEgcmVndWxhciBleHByZXNzaW9uIGZvciBpZGVudGlmaWVycy5cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gW2ZsYWdzXSBUaGUgcmVndWxhciBleHByZXNzaW9uIGZsYWdzLlxuICAgICAqIEByZXR1cm5zIHtSZWdFeHB9IEEgd3JhcHBlZCByZWd1bGFyIGV4cHJlc3Npb24gZm9yIGlkZW50aWZpZXJzLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHdyYXBJZChwYXR0ZXJuLCBmbGFncykge1xuICAgICAgcmV0dXJuIFJlZ0V4cChwYXR0ZXJuLnJlcGxhY2UoLzxub25JZD4vZywgbm9uSWQpLCBmbGFncylcbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzLmt1bWlyID0ge1xuICAgICAgY29tbWVudDoge1xuICAgICAgICBwYXR0ZXJuOiAvXFx8LiovXG4gICAgICB9LFxuICAgICAgcHJvbG9nOiB7XG4gICAgICAgIHBhdHRlcm46IC8jLiovLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICBzdHJpbmc6IHtcbiAgICAgICAgcGF0dGVybjogL1wiW15cXG5cXHJcIl0qXCJ8J1teXFxuXFxyJ10qJy8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGJvb2xlYW46IHtcbiAgICAgICAgcGF0dGVybjogd3JhcElkKC8oXnxbPG5vbklkPl0pKD860LTQsHzQvdC10YIpKD89Wzxub25JZD5dfCQpLy5zb3VyY2UpLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAgJ29wZXJhdG9yLXdvcmQnOiB7XG4gICAgICAgIHBhdHRlcm46IHdyYXBJZCgvKF58Wzxub25JZD5dKSg/OtC4fNC40LvQuHzQvdC1KSg/PVs8bm9uSWQ+XXwkKS8uc291cmNlKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgICAgfSxcbiAgICAgICdzeXN0ZW0tdmFyaWFibGUnOiB7XG4gICAgICAgIHBhdHRlcm46IHdyYXBJZCgvKF58Wzxub25JZD5dKdC30L3QsNGHKD89Wzxub25JZD5dfCQpLy5zb3VyY2UpLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgICB9LFxuICAgICAgdHlwZTogW1xuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogd3JhcElkKFxuICAgICAgICAgICAgLyhefFs8bm9uSWQ+XSkoPzrQstC10Yl80LvQuNGCfNC70L7Qs3zRgdC40Lx80YbQtdC7KSg/OlxceDIwKtGC0LDQsSk/KD89Wzxub25JZD5dfCQpL1xuICAgICAgICAgICAgICAuc291cmNlXG4gICAgICAgICAgKSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGFsaWFzOiAnYnVpbHRpbidcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IHdyYXBJZChcbiAgICAgICAgICAgIC8oXnxbPG5vbklkPl0pKD860LrQvtC80L/Qu3zRgdC60LDQvdC60L7QtHzRhNCw0LnQu3zRhtCy0LXRgikoPz1bPG5vbklkPl18JCkvLnNvdXJjZVxuICAgICAgICAgICksXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBhbGlhczogJ2ltcG9ydGFudCdcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIC8qKlxuICAgICAgICogU2hvdWxkIGJlIHBlcmZvcm1lZCBhZnRlciBzZWFyY2hpbmcgZm9yIHR5cGUgbmFtZXMgYmVjYXVzZSBvZiBcItGC0LDQsVwiLlxuICAgICAgICogXCLRgtCw0LFcIiBpcyBhIHJlc2VydmVkIHdvcmQsIGJ1dCBuZXZlciB1c2VkIHdpdGhvdXQgYSBwcmVjZWRpbmcgdHlwZSBuYW1lLlxuICAgICAgICogXCLQndCQ0JfQndCQ0KfQmNCi0KxcIiwgXCLQpNCy0LLQvtC0XCIsIGFuZCBcItCk0LLRi9Cy0L7QtFwiIGFyZSBub3QgcmVzZXJ2ZWQgd29yZHMuXG4gICAgICAgKi9cbiAgICAgIGtleXdvcmQ6IHtcbiAgICAgICAgcGF0dGVybjogd3JhcElkKFxuICAgICAgICAgIC8oXnxbPG5vbklkPl0pKD860LDQu9CzfNCw0YDQsyg/OlxceDIwKtGA0LXQtyk/fNCy0LLQvtC0fNCS0JrQm9Cu0KfQmNCi0Kx80LLRgVvQtdGRXXzQstGL0LHQvtGAfNCy0YvQstC+0LR80LLRi9GF0L7QtHzQtNCw0L3QvnzQtNC70Y980LTQvnzQtNGBfNC10YHQu9C4fNC40L3QsNGH0LV80LjRgdC/fNC40YHQv9C+0LvRjNC30L7QstCw0YLRjHzQutC+0L0oPzooPzpcXHgyMCt8XynQuNGB0L8pP3zQutGGKD86KD86XFx4MjArfF8p0L/RgNC4KT980L3QsNC00L580L3QsNGHfNC90YF80L3RhnzQvtGCfNC/0LDRg9C30LB80L/QvtC60LB80L/RgNC4fNGA0LDQt9CwP3zRgNC10Ld80YHRgtC+0L980YLQsNCxfNGC0L580YPRgtCyfNGI0LDQsykoPz1bPG5vbklkPl18JCkvXG4gICAgICAgICAgICAuc291cmNlXG4gICAgICAgICksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICAvKiogU2hvdWxkIGJlIHBlcmZvcm1lZCBhZnRlciBzZWFyY2hpbmcgZm9yIHJlc2VydmVkIHdvcmRzLiAqL1xuICAgICAgbmFtZToge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVnZXhwL25vLXN1cGVyLWxpbmVhci1iYWNrdHJhY2tpbmdcbiAgICAgICAgcGF0dGVybjogd3JhcElkKFxuICAgICAgICAgIC8oXnxbPG5vbklkPl0pW15cXGQ8bm9uSWQ+XVtePG5vbklkPl0qKD86XFx4MjArW148bm9uSWQ+XSspKig/PVs8bm9uSWQ+XXwkKS9cbiAgICAgICAgICAgIC5zb3VyY2VcbiAgICAgICAgKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIC8qKiBTaG91bGQgYmUgcGVyZm9ybWVkIGFmdGVyIHNlYXJjaGluZyBmb3IgbmFtZXMuICovXG4gICAgICBudW1iZXI6IHtcbiAgICAgICAgcGF0dGVybjogd3JhcElkKFxuICAgICAgICAgIC8oXnxbPG5vbklkPl0pKD86XFxCXFwkW1xcZGEtZl0rXFxifCg/OlxcYlxcZCsoPzpcXC5cXGQqKT98XFxCXFwuXFxkKykoPzplWystXT9cXGQrKT8pKD89Wzxub25JZD5dfCQpL1xuICAgICAgICAgICAgLnNvdXJjZSxcbiAgICAgICAgICAnaSdcbiAgICAgICAgKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIC8qKiBTaG91bGQgYmUgcGVyZm9ybWVkIGFmdGVyIHNlYXJjaGluZyBmb3Igd29yZHMuICovXG4gICAgICBwdW5jdHVhdGlvbjogLzo9fFsoKSw6O1xcW1xcXV0vLFxuICAgICAgLyoqXG4gICAgICAgKiBTaG91bGQgYmUgcGVyZm9ybWVkIGFmdGVyIHNlYXJjaGluZyBmb3JcbiAgICAgICAqIC0gbnVtZXJpYyBjb25zdGFudHMgKGJlY2F1c2Ugb2YgXCIrXCIgYW5kIFwiLVwiKTtcbiAgICAgICAqIC0gcHVuY3R1YXRpb24gbWFya3MgKGJlY2F1c2Ugb2YgXCI6PVwiIGFuZCBcIj1cIikuXG4gICAgICAgKi9cbiAgICAgICdvcGVyYXRvci1jaGFyJzoge1xuICAgICAgICBwYXR0ZXJuOiAvXFwqXFwqP3w8Wz0+XT98Pj0/fFstKy89XS8sXG4gICAgICAgIGFsaWFzOiAnb3BlcmF0b3InXG4gICAgICB9XG4gICAgfVxuICAgIFByaXNtLmxhbmd1YWdlcy5rdW0gPSBQcmlzbS5sYW5ndWFnZXMua3VtaXJcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImt1bWlyIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJub25JZCIsInNvdXJjZSIsIndyYXBJZCIsInBhdHRlcm4iLCJmbGFncyIsIlJlZ0V4cCIsInJlcGxhY2UiLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicHJvbG9nIiwiZ3JlZWR5Iiwic3RyaW5nIiwiYm9vbGVhbiIsImxvb2tiZWhpbmQiLCJhbGlhcyIsInR5cGUiLCJrZXl3b3JkIiwibmFtZSIsIm51bWJlciIsInB1bmN0dWF0aW9uIiwia3VtIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/kumir.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/kusto.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/kusto.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = kusto;\nkusto.displayName = \"kusto\";\nkusto.aliases = [];\nfunction kusto(Prism) {\n    Prism.languages.kusto = {\n        comment: {\n            pattern: /\\/\\/.*/,\n            greedy: true\n        },\n        string: {\n            pattern: /```[\\s\\S]*?```|[hH]?(?:\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\.)*'|@(?:\"[^\\r\\n\"]*\"|'[^\\r\\n']*'))/,\n            greedy: true\n        },\n        verb: {\n            pattern: /(\\|\\s*)[a-z][\\w-]*/i,\n            lookbehind: true,\n            alias: \"keyword\"\n        },\n        command: {\n            pattern: /\\.[a-z][a-z\\d-]*\\b/,\n            alias: \"keyword\"\n        },\n        \"class-name\": /\\b(?:bool|datetime|decimal|dynamic|guid|int|long|real|string|timespan)\\b/,\n        keyword: /\\b(?:access|alias|and|anti|as|asc|auto|between|by|(?:contains|(?:ends|starts)with|has(?:perfix|suffix)?)(?:_cs)?|database|declare|desc|external|from|fullouter|has_all|in|ingestion|inline|inner|innerunique|into|(?:left|right)(?:anti(?:semi)?|inner|outer|semi)?|let|like|local|not|of|on|or|pattern|print|query_parameters|range|restrict|schema|set|step|table|tables|to|view|where|with|matches\\s+regex|nulls\\s+(?:first|last))(?![\\w-])/,\n        boolean: /\\b(?:false|null|true)\\b/,\n        function: /\\b[a-z_]\\w*(?=\\s*\\()/,\n        datetime: [\n            {\n                // RFC 822 + RFC 850\n                pattern: /\\b(?:(?:Fri|Friday|Mon|Monday|Sat|Saturday|Sun|Sunday|Thu|Thursday|Tue|Tuesday|Wed|Wednesday)\\s*,\\s*)?\\d{1,2}(?:\\s+|-)(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)(?:\\s+|-)\\d{2}\\s+\\d{2}:\\d{2}(?::\\d{2})?(?:\\s*(?:\\b(?:[A-Z]|(?:[ECMT][DS]|GM|U)T)|[+-]\\d{4}))?\\b/,\n                alias: \"number\"\n            },\n            {\n                // ISO 8601\n                pattern: /[+-]?\\b(?:\\d{4}-\\d{2}-\\d{2}(?:[ T]\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)?|\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)Z?/,\n                alias: \"number\"\n            }\n        ],\n        number: /\\b(?:0x[0-9A-Fa-f]+|\\d+(?:\\.\\d+)?(?:[Ee][+-]?\\d+)?)(?:(?:min|sec|[mnµ]s|[dhms]|microsecond|tick)\\b)?|[+-]?\\binf\\b/,\n        operator: /=>|[!=]~|[!=<>]=?|[-+*/%|]|\\.\\./,\n        punctuation: /[()\\[\\]{},;.:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcva3VzdG8uanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsTUFBTUMsV0FBVyxHQUFHO0FBQ3BCRCxNQUFNRSxPQUFPLEdBQUcsRUFBRTtBQUNsQixTQUFTRixNQUFNRyxLQUFLO0lBQ2xCQSxNQUFNQyxTQUFTLENBQUNKLEtBQUssR0FBRztRQUN0QkssU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBQyxRQUFRO1lBQ05GLFNBQ0U7WUFDRkMsUUFBUTtRQUNWO1FBQ0FFLE1BQU07WUFDSkgsU0FBUztZQUNUSSxZQUFZO1lBQ1pDLE9BQU87UUFDVDtRQUNBQyxTQUFTO1lBQ1BOLFNBQVM7WUFDVEssT0FBTztRQUNUO1FBQ0EsY0FDRTtRQUNGRSxTQUNFO1FBQ0ZDLFNBQVM7UUFDVEMsVUFBVTtRQUNWQyxVQUFVO1lBQ1I7Z0JBQ0Usb0JBQW9CO2dCQUNwQlYsU0FDRTtnQkFDRkssT0FBTztZQUNUO1lBQ0E7Z0JBQ0UsV0FBVztnQkFDWEwsU0FDRTtnQkFDRkssT0FBTztZQUNUO1NBQ0Q7UUFDRE0sUUFDRTtRQUNGQyxVQUFVO1FBQ1ZDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2t1c3RvLmpzPzU2ZWEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0ga3VzdG9cbmt1c3RvLmRpc3BsYXlOYW1lID0gJ2t1c3RvJ1xua3VzdG8uYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBrdXN0byhQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMua3VzdG8gPSB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogL1xcL1xcLy4qLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvYGBgW1xcc1xcU10qP2BgYHxbaEhdPyg/OlwiKD86W15cXHJcXG5cXFxcXCJdfFxcXFwuKSpcInwnKD86W15cXHJcXG5cXFxcJ118XFxcXC4pKid8QCg/OlwiW15cXHJcXG5cIl0qXCJ8J1teXFxyXFxuJ10qJykpLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgdmVyYjoge1xuICAgICAgcGF0dGVybjogLyhcXHxcXHMqKVthLXpdW1xcdy1dKi9pLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICB9LFxuICAgIGNvbW1hbmQ6IHtcbiAgICAgIHBhdHRlcm46IC9cXC5bYS16XVthLXpcXGQtXSpcXGIvLFxuICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgIH0sXG4gICAgJ2NsYXNzLW5hbWUnOlxuICAgICAgL1xcYig/OmJvb2x8ZGF0ZXRpbWV8ZGVjaW1hbHxkeW5hbWljfGd1aWR8aW50fGxvbmd8cmVhbHxzdHJpbmd8dGltZXNwYW4pXFxiLyxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OmFjY2Vzc3xhbGlhc3xhbmR8YW50aXxhc3xhc2N8YXV0b3xiZXR3ZWVufGJ5fCg/OmNvbnRhaW5zfCg/OmVuZHN8c3RhcnRzKXdpdGh8aGFzKD86cGVyZml4fHN1ZmZpeCk/KSg/Ol9jcyk/fGRhdGFiYXNlfGRlY2xhcmV8ZGVzY3xleHRlcm5hbHxmcm9tfGZ1bGxvdXRlcnxoYXNfYWxsfGlufGluZ2VzdGlvbnxpbmxpbmV8aW5uZXJ8aW5uZXJ1bmlxdWV8aW50b3woPzpsZWZ0fHJpZ2h0KSg/OmFudGkoPzpzZW1pKT98aW5uZXJ8b3V0ZXJ8c2VtaSk/fGxldHxsaWtlfGxvY2FsfG5vdHxvZnxvbnxvcnxwYXR0ZXJufHByaW50fHF1ZXJ5X3BhcmFtZXRlcnN8cmFuZ2V8cmVzdHJpY3R8c2NoZW1hfHNldHxzdGVwfHRhYmxlfHRhYmxlc3x0b3x2aWV3fHdoZXJlfHdpdGh8bWF0Y2hlc1xccytyZWdleHxudWxsc1xccysoPzpmaXJzdHxsYXN0KSkoPyFbXFx3LV0pLyxcbiAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8bnVsbHx0cnVlKVxcYi8sXG4gICAgZnVuY3Rpb246IC9cXGJbYS16X11cXHcqKD89XFxzKlxcKCkvLFxuICAgIGRhdGV0aW1lOiBbXG4gICAgICB7XG4gICAgICAgIC8vIFJGQyA4MjIgKyBSRkMgODUwXG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgL1xcYig/Oig/OkZyaXxGcmlkYXl8TW9ufE1vbmRheXxTYXR8U2F0dXJkYXl8U3VufFN1bmRheXxUaHV8VGh1cnNkYXl8VHVlfFR1ZXNkYXl8V2VkfFdlZG5lc2RheSlcXHMqLFxccyopP1xcZHsxLDJ9KD86XFxzK3wtKSg/OkFwcnxBdWd8RGVjfEZlYnxKYW58SnVsfEp1bnxNYXJ8TWF5fE5vdnxPY3R8U2VwKSg/Olxccyt8LSlcXGR7Mn1cXHMrXFxkezJ9OlxcZHsyfSg/OjpcXGR7Mn0pPyg/OlxccyooPzpcXGIoPzpbQS1aXXwoPzpbRUNNVF1bRFNdfEdNfFUpVCl8WystXVxcZHs0fSkpP1xcYi8sXG4gICAgICAgIGFsaWFzOiAnbnVtYmVyJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgLy8gSVNPIDg2MDFcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvWystXT9cXGIoPzpcXGR7NH0tXFxkezJ9LVxcZHsyfSg/OlsgVF1cXGR7Mn06XFxkezJ9KD86OlxcZHsyfSg/OlxcLlxcZCspPyk/KT98XFxkezJ9OlxcZHsyfSg/OjpcXGR7Mn0oPzpcXC5cXGQrKT8pPylaPy8sXG4gICAgICAgIGFsaWFzOiAnbnVtYmVyJ1xuICAgICAgfVxuICAgIF0sXG4gICAgbnVtYmVyOlxuICAgICAgL1xcYig/OjB4WzAtOUEtRmEtZl0rfFxcZCsoPzpcXC5cXGQrKT8oPzpbRWVdWystXT9cXGQrKT8pKD86KD86bWlufHNlY3xbbW7CtV1zfFtkaG1zXXxtaWNyb3NlY29uZHx0aWNrKVxcYik/fFsrLV0/XFxiaW5mXFxiLyxcbiAgICBvcGVyYXRvcjogLz0+fFshPV1+fFshPTw+XT0/fFstKyovJXxdfFxcLlxcLi8sXG4gICAgcHVuY3R1YXRpb246IC9bKClcXFtcXF17fSw7LjpdL1xuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImt1c3RvIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImdyZWVkeSIsInN0cmluZyIsInZlcmIiLCJsb29rYmVoaW5kIiwiYWxpYXMiLCJjb21tYW5kIiwia2V5d29yZCIsImJvb2xlYW4iLCJmdW5jdGlvbiIsImRhdGV0aW1lIiwibnVtYmVyIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/kusto.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/latex.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/latex.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = latex;\nlatex.displayName = \"latex\";\nlatex.aliases = [\n    \"tex\",\n    \"context\"\n];\nfunction latex(Prism) {\n    ;\n    (function(Prism) {\n        var funcPattern = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i;\n        var insideEqu = {\n            \"equation-command\": {\n                pattern: funcPattern,\n                alias: \"regex\"\n            }\n        };\n        Prism.languages.latex = {\n            comment: /%.*/,\n            // the verbatim environment prints whitespace to the document\n            cdata: {\n                pattern: /(\\\\begin\\{((?:lstlisting|verbatim)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n                lookbehind: true\n            },\n            /*\n       * equations can be between $$ $$ or $ $ or \\( \\) or \\[ \\]\n       * (all are multiline)\n       */ equation: [\n                {\n                    pattern: /\\$\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$\\$|\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\n                    inside: insideEqu,\n                    alias: \"string\"\n                },\n                {\n                    pattern: /(\\\\begin\\{((?:align|eqnarray|equation|gather|math|multline)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n                    lookbehind: true,\n                    inside: insideEqu,\n                    alias: \"string\"\n                }\n            ],\n            /*\n       * arguments which are keywords or references are highlighted\n       * as keywords\n       */ keyword: {\n                pattern: /(\\\\(?:begin|cite|documentclass|end|label|ref|usepackage)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n                lookbehind: true\n            },\n            url: {\n                pattern: /(\\\\url\\{)[^}]+(?=\\})/,\n                lookbehind: true\n            },\n            /*\n       * section or chapter headlines are highlighted as bold so that\n       * they stand out more\n       */ headline: {\n                pattern: /(\\\\(?:chapter|frametitle|paragraph|part|section|subparagraph|subsection|subsubparagraph|subsubsection|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n                lookbehind: true,\n                alias: \"class-name\"\n            },\n            function: {\n                pattern: funcPattern,\n                alias: \"selector\"\n            },\n            punctuation: /[[\\]{}&]/\n        };\n        Prism.languages.tex = Prism.languages.latex;\n        Prism.languages.context = Prism.languages.latex;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbGF0ZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsTUFBTUMsV0FBVyxHQUFHO0FBQ3BCRCxNQUFNRSxPQUFPLEdBQUc7SUFBQztJQUFPO0NBQVU7QUFDbEMsU0FBU0YsTUFBTUcsS0FBSzs7SUFDaEIsVUFBVUEsS0FBSztRQUNmLElBQUlDLGNBQWM7UUFDbEIsSUFBSUMsWUFBWTtZQUNkLG9CQUFvQjtnQkFDbEJDLFNBQVNGO2dCQUNURyxPQUFPO1lBQ1Q7UUFDRjtRQUNBSixNQUFNSyxTQUFTLENBQUNSLEtBQUssR0FBRztZQUN0QlMsU0FBUztZQUNULDZEQUE2RDtZQUM3REMsT0FBTztnQkFDTEosU0FDRTtnQkFDRkssWUFBWTtZQUNkO1lBQ0E7OztPQUdDLEdBQ0RDLFVBQVU7Z0JBQ1I7b0JBQ0VOLFNBQ0U7b0JBQ0ZPLFFBQVFSO29CQUNSRSxPQUFPO2dCQUNUO2dCQUNBO29CQUNFRCxTQUNFO29CQUNGSyxZQUFZO29CQUNaRSxRQUFRUjtvQkFDUkUsT0FBTztnQkFDVDthQUNEO1lBQ0Q7OztPQUdDLEdBQ0RPLFNBQVM7Z0JBQ1BSLFNBQ0U7Z0JBQ0ZLLFlBQVk7WUFDZDtZQUNBSSxLQUFLO2dCQUNIVCxTQUFTO2dCQUNUSyxZQUFZO1lBQ2Q7WUFDQTs7O09BR0MsR0FDREssVUFBVTtnQkFDUlYsU0FDRTtnQkFDRkssWUFBWTtnQkFDWkosT0FBTztZQUNUO1lBQ0FVLFVBQVU7Z0JBQ1JYLFNBQVNGO2dCQUNURyxPQUFPO1lBQ1Q7WUFDQVcsYUFBYTtRQUNmO1FBQ0FmLE1BQU1LLFNBQVMsQ0FBQ1csR0FBRyxHQUFHaEIsTUFBTUssU0FBUyxDQUFDUixLQUFLO1FBQzNDRyxNQUFNSyxTQUFTLENBQUNZLE9BQU8sR0FBR2pCLE1BQU1LLFNBQVMsQ0FBQ1IsS0FBSztJQUNqRCxHQUFHRztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2xhdGV4LmpzPzM5NjgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gbGF0ZXhcbmxhdGV4LmRpc3BsYXlOYW1lID0gJ2xhdGV4J1xubGF0ZXguYWxpYXNlcyA9IFsndGV4JywgJ2NvbnRleHQnXVxuZnVuY3Rpb24gbGF0ZXgoUHJpc20pIHtcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIgZnVuY1BhdHRlcm4gPSAvXFxcXCg/OlteYS16KClbXFxdXXxbYS16Kl0rKS9pXG4gICAgdmFyIGluc2lkZUVxdSA9IHtcbiAgICAgICdlcXVhdGlvbi1jb21tYW5kJzoge1xuICAgICAgICBwYXR0ZXJuOiBmdW5jUGF0dGVybixcbiAgICAgICAgYWxpYXM6ICdyZWdleCdcbiAgICAgIH1cbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzLmxhdGV4ID0ge1xuICAgICAgY29tbWVudDogLyUuKi8sXG4gICAgICAvLyB0aGUgdmVyYmF0aW0gZW52aXJvbm1lbnQgcHJpbnRzIHdoaXRlc3BhY2UgdG8gdGhlIGRvY3VtZW50XG4gICAgICBjZGF0YToge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXFxcXGJlZ2luXFx7KCg/OmxzdGxpc3Rpbmd8dmVyYmF0aW0pXFwqPylcXH0pW1xcc1xcU10qPyg/PVxcXFxlbmRcXHtcXDJcXH0pLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIC8qXG4gICAgICAgKiBlcXVhdGlvbnMgY2FuIGJlIGJldHdlZW4gJCQgJCQgb3IgJCAkIG9yIFxcKCBcXCkgb3IgXFxbIFxcXVxuICAgICAgICogKGFsbCBhcmUgbXVsdGlsaW5lKVxuICAgICAgICovXG4gICAgICBlcXVhdGlvbjogW1xuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAgIC9cXCRcXCQoPzpcXFxcW1xcc1xcU118W15cXFxcJF0pK1xcJFxcJHxcXCQoPzpcXFxcW1xcc1xcU118W15cXFxcJF0pK1xcJHxcXFxcXFwoW1xcc1xcU10qP1xcXFxcXCl8XFxcXFxcW1tcXHNcXFNdKj9cXFxcXFxdLyxcbiAgICAgICAgICBpbnNpZGU6IGluc2lkZUVxdSxcbiAgICAgICAgICBhbGlhczogJ3N0cmluZydcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAvKFxcXFxiZWdpblxceygoPzphbGlnbnxlcW5hcnJheXxlcXVhdGlvbnxnYXRoZXJ8bWF0aHxtdWx0bGluZSlcXCo/KVxcfSlbXFxzXFxTXSo/KD89XFxcXGVuZFxce1xcMlxcfSkvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgaW5zaWRlOiBpbnNpZGVFcXUsXG4gICAgICAgICAgYWxpYXM6ICdzdHJpbmcnXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICAvKlxuICAgICAgICogYXJndW1lbnRzIHdoaWNoIGFyZSBrZXl3b3JkcyBvciByZWZlcmVuY2VzIGFyZSBoaWdobGlnaHRlZFxuICAgICAgICogYXMga2V5d29yZHNcbiAgICAgICAqL1xuICAgICAga2V5d29yZDoge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXFxcXCg/OmJlZ2lufGNpdGV8ZG9jdW1lbnRjbGFzc3xlbmR8bGFiZWx8cmVmfHVzZXBhY2thZ2UpKD86XFxbW15cXF1dK1xcXSk/XFx7KVtefV0rKD89XFx9KS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICB1cmw6IHtcbiAgICAgICAgcGF0dGVybjogLyhcXFxcdXJsXFx7KVtefV0rKD89XFx9KS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICAvKlxuICAgICAgICogc2VjdGlvbiBvciBjaGFwdGVyIGhlYWRsaW5lcyBhcmUgaGlnaGxpZ2h0ZWQgYXMgYm9sZCBzbyB0aGF0XG4gICAgICAgKiB0aGV5IHN0YW5kIG91dCBtb3JlXG4gICAgICAgKi9cbiAgICAgIGhlYWRsaW5lOiB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhcXFxcKD86Y2hhcHRlcnxmcmFtZXRpdGxlfHBhcmFncmFwaHxwYXJ0fHNlY3Rpb258c3VicGFyYWdyYXBofHN1YnNlY3Rpb258c3Vic3VicGFyYWdyYXBofHN1YnN1YnNlY3Rpb258c3Vic3Vic3VicGFyYWdyYXBoKVxcKj8oPzpcXFtbXlxcXV0rXFxdKT9cXHspW159XSsoPz1cXH0pLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdjbGFzcy1uYW1lJ1xuICAgICAgfSxcbiAgICAgIGZ1bmN0aW9uOiB7XG4gICAgICAgIHBhdHRlcm46IGZ1bmNQYXR0ZXJuLFxuICAgICAgICBhbGlhczogJ3NlbGVjdG9yJ1xuICAgICAgfSxcbiAgICAgIHB1bmN0dWF0aW9uOiAvW1tcXF17fSZdL1xuICAgIH1cbiAgICBQcmlzbS5sYW5ndWFnZXMudGV4ID0gUHJpc20ubGFuZ3VhZ2VzLmxhdGV4XG4gICAgUHJpc20ubGFuZ3VhZ2VzLmNvbnRleHQgPSBQcmlzbS5sYW5ndWFnZXMubGF0ZXhcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImxhdGV4IiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJmdW5jUGF0dGVybiIsImluc2lkZUVxdSIsInBhdHRlcm4iLCJhbGlhcyIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJjZGF0YSIsImxvb2tiZWhpbmQiLCJlcXVhdGlvbiIsImluc2lkZSIsImtleXdvcmQiLCJ1cmwiLCJoZWFkbGluZSIsImZ1bmN0aW9uIiwicHVuY3R1YXRpb24iLCJ0ZXgiLCJjb250ZXh0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/latex.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/latte.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/latte.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorMarkupTemplating = __webpack_require__(/*! ./markup-templating.js */ \"(ssr)/./node_modules/refractor/lang/markup-templating.js\");\nvar refractorPhp = __webpack_require__(/*! ./php.js */ \"(ssr)/./node_modules/refractor/lang/php.js\");\nmodule.exports = latte;\nlatte.displayName = \"latte\";\nlatte.aliases = [];\nfunction latte(Prism) {\n    Prism.register(refractorMarkupTemplating);\n    Prism.register(refractorPhp);\n    (function(Prism) {\n        Prism.languages.latte = {\n            comment: /^\\{\\*[\\s\\S]*/,\n            \"latte-tag\": {\n                // https://latte.nette.org/en/tags\n                pattern: /(^\\{(?:\\/(?=[a-z]))?)(?:[=_]|[a-z]\\w*\\b(?!\\())/i,\n                lookbehind: true,\n                alias: \"important\"\n            },\n            delimiter: {\n                pattern: /^\\{\\/?|\\}$/,\n                alias: \"punctuation\"\n            },\n            php: {\n                pattern: /\\S(?:[\\s\\S]*\\S)?/,\n                alias: \"language-php\",\n                inside: Prism.languages.php\n            }\n        };\n        var markupLatte = Prism.languages.extend(\"markup\", {});\n        Prism.languages.insertBefore(\"inside\", \"attr-value\", {\n            \"n-attr\": {\n                pattern: /n:[\\w-]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+))?/,\n                inside: {\n                    \"attr-name\": {\n                        pattern: /^[^\\s=]+/,\n                        alias: \"important\"\n                    },\n                    \"attr-value\": {\n                        pattern: /=[\\s\\S]+/,\n                        inside: {\n                            punctuation: [\n                                /^=/,\n                                {\n                                    pattern: /^(\\s*)[\"']|[\"']$/,\n                                    lookbehind: true\n                                }\n                            ],\n                            php: {\n                                pattern: /\\S(?:[\\s\\S]*\\S)?/,\n                                inside: Prism.languages.php\n                            }\n                        }\n                    }\n                }\n            }\n        }, markupLatte.tag);\n        Prism.hooks.add(\"before-tokenize\", function(env) {\n            if (env.language !== \"latte\") {\n                return;\n            }\n            var lattePattern = /\\{\\*[\\s\\S]*?\\*\\}|\\{[^'\"\\s{}*](?:[^\"'/{}]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\}/g;\n            Prism.languages[\"markup-templating\"].buildPlaceholders(env, \"latte\", lattePattern);\n            env.grammar = markupLatte;\n        });\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            Prism.languages[\"markup-templating\"].tokenizePlaceholders(env, \"latte\");\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbGF0dGUuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxJQUFJQSw0QkFBNEJDLG1CQUFPQSxDQUFDO0FBQ3hDLElBQUlDLGVBQWVELG1CQUFPQSxDQUFDO0FBQzNCRSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxNQUFNQyxXQUFXLEdBQUc7QUFDcEJELE1BQU1FLE9BQU8sR0FBRyxFQUFFO0FBQ2xCLFNBQVNGLE1BQU1HLEtBQUs7SUFDbEJBLE1BQU1DLFFBQVEsQ0FBQ1Q7SUFDZlEsTUFBTUMsUUFBUSxDQUFDUDtJQUNiLFVBQVVNLEtBQUs7UUFDZkEsTUFBTUUsU0FBUyxDQUFDTCxLQUFLLEdBQUc7WUFDdEJNLFNBQVM7WUFDVCxhQUFhO2dCQUNYLGtDQUFrQztnQkFDbENDLFNBQVM7Z0JBQ1RDLFlBQVk7Z0JBQ1pDLE9BQU87WUFDVDtZQUNBQyxXQUFXO2dCQUNUSCxTQUFTO2dCQUNURSxPQUFPO1lBQ1Q7WUFDQUUsS0FBSztnQkFDSEosU0FBUztnQkFDVEUsT0FBTztnQkFDUEcsUUFBUVQsTUFBTUUsU0FBUyxDQUFDTSxHQUFHO1lBQzdCO1FBQ0Y7UUFDQSxJQUFJRSxjQUFjVixNQUFNRSxTQUFTLENBQUNTLE1BQU0sQ0FBQyxVQUFVLENBQUM7UUFDcERYLE1BQU1FLFNBQVMsQ0FBQ1UsWUFBWSxDQUMxQixVQUNBLGNBQ0E7WUFDRSxVQUFVO2dCQUNSUixTQUFTO2dCQUNUSyxRQUFRO29CQUNOLGFBQWE7d0JBQ1hMLFNBQVM7d0JBQ1RFLE9BQU87b0JBQ1Q7b0JBQ0EsY0FBYzt3QkFDWkYsU0FBUzt3QkFDVEssUUFBUTs0QkFDTkksYUFBYTtnQ0FDWDtnQ0FDQTtvQ0FDRVQsU0FBUztvQ0FDVEMsWUFBWTtnQ0FDZDs2QkFDRDs0QkFDREcsS0FBSztnQ0FDSEosU0FBUztnQ0FDVEssUUFBUVQsTUFBTUUsU0FBUyxDQUFDTSxHQUFHOzRCQUM3Qjt3QkFDRjtvQkFDRjtnQkFDRjtZQUNGO1FBQ0YsR0FDQUUsWUFBWUksR0FBRztRQUVqQmQsTUFBTWUsS0FBSyxDQUFDQyxHQUFHLENBQUMsbUJBQW1CLFNBQVVDLEdBQUc7WUFDOUMsSUFBSUEsSUFBSUMsUUFBUSxLQUFLLFNBQVM7Z0JBQzVCO1lBQ0Y7WUFDQSxJQUFJQyxlQUNGO1lBQ0ZuQixNQUFNRSxTQUFTLENBQUMsb0JBQW9CLENBQUNrQixpQkFBaUIsQ0FDcERILEtBQ0EsU0FDQUU7WUFFRkYsSUFBSUksT0FBTyxHQUFHWDtRQUNoQjtRQUNBVixNQUFNZSxLQUFLLENBQUNDLEdBQUcsQ0FBQyxrQkFBa0IsU0FBVUMsR0FBRztZQUM3Q2pCLE1BQU1FLFNBQVMsQ0FBQyxvQkFBb0IsQ0FBQ29CLG9CQUFvQixDQUFDTCxLQUFLO1FBQ2pFO0lBQ0YsR0FBR2pCO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbGF0dGUuanM/Y2E3ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcbnZhciByZWZyYWN0b3JNYXJrdXBUZW1wbGF0aW5nID0gcmVxdWlyZSgnLi9tYXJrdXAtdGVtcGxhdGluZy5qcycpXG52YXIgcmVmcmFjdG9yUGhwID0gcmVxdWlyZSgnLi9waHAuanMnKVxubW9kdWxlLmV4cG9ydHMgPSBsYXR0ZVxubGF0dGUuZGlzcGxheU5hbWUgPSAnbGF0dGUnXG5sYXR0ZS5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGxhdHRlKFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3Rvck1hcmt1cFRlbXBsYXRpbmcpXG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvclBocClcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICBQcmlzbS5sYW5ndWFnZXMubGF0dGUgPSB7XG4gICAgICBjb21tZW50OiAvXlxce1xcKltcXHNcXFNdKi8sXG4gICAgICAnbGF0dGUtdGFnJzoge1xuICAgICAgICAvLyBodHRwczovL2xhdHRlLm5ldHRlLm9yZy9lbi90YWdzXG4gICAgICAgIHBhdHRlcm46IC8oXlxceyg/OlxcLyg/PVthLXpdKSk/KSg/Ols9X118W2Etel1cXHcqXFxiKD8hXFwoKSkvaSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdpbXBvcnRhbnQnXG4gICAgICB9LFxuICAgICAgZGVsaW1pdGVyOiB7XG4gICAgICAgIHBhdHRlcm46IC9eXFx7XFwvP3xcXH0kLyxcbiAgICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbidcbiAgICAgIH0sXG4gICAgICBwaHA6IHtcbiAgICAgICAgcGF0dGVybjogL1xcUyg/OltcXHNcXFNdKlxcUyk/LyxcbiAgICAgICAgYWxpYXM6ICdsYW5ndWFnZS1waHAnLFxuICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy5waHBcbiAgICAgIH1cbiAgICB9XG4gICAgdmFyIG1hcmt1cExhdHRlID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnbWFya3VwJywge30pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZShcbiAgICAgICdpbnNpZGUnLFxuICAgICAgJ2F0dHItdmFsdWUnLFxuICAgICAge1xuICAgICAgICAnbi1hdHRyJzoge1xuICAgICAgICAgIHBhdHRlcm46IC9uOltcXHctXSsoPzpcXHMqPVxccyooPzpcIlteXCJdKlwifCdbXiddKid8W15cXHMnXCI+PV0rKSk/LyxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICdhdHRyLW5hbWUnOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC9eW15cXHM9XSsvLFxuICAgICAgICAgICAgICBhbGlhczogJ2ltcG9ydGFudCdcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnYXR0ci12YWx1ZSc6IHtcbiAgICAgICAgICAgICAgcGF0dGVybjogLz1bXFxzXFxTXSsvLFxuICAgICAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICAgICBwdW5jdHVhdGlvbjogW1xuICAgICAgICAgICAgICAgICAgL149LyxcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgcGF0dGVybjogL14oXFxzKilbXCInXXxbXCInXSQvLFxuICAgICAgICAgICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICBwaHA6IHtcbiAgICAgICAgICAgICAgICAgIHBhdHRlcm46IC9cXFMoPzpbXFxzXFxTXSpcXFMpPy8sXG4gICAgICAgICAgICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy5waHBcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBtYXJrdXBMYXR0ZS50YWdcbiAgICApXG4gICAgUHJpc20uaG9va3MuYWRkKCdiZWZvcmUtdG9rZW5pemUnLCBmdW5jdGlvbiAoZW52KSB7XG4gICAgICBpZiAoZW52Lmxhbmd1YWdlICE9PSAnbGF0dGUnKSB7XG4gICAgICAgIHJldHVyblxuICAgICAgfVxuICAgICAgdmFyIGxhdHRlUGF0dGVybiA9XG4gICAgICAgIC9cXHtcXCpbXFxzXFxTXSo/XFwqXFx9fFxce1teJ1wiXFxze30qXSg/OlteXCInL3t9XXxcXC8oPyFbKi9dKXwoXCJ8JykoPzpcXFxcW1xcc1xcU118KD8hXFwxKVteXFxcXF0pKlxcMXxcXC9cXCooPzpbXipdfFxcKig/IVxcLykpKlxcKlxcLykqXFx9L2dcbiAgICAgIFByaXNtLmxhbmd1YWdlc1snbWFya3VwLXRlbXBsYXRpbmcnXS5idWlsZFBsYWNlaG9sZGVycyhcbiAgICAgICAgZW52LFxuICAgICAgICAnbGF0dGUnLFxuICAgICAgICBsYXR0ZVBhdHRlcm5cbiAgICAgIClcbiAgICAgIGVudi5ncmFtbWFyID0gbWFya3VwTGF0dGVcbiAgICB9KVxuICAgIFByaXNtLmhvb2tzLmFkZCgnYWZ0ZXItdG9rZW5pemUnLCBmdW5jdGlvbiAoZW52KSB7XG4gICAgICBQcmlzbS5sYW5ndWFnZXNbJ21hcmt1cC10ZW1wbGF0aW5nJ10udG9rZW5pemVQbGFjZWhvbGRlcnMoZW52LCAnbGF0dGUnKVxuICAgIH0pXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3Rvck1hcmt1cFRlbXBsYXRpbmciLCJyZXF1aXJlIiwicmVmcmFjdG9yUGhwIiwibW9kdWxlIiwiZXhwb3J0cyIsImxhdHRlIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImFsaWFzIiwiZGVsaW1pdGVyIiwicGhwIiwiaW5zaWRlIiwibWFya3VwTGF0dGUiLCJleHRlbmQiLCJpbnNlcnRCZWZvcmUiLCJwdW5jdHVhdGlvbiIsInRhZyIsImhvb2tzIiwiYWRkIiwiZW52IiwibGFuZ3VhZ2UiLCJsYXR0ZVBhdHRlcm4iLCJidWlsZFBsYWNlaG9sZGVycyIsImdyYW1tYXIiLCJ0b2tlbml6ZVBsYWNlaG9sZGVycyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/latte.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/less.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/less.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = less;\nless.displayName = \"less\";\nless.aliases = [];\nfunction less(Prism) {\n    /* FIXME :\n:extend() is not handled specifically : its highlighting is buggy.\nMixin usage must be inside a ruleset to be highlighted.\nAt-rules (e.g. import) containing interpolations are buggy.\nDetached rulesets are highlighted as at-rules.\nA comment before a mixin usage prevents the latter to be properly highlighted.\n*/ Prism.languages.less = Prism.languages.extend(\"css\", {\n        comment: [\n            /\\/\\*[\\s\\S]*?\\*\\//,\n            {\n                pattern: /(^|[^\\\\])\\/\\/.*/,\n                lookbehind: true\n            }\n        ],\n        atrule: {\n            pattern: /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n            inside: {\n                punctuation: /[:()]/\n            }\n        },\n        // selectors and mixins are considered the same\n        selector: {\n            pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n            inside: {\n                // mixin parameters\n                variable: /@+[\\w-]+/\n            }\n        },\n        property: /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/,\n        operator: /[+\\-*\\/]/\n    });\n    Prism.languages.insertBefore(\"less\", \"property\", {\n        variable: [\n            // Variable declaration (the colon must be consumed!)\n            {\n                pattern: /@[\\w-]+\\s*:/,\n                inside: {\n                    punctuation: /:/\n                }\n            },\n            /@@?[\\w-]+/\n        ],\n        \"mixin-usage\": {\n            pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n            lookbehind: true,\n            alias: \"function\"\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbGVzcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDakI7Ozs7OztBQU1GLEdBQ0VBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHRyxNQUFNQyxTQUFTLENBQUNDLE1BQU0sQ0FBQyxPQUFPO1FBQ25EQyxTQUFTO1lBQ1A7WUFDQTtnQkFDRUMsU0FBUztnQkFDVEMsWUFBWTtZQUNkO1NBQ0Q7UUFDREMsUUFBUTtZQUNORixTQUNFO1lBQ0ZHLFFBQVE7Z0JBQ05DLGFBQWE7WUFDZjtRQUNGO1FBQ0EsK0NBQStDO1FBQy9DQyxVQUFVO1lBQ1JMLFNBQ0U7WUFDRkcsUUFBUTtnQkFDTixtQkFBbUI7Z0JBQ25CRyxVQUFVO1lBQ1o7UUFDRjtRQUNBQyxVQUFVO1FBQ1ZDLFVBQVU7SUFDWjtJQUNBWixNQUFNQyxTQUFTLENBQUNZLFlBQVksQ0FBQyxRQUFRLFlBQVk7UUFDL0NILFVBQVU7WUFDUixxREFBcUQ7WUFDckQ7Z0JBQ0VOLFNBQVM7Z0JBQ1RHLFFBQVE7b0JBQ05DLGFBQWE7Z0JBQ2Y7WUFDRjtZQUNBO1NBQ0Q7UUFDRCxlQUFlO1lBQ2JKLFNBQVM7WUFDVEMsWUFBWTtZQUNaUyxPQUFPO1FBQ1Q7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2xlc3MuanM/NjFhMSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBsZXNzXG5sZXNzLmRpc3BsYXlOYW1lID0gJ2xlc3MnXG5sZXNzLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gbGVzcyhQcmlzbSkge1xuICAvKiBGSVhNRSA6XG46ZXh0ZW5kKCkgaXMgbm90IGhhbmRsZWQgc3BlY2lmaWNhbGx5IDogaXRzIGhpZ2hsaWdodGluZyBpcyBidWdneS5cbk1peGluIHVzYWdlIG11c3QgYmUgaW5zaWRlIGEgcnVsZXNldCB0byBiZSBoaWdobGlnaHRlZC5cbkF0LXJ1bGVzIChlLmcuIGltcG9ydCkgY29udGFpbmluZyBpbnRlcnBvbGF0aW9ucyBhcmUgYnVnZ3kuXG5EZXRhY2hlZCBydWxlc2V0cyBhcmUgaGlnaGxpZ2h0ZWQgYXMgYXQtcnVsZXMuXG5BIGNvbW1lbnQgYmVmb3JlIGEgbWl4aW4gdXNhZ2UgcHJldmVudHMgdGhlIGxhdHRlciB0byBiZSBwcm9wZXJseSBoaWdobGlnaHRlZC5cbiovXG4gIFByaXNtLmxhbmd1YWdlcy5sZXNzID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnY3NzJywge1xuICAgIGNvbW1lbnQ6IFtcbiAgICAgIC9cXC9cXCpbXFxzXFxTXSo/XFwqXFwvLyxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyhefFteXFxcXF0pXFwvXFwvLiovLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9XG4gICAgXSxcbiAgICBhdHJ1bGU6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC9AW1xcdy1dKD86XFwoKD86W14oKXt9XXxcXChbXigpe31dKlxcKSkqXFwpfFteKCl7fTtcXHNdfFxccysoPyFcXHMpKSo/KD89XFxzKlxceykvLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHB1bmN0dWF0aW9uOiAvWzooKV0vXG4gICAgICB9XG4gICAgfSxcbiAgICAvLyBzZWxlY3RvcnMgYW5kIG1peGlucyBhcmUgY29uc2lkZXJlZCB0aGUgc2FtZVxuICAgIHNlbGVjdG9yOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKD86QFxce1tcXHctXStcXH18W157fTtcXHNAXSkoPzpAXFx7W1xcdy1dK1xcfXxcXCgoPzpbXigpe31dfFxcKFteKCl7fV0qXFwpKSpcXCl8W14oKXt9O0BcXHNdfFxccysoPyFcXHMpKSo/KD89XFxzKlxceykvLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIC8vIG1peGluIHBhcmFtZXRlcnNcbiAgICAgICAgdmFyaWFibGU6IC9AK1tcXHctXSsvXG4gICAgICB9XG4gICAgfSxcbiAgICBwcm9wZXJ0eTogLyg/OkBcXHtbXFx3LV0rXFx9fFtcXHctXSkrKD86XFwrXz8pPyg/PVxccyo6KS8sXG4gICAgb3BlcmF0b3I6IC9bK1xcLSpcXC9dL1xuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdsZXNzJywgJ3Byb3BlcnR5Jywge1xuICAgIHZhcmlhYmxlOiBbXG4gICAgICAvLyBWYXJpYWJsZSBkZWNsYXJhdGlvbiAodGhlIGNvbG9uIG11c3QgYmUgY29uc3VtZWQhKVxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvQFtcXHctXStcXHMqOi8sXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIHB1bmN0dWF0aW9uOiAvOi9cbiAgICAgICAgfVxuICAgICAgfSwgLy8gVmFyaWFibGUgdXNhZ2VcbiAgICAgIC9AQD9bXFx3LV0rL1xuICAgIF0sXG4gICAgJ21peGluLXVzYWdlJzoge1xuICAgICAgcGF0dGVybjogLyhbeztdXFxzKilbLiNdKD8hXFxkKVtcXHctXS4qPyg/PVsoO10pLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ2Z1bmN0aW9uJ1xuICAgIH1cbiAgfSlcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwibGVzcyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwiY29tbWVudCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiYXRydWxlIiwiaW5zaWRlIiwicHVuY3R1YXRpb24iLCJzZWxlY3RvciIsInZhcmlhYmxlIiwicHJvcGVydHkiLCJvcGVyYXRvciIsImluc2VydEJlZm9yZSIsImFsaWFzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/less.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/lilypond.js":
/*!*************************************************!*\
  !*** ./node_modules/refractor/lang/lilypond.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorScheme = __webpack_require__(/*! ./scheme.js */ \"(ssr)/./node_modules/refractor/lang/scheme.js\");\nmodule.exports = lilypond;\nlilypond.displayName = \"lilypond\";\nlilypond.aliases = [];\nfunction lilypond(Prism) {\n    Prism.register(refractorScheme);\n    (function(Prism) {\n        var schemeExpression = /\\((?:[^();\"#\\\\]|\\\\[\\s\\S]|;.*(?!.)|\"(?:[^\"\\\\]|\\\\.)*\"|#(?:\\{(?:(?!#\\})[\\s\\S])*#\\}|[^{])|<expr>)*\\)/.source // allow for up to pow(2, recursivenessLog2) many levels of recursive brace expressions\n        ;\n        // For some reason, this can't be 4\n        var recursivenessLog2 = 5;\n        for(var i = 0; i < recursivenessLog2; i++){\n            schemeExpression = schemeExpression.replace(/<expr>/g, function() {\n                return schemeExpression;\n            });\n        }\n        schemeExpression = schemeExpression.replace(/<expr>/g, /[^\\s\\S]/.source);\n        var lilypond = Prism.languages.lilypond = {\n            comment: /%(?:(?!\\{).*|\\{[\\s\\S]*?%\\})/,\n            \"embedded-scheme\": {\n                pattern: RegExp(/(^|[=\\s])#(?:\"(?:[^\"\\\\]|\\\\.)*\"|[^\\s()\"]*(?:[^\\s()]|<expr>))/.source.replace(/<expr>/g, function() {\n                    return schemeExpression;\n                }), \"m\"),\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    scheme: {\n                        pattern: /^(#)[\\s\\S]+$/,\n                        lookbehind: true,\n                        alias: \"language-scheme\",\n                        inside: {\n                            \"embedded-lilypond\": {\n                                pattern: /#\\{[\\s\\S]*?#\\}/,\n                                greedy: true,\n                                inside: {\n                                    punctuation: /^#\\{|#\\}$/,\n                                    lilypond: {\n                                        pattern: /[\\s\\S]+/,\n                                        alias: \"language-lilypond\",\n                                        inside: null // see below\n                                    }\n                                }\n                            },\n                            rest: Prism.languages.scheme\n                        }\n                    },\n                    punctuation: /#/\n                }\n            },\n            string: {\n                pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n                greedy: true\n            },\n            \"class-name\": {\n                pattern: /(\\\\new\\s+)[\\w-]+/,\n                lookbehind: true\n            },\n            keyword: {\n                pattern: /\\\\[a-z][-\\w]*/i,\n                inside: {\n                    punctuation: /^\\\\/\n                }\n            },\n            operator: /[=|]|<<|>>/,\n            punctuation: {\n                pattern: /(^|[a-z\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\d))|[_^]\\.?|[.!])|[{}()[\\]<>^~]|\\\\[()[\\]<>\\\\!]|--|__/,\n                lookbehind: true\n            },\n            number: /\\b\\d+(?:\\/\\d+)?\\b/\n        };\n        lilypond[\"embedded-scheme\"].inside[\"scheme\"].inside[\"embedded-lilypond\"].inside[\"lilypond\"].inside = lilypond;\n        Prism.languages.ly = lilypond;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbGlseXBvbmQuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxJQUFJQSxrQkFBa0JDLG1CQUFPQSxDQUFDO0FBQzlCQyxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxTQUFTQyxXQUFXLEdBQUc7QUFDdkJELFNBQVNFLE9BQU8sR0FBRyxFQUFFO0FBQ3JCLFNBQVNGLFNBQVNHLEtBQUs7SUFDckJBLE1BQU1DLFFBQVEsQ0FBQ1I7SUFDYixVQUFVTyxLQUFLO1FBQ2YsSUFBSUUsbUJBQ0YsbUdBQ0dDLE1BQU0sQ0FBQyx1RkFBdUY7O1FBQ25HLG1DQUFtQztRQUNuQyxJQUFJQyxvQkFBb0I7UUFDeEIsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlELG1CQUFtQkMsSUFBSztZQUMxQ0gsbUJBQW1CQSxpQkFBaUJJLE9BQU8sQ0FBQyxXQUFXO2dCQUNyRCxPQUFPSjtZQUNUO1FBQ0Y7UUFDQUEsbUJBQW1CQSxpQkFBaUJJLE9BQU8sQ0FBQyxXQUFXLFVBQVVILE1BQU07UUFDdkUsSUFBSU4sV0FBWUcsTUFBTU8sU0FBUyxDQUFDVixRQUFRLEdBQUc7WUFDekNXLFNBQVM7WUFDVCxtQkFBbUI7Z0JBQ2pCQyxTQUFTQyxPQUNQLDhEQUE4RFAsTUFBTSxDQUFDRyxPQUFPLENBQzFFLFdBQ0E7b0JBQ0UsT0FBT0o7Z0JBQ1QsSUFFRjtnQkFFRlMsWUFBWTtnQkFDWkMsUUFBUTtnQkFDUkMsUUFBUTtvQkFDTkMsUUFBUTt3QkFDTkwsU0FBUzt3QkFDVEUsWUFBWTt3QkFDWkksT0FBTzt3QkFDUEYsUUFBUTs0QkFDTixxQkFBcUI7Z0NBQ25CSixTQUFTO2dDQUNURyxRQUFRO2dDQUNSQyxRQUFRO29DQUNORyxhQUFhO29DQUNibkIsVUFBVTt3Q0FDUlksU0FBUzt3Q0FDVE0sT0FBTzt3Q0FDUEYsUUFBUSxLQUFLLFlBQVk7b0NBQzNCO2dDQUNGOzRCQUNGOzRCQUNBSSxNQUFNakIsTUFBTU8sU0FBUyxDQUFDTyxNQUFNO3dCQUM5QjtvQkFDRjtvQkFDQUUsYUFBYTtnQkFDZjtZQUNGO1lBQ0FFLFFBQVE7Z0JBQ05ULFNBQVM7Z0JBQ1RHLFFBQVE7WUFDVjtZQUNBLGNBQWM7Z0JBQ1pILFNBQVM7Z0JBQ1RFLFlBQVk7WUFDZDtZQUNBUSxTQUFTO2dCQUNQVixTQUFTO2dCQUNUSSxRQUFRO29CQUNORyxhQUFhO2dCQUNmO1lBQ0Y7WUFDQUksVUFBVTtZQUNWSixhQUFhO2dCQUNYUCxTQUNFO2dCQUNGRSxZQUFZO1lBQ2Q7WUFDQVUsUUFBUTtRQUNWO1FBQ0F4QixRQUFRLENBQUMsa0JBQWtCLENBQUNnQixNQUFNLENBQUMsU0FBUyxDQUFDQSxNQUFNLENBQ2pELG9CQUNELENBQUNBLE1BQU0sQ0FBQyxXQUFXLENBQUNBLE1BQU0sR0FBR2hCO1FBQzlCRyxNQUFNTyxTQUFTLENBQUNlLEVBQUUsR0FBR3pCO0lBQ3ZCLEdBQUdHO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbGlseXBvbmQuanM/YTI0YyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcbnZhciByZWZyYWN0b3JTY2hlbWUgPSByZXF1aXJlKCcuL3NjaGVtZS5qcycpXG5tb2R1bGUuZXhwb3J0cyA9IGxpbHlwb25kXG5saWx5cG9uZC5kaXNwbGF5TmFtZSA9ICdsaWx5cG9uZCdcbmxpbHlwb25kLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gbGlseXBvbmQoUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yU2NoZW1lKVxuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIHZhciBzY2hlbWVFeHByZXNzaW9uID1cbiAgICAgIC9cXCgoPzpbXigpO1wiI1xcXFxdfFxcXFxbXFxzXFxTXXw7LiooPyEuKXxcIig/OlteXCJcXFxcXXxcXFxcLikqXCJ8Iyg/Olxceyg/Oig/ISNcXH0pW1xcc1xcU10pKiNcXH18W157XSl8PGV4cHI+KSpcXCkvXG4gICAgICAgIC5zb3VyY2UgLy8gYWxsb3cgZm9yIHVwIHRvIHBvdygyLCByZWN1cnNpdmVuZXNzTG9nMikgbWFueSBsZXZlbHMgb2YgcmVjdXJzaXZlIGJyYWNlIGV4cHJlc3Npb25zXG4gICAgLy8gRm9yIHNvbWUgcmVhc29uLCB0aGlzIGNhbid0IGJlIDRcbiAgICB2YXIgcmVjdXJzaXZlbmVzc0xvZzIgPSA1XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZWN1cnNpdmVuZXNzTG9nMjsgaSsrKSB7XG4gICAgICBzY2hlbWVFeHByZXNzaW9uID0gc2NoZW1lRXhwcmVzc2lvbi5yZXBsYWNlKC88ZXhwcj4vZywgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gc2NoZW1lRXhwcmVzc2lvblxuICAgICAgfSlcbiAgICB9XG4gICAgc2NoZW1lRXhwcmVzc2lvbiA9IHNjaGVtZUV4cHJlc3Npb24ucmVwbGFjZSgvPGV4cHI+L2csIC9bXlxcc1xcU10vLnNvdXJjZSlcbiAgICB2YXIgbGlseXBvbmQgPSAoUHJpc20ubGFuZ3VhZ2VzLmxpbHlwb25kID0ge1xuICAgICAgY29tbWVudDogLyUoPzooPyFcXHspLip8XFx7W1xcc1xcU10qPyVcXH0pLyxcbiAgICAgICdlbWJlZGRlZC1zY2hlbWUnOiB7XG4gICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICAvKF58Wz1cXHNdKSMoPzpcIig/OlteXCJcXFxcXXxcXFxcLikqXCJ8W15cXHMoKVwiXSooPzpbXlxccygpXXw8ZXhwcj4pKS8uc291cmNlLnJlcGxhY2UoXG4gICAgICAgICAgICAvPGV4cHI+L2csXG4gICAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgIHJldHVybiBzY2hlbWVFeHByZXNzaW9uXG4gICAgICAgICAgICB9XG4gICAgICAgICAgKSxcbiAgICAgICAgICAnbSdcbiAgICAgICAgKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBzY2hlbWU6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC9eKCMpW1xcc1xcU10rJC8sXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgICAgYWxpYXM6ICdsYW5ndWFnZS1zY2hlbWUnLFxuICAgICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICAgICdlbWJlZGRlZC1saWx5cG9uZCc6IHtcbiAgICAgICAgICAgICAgICBwYXR0ZXJuOiAvI1xce1tcXHNcXFNdKj8jXFx9LyxcbiAgICAgICAgICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICAgICAgICBwdW5jdHVhdGlvbjogL14jXFx7fCNcXH0kLyxcbiAgICAgICAgICAgICAgICAgIGxpbHlwb25kOiB7XG4gICAgICAgICAgICAgICAgICAgIHBhdHRlcm46IC9bXFxzXFxTXSsvLFxuICAgICAgICAgICAgICAgICAgICBhbGlhczogJ2xhbmd1YWdlLWxpbHlwb25kJyxcbiAgICAgICAgICAgICAgICAgICAgaW5zaWRlOiBudWxsIC8vIHNlZSBiZWxvd1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgcmVzdDogUHJpc20ubGFuZ3VhZ2VzLnNjaGVtZVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgcHVuY3R1YXRpb246IC8jL1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgc3RyaW5nOiB7XG4gICAgICAgIHBhdHRlcm46IC9cIig/OlteXCJcXFxcXXxcXFxcLikqXCIvLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICAnY2xhc3MtbmFtZSc6IHtcbiAgICAgICAgcGF0dGVybjogLyhcXFxcbmV3XFxzKylbXFx3LV0rLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGtleXdvcmQ6IHtcbiAgICAgICAgcGF0dGVybjogL1xcXFxbYS16XVstXFx3XSovaSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgcHVuY3R1YXRpb246IC9eXFxcXC9cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIG9wZXJhdG9yOiAvWz18XXw8PHw+Pi8sXG4gICAgICBwdW5jdHVhdGlvbjoge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXnxbYS16XFxkXSkoPzonK3wsK3xbX15dPy1bX15dPyg/OlstK14hPi5fXXwoPz1cXGQpKXxbX15dXFwuP3xbLiFdKXxbe30oKVtcXF08Pl5+XXxcXFxcWygpW1xcXTw+XFxcXCFdfC0tfF9fLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIG51bWJlcjogL1xcYlxcZCsoPzpcXC9cXGQrKT9cXGIvXG4gICAgfSlcbiAgICBsaWx5cG9uZFsnZW1iZWRkZWQtc2NoZW1lJ10uaW5zaWRlWydzY2hlbWUnXS5pbnNpZGVbXG4gICAgICAnZW1iZWRkZWQtbGlseXBvbmQnXG4gICAgXS5pbnNpZGVbJ2xpbHlwb25kJ10uaW5zaWRlID0gbGlseXBvbmRcbiAgICBQcmlzbS5sYW5ndWFnZXMubHkgPSBsaWx5cG9uZFxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JTY2hlbWUiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImxpbHlwb25kIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsInNjaGVtZUV4cHJlc3Npb24iLCJzb3VyY2UiLCJyZWN1cnNpdmVuZXNzTG9nMiIsImkiLCJyZXBsYWNlIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJSZWdFeHAiLCJsb29rYmVoaW5kIiwiZ3JlZWR5IiwiaW5zaWRlIiwic2NoZW1lIiwiYWxpYXMiLCJwdW5jdHVhdGlvbiIsInJlc3QiLCJzdHJpbmciLCJrZXl3b3JkIiwib3BlcmF0b3IiLCJudW1iZXIiLCJseSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/lilypond.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/liquid.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/liquid.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorMarkupTemplating = __webpack_require__(/*! ./markup-templating.js */ \"(ssr)/./node_modules/refractor/lang/markup-templating.js\");\nmodule.exports = liquid;\nliquid.displayName = \"liquid\";\nliquid.aliases = [];\nfunction liquid(Prism) {\n    Prism.register(refractorMarkupTemplating);\n    Prism.languages.liquid = {\n        comment: {\n            pattern: /(^\\{%\\s*comment\\s*%\\})[\\s\\S]+(?=\\{%\\s*endcomment\\s*%\\}$)/,\n            lookbehind: true\n        },\n        delimiter: {\n            pattern: /^\\{(?:\\{\\{|[%\\{])-?|-?(?:\\}\\}|[%\\}])\\}$/,\n            alias: \"punctuation\"\n        },\n        string: {\n            pattern: /\"[^\"]*\"|'[^']*'/,\n            greedy: true\n        },\n        keyword: /\\b(?:as|assign|break|(?:end)?(?:capture|case|comment|for|form|if|paginate|raw|style|tablerow|unless)|continue|cycle|decrement|echo|else|elsif|in|include|increment|limit|liquid|offset|range|render|reversed|section|when|with)\\b/,\n        object: /\\b(?:address|all_country_option_tags|article|block|blog|cart|checkout|collection|color|country|country_option_tags|currency|current_page|current_tags|customer|customer_address|date|discount_allocation|discount_application|external_video|filter|filter_value|font|forloop|fulfillment|generic_file|gift_card|group|handle|image|line_item|link|linklist|localization|location|measurement|media|metafield|model|model_source|order|page|page_description|page_image|page_title|part|policy|product|product_option|recommendations|request|robots|routes|rule|script|search|selling_plan|selling_plan_allocation|selling_plan_group|shipping_method|shop|shop_locale|sitemap|store_availability|tax_line|template|theme|transaction|unit_price_measurement|user_agent|variant|video|video_source)\\b/,\n        function: [\n            {\n                pattern: /(\\|\\s*)\\w+/,\n                lookbehind: true,\n                alias: \"filter\"\n            },\n            {\n                // array functions\n                pattern: /(\\.\\s*)(?:first|last|size)/,\n                lookbehind: true\n            }\n        ],\n        boolean: /\\b(?:false|nil|true)\\b/,\n        range: {\n            pattern: /\\.\\./,\n            alias: \"operator\"\n        },\n        // https://github.com/Shopify/liquid/blob/698f5e0d967423e013f6169d9111bd969bd78337/lib/liquid/lexer.rb#L21\n        number: /\\b\\d+(?:\\.\\d+)?\\b/,\n        operator: /[!=]=|<>|[<>]=?|[|?:=-]|\\b(?:and|contains(?=\\s)|or)\\b/,\n        punctuation: /[.,\\[\\]()]/,\n        empty: {\n            pattern: /\\bempty\\b/,\n            alias: \"keyword\"\n        }\n    };\n    Prism.hooks.add(\"before-tokenize\", function(env) {\n        var liquidPattern = /\\{%\\s*comment\\s*%\\}[\\s\\S]*?\\{%\\s*endcomment\\s*%\\}|\\{(?:%[\\s\\S]*?%|\\{\\{[\\s\\S]*?\\}\\}|\\{[\\s\\S]*?\\})\\}/g;\n        var insideRaw = false;\n        Prism.languages[\"markup-templating\"].buildPlaceholders(env, \"liquid\", liquidPattern, function(match) {\n            var tagMatch = /^\\{%-?\\s*(\\w+)/.exec(match);\n            if (tagMatch) {\n                var tag = tagMatch[1];\n                if (tag === \"raw\" && !insideRaw) {\n                    insideRaw = true;\n                    return true;\n                } else if (tag === \"endraw\") {\n                    insideRaw = false;\n                    return true;\n                }\n            }\n            return !insideRaw;\n        });\n    });\n    Prism.hooks.add(\"after-tokenize\", function(env) {\n        Prism.languages[\"markup-templating\"].tokenizePlaceholders(env, \"liquid\");\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbGlxdWlkLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsSUFBSUEsNEJBQTRCQyxtQkFBT0EsQ0FBQztBQUN4Q0MsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUcsRUFBRTtBQUNuQixTQUFTRixPQUFPRyxLQUFLO0lBQ25CQSxNQUFNQyxRQUFRLENBQUNSO0lBQ2ZPLE1BQU1FLFNBQVMsQ0FBQ0wsTUFBTSxHQUFHO1FBQ3ZCTSxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsWUFBWTtRQUNkO1FBQ0FDLFdBQVc7WUFDVEYsU0FBUztZQUNURyxPQUFPO1FBQ1Q7UUFDQUMsUUFBUTtZQUNOSixTQUFTO1lBQ1RLLFFBQVE7UUFDVjtRQUNBQyxTQUNFO1FBQ0ZDLFFBQ0U7UUFDRkMsVUFBVTtZQUNSO2dCQUNFUixTQUFTO2dCQUNUQyxZQUFZO2dCQUNaRSxPQUFPO1lBQ1Q7WUFDQTtnQkFDRSxrQkFBa0I7Z0JBQ2xCSCxTQUFTO2dCQUNUQyxZQUFZO1lBQ2Q7U0FDRDtRQUNEUSxTQUFTO1FBQ1RDLE9BQU87WUFDTFYsU0FBUztZQUNURyxPQUFPO1FBQ1Q7UUFDQSwwR0FBMEc7UUFDMUdRLFFBQVE7UUFDUkMsVUFBVTtRQUNWQyxhQUFhO1FBQ2JDLE9BQU87WUFDTGQsU0FBUztZQUNURyxPQUFPO1FBQ1Q7SUFDRjtJQUNBUCxNQUFNbUIsS0FBSyxDQUFDQyxHQUFHLENBQUMsbUJBQW1CLFNBQVVDLEdBQUc7UUFDOUMsSUFBSUMsZ0JBQ0Y7UUFDRixJQUFJQyxZQUFZO1FBQ2hCdkIsTUFBTUUsU0FBUyxDQUFDLG9CQUFvQixDQUFDc0IsaUJBQWlCLENBQ3BESCxLQUNBLFVBQ0FDLGVBQ0EsU0FBVUcsS0FBSztZQUNiLElBQUlDLFdBQVcsaUJBQWlCQyxJQUFJLENBQUNGO1lBQ3JDLElBQUlDLFVBQVU7Z0JBQ1osSUFBSUUsTUFBTUYsUUFBUSxDQUFDLEVBQUU7Z0JBQ3JCLElBQUlFLFFBQVEsU0FBUyxDQUFDTCxXQUFXO29CQUMvQkEsWUFBWTtvQkFDWixPQUFPO2dCQUNULE9BQU8sSUFBSUssUUFBUSxVQUFVO29CQUMzQkwsWUFBWTtvQkFDWixPQUFPO2dCQUNUO1lBQ0Y7WUFDQSxPQUFPLENBQUNBO1FBQ1Y7SUFFSjtJQUNBdkIsTUFBTW1CLEtBQUssQ0FBQ0MsR0FBRyxDQUFDLGtCQUFrQixTQUFVQyxHQUFHO1FBQzdDckIsTUFBTUUsU0FBUyxDQUFDLG9CQUFvQixDQUFDMkIsb0JBQW9CLENBQUNSLEtBQUs7SUFDakU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9saXF1aWQuanM/ZDdmNyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcbnZhciByZWZyYWN0b3JNYXJrdXBUZW1wbGF0aW5nID0gcmVxdWlyZSgnLi9tYXJrdXAtdGVtcGxhdGluZy5qcycpXG5tb2R1bGUuZXhwb3J0cyA9IGxpcXVpZFxubGlxdWlkLmRpc3BsYXlOYW1lID0gJ2xpcXVpZCdcbmxpcXVpZC5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGxpcXVpZChQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JNYXJrdXBUZW1wbGF0aW5nKVxuICBQcmlzbS5sYW5ndWFnZXMubGlxdWlkID0ge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC8oXlxceyVcXHMqY29tbWVudFxccyolXFx9KVtcXHNcXFNdKyg/PVxceyVcXHMqZW5kY29tbWVudFxccyolXFx9JCkvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgZGVsaW1pdGVyOiB7XG4gICAgICBwYXR0ZXJuOiAvXlxceyg/Olxce1xce3xbJVxce10pLT98LT8oPzpcXH1cXH18WyVcXH1dKVxcfSQvLFxuICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbidcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1wiW15cIl0qXCJ8J1teJ10qJy8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YXN8YXNzaWdufGJyZWFrfCg/OmVuZCk/KD86Y2FwdHVyZXxjYXNlfGNvbW1lbnR8Zm9yfGZvcm18aWZ8cGFnaW5hdGV8cmF3fHN0eWxlfHRhYmxlcm93fHVubGVzcyl8Y29udGludWV8Y3ljbGV8ZGVjcmVtZW50fGVjaG98ZWxzZXxlbHNpZnxpbnxpbmNsdWRlfGluY3JlbWVudHxsaW1pdHxsaXF1aWR8b2Zmc2V0fHJhbmdlfHJlbmRlcnxyZXZlcnNlZHxzZWN0aW9ufHdoZW58d2l0aClcXGIvLFxuICAgIG9iamVjdDpcbiAgICAgIC9cXGIoPzphZGRyZXNzfGFsbF9jb3VudHJ5X29wdGlvbl90YWdzfGFydGljbGV8YmxvY2t8YmxvZ3xjYXJ0fGNoZWNrb3V0fGNvbGxlY3Rpb258Y29sb3J8Y291bnRyeXxjb3VudHJ5X29wdGlvbl90YWdzfGN1cnJlbmN5fGN1cnJlbnRfcGFnZXxjdXJyZW50X3RhZ3N8Y3VzdG9tZXJ8Y3VzdG9tZXJfYWRkcmVzc3xkYXRlfGRpc2NvdW50X2FsbG9jYXRpb258ZGlzY291bnRfYXBwbGljYXRpb258ZXh0ZXJuYWxfdmlkZW98ZmlsdGVyfGZpbHRlcl92YWx1ZXxmb250fGZvcmxvb3B8ZnVsZmlsbG1lbnR8Z2VuZXJpY19maWxlfGdpZnRfY2FyZHxncm91cHxoYW5kbGV8aW1hZ2V8bGluZV9pdGVtfGxpbmt8bGlua2xpc3R8bG9jYWxpemF0aW9ufGxvY2F0aW9ufG1lYXN1cmVtZW50fG1lZGlhfG1ldGFmaWVsZHxtb2RlbHxtb2RlbF9zb3VyY2V8b3JkZXJ8cGFnZXxwYWdlX2Rlc2NyaXB0aW9ufHBhZ2VfaW1hZ2V8cGFnZV90aXRsZXxwYXJ0fHBvbGljeXxwcm9kdWN0fHByb2R1Y3Rfb3B0aW9ufHJlY29tbWVuZGF0aW9uc3xyZXF1ZXN0fHJvYm90c3xyb3V0ZXN8cnVsZXxzY3JpcHR8c2VhcmNofHNlbGxpbmdfcGxhbnxzZWxsaW5nX3BsYW5fYWxsb2NhdGlvbnxzZWxsaW5nX3BsYW5fZ3JvdXB8c2hpcHBpbmdfbWV0aG9kfHNob3B8c2hvcF9sb2NhbGV8c2l0ZW1hcHxzdG9yZV9hdmFpbGFiaWxpdHl8dGF4X2xpbmV8dGVtcGxhdGV8dGhlbWV8dHJhbnNhY3Rpb258dW5pdF9wcmljZV9tZWFzdXJlbWVudHx1c2VyX2FnZW50fHZhcmlhbnR8dmlkZW98dmlkZW9fc291cmNlKVxcYi8sXG4gICAgZnVuY3Rpb246IFtcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyhcXHxcXHMqKVxcdysvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogJ2ZpbHRlcidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIC8vIGFycmF5IGZ1bmN0aW9uc1xuICAgICAgICBwYXR0ZXJuOiAvKFxcLlxccyopKD86Zmlyc3R8bGFzdHxzaXplKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH1cbiAgICBdLFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXxuaWx8dHJ1ZSlcXGIvLFxuICAgIHJhbmdlOiB7XG4gICAgICBwYXR0ZXJuOiAvXFwuXFwuLyxcbiAgICAgIGFsaWFzOiAnb3BlcmF0b3InXG4gICAgfSxcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vU2hvcGlmeS9saXF1aWQvYmxvYi82OThmNWUwZDk2NzQyM2UwMTNmNjE2OWQ5MTExYmQ5NjliZDc4MzM3L2xpYi9saXF1aWQvbGV4ZXIucmIjTDIxXG4gICAgbnVtYmVyOiAvXFxiXFxkKyg/OlxcLlxcZCspP1xcYi8sXG4gICAgb3BlcmF0b3I6IC9bIT1dPXw8PnxbPD5dPT98W3w/Oj0tXXxcXGIoPzphbmR8Y29udGFpbnMoPz1cXHMpfG9yKVxcYi8sXG4gICAgcHVuY3R1YXRpb246IC9bLixcXFtcXF0oKV0vLFxuICAgIGVtcHR5OiB7XG4gICAgICBwYXR0ZXJuOiAvXFxiZW1wdHlcXGIvLFxuICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgIH1cbiAgfVxuICBQcmlzbS5ob29rcy5hZGQoJ2JlZm9yZS10b2tlbml6ZScsIGZ1bmN0aW9uIChlbnYpIHtcbiAgICB2YXIgbGlxdWlkUGF0dGVybiA9XG4gICAgICAvXFx7JVxccypjb21tZW50XFxzKiVcXH1bXFxzXFxTXSo/XFx7JVxccyplbmRjb21tZW50XFxzKiVcXH18XFx7KD86JVtcXHNcXFNdKj8lfFxce1xce1tcXHNcXFNdKj9cXH1cXH18XFx7W1xcc1xcU10qP1xcfSlcXH0vZ1xuICAgIHZhciBpbnNpZGVSYXcgPSBmYWxzZVxuICAgIFByaXNtLmxhbmd1YWdlc1snbWFya3VwLXRlbXBsYXRpbmcnXS5idWlsZFBsYWNlaG9sZGVycyhcbiAgICAgIGVudixcbiAgICAgICdsaXF1aWQnLFxuICAgICAgbGlxdWlkUGF0dGVybixcbiAgICAgIGZ1bmN0aW9uIChtYXRjaCkge1xuICAgICAgICB2YXIgdGFnTWF0Y2ggPSAvXlxceyUtP1xccyooXFx3KykvLmV4ZWMobWF0Y2gpXG4gICAgICAgIGlmICh0YWdNYXRjaCkge1xuICAgICAgICAgIHZhciB0YWcgPSB0YWdNYXRjaFsxXVxuICAgICAgICAgIGlmICh0YWcgPT09ICdyYXcnICYmICFpbnNpZGVSYXcpIHtcbiAgICAgICAgICAgIGluc2lkZVJhdyA9IHRydWVcbiAgICAgICAgICAgIHJldHVybiB0cnVlXG4gICAgICAgICAgfSBlbHNlIGlmICh0YWcgPT09ICdlbmRyYXcnKSB7XG4gICAgICAgICAgICBpbnNpZGVSYXcgPSBmYWxzZVxuICAgICAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICFpbnNpZGVSYXdcbiAgICAgIH1cbiAgICApXG4gIH0pXG4gIFByaXNtLmhvb2tzLmFkZCgnYWZ0ZXItdG9rZW5pemUnLCBmdW5jdGlvbiAoZW52KSB7XG4gICAgUHJpc20ubGFuZ3VhZ2VzWydtYXJrdXAtdGVtcGxhdGluZyddLnRva2VuaXplUGxhY2Vob2xkZXJzKGVudiwgJ2xpcXVpZCcpXG4gIH0pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yTWFya3VwVGVtcGxhdGluZyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwibGlxdWlkIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImRlbGltaXRlciIsImFsaWFzIiwic3RyaW5nIiwiZ3JlZWR5Iiwia2V5d29yZCIsIm9iamVjdCIsImZ1bmN0aW9uIiwiYm9vbGVhbiIsInJhbmdlIiwibnVtYmVyIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiIsImVtcHR5IiwiaG9va3MiLCJhZGQiLCJlbnYiLCJsaXF1aWRQYXR0ZXJuIiwiaW5zaWRlUmF3IiwiYnVpbGRQbGFjZWhvbGRlcnMiLCJtYXRjaCIsInRhZ01hdGNoIiwiZXhlYyIsInRhZyIsInRva2VuaXplUGxhY2Vob2xkZXJzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/liquid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/lisp.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/lisp.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = lisp;\nlisp.displayName = \"lisp\";\nlisp.aliases = [];\nfunction lisp(Prism) {\n    ;\n    (function(Prism) {\n        /**\n     * Functions to construct regular expressions\n     * e.g. (interactive ... or (interactive)\n     *\n     * @param {string} name\n     * @returns {RegExp}\n     */ function simple_form(name) {\n            return RegExp(/(\\()/.source + \"(?:\" + name + \")\" + /(?=[\\s\\)])/.source);\n        }\n        /**\n     * booleans and numbers\n     *\n     * @param {string} pattern\n     * @returns {RegExp}\n     */ function primitive(pattern) {\n            return RegExp(/([\\s([])/.source + \"(?:\" + pattern + \")\" + /(?=[\\s)])/.source);\n        } // Patterns in regular expressions\n        // Symbol name. See https://www.gnu.org/software/emacs/manual/html_node/elisp/Symbol-Type.html\n        // & and : are excluded as they are usually used for special purposes\n        var symbol = /(?!\\d)[-+*/~!@$%^=<>{}\\w]+/.source // symbol starting with & used in function arguments\n        ;\n        var marker = \"&\" + symbol // Open parenthesis for look-behind\n        ;\n        var par = \"(\\\\()\";\n        var endpar = \"(?=\\\\))\" // End the pattern with look-ahead space\n        ;\n        var space = \"(?=\\\\s)\";\n        var nestedPar = /(?:[^()]|\\((?:[^()]|\\((?:[^()]|\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\))*\\))*\\))*/.source;\n        var language = {\n            // Three or four semicolons are considered a heading.\n            // See https://www.gnu.org/software/emacs/manual/html_node/elisp/Comment-Tips.html\n            heading: {\n                pattern: /;;;.*/,\n                alias: [\n                    \"comment\",\n                    \"title\"\n                ]\n            },\n            comment: /;.*/,\n            string: {\n                pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n                greedy: true,\n                inside: {\n                    argument: /[-A-Z]+(?=[.,\\s])/,\n                    symbol: RegExp(\"`\" + symbol + \"'\")\n                }\n            },\n            \"quoted-symbol\": {\n                pattern: RegExp(\"#?'\" + symbol),\n                alias: [\n                    \"variable\",\n                    \"symbol\"\n                ]\n            },\n            \"lisp-property\": {\n                pattern: RegExp(\":\" + symbol),\n                alias: \"property\"\n            },\n            splice: {\n                pattern: RegExp(\",@?\" + symbol),\n                alias: [\n                    \"symbol\",\n                    \"variable\"\n                ]\n            },\n            keyword: [\n                {\n                    pattern: RegExp(par + \"(?:and|(?:cl-)?letf|cl-loop|cond|cons|error|if|(?:lexical-)?let\\\\*?|message|not|null|or|provide|require|setq|unless|use-package|when|while)\" + space),\n                    lookbehind: true\n                },\n                {\n                    pattern: RegExp(par + \"(?:append|by|collect|concat|do|finally|for|in|return)\" + space),\n                    lookbehind: true\n                }\n            ],\n            declare: {\n                pattern: simple_form(/declare/.source),\n                lookbehind: true,\n                alias: \"keyword\"\n            },\n            interactive: {\n                pattern: simple_form(/interactive/.source),\n                lookbehind: true,\n                alias: \"keyword\"\n            },\n            boolean: {\n                pattern: primitive(/nil|t/.source),\n                lookbehind: true\n            },\n            number: {\n                pattern: primitive(/[-+]?\\d+(?:\\.\\d*)?/.source),\n                lookbehind: true\n            },\n            defvar: {\n                pattern: RegExp(par + \"def(?:const|custom|group|var)\\\\s+\" + symbol),\n                lookbehind: true,\n                inside: {\n                    keyword: /^def[a-z]+/,\n                    variable: RegExp(symbol)\n                }\n            },\n            defun: {\n                pattern: RegExp(par + /(?:cl-)?(?:defmacro|defun\\*?)\\s+/.source + symbol + /\\s+\\(/.source + nestedPar + /\\)/.source),\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    keyword: /^(?:cl-)?def\\S+/,\n                    // See below, this property needs to be defined later so that it can\n                    // reference the language object.\n                    arguments: null,\n                    function: {\n                        pattern: RegExp(\"(^\\\\s)\" + symbol),\n                        lookbehind: true\n                    },\n                    punctuation: /[()]/\n                }\n            },\n            lambda: {\n                pattern: RegExp(par + \"lambda\\\\s+\\\\(\\\\s*(?:&?\" + symbol + \"(?:\\\\s+&?\" + symbol + \")*\\\\s*)?\\\\)\"),\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    keyword: /^lambda/,\n                    // See below, this property needs to be defined later so that it can\n                    // reference the language object.\n                    arguments: null,\n                    punctuation: /[()]/\n                }\n            },\n            car: {\n                pattern: RegExp(par + symbol),\n                lookbehind: true\n            },\n            punctuation: [\n                // open paren, brackets, and close paren\n                /(?:['`,]?\\(|[)\\[\\]])/,\n                {\n                    pattern: /(\\s)\\.(?=\\s)/,\n                    lookbehind: true\n                }\n            ]\n        };\n        var arg = {\n            \"lisp-marker\": RegExp(marker),\n            varform: {\n                pattern: RegExp(/\\(/.source + symbol + /\\s+(?=\\S)/.source + nestedPar + /\\)/.source),\n                inside: language\n            },\n            argument: {\n                pattern: RegExp(/(^|[\\s(])/.source + symbol),\n                lookbehind: true,\n                alias: \"variable\"\n            },\n            rest: language\n        };\n        var forms = \"\\\\S+(?:\\\\s+\\\\S+)*\";\n        var arglist = {\n            pattern: RegExp(par + nestedPar + endpar),\n            lookbehind: true,\n            inside: {\n                \"rest-vars\": {\n                    pattern: RegExp(\"&(?:body|rest)\\\\s+\" + forms),\n                    inside: arg\n                },\n                \"other-marker-vars\": {\n                    pattern: RegExp(\"&(?:aux|optional)\\\\s+\" + forms),\n                    inside: arg\n                },\n                keys: {\n                    pattern: RegExp(\"&key\\\\s+\" + forms + \"(?:\\\\s+&allow-other-keys)?\"),\n                    inside: arg\n                },\n                argument: {\n                    pattern: RegExp(symbol),\n                    alias: \"variable\"\n                },\n                punctuation: /[()]/\n            }\n        };\n        language[\"lambda\"].inside.arguments = arglist;\n        language[\"defun\"].inside.arguments = Prism.util.clone(arglist);\n        language[\"defun\"].inside.arguments.inside.sublist = arglist;\n        Prism.languages.lisp = language;\n        Prism.languages.elisp = language;\n        Prism.languages.emacs = language;\n        Prism.languages[\"emacs-lisp\"] = language;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/lisp.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/livescript.js":
/*!***************************************************!*\
  !*** ./node_modules/refractor/lang/livescript.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = livescript;\nlivescript.displayName = \"livescript\";\nlivescript.aliases = [];\nfunction livescript(Prism) {\n    Prism.languages.livescript = {\n        comment: [\n            {\n                pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n                lookbehind: true\n            },\n            {\n                pattern: /(^|[^\\\\])#.*/,\n                lookbehind: true\n            }\n        ],\n        \"interpolated-string\": {\n            /* Look-behind and look-ahead prevents wrong behavior of the greedy pattern\n       * forcing it to match \"\"\"-quoted string when it would otherwise match \"-quoted first. */ pattern: /(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,\n            lookbehind: true,\n            greedy: true,\n            inside: {\n                variable: {\n                    pattern: /(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,\n                    lookbehind: true\n                },\n                interpolation: {\n                    pattern: /(^|[^\\\\])#\\{[^}]+\\}/m,\n                    lookbehind: true,\n                    inside: {\n                        \"interpolation-punctuation\": {\n                            pattern: /^#\\{|\\}$/,\n                            alias: \"variable\"\n                        } // See rest below\n                    }\n                },\n                string: /[\\s\\S]+/\n            }\n        },\n        string: [\n            {\n                pattern: /('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n                greedy: true\n            },\n            {\n                pattern: /<\\[[\\s\\S]*?\\]>/,\n                greedy: true\n            },\n            /\\\\[^\\s,;\\])}]+/\n        ],\n        regex: [\n            {\n                pattern: /\\/\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|(?!\\/\\/)[^\\\\\\[])+\\/\\/[gimyu]{0,5}/,\n                greedy: true,\n                inside: {\n                    comment: {\n                        pattern: /(^|[^\\\\])#.*/,\n                        lookbehind: true\n                    }\n                }\n            },\n            {\n                pattern: /\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/[gimyu]{0,5}/,\n                greedy: true\n            }\n        ],\n        keyword: {\n            pattern: /(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,\n            lookbehind: true\n        },\n        \"keyword-operator\": {\n            pattern: /(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?: not|nt)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,\n            lookbehind: true,\n            alias: \"operator\"\n        },\n        boolean: {\n            pattern: /(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,\n            lookbehind: true\n        },\n        argument: {\n            // Don't match .&. nor &&\n            pattern: /(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,\n            lookbehind: true,\n            alias: \"variable\"\n        },\n        number: /\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,\n        identifier: /[a-z_](?:-?[a-z]|[\\d_])*/i,\n        operator: [\n            // Spaced .\n            {\n                pattern: /( )\\.(?= )/,\n                lookbehind: true\n            },\n            // .= .~ .. ...\n            // .&. .^. .<<. .>>. .>>>.\n            // := :: ::=\n            // &&\n            // || |>\n            // < << <<< <<<<\n            // <- <-- <-! <--!\n            // <~ <~~ <~! <~~!\n            // <| <= <?\n            // > >> >= >?\n            // - -- -> -->\n            // + ++\n            // @ @@\n            // % %%\n            // * **\n            // ! != !~=\n            // !~> !~~>\n            // !-> !-->\n            // ~ ~> ~~> ~=\n            // = ==\n            // ^ ^^\n            // / ?\n            /\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/\n        ],\n        punctuation: /[(){}\\[\\]|.,:;`]/\n    };\n    Prism.languages.livescript[\"interpolated-string\"].inside[\"interpolation\"].inside.rest = Prism.languages.livescript;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbGl2ZXNjcmlwdC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxXQUFXQyxXQUFXLEdBQUc7QUFDekJELFdBQVdFLE9BQU8sR0FBRyxFQUFFO0FBQ3ZCLFNBQVNGLFdBQVdHLEtBQUs7SUFDdkJBLE1BQU1DLFNBQVMsQ0FBQ0osVUFBVSxHQUFHO1FBQzNCSyxTQUFTO1lBQ1A7Z0JBQ0VDLFNBQVM7Z0JBQ1RDLFlBQVk7WUFDZDtZQUNBO2dCQUNFRCxTQUFTO2dCQUNUQyxZQUFZO1lBQ2Q7U0FDRDtRQUNELHVCQUF1QjtZQUNyQjs2RkFDdUYsR0FDdkZELFNBQVM7WUFDVEMsWUFBWTtZQUNaQyxRQUFRO1lBQ1JDLFFBQVE7Z0JBQ05DLFVBQVU7b0JBQ1JKLFNBQVM7b0JBQ1RDLFlBQVk7Z0JBQ2Q7Z0JBQ0FJLGVBQWU7b0JBQ2JMLFNBQVM7b0JBQ1RDLFlBQVk7b0JBQ1pFLFFBQVE7d0JBQ04sNkJBQTZCOzRCQUMzQkgsU0FBUzs0QkFDVE0sT0FBTzt3QkFDVCxFQUFFLGlCQUFpQjtvQkFDckI7Z0JBQ0Y7Z0JBQ0FDLFFBQVE7WUFDVjtRQUNGO1FBQ0FBLFFBQVE7WUFDTjtnQkFDRVAsU0FBUztnQkFDVEUsUUFBUTtZQUNWO1lBQ0E7Z0JBQ0VGLFNBQVM7Z0JBQ1RFLFFBQVE7WUFDVjtZQUNBO1NBQ0Q7UUFDRE0sT0FBTztZQUNMO2dCQUNFUixTQUFTO2dCQUNURSxRQUFRO2dCQUNSQyxRQUFRO29CQUNOSixTQUFTO3dCQUNQQyxTQUFTO3dCQUNUQyxZQUFZO29CQUNkO2dCQUNGO1lBQ0Y7WUFDQTtnQkFDRUQsU0FBUztnQkFDVEUsUUFBUTtZQUNWO1NBQ0Q7UUFDRE8sU0FBUztZQUNQVCxTQUNFO1lBQ0ZDLFlBQVk7UUFDZDtRQUNBLG9CQUFvQjtZQUNsQkQsU0FDRTtZQUNGQyxZQUFZO1lBQ1pLLE9BQU87UUFDVDtRQUNBSSxTQUFTO1lBQ1BWLFNBQVM7WUFDVEMsWUFBWTtRQUNkO1FBQ0FVLFVBQVU7WUFDUix5QkFBeUI7WUFDekJYLFNBQVM7WUFDVEMsWUFBWTtZQUNaSyxPQUFPO1FBQ1Q7UUFDQU0sUUFBUTtRQUNSQyxZQUFZO1FBQ1pDLFVBQVU7WUFDUixXQUFXO1lBQ1g7Z0JBQ0VkLFNBQVM7Z0JBQ1RDLFlBQVk7WUFDZDtZQUNBLGVBQWU7WUFDZiwwQkFBMEI7WUFDMUIsWUFBWTtZQUNaLEtBQUs7WUFDTCxRQUFRO1lBQ1IsZ0JBQWdCO1lBQ2hCLGtCQUFrQjtZQUNsQixrQkFBa0I7WUFDbEIsV0FBVztZQUNYLGFBQWE7WUFDYixjQUFjO1lBQ2QsT0FBTztZQUNQLE9BQU87WUFDUCxPQUFPO1lBQ1AsT0FBTztZQUNQLFdBQVc7WUFDWCxXQUFXO1lBQ1gsV0FBVztZQUNYLGNBQWM7WUFDZCxPQUFPO1lBQ1AsT0FBTztZQUNQLE1BQU07WUFDTjtTQUNEO1FBQ0RjLGFBQWE7SUFDZjtJQUNBbEIsTUFBTUMsU0FBUyxDQUFDSixVQUFVLENBQUMsc0JBQXNCLENBQUNTLE1BQU0sQ0FDdEQsZ0JBQ0QsQ0FBQ0EsTUFBTSxDQUFDYSxJQUFJLEdBQUduQixNQUFNQyxTQUFTLENBQUNKLFVBQVU7QUFDNUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbGl2ZXNjcmlwdC5qcz85MTllIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGxpdmVzY3JpcHRcbmxpdmVzY3JpcHQuZGlzcGxheU5hbWUgPSAnbGl2ZXNjcmlwdCdcbmxpdmVzY3JpcHQuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBsaXZlc2NyaXB0KFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5saXZlc2NyaXB0ID0ge1xuICAgIGNvbW1lbnQ6IFtcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyhefFteXFxcXF0pXFwvXFwqW1xcc1xcU10qP1xcKlxcLy8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKSMuKi8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH1cbiAgICBdLFxuICAgICdpbnRlcnBvbGF0ZWQtc3RyaW5nJzoge1xuICAgICAgLyogTG9vay1iZWhpbmQgYW5kIGxvb2stYWhlYWQgcHJldmVudHMgd3JvbmcgYmVoYXZpb3Igb2YgdGhlIGdyZWVkeSBwYXR0ZXJuXG4gICAgICAgKiBmb3JjaW5nIGl0IHRvIG1hdGNoIFwiXCJcIi1xdW90ZWQgc3RyaW5nIHdoZW4gaXQgd291bGQgb3RoZXJ3aXNlIG1hdGNoIFwiLXF1b3RlZCBmaXJzdC4gKi9cbiAgICAgIHBhdHRlcm46IC8oXnxbXlwiXSkoXCJcIlwifFwiKSg/OlxcXFxbXFxzXFxTXXwoPyFcXDIpW15cXFxcXSkqXFwyKD8hXCIpLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgdmFyaWFibGU6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKF58W15cXFxcXSkjW2Etel9dKD86LT9bYS16XXxbXFxkX10pKi9tLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgaW50ZXJwb2xhdGlvbjoge1xuICAgICAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKSNcXHtbXn1dK1xcfS9tLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICAnaW50ZXJwb2xhdGlvbi1wdW5jdHVhdGlvbic6IHtcbiAgICAgICAgICAgICAgcGF0dGVybjogL14jXFx7fFxcfSQvLFxuICAgICAgICAgICAgICBhbGlhczogJ3ZhcmlhYmxlJ1xuICAgICAgICAgICAgfSAvLyBTZWUgcmVzdCBiZWxvd1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgc3RyaW5nOiAvW1xcc1xcU10rL1xuICAgICAgfVxuICAgIH0sXG4gICAgc3RyaW5nOiBbXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC8oJycnfCcpKD86XFxcXFtcXHNcXFNdfCg/IVxcMSlbXlxcXFxdKSpcXDEvLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC88XFxbW1xcc1xcU10qP1xcXT4vLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICAvXFxcXFteXFxzLDtcXF0pfV0rL1xuICAgIF0sXG4gICAgcmVnZXg6IFtcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogL1xcL1xcLyg/OlxcW1teXFxyXFxuXFxdXSpcXF18XFxcXC58KD8hXFwvXFwvKVteXFxcXFxcW10pK1xcL1xcL1tnaW15dV17MCw1fS8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgY29tbWVudDoge1xuICAgICAgICAgICAgcGF0dGVybjogLyhefFteXFxcXF0pIy4qLyxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC9cXC8oPzpcXFtbXlxcclxcblxcXV0qXFxdfFxcXFwufFteL1xcXFxcXHJcXG5cXFtdKStcXC9bZ2lteXVdezAsNX0vLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH1cbiAgICBdLFxuICAgIGtleXdvcmQ6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXnwoPyEtKS4pXFxiKD86YnJlYWt8Y2FzZXxjYXRjaHxjbGFzc3xjb25zdHxjb250aW51ZXxkZWZhdWx0fGRvfGVsc2V8ZXh0ZW5kc3xmYWxsdGhyb3VnaHxmaW5hbGx5fGZvcig/OiBldmVyKT98ZnVuY3Rpb258aWZ8aW1wbGVtZW50c3xpdHxsZXR8bG9vcHxuZXd8bnVsbHxvdGhlcndpc2V8b3dufHJldHVybnxzdXBlcnxzd2l0Y2h8dGhhdHx0aGVufHRoaXN8dGhyb3d8dHJ5fHVubGVzc3x1bnRpbHx2YXJ8dm9pZHx3aGVufHdoaWxlfHlpZWxkKSg/IS0pXFxiL20sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICAna2V5d29yZC1vcGVyYXRvcic6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXnxbXi1dKVxcYig/Oig/OmRlbGV0ZXxyZXF1aXJlfHR5cGVvZikhfCg/OmFuZHxieXxkZWxldGV8ZXhwb3J0fGZyb218aW1wb3J0KD86IGFsbCk/fGlufGluc3RhbmNlb2Z8aXMoPzogbm90fG50KT98bm90fG9mfG9yfHRpbHx0b3x0eXBlb2Z8d2l0aHx4b3IpKD8hLSlcXGIpL20sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdvcGVyYXRvcidcbiAgICB9LFxuICAgIGJvb2xlYW46IHtcbiAgICAgIHBhdHRlcm46IC8oXnxbXi1dKVxcYig/OmZhbHNlfG5vfG9mZnxvbnx0cnVlfHllcykoPyEtKVxcYi9tLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgYXJndW1lbnQ6IHtcbiAgICAgIC8vIERvbid0IG1hdGNoIC4mLiBub3IgJiZcbiAgICAgIHBhdHRlcm46IC8oXnwoPyFcXC4mXFwuKVteJl0pJig/ISYpXFxkKi9tLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAndmFyaWFibGUnXG4gICAgfSxcbiAgICBudW1iZXI6IC9cXGIoPzpcXGQrfltcXGRhLXpdK3xcXGRbXFxkX10qKD86XFwuXFxkW1xcZF9dKik/KD86W2Etel1cXHcqKT8pL2ksXG4gICAgaWRlbnRpZmllcjogL1thLXpfXSg/Oi0/W2Etel18W1xcZF9dKSovaSxcbiAgICBvcGVyYXRvcjogW1xuICAgICAgLy8gU3BhY2VkIC5cbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyggKVxcLig/PSApLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSwgLy8gRnVsbCBsaXN0LCBpbiBvcmRlcjpcbiAgICAgIC8vIC49IC5+IC4uIC4uLlxuICAgICAgLy8gLiYuIC5eLiAuPDwuIC4+Pi4gLj4+Pi5cbiAgICAgIC8vIDo9IDo6IDo6PVxuICAgICAgLy8gJiZcbiAgICAgIC8vIHx8IHw+XG4gICAgICAvLyA8IDw8IDw8PCA8PDw8XG4gICAgICAvLyA8LSA8LS0gPC0hIDwtLSFcbiAgICAgIC8vIDx+IDx+fiA8fiEgPH5+IVxuICAgICAgLy8gPHwgPD0gPD9cbiAgICAgIC8vID4gPj4gPj0gPj9cbiAgICAgIC8vIC0gLS0gLT4gLS0+XG4gICAgICAvLyArICsrXG4gICAgICAvLyBAIEBAXG4gICAgICAvLyAlICUlXG4gICAgICAvLyAqICoqXG4gICAgICAvLyAhICE9ICF+PVxuICAgICAgLy8gIX4+ICF+fj5cbiAgICAgIC8vICEtPiAhLS0+XG4gICAgICAvLyB+IH4+IH5+PiB+PVxuICAgICAgLy8gPSA9PVxuICAgICAgLy8gXiBeXlxuICAgICAgLy8gLyA/XG4gICAgICAvXFwuKD86Wz1+XXxcXC5cXC4/KXxcXC4oPzpbJnxeXXw8PHw+Pj4/KVxcLnw6KD86PXw6PT8pfCYmfFxcfFt8Pl18PCg/Ojw8Pzw/fC0tPyE/fH5+PyE/fFt8PT9dKT98Pls+PT9dP3wtKD86LT4/fD4pP3xcXCtcXCs/fEBAP3wlJT98XFwqXFwqP3whKD86fj89fC0tPz58fj9+Pik/fH4oPzp+Pz58PSk/fD09P3xcXF5cXF4/fFtcXC8/XS9cbiAgICBdLFxuICAgIHB1bmN0dWF0aW9uOiAvWygpe31cXFtcXF18Liw6O2BdL1xuICB9XG4gIFByaXNtLmxhbmd1YWdlcy5saXZlc2NyaXB0WydpbnRlcnBvbGF0ZWQtc3RyaW5nJ10uaW5zaWRlW1xuICAgICdpbnRlcnBvbGF0aW9uJ1xuICBdLmluc2lkZS5yZXN0ID0gUHJpc20ubGFuZ3VhZ2VzLmxpdmVzY3JpcHRcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwibGl2ZXNjcmlwdCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiZ3JlZWR5IiwiaW5zaWRlIiwidmFyaWFibGUiLCJpbnRlcnBvbGF0aW9uIiwiYWxpYXMiLCJzdHJpbmciLCJyZWdleCIsImtleXdvcmQiLCJib29sZWFuIiwiYXJndW1lbnQiLCJudW1iZXIiLCJpZGVudGlmaWVyIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiIsInJlc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/livescript.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/llvm.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/llvm.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = llvm;\nllvm.displayName = \"llvm\";\nllvm.aliases = [];\nfunction llvm(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.llvm = {\n            comment: /;.*/,\n            string: {\n                pattern: /\"[^\"]*\"/,\n                greedy: true\n            },\n            boolean: /\\b(?:false|true)\\b/,\n            variable: /[%@!#](?:(?!\\d)(?:[-$.\\w]|\\\\[a-f\\d]{2})+|\\d+)/i,\n            label: /(?!\\d)(?:[-$.\\w]|\\\\[a-f\\d]{2})+:/i,\n            type: {\n                pattern: /\\b(?:double|float|fp128|half|i[1-9]\\d*|label|metadata|ppc_fp128|token|void|x86_fp80|x86_mmx)\\b/,\n                alias: \"class-name\"\n            },\n            keyword: /\\b[a-z_][a-z_0-9]*\\b/,\n            number: /[+-]?\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-Fa-f]+\\b|\\b0xK[\\dA-Fa-f]{20}\\b|\\b0x[ML][\\dA-Fa-f]{32}\\b|\\b0xH[\\dA-Fa-f]{4}\\b/,\n            punctuation: /[{}[\\];(),.!*=<>]/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbGx2bS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7O0lBQ2YsVUFBVUEsS0FBSztRQUNmQSxNQUFNQyxTQUFTLENBQUNKLElBQUksR0FBRztZQUNyQkssU0FBUztZQUNUQyxRQUFRO2dCQUNOQyxTQUFTO2dCQUNUQyxRQUFRO1lBQ1Y7WUFDQUMsU0FBUztZQUNUQyxVQUFVO1lBQ1ZDLE9BQU87WUFDUEMsTUFBTTtnQkFDSkwsU0FDRTtnQkFDRk0sT0FBTztZQUNUO1lBQ0FDLFNBQVM7WUFDVEMsUUFDRTtZQUNGQyxhQUFhO1FBQ2Y7SUFDRixHQUFHYjtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2xsdm0uanM/YWI0MiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBsbHZtXG5sbHZtLmRpc3BsYXlOYW1lID0gJ2xsdm0nXG5sbHZtLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gbGx2bShQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIFByaXNtLmxhbmd1YWdlcy5sbHZtID0ge1xuICAgICAgY29tbWVudDogLzsuKi8sXG4gICAgICBzdHJpbmc6IHtcbiAgICAgICAgcGF0dGVybjogL1wiW15cIl0qXCIvLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvLFxuICAgICAgdmFyaWFibGU6IC9bJUAhI10oPzooPyFcXGQpKD86Wy0kLlxcd118XFxcXFthLWZcXGRdezJ9KSt8XFxkKykvaSxcbiAgICAgIGxhYmVsOiAvKD8hXFxkKSg/OlstJC5cXHddfFxcXFxbYS1mXFxkXXsyfSkrOi9pLFxuICAgICAgdHlwZToge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC9cXGIoPzpkb3VibGV8ZmxvYXR8ZnAxMjh8aGFsZnxpWzEtOV1cXGQqfGxhYmVsfG1ldGFkYXRhfHBwY19mcDEyOHx0b2tlbnx2b2lkfHg4Nl9mcDgwfHg4Nl9tbXgpXFxiLyxcbiAgICAgICAgYWxpYXM6ICdjbGFzcy1uYW1lJ1xuICAgICAgfSxcbiAgICAgIGtleXdvcmQ6IC9cXGJbYS16X11bYS16XzAtOV0qXFxiLyxcbiAgICAgIG51bWJlcjpcbiAgICAgICAgL1srLV0/XFxiXFxkKyg/OlxcLlxcZCspPyg/OltlRV1bKy1dP1xcZCspP1xcYnxcXGIweFtcXGRBLUZhLWZdK1xcYnxcXGIweEtbXFxkQS1GYS1mXXsyMH1cXGJ8XFxiMHhbTUxdW1xcZEEtRmEtZl17MzJ9XFxifFxcYjB4SFtcXGRBLUZhLWZdezR9XFxiLyxcbiAgICAgIHB1bmN0dWF0aW9uOiAvW3t9W1xcXTsoKSwuISo9PD5dL1xuICAgIH1cbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImxsdm0iLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZ3JlZWR5IiwiYm9vbGVhbiIsInZhcmlhYmxlIiwibGFiZWwiLCJ0eXBlIiwiYWxpYXMiLCJrZXl3b3JkIiwibnVtYmVyIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/llvm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/log.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/log.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = log;\nlog.displayName = \"log\";\nlog.aliases = [];\nfunction log(Prism) {\n    // This is a language definition for generic log files.\n    // Since there is no one log format, this language definition has to support all formats to some degree.\n    //\n    // Based on https://github.com/MTDL9/vim-log-highlighting\n    Prism.languages.log = {\n        string: {\n            // Single-quoted strings must not be confused with plain text. E.g. Can't isn't Susan's Chris' toy\n            pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?![st] | \\w)(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n            greedy: true\n        },\n        exception: {\n            pattern: /(^|[^\\w.])[a-z][\\w.]*(?:Error|Exception):.*(?:(?:\\r\\n?|\\n)[ \\t]*(?:at[ \\t].+|\\.{3}.*|Caused by:.*))+(?:(?:\\r\\n?|\\n)[ \\t]*\\.\\.\\. .*)?/,\n            lookbehind: true,\n            greedy: true,\n            alias: [\n                \"javastacktrace\",\n                \"language-javastacktrace\"\n            ],\n            inside: Prism.languages[\"javastacktrace\"] || {\n                keyword: /\\bat\\b/,\n                function: /[a-z_][\\w$]*(?=\\()/,\n                punctuation: /[.:()]/\n            }\n        },\n        level: [\n            {\n                pattern: /\\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\\b/,\n                alias: [\n                    \"error\",\n                    \"important\"\n                ]\n            },\n            {\n                pattern: /\\b(?:WARN|WARNING|WRN)\\b/,\n                alias: [\n                    \"warning\",\n                    \"important\"\n                ]\n            },\n            {\n                pattern: /\\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\\b/,\n                alias: [\n                    \"info\",\n                    \"keyword\"\n                ]\n            },\n            {\n                pattern: /\\b(?:DBG|DEBUG|FINE)\\b/,\n                alias: [\n                    \"debug\",\n                    \"keyword\"\n                ]\n            },\n            {\n                pattern: /\\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\\b/,\n                alias: [\n                    \"trace\",\n                    \"comment\"\n                ]\n            }\n        ],\n        property: {\n            pattern: /((?:^|[\\]|])[ \\t]*)[a-z_](?:[\\w-]|\\b\\/\\b)*(?:[. ]\\(?\\w(?:[\\w-]|\\b\\/\\b)*\\)?)*:(?=\\s)/im,\n            lookbehind: true\n        },\n        separator: {\n            pattern: /(^|[^-+])-{3,}|={3,}|\\*{3,}|- - /m,\n            lookbehind: true,\n            alias: \"comment\"\n        },\n        url: /\\b(?:file|ftp|https?):\\/\\/[^\\s|,;'\"]*[^\\s|,;'\">.]/,\n        email: {\n            pattern: /(^|\\s)[-\\w+.]+@[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)+(?=\\s)/,\n            lookbehind: true,\n            alias: \"url\"\n        },\n        \"ip-address\": {\n            pattern: /\\b(?:\\d{1,3}(?:\\.\\d{1,3}){3})\\b/,\n            alias: \"constant\"\n        },\n        \"mac-address\": {\n            pattern: /\\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\\b/i,\n            alias: \"constant\"\n        },\n        domain: {\n            pattern: /(^|\\s)[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)*\\.[a-z][a-z0-9-]+(?=\\s)/,\n            lookbehind: true,\n            alias: \"constant\"\n        },\n        uuid: {\n            pattern: /\\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\b/i,\n            alias: \"constant\"\n        },\n        hash: {\n            pattern: /\\b(?:[a-f0-9]{32}){1,2}\\b/i,\n            alias: \"constant\"\n        },\n        \"file-path\": {\n            pattern: /\\b[a-z]:[\\\\/][^\\s|,;:(){}\\[\\]\"']+|(^|[\\s:\\[\\](>|])\\.{0,2}\\/\\w[^\\s|,;:(){}\\[\\]\"']*/i,\n            lookbehind: true,\n            greedy: true,\n            alias: \"string\"\n        },\n        date: {\n            pattern: RegExp(/\\b\\d{4}[-/]\\d{2}[-/]\\d{2}(?:T(?=\\d{1,2}:)|(?=\\s\\d{1,2}:))/.source + \"|\" + /\\b\\d{1,4}[-/ ](?:\\d{1,2}|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)[-/ ]\\d{2,4}T?\\b/.source + \"|\" + /\\b(?:(?:Fri|Mon|Sat|Sun|Thu|Tue|Wed)(?:\\s{1,2}(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep))?|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)\\s{1,2}\\d{1,2}\\b/.source, \"i\"),\n            alias: \"number\"\n        },\n        time: {\n            pattern: /\\b\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,:]\\d+)?(?:\\s?[+-]\\d{2}:?\\d{2}|Z)?\\b/,\n            alias: \"number\"\n        },\n        boolean: /\\b(?:false|null|true)\\b/i,\n        number: {\n            pattern: /(^|[^.\\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\\d[\\da-f]*(?:\\.\\d+)*(?:e[+-]?\\d+)?[a-z]{0,3}\\b)\\b(?!\\.\\w)/i,\n            lookbehind: true\n        },\n        operator: /[;:?<=>~/@!$%&+\\-|^(){}*#]/,\n        punctuation: /[\\[\\].,]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbG9nLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLElBQUlDLFdBQVcsR0FBRztBQUNsQkQsSUFBSUUsT0FBTyxHQUFHLEVBQUU7QUFDaEIsU0FBU0YsSUFBSUcsS0FBSztJQUNoQix1REFBdUQ7SUFDdkQsd0dBQXdHO0lBQ3hHLEVBQUU7SUFDRix5REFBeUQ7SUFDekRBLE1BQU1DLFNBQVMsQ0FBQ0osR0FBRyxHQUFHO1FBQ3BCSyxRQUFRO1lBQ04sa0dBQWtHO1lBQ2xHQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBQyxXQUFXO1lBQ1RGLFNBQ0U7WUFDRkcsWUFBWTtZQUNaRixRQUFRO1lBQ1JHLE9BQU87Z0JBQUM7Z0JBQWtCO2FBQTBCO1lBQ3BEQyxRQUFRUixNQUFNQyxTQUFTLENBQUMsaUJBQWlCLElBQUk7Z0JBQzNDUSxTQUFTO2dCQUNUQyxVQUFVO2dCQUNWQyxhQUFhO1lBQ2Y7UUFDRjtRQUNBQyxPQUFPO1lBQ0w7Z0JBQ0VULFNBQ0U7Z0JBQ0ZJLE9BQU87b0JBQUM7b0JBQVM7aUJBQVk7WUFDL0I7WUFDQTtnQkFDRUosU0FBUztnQkFDVEksT0FBTztvQkFBQztvQkFBVztpQkFBWTtZQUNqQztZQUNBO2dCQUNFSixTQUFTO2dCQUNUSSxPQUFPO29CQUFDO29CQUFRO2lCQUFVO1lBQzVCO1lBQ0E7Z0JBQ0VKLFNBQVM7Z0JBQ1RJLE9BQU87b0JBQUM7b0JBQVM7aUJBQVU7WUFDN0I7WUFDQTtnQkFDRUosU0FBUztnQkFDVEksT0FBTztvQkFBQztvQkFBUztpQkFBVTtZQUM3QjtTQUNEO1FBQ0RNLFVBQVU7WUFDUlYsU0FDRTtZQUNGRyxZQUFZO1FBQ2Q7UUFDQVEsV0FBVztZQUNUWCxTQUFTO1lBQ1RHLFlBQVk7WUFDWkMsT0FBTztRQUNUO1FBQ0FRLEtBQUs7UUFDTEMsT0FBTztZQUNMYixTQUFTO1lBQ1RHLFlBQVk7WUFDWkMsT0FBTztRQUNUO1FBQ0EsY0FBYztZQUNaSixTQUFTO1lBQ1RJLE9BQU87UUFDVDtRQUNBLGVBQWU7WUFDYkosU0FBUztZQUNUSSxPQUFPO1FBQ1Q7UUFDQVUsUUFBUTtZQUNOZCxTQUNFO1lBQ0ZHLFlBQVk7WUFDWkMsT0FBTztRQUNUO1FBQ0FXLE1BQU07WUFDSmYsU0FDRTtZQUNGSSxPQUFPO1FBQ1Q7UUFDQVksTUFBTTtZQUNKaEIsU0FBUztZQUNUSSxPQUFPO1FBQ1Q7UUFDQSxhQUFhO1lBQ1hKLFNBQ0U7WUFDRkcsWUFBWTtZQUNaRixRQUFRO1lBQ1JHLE9BQU87UUFDVDtRQUNBYSxNQUFNO1lBQ0pqQixTQUFTa0IsT0FDUCw0REFBNERDLE1BQU0sR0FDaEUsTUFDQSw0RkFDR0EsTUFBTSxHQUNULE1BQ0EsdUtBQ0dBLE1BQU0sRUFDWDtZQUVGZixPQUFPO1FBQ1Q7UUFDQWdCLE1BQU07WUFDSnBCLFNBQ0U7WUFDRkksT0FBTztRQUNUO1FBQ0FpQixTQUFTO1FBQ1RDLFFBQVE7WUFDTnRCLFNBQ0U7WUFDRkcsWUFBWTtRQUNkO1FBQ0FvQixVQUFVO1FBQ1ZmLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2xvZy5qcz8zZWI3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGxvZ1xubG9nLmRpc3BsYXlOYW1lID0gJ2xvZydcbmxvZy5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGxvZyhQcmlzbSkge1xuICAvLyBUaGlzIGlzIGEgbGFuZ3VhZ2UgZGVmaW5pdGlvbiBmb3IgZ2VuZXJpYyBsb2cgZmlsZXMuXG4gIC8vIFNpbmNlIHRoZXJlIGlzIG5vIG9uZSBsb2cgZm9ybWF0LCB0aGlzIGxhbmd1YWdlIGRlZmluaXRpb24gaGFzIHRvIHN1cHBvcnQgYWxsIGZvcm1hdHMgdG8gc29tZSBkZWdyZWUuXG4gIC8vXG4gIC8vIEJhc2VkIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS9NVERMOS92aW0tbG9nLWhpZ2hsaWdodGluZ1xuICBQcmlzbS5sYW5ndWFnZXMubG9nID0ge1xuICAgIHN0cmluZzoge1xuICAgICAgLy8gU2luZ2xlLXF1b3RlZCBzdHJpbmdzIG11c3Qgbm90IGJlIGNvbmZ1c2VkIHdpdGggcGxhaW4gdGV4dC4gRS5nLiBDYW4ndCBpc24ndCBTdXNhbidzIENocmlzJyB0b3lcbiAgICAgIHBhdHRlcm46IC9cIig/OlteXCJcXFxcXFxyXFxuXXxcXFxcLikqXCJ8Jyg/IVtzdF0gfCBcXHcpKD86W14nXFxcXFxcclxcbl18XFxcXC4pKicvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBleGNlcHRpb246IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXnxbXlxcdy5dKVthLXpdW1xcdy5dKig/OkVycm9yfEV4Y2VwdGlvbik6LiooPzooPzpcXHJcXG4/fFxcbilbIFxcdF0qKD86YXRbIFxcdF0uK3xcXC57M30uKnxDYXVzZWQgYnk6LiopKSsoPzooPzpcXHJcXG4/fFxcbilbIFxcdF0qXFwuXFwuXFwuIC4qKT8vLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGFsaWFzOiBbJ2phdmFzdGFja3RyYWNlJywgJ2xhbmd1YWdlLWphdmFzdGFja3RyYWNlJ10sXG4gICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlc1snamF2YXN0YWNrdHJhY2UnXSB8fCB7XG4gICAgICAgIGtleXdvcmQ6IC9cXGJhdFxcYi8sXG4gICAgICAgIGZ1bmN0aW9uOiAvW2Etel9dW1xcdyRdKig/PVxcKCkvLFxuICAgICAgICBwdW5jdHVhdGlvbjogL1suOigpXS9cbiAgICAgIH1cbiAgICB9LFxuICAgIGxldmVsOiBbXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgL1xcYig/OkFMRVJUfENSSVR8Q1JJVElDQUx8RU1FUkd8RU1FUkdFTkNZfEVSUnxFUlJPUnxGQUlMVVJFfEZBVEFMfFNFVkVSRSlcXGIvLFxuICAgICAgICBhbGlhczogWydlcnJvcicsICdpbXBvcnRhbnQnXVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogL1xcYig/OldBUk58V0FSTklOR3xXUk4pXFxiLyxcbiAgICAgICAgYWxpYXM6IFsnd2FybmluZycsICdpbXBvcnRhbnQnXVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogL1xcYig/OkRJU1BMQVl8SU5GfElORk98Tk9USUNFfFNUQVRVUylcXGIvLFxuICAgICAgICBhbGlhczogWydpbmZvJywgJ2tleXdvcmQnXVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogL1xcYig/OkRCR3xERUJVR3xGSU5FKVxcYi8sXG4gICAgICAgIGFsaWFzOiBbJ2RlYnVnJywgJ2tleXdvcmQnXVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogL1xcYig/OkZJTkVSfEZJTkVTVHxUUkFDRXxUUkN8VkVSQk9TRXxWUkIpXFxiLyxcbiAgICAgICAgYWxpYXM6IFsndHJhY2UnLCAnY29tbWVudCddXG4gICAgICB9XG4gICAgXSxcbiAgICBwcm9wZXJ0eToge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLygoPzpefFtcXF18XSlbIFxcdF0qKVthLXpfXSg/OltcXHctXXxcXGJcXC9cXGIpKig/OlsuIF1cXCg/XFx3KD86W1xcdy1dfFxcYlxcL1xcYikqXFwpPykqOig/PVxccykvaW0sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBzZXBhcmF0b3I6IHtcbiAgICAgIHBhdHRlcm46IC8oXnxbXi0rXSktezMsfXw9ezMsfXxcXCp7Myx9fC0gLSAvbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ2NvbW1lbnQnXG4gICAgfSxcbiAgICB1cmw6IC9cXGIoPzpmaWxlfGZ0cHxodHRwcz8pOlxcL1xcL1teXFxzfCw7J1wiXSpbXlxcc3wsOydcIj4uXS8sXG4gICAgZW1haWw6IHtcbiAgICAgIHBhdHRlcm46IC8oXnxcXHMpWy1cXHcrLl0rQFthLXpdW2EtejAtOS1dKig/OlxcLlthLXpdW2EtejAtOS1dKikrKD89XFxzKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICd1cmwnXG4gICAgfSxcbiAgICAnaXAtYWRkcmVzcyc6IHtcbiAgICAgIHBhdHRlcm46IC9cXGIoPzpcXGR7MSwzfSg/OlxcLlxcZHsxLDN9KXszfSlcXGIvLFxuICAgICAgYWxpYXM6ICdjb25zdGFudCdcbiAgICB9LFxuICAgICdtYWMtYWRkcmVzcyc6IHtcbiAgICAgIHBhdHRlcm46IC9cXGJbYS1mMC05XXsyfSg/OjpbYS1mMC05XXsyfSl7NX1cXGIvaSxcbiAgICAgIGFsaWFzOiAnY29uc3RhbnQnXG4gICAgfSxcbiAgICBkb21haW46IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXnxcXHMpW2Etel1bYS16MC05LV0qKD86XFwuW2Etel1bYS16MC05LV0qKSpcXC5bYS16XVthLXowLTktXSsoPz1cXHMpLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ2NvbnN0YW50J1xuICAgIH0sXG4gICAgdXVpZDoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL1xcYlswLTlhLWZdezh9LVswLTlhLWZdezR9LVswLTlhLWZdezR9LVswLTlhLWZdezR9LVswLTlhLWZdezEyfVxcYi9pLFxuICAgICAgYWxpYXM6ICdjb25zdGFudCdcbiAgICB9LFxuICAgIGhhc2g6IHtcbiAgICAgIHBhdHRlcm46IC9cXGIoPzpbYS1mMC05XXszMn0pezEsMn1cXGIvaSxcbiAgICAgIGFsaWFzOiAnY29uc3RhbnQnXG4gICAgfSxcbiAgICAnZmlsZS1wYXRoJzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL1xcYlthLXpdOltcXFxcL11bXlxcc3wsOzooKXt9XFxbXFxdXCInXSt8KF58W1xcczpcXFtcXF0oPnxdKVxcLnswLDJ9XFwvXFx3W15cXHN8LDs6KCl7fVxcW1xcXVwiJ10qL2ksXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgYWxpYXM6ICdzdHJpbmcnXG4gICAgfSxcbiAgICBkYXRlOiB7XG4gICAgICBwYXR0ZXJuOiBSZWdFeHAoXG4gICAgICAgIC9cXGJcXGR7NH1bLS9dXFxkezJ9Wy0vXVxcZHsyfSg/OlQoPz1cXGR7MSwyfTopfCg/PVxcc1xcZHsxLDJ9OikpLy5zb3VyY2UgK1xuICAgICAgICAgICd8JyArXG4gICAgICAgICAgL1xcYlxcZHsxLDR9Wy0vIF0oPzpcXGR7MSwyfXxBcHJ8QXVnfERlY3xGZWJ8SmFufEp1bHxKdW58TWFyfE1heXxOb3Z8T2N0fFNlcClbLS8gXVxcZHsyLDR9VD9cXGIvXG4gICAgICAgICAgICAuc291cmNlICtcbiAgICAgICAgICAnfCcgK1xuICAgICAgICAgIC9cXGIoPzooPzpGcml8TW9ufFNhdHxTdW58VGh1fFR1ZXxXZWQpKD86XFxzezEsMn0oPzpBcHJ8QXVnfERlY3xGZWJ8SmFufEp1bHxKdW58TWFyfE1heXxOb3Z8T2N0fFNlcCkpP3xBcHJ8QXVnfERlY3xGZWJ8SmFufEp1bHxKdW58TWFyfE1heXxOb3Z8T2N0fFNlcClcXHN7MSwyfVxcZHsxLDJ9XFxiL1xuICAgICAgICAgICAgLnNvdXJjZSxcbiAgICAgICAgJ2knXG4gICAgICApLFxuICAgICAgYWxpYXM6ICdudW1iZXInXG4gICAgfSxcbiAgICB0aW1lOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvXFxiXFxkezEsMn06XFxkezEsMn06XFxkezEsMn0oPzpbLiw6XVxcZCspPyg/Olxccz9bKy1dXFxkezJ9Oj9cXGR7Mn18Wik/XFxiLyxcbiAgICAgIGFsaWFzOiAnbnVtYmVyJ1xuICAgIH0sXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfG51bGx8dHJ1ZSlcXGIvaSxcbiAgICBudW1iZXI6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXnxbXi5cXHddKSg/OjB4W2EtZjAtOV0rfDBvWzAtN10rfDBiWzAxXSt8dj9cXGRbXFxkYS1mXSooPzpcXC5cXGQrKSooPzplWystXT9cXGQrKT9bYS16XXswLDN9XFxiKVxcYig/IVxcLlxcdykvaSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIG9wZXJhdG9yOiAvWzs6Pzw9Pn4vQCEkJSYrXFwtfF4oKXt9KiNdLyxcbiAgICBwdW5jdHVhdGlvbjogL1tcXFtcXF0uLF0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwibG9nIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZ3JlZWR5IiwiZXhjZXB0aW9uIiwibG9va2JlaGluZCIsImFsaWFzIiwiaW5zaWRlIiwia2V5d29yZCIsImZ1bmN0aW9uIiwicHVuY3R1YXRpb24iLCJsZXZlbCIsInByb3BlcnR5Iiwic2VwYXJhdG9yIiwidXJsIiwiZW1haWwiLCJkb21haW4iLCJ1dWlkIiwiaGFzaCIsImRhdGUiLCJSZWdFeHAiLCJzb3VyY2UiLCJ0aW1lIiwiYm9vbGVhbiIsIm51bWJlciIsIm9wZXJhdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/log.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/lolcode.js":
/*!************************************************!*\
  !*** ./node_modules/refractor/lang/lolcode.js ***!
  \************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = lolcode;\nlolcode.displayName = \"lolcode\";\nlolcode.aliases = [];\nfunction lolcode(Prism) {\n    Prism.languages.lolcode = {\n        comment: [\n            /\\bOBTW\\s[\\s\\S]*?\\sTLDR\\b/,\n            /\\bBTW.+/\n        ],\n        string: {\n            pattern: /\"(?::.|[^\":])*\"/,\n            inside: {\n                variable: /:\\{[^}]+\\}/,\n                symbol: [\n                    /:\\([a-f\\d]+\\)/i,\n                    /:\\[[^\\]]+\\]/,\n                    /:[)>o\":]/\n                ]\n            },\n            greedy: true\n        },\n        number: /(?:\\B-)?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)/,\n        symbol: {\n            pattern: /(^|\\s)(?:A )?(?:BUKKIT|NOOB|NUMBAR|NUMBR|TROOF|YARN)(?=\\s|,|$)/,\n            lookbehind: true,\n            inside: {\n                keyword: /A(?=\\s)/\n            }\n        },\n        label: {\n            pattern: /((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,\n            lookbehind: true,\n            alias: \"string\"\n        },\n        function: {\n            pattern: /((?:^|\\s)(?:HOW IZ I|I IZ|IZ) )[a-zA-Z]\\w*/,\n            lookbehind: true\n        },\n        keyword: [\n            {\n                pattern: /(^|\\s)(?:AN|FOUND YR|GIMMEH|GTFO|HAI|HAS A|HOW IZ I|I HAS A|I IZ|IF U SAY SO|IM IN YR|IM OUTTA YR|IS NOW(?: A)?|ITZ(?: A)?|IZ|KTHX|KTHXBYE|LIEK(?: A)?|MAEK|MEBBE|MKAY|NERFIN|NO WAI|O HAI IM|O RLY\\?|OIC|OMG|OMGWTF|R|SMOOSH|SRS|TIL|UPPIN|VISIBLE|WILE|WTF\\?|YA RLY|YR)(?=\\s|,|$)/,\n                lookbehind: true\n            },\n            /'Z(?=\\s|,|$)/\n        ],\n        boolean: {\n            pattern: /(^|\\s)(?:FAIL|WIN)(?=\\s|,|$)/,\n            lookbehind: true\n        },\n        variable: {\n            pattern: /(^|\\s)IT(?=\\s|,|$)/,\n            lookbehind: true\n        },\n        operator: {\n            pattern: /(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:ALL|ANY|BIGGR|BOTH|DIFF|EITHER|MOD|PRODUKT|QUOSHUNT|SMALLR|SUM|WON) OF)(?=\\s|,|$)/,\n            lookbehind: true\n        },\n        punctuation: /\\.{3}|…|,|!/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbG9sY29kZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxRQUFRQyxXQUFXLEdBQUc7QUFDdEJELFFBQVFFLE9BQU8sR0FBRyxFQUFFO0FBQ3BCLFNBQVNGLFFBQVFHLEtBQUs7SUFDcEJBLE1BQU1DLFNBQVMsQ0FBQ0osT0FBTyxHQUFHO1FBQ3hCSyxTQUFTO1lBQUM7WUFBNEI7U0FBVTtRQUNoREMsUUFBUTtZQUNOQyxTQUFTO1lBQ1RDLFFBQVE7Z0JBQ05DLFVBQVU7Z0JBQ1ZDLFFBQVE7b0JBQUM7b0JBQWtCO29CQUFlO2lCQUFXO1lBQ3ZEO1lBQ0FDLFFBQVE7UUFDVjtRQUNBQyxRQUFRO1FBQ1JGLFFBQVE7WUFDTkgsU0FBUztZQUNUTSxZQUFZO1lBQ1pMLFFBQVE7Z0JBQ05NLFNBQVM7WUFDWDtRQUNGO1FBQ0FDLE9BQU87WUFDTFIsU0FBUztZQUNUTSxZQUFZO1lBQ1pHLE9BQU87UUFDVDtRQUNBQyxVQUFVO1lBQ1JWLFNBQVM7WUFDVE0sWUFBWTtRQUNkO1FBQ0FDLFNBQVM7WUFDUDtnQkFDRVAsU0FDRTtnQkFDRk0sWUFBWTtZQUNkO1lBQ0E7U0FDRDtRQUNESyxTQUFTO1lBQ1BYLFNBQVM7WUFDVE0sWUFBWTtRQUNkO1FBQ0FKLFVBQVU7WUFDUkYsU0FBUztZQUNUTSxZQUFZO1FBQ2Q7UUFDQU0sVUFBVTtZQUNSWixTQUNFO1lBQ0ZNLFlBQVk7UUFDZDtRQUNBTyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9sb2xjb2RlLmpzP2RhNjciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gbG9sY29kZVxubG9sY29kZS5kaXNwbGF5TmFtZSA9ICdsb2xjb2RlJ1xubG9sY29kZS5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGxvbGNvZGUoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmxvbGNvZGUgPSB7XG4gICAgY29tbWVudDogWy9cXGJPQlRXXFxzW1xcc1xcU10qP1xcc1RMRFJcXGIvLCAvXFxiQlRXLisvXSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIig/OjoufFteXCI6XSkqXCIvLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHZhcmlhYmxlOiAvOlxce1tefV0rXFx9LyxcbiAgICAgICAgc3ltYm9sOiBbLzpcXChbYS1mXFxkXStcXCkvaSwgLzpcXFtbXlxcXV0rXFxdLywgLzpbKT5vXCI6XS9dXG4gICAgICB9LFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBudW1iZXI6IC8oPzpcXEItKT8oPzpcXGJcXGQrKD86XFwuXFxkKik/fFxcQlxcLlxcZCspLyxcbiAgICBzeW1ib2w6IHtcbiAgICAgIHBhdHRlcm46IC8oXnxcXHMpKD86QSApPyg/OkJVS0tJVHxOT09CfE5VTUJBUnxOVU1CUnxUUk9PRnxZQVJOKSg/PVxcc3wsfCQpLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAga2V5d29yZDogL0EoPz1cXHMpL1xuICAgICAgfVxuICAgIH0sXG4gICAgbGFiZWw6IHtcbiAgICAgIHBhdHRlcm46IC8oKD86XnxcXHMpKD86SU0gSU4gWVJ8SU0gT1VUVEEgWVIpIClbYS16QS1aXVxcdyovLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAnc3RyaW5nJ1xuICAgIH0sXG4gICAgZnVuY3Rpb246IHtcbiAgICAgIHBhdHRlcm46IC8oKD86XnxcXHMpKD86SE9XIElaIEl8SSBJWnxJWikgKVthLXpBLVpdXFx3Ki8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBrZXl3b3JkOiBbXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhefFxccykoPzpBTnxGT1VORCBZUnxHSU1NRUh8R1RGT3xIQUl8SEFTIEF8SE9XIElaIEl8SSBIQVMgQXxJIElafElGIFUgU0FZIFNPfElNIElOIFlSfElNIE9VVFRBIFlSfElTIE5PVyg/OiBBKT98SVRaKD86IEEpP3xJWnxLVEhYfEtUSFhCWUV8TElFSyg/OiBBKT98TUFFS3xNRUJCRXxNS0FZfE5FUkZJTnxOTyBXQUl8TyBIQUkgSU18TyBSTFlcXD98T0lDfE9NR3xPTUdXVEZ8UnxTTU9PU0h8U1JTfFRJTHxVUFBJTnxWSVNJQkxFfFdJTEV8V1RGXFw/fFlBIFJMWXxZUikoPz1cXHN8LHwkKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICAvJ1ooPz1cXHN8LHwkKS9cbiAgICBdLFxuICAgIGJvb2xlYW46IHtcbiAgICAgIHBhdHRlcm46IC8oXnxcXHMpKD86RkFJTHxXSU4pKD89XFxzfCx8JCkvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgdmFyaWFibGU6IHtcbiAgICAgIHBhdHRlcm46IC8oXnxcXHMpSVQoPz1cXHN8LHwkKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBvcGVyYXRvcjoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhefFxccykoPzpOT1R8Qk9USCBTQUVNfERJRkZSSU5UfCg/OkFMTHxBTll8QklHR1J8Qk9USHxESUZGfEVJVEhFUnxNT0R8UFJPRFVLVHxRVU9TSFVOVHxTTUFMTFJ8U1VNfFdPTikgT0YpKD89XFxzfCx8JCkvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgcHVuY3R1YXRpb246IC9cXC57M3184oCmfCx8IS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJsb2xjb2RlIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50Iiwic3RyaW5nIiwicGF0dGVybiIsImluc2lkZSIsInZhcmlhYmxlIiwic3ltYm9sIiwiZ3JlZWR5IiwibnVtYmVyIiwibG9va2JlaGluZCIsImtleXdvcmQiLCJsYWJlbCIsImFsaWFzIiwiZnVuY3Rpb24iLCJib29sZWFuIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/lolcode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/lua.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/lua.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = lua;\nlua.displayName = \"lua\";\nlua.aliases = [];\nfunction lua(Prism) {\n    Prism.languages.lua = {\n        comment: /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n        // \\z may be used to skip the following space\n        string: {\n            pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[^z]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n            greedy: true\n        },\n        number: /\\b0x[a-f\\d]+(?:\\.[a-f\\d]*)?(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|(?:\\.\\d*)?(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n        keyword: /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n        function: /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n        operator: [\n            /[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/,\n            {\n                // Match \"..\" but don't break \"...\"\n                pattern: /(^|[^.])\\.\\.(?!\\.)/,\n                lookbehind: true\n            }\n        ],\n        punctuation: /[\\[\\](){},;]|\\.+|:+/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbHVhLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLElBQUlDLFdBQVcsR0FBRztBQUNsQkQsSUFBSUUsT0FBTyxHQUFHLEVBQUU7QUFDaEIsU0FBU0YsSUFBSUcsS0FBSztJQUNoQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7UUFDVCw2Q0FBNkM7UUFDN0NDLFFBQVE7WUFDTkMsU0FDRTtZQUNGQyxRQUFRO1FBQ1Y7UUFDQUMsUUFDRTtRQUNGQyxTQUNFO1FBQ0ZDLFVBQVU7UUFDVkMsVUFBVTtZQUNSO1lBQ0E7Z0JBQ0UsbUNBQW1DO2dCQUNuQ0wsU0FBUztnQkFDVE0sWUFBWTtZQUNkO1NBQ0Q7UUFDREMsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbHVhLmpzPzY3MDAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gbHVhXG5sdWEuZGlzcGxheU5hbWUgPSAnbHVhJ1xubHVhLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gbHVhKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5sdWEgPSB7XG4gICAgY29tbWVudDogL14jIS4rfC0tKD86XFxbKD0qKVxcW1tcXHNcXFNdKj9cXF1cXDFcXF18LiopL20sXG4gICAgLy8gXFx6IG1heSBiZSB1c2VkIHRvIHNraXAgdGhlIGZvbGxvd2luZyBzcGFjZVxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhbXCInXSkoPzooPyFcXDEpW15cXFxcXFxyXFxuXXxcXFxceig/OlxcclxcbnxcXHMpfFxcXFwoPzpcXHJcXG58W156XSkpKlxcMXxcXFsoPSopXFxbW1xcc1xcU10qP1xcXVxcMlxcXS8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIG51bWJlcjpcbiAgICAgIC9cXGIweFthLWZcXGRdKyg/OlxcLlthLWZcXGRdKik/KD86cFsrLV0/XFxkKyk/XFxifFxcYlxcZCsoPzpcXC5cXEJ8KD86XFwuXFxkKik/KD86ZVsrLV0/XFxkKyk/XFxiKXxcXEJcXC5cXGQrKD86ZVsrLV0/XFxkKyk/XFxiL2ksXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzphbmR8YnJlYWt8ZG98ZWxzZXxlbHNlaWZ8ZW5kfGZhbHNlfGZvcnxmdW5jdGlvbnxnb3RvfGlmfGlufGxvY2FsfG5pbHxub3R8b3J8cmVwZWF0fHJldHVybnx0aGVufHRydWV8dW50aWx8d2hpbGUpXFxiLyxcbiAgICBmdW5jdGlvbjogLyg/IVxcZClcXHcrKD89XFxzKig/Olsoe10pKS8sXG4gICAgb3BlcmF0b3I6IFtcbiAgICAgIC9bLSsqJV4mfCNdfFxcL1xcLz98PFs8PV0/fD5bPj1dP3xbPX5dPT8vLFxuICAgICAge1xuICAgICAgICAvLyBNYXRjaCBcIi4uXCIgYnV0IGRvbid0IGJyZWFrIFwiLi4uXCJcbiAgICAgICAgcGF0dGVybjogLyhefFteLl0pXFwuXFwuKD8hXFwuKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH1cbiAgICBdLFxuICAgIHB1bmN0dWF0aW9uOiAvW1xcW1xcXSgpe30sO118XFwuK3w6Ky9cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJsdWEiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZ3JlZWR5IiwibnVtYmVyIiwia2V5d29yZCIsImZ1bmN0aW9uIiwib3BlcmF0b3IiLCJsb29rYmVoaW5kIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/lua.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/magma.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/magma.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = magma;\nmagma.displayName = \"magma\";\nmagma.aliases = [];\nfunction magma(Prism) {\n    Prism.languages.magma = {\n        output: {\n            pattern: /^(>.*(?:\\r(?:\\n|(?!\\n))|\\n))(?!>)(?:.+|(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)(?:(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)*/m,\n            lookbehind: true,\n            greedy: true\n        },\n        comment: {\n            pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n            greedy: true\n        },\n        string: {\n            pattern: /(^|[^\\\\\"])\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"/,\n            lookbehind: true,\n            greedy: true\n        },\n        // http://magma.maths.usyd.edu.au/magma/handbook/text/82\n        keyword: /\\b(?:_|adj|and|assert|assert2|assert3|assigned|break|by|case|cat|catch|clear|cmpeq|cmpne|continue|declare|default|delete|diff|div|do|elif|else|end|eq|error|eval|exists|exit|for|forall|forward|fprintf|freeze|function|ge|gt|if|iload|import|in|intrinsic|is|join|le|load|local|lt|meet|mod|ne|not|notadj|notin|notsubset|or|print|printf|procedure|quit|random|read|readi|repeat|require|requirege|requirerange|restore|return|save|sdiff|select|subset|then|time|to|try|until|vprint|vprintf|vtime|when|where|while|xor)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        generator: {\n            pattern: /\\b[a-z_]\\w*(?=\\s*<)/i,\n            alias: \"class-name\"\n        },\n        function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        number: {\n            pattern: /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\n            lookbehind: true\n        },\n        operator: /->|[-+*/^~!|#=]|:=|\\.\\./,\n        punctuation: /[()[\\]{}<>,;.:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbWFnbWEuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsTUFBTUMsV0FBVyxHQUFHO0FBQ3BCRCxNQUFNRSxPQUFPLEdBQUcsRUFBRTtBQUNsQixTQUFTRixNQUFNRyxLQUFLO0lBQ2xCQSxNQUFNQyxTQUFTLENBQUNKLEtBQUssR0FBRztRQUN0QkssUUFBUTtZQUNOQyxTQUNFO1lBQ0ZDLFlBQVk7WUFDWkMsUUFBUTtRQUNWO1FBQ0FDLFNBQVM7WUFDUEgsU0FBUztZQUNURSxRQUFRO1FBQ1Y7UUFDQUUsUUFBUTtZQUNOSixTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsUUFBUTtRQUNWO1FBQ0Esd0RBQXdEO1FBQ3hERyxTQUNFO1FBQ0ZDLFNBQVM7UUFDVEMsV0FBVztZQUNUUCxTQUFTO1lBQ1RRLE9BQU87UUFDVDtRQUNBQyxVQUFVO1FBQ1ZDLFFBQVE7WUFDTlYsU0FDRTtZQUNGQyxZQUFZO1FBQ2Q7UUFDQVUsVUFBVTtRQUNWQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9tYWdtYS5qcz9hNTRjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IG1hZ21hXG5tYWdtYS5kaXNwbGF5TmFtZSA9ICdtYWdtYSdcbm1hZ21hLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gbWFnbWEoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLm1hZ21hID0ge1xuICAgIG91dHB1dDoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL14oPi4qKD86XFxyKD86XFxufCg/IVxcbikpfFxcbikpKD8hPikoPzouK3woPzpcXHIoPzpcXG58KD8hXFxuKSl8XFxuKSg/IT4pLiopKD86KD86XFxyKD86XFxufCg/IVxcbikpfFxcbikoPyE+KS4qKSovbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC9cXC9cXC8uKnxcXC9cXCpbXFxzXFxTXSo/XFwqXFwvLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvKF58W15cXFxcXCJdKVwiKD86W15cXHJcXG5cXFxcXCJdfFxcXFwuKSpcIi8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICAvLyBodHRwOi8vbWFnbWEubWF0aHMudXN5ZC5lZHUuYXUvbWFnbWEvaGFuZGJvb2svdGV4dC84MlxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86X3xhZGp8YW5kfGFzc2VydHxhc3NlcnQyfGFzc2VydDN8YXNzaWduZWR8YnJlYWt8Ynl8Y2FzZXxjYXR8Y2F0Y2h8Y2xlYXJ8Y21wZXF8Y21wbmV8Y29udGludWV8ZGVjbGFyZXxkZWZhdWx0fGRlbGV0ZXxkaWZmfGRpdnxkb3xlbGlmfGVsc2V8ZW5kfGVxfGVycm9yfGV2YWx8ZXhpc3RzfGV4aXR8Zm9yfGZvcmFsbHxmb3J3YXJkfGZwcmludGZ8ZnJlZXplfGZ1bmN0aW9ufGdlfGd0fGlmfGlsb2FkfGltcG9ydHxpbnxpbnRyaW5zaWN8aXN8am9pbnxsZXxsb2FkfGxvY2FsfGx0fG1lZXR8bW9kfG5lfG5vdHxub3RhZGp8bm90aW58bm90c3Vic2V0fG9yfHByaW50fHByaW50Znxwcm9jZWR1cmV8cXVpdHxyYW5kb218cmVhZHxyZWFkaXxyZXBlYXR8cmVxdWlyZXxyZXF1aXJlZ2V8cmVxdWlyZXJhbmdlfHJlc3RvcmV8cmV0dXJufHNhdmV8c2RpZmZ8c2VsZWN0fHN1YnNldHx0aGVufHRpbWV8dG98dHJ5fHVudGlsfHZwcmludHx2cHJpbnRmfHZ0aW1lfHdoZW58d2hlcmV8d2hpbGV8eG9yKVxcYi8sXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiLyxcbiAgICBnZW5lcmF0b3I6IHtcbiAgICAgIHBhdHRlcm46IC9cXGJbYS16X11cXHcqKD89XFxzKjwpL2ksXG4gICAgICBhbGlhczogJ2NsYXNzLW5hbWUnXG4gICAgfSxcbiAgICBmdW5jdGlvbjogL1xcYlthLXpfXVxcdyooPz1cXHMqXFwoKS9pLFxuICAgIG51bWJlcjoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhefFteXFx3Ll18XFwuXFwuKSg/OlxcZCsoPzpcXC5cXGQqKT98XFwuXFxkKykoPzpbZUVdWystXT9cXGQrKT8oPzpfW2Etel0/KT8oPz0kfFteXFx3Ll18XFwuXFwuKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBvcGVyYXRvcjogLy0+fFstKyovXn4hfCM9XXw6PXxcXC5cXC4vLFxuICAgIHB1bmN0dWF0aW9uOiAvWygpW1xcXXt9PD4sOy46XS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJtYWdtYSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwib3V0cHV0IiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJncmVlZHkiLCJjb21tZW50Iiwic3RyaW5nIiwia2V5d29yZCIsImJvb2xlYW4iLCJnZW5lcmF0b3IiLCJhbGlhcyIsImZ1bmN0aW9uIiwibnVtYmVyIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/magma.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/makefile.js":
/*!*************************************************!*\
  !*** ./node_modules/refractor/lang/makefile.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = makefile;\nmakefile.displayName = \"makefile\";\nmakefile.aliases = [];\nfunction makefile(Prism) {\n    Prism.languages.makefile = {\n        comment: {\n            pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n            lookbehind: true\n        },\n        string: {\n            pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true\n        },\n        \"builtin-target\": {\n            pattern: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n            alias: \"builtin\"\n        },\n        target: {\n            pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n            alias: \"symbol\",\n            inside: {\n                variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n            }\n        },\n        variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n        // Directives\n        keyword: /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n        function: {\n            pattern: /(\\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \\t])/,\n            lookbehind: true\n        },\n        operator: /(?:::|[?:+!])?=|[|@]/,\n        punctuation: /[:;(){}]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbWFrZWZpbGUuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsU0FBU0MsV0FBVyxHQUFHO0FBQ3ZCRCxTQUFTRSxPQUFPLEdBQUcsRUFBRTtBQUNyQixTQUFTRixTQUFTRyxLQUFLO0lBQ3JCQSxNQUFNQyxTQUFTLENBQUNKLFFBQVEsR0FBRztRQUN6QkssU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFlBQVk7UUFDZDtRQUNBQyxRQUFRO1lBQ05GLFNBQVM7WUFDVEcsUUFBUTtRQUNWO1FBQ0Esa0JBQWtCO1lBQ2hCSCxTQUFTO1lBQ1RJLE9BQU87UUFDVDtRQUNBQyxRQUFRO1lBQ05MLFNBQVM7WUFDVEksT0FBTztZQUNQRSxRQUFRO2dCQUNOQyxVQUFVO1lBQ1o7UUFDRjtRQUNBQSxVQUFVO1FBQ1YsYUFBYTtRQUNiQyxTQUNFO1FBQ0ZDLFVBQVU7WUFDUlQsU0FDRTtZQUNGQyxZQUFZO1FBQ2Q7UUFDQVMsVUFBVTtRQUNWQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9tYWtlZmlsZS5qcz9jOWZjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IG1ha2VmaWxlXG5tYWtlZmlsZS5kaXNwbGF5TmFtZSA9ICdtYWtlZmlsZSdcbm1ha2VmaWxlLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gbWFrZWZpbGUoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLm1ha2VmaWxlID0ge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKSMoPzpcXFxcKD86XFxyXFxufFtcXHNcXFNdKXxbXlxcXFxcXHJcXG5dKSovLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvKFtcIiddKSg/OlxcXFwoPzpcXHJcXG58W1xcc1xcU10pfCg/IVxcMSlbXlxcXFxcXHJcXG5dKSpcXDEvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICAnYnVpbHRpbi10YXJnZXQnOiB7XG4gICAgICBwYXR0ZXJuOiAvXFwuW0EtWl1bXjojPVxcc10rKD89XFxzKjooPyE9KSkvLFxuICAgICAgYWxpYXM6ICdidWlsdGluJ1xuICAgIH0sXG4gICAgdGFyZ2V0OiB7XG4gICAgICBwYXR0ZXJuOiAvXig/OlteOj1cXHNdfFsgXFx0XSsoPyFbXFxzOl0pKSsoPz1cXHMqOig/IT0pKS9tLFxuICAgICAgYWxpYXM6ICdzeW1ib2wnLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHZhcmlhYmxlOiAvXFwkKyg/Oig/IVxcJClbXigpe306Iz1cXHNdK3woPz1bKHtdKSkvXG4gICAgICB9XG4gICAgfSxcbiAgICB2YXJpYWJsZTogL1xcJCsoPzooPyFcXCQpW14oKXt9OiM9XFxzXSt8XFwoW0AqJTxeKz9dW0RGXVxcKXwoPz1bKHtdKSkvLFxuICAgIC8vIERpcmVjdGl2ZXNcbiAgICBrZXl3b3JkOlxuICAgICAgLy1pbmNsdWRlXFxifFxcYig/OmRlZmluZXxlbHNlfGVuZGVmfGVuZGlmfGV4cG9ydHxpZm4/ZGVmfGlmbj9lcXxpbmNsdWRlfG92ZXJyaWRlfHByaXZhdGV8c2luY2x1ZGV8dW5kZWZpbmV8dW5leHBvcnR8dnBhdGgpXFxiLyxcbiAgICBmdW5jdGlvbjoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhcXCgpKD86YWJzcGF0aHxhZGRzdWZmaXh8YW5kfGJhc2VuYW1lfGNhbGx8ZGlyfGVycm9yfGV2YWx8ZmlsZXxmaWx0ZXIoPzotb3V0KT98ZmluZHN0cmluZ3xmaXJzdHdvcmR8Zmxhdm9yfGZvcmVhY2h8Z3VpbGV8aWZ8aW5mb3xqb2lufGxhc3R3b3JkfGxvYWR8bm90ZGlyfG9yfG9yaWdpbnxwYXRzdWJzdHxyZWFscGF0aHxzaGVsbHxzb3J0fHN0cmlwfHN1YnN0fHN1ZmZpeHx2YWx1ZXx3YXJuaW5nfHdpbGRjYXJkfHdvcmQoPzpsaXN0fHMpPykoPz1bIFxcdF0pLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIG9wZXJhdG9yOiAvKD86Ojp8Wz86KyFdKT89fFt8QF0vLFxuICAgIHB1bmN0dWF0aW9uOiAvWzo7KCl7fV0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwibWFrZWZpbGUiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsInN0cmluZyIsImdyZWVkeSIsImFsaWFzIiwidGFyZ2V0IiwiaW5zaWRlIiwidmFyaWFibGUiLCJrZXl3b3JkIiwiZnVuY3Rpb24iLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/makefile.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/markdown.js":
/*!*************************************************!*\
  !*** ./node_modules/refractor/lang/markdown.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = markdown;\nmarkdown.displayName = \"markdown\";\nmarkdown.aliases = [\n    \"md\"\n];\nfunction markdown(Prism) {\n    ;\n    (function(Prism) {\n        // Allow only one line break\n        var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source;\n        /**\n     * This function is intended for the creation of the bold or italic pattern.\n     *\n     * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n     *\n     * _Note:_ Keep in mind that this adds a capturing group.\n     *\n     * @param {string} pattern\n     * @returns {RegExp}\n     */ function createInline(pattern) {\n            pattern = pattern.replace(/<inner>/g, function() {\n                return inner;\n            });\n            return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + \"(?:\" + pattern + \")\");\n        }\n        var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n        var tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function() {\n            return tableCell;\n        });\n        var tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source;\n        Prism.languages.markdown = Prism.languages.extend(\"markup\", {});\n        Prism.languages.insertBefore(\"markdown\", \"prolog\", {\n            \"front-matter-block\": {\n                pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    punctuation: /^---|---$/,\n                    \"front-matter\": {\n                        pattern: /\\S+(?:\\s+\\S+)*/,\n                        alias: [\n                            \"yaml\",\n                            \"language-yaml\"\n                        ],\n                        inside: Prism.languages.yaml\n                    }\n                }\n            },\n            blockquote: {\n                // > ...\n                pattern: /^>(?:[\\t ]*>)*/m,\n                alias: \"punctuation\"\n            },\n            table: {\n                pattern: RegExp(\"^\" + tableRow + tableLine + \"(?:\" + tableRow + \")*\", \"m\"),\n                inside: {\n                    \"table-data-rows\": {\n                        pattern: RegExp(\"^(\" + tableRow + tableLine + \")(?:\" + tableRow + \")*$\"),\n                        lookbehind: true,\n                        inside: {\n                            \"table-data\": {\n                                pattern: RegExp(tableCell),\n                                inside: Prism.languages.markdown\n                            },\n                            punctuation: /\\|/\n                        }\n                    },\n                    \"table-line\": {\n                        pattern: RegExp(\"^(\" + tableRow + \")\" + tableLine + \"$\"),\n                        lookbehind: true,\n                        inside: {\n                            punctuation: /\\||:?-{3,}:?/\n                        }\n                    },\n                    \"table-header-row\": {\n                        pattern: RegExp(\"^\" + tableRow + \"$\"),\n                        inside: {\n                            \"table-header\": {\n                                pattern: RegExp(tableCell),\n                                alias: \"important\",\n                                inside: Prism.languages.markdown\n                            },\n                            punctuation: /\\|/\n                        }\n                    }\n                }\n            },\n            code: [\n                {\n                    // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n                    pattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n                    lookbehind: true,\n                    alias: \"keyword\"\n                },\n                {\n                    // ```optional language\n                    // code block\n                    // ```\n                    pattern: /^```[\\s\\S]*?^```$/m,\n                    greedy: true,\n                    inside: {\n                        \"code-block\": {\n                            pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n                            lookbehind: true\n                        },\n                        \"code-language\": {\n                            pattern: /^(```).+/,\n                            lookbehind: true\n                        },\n                        punctuation: /```/\n                    }\n                }\n            ],\n            title: [\n                {\n                    // title 1\n                    // =======\n                    // title 2\n                    // -------\n                    pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n                    alias: \"important\",\n                    inside: {\n                        punctuation: /==+$|--+$/\n                    }\n                },\n                {\n                    // # title 1\n                    // ###### title 6\n                    pattern: /(^\\s*)#.+/m,\n                    lookbehind: true,\n                    alias: \"important\",\n                    inside: {\n                        punctuation: /^#+|#+$/\n                    }\n                }\n            ],\n            hr: {\n                // ***\n                // ---\n                // * * *\n                // -----------\n                pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n                lookbehind: true,\n                alias: \"punctuation\"\n            },\n            list: {\n                // * item\n                // + item\n                // - item\n                // 1. item\n                pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n                lookbehind: true,\n                alias: \"punctuation\"\n            },\n            \"url-reference\": {\n                // [id]: http://example.com \"Optional title\"\n                // [id]: http://example.com 'Optional title'\n                // [id]: http://example.com (Optional title)\n                // [id]: <http://example.com> \"Optional title\"\n                pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n                inside: {\n                    variable: {\n                        pattern: /^(!?\\[)[^\\]]+/,\n                        lookbehind: true\n                    },\n                    string: /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n                    punctuation: /^[\\[\\]!:]|[<>]/\n                },\n                alias: \"url\"\n            },\n            bold: {\n                // **strong**\n                // __strong__\n                // allow one nested instance of italic text using the same delimiter\n                pattern: createInline(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    content: {\n                        pattern: /(^..)[\\s\\S]+(?=..$)/,\n                        lookbehind: true,\n                        inside: {} // see below\n                    },\n                    punctuation: /\\*\\*|__/\n                }\n            },\n            italic: {\n                // *em*\n                // _em_\n                // allow one nested instance of bold text using the same delimiter\n                pattern: createInline(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    content: {\n                        pattern: /(^.)[\\s\\S]+(?=.$)/,\n                        lookbehind: true,\n                        inside: {} // see below\n                    },\n                    punctuation: /[*_]/\n                }\n            },\n            strike: {\n                // ~~strike through~~\n                // ~strike~\n                // eslint-disable-next-line regexp/strict\n                pattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    content: {\n                        pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n                        lookbehind: true,\n                        inside: {} // see below\n                    },\n                    punctuation: /~~?/\n                }\n            },\n            \"code-snippet\": {\n                // `code`\n                // ``code``\n                pattern: /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n                lookbehind: true,\n                greedy: true,\n                alias: [\n                    \"code\",\n                    \"keyword\"\n                ]\n            },\n            url: {\n                // [example](http://example.com \"Optional title\")\n                // [example][id]\n                // [example] [id]\n                pattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    operator: /^!/,\n                    content: {\n                        pattern: /(^\\[)[^\\]]+(?=\\])/,\n                        lookbehind: true,\n                        inside: {} // see below\n                    },\n                    variable: {\n                        pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n                        lookbehind: true\n                    },\n                    url: {\n                        pattern: /(^\\]\\()[^\\s)]+/,\n                        lookbehind: true\n                    },\n                    string: {\n                        pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n                        lookbehind: true\n                    }\n                }\n            }\n        });\n        [\n            \"url\",\n            \"bold\",\n            \"italic\",\n            \"strike\"\n        ].forEach(function(token) {\n            ;\n            [\n                \"url\",\n                \"bold\",\n                \"italic\",\n                \"strike\",\n                \"code-snippet\"\n            ].forEach(function(inside) {\n                if (token !== inside) {\n                    Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n                }\n            });\n        });\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            if (env.language !== \"markdown\" && env.language !== \"md\") {\n                return;\n            }\n            function walkTokens(tokens) {\n                if (!tokens || typeof tokens === \"string\") {\n                    return;\n                }\n                for(var i = 0, l = tokens.length; i < l; i++){\n                    var token = tokens[i];\n                    if (token.type !== \"code\") {\n                        walkTokens(token.content);\n                        continue;\n                    }\n                    /*\n           * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n           * is optional. But the grammar is defined so that there is only one case we have to handle:\n           *\n           * token.content = [\n           *     <span class=\"punctuation\">```</span>,\n           *     <span class=\"code-language\">xxxx</span>,\n           *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n           *     <span class=\"code-block\">...</span>,\n           *     '\\n', // exactly one new lines again\n           *     <span class=\"punctuation\">```</span>\n           * ];\n           */ var codeLang = token.content[1];\n                    var codeBlock = token.content[3];\n                    if (codeLang && codeBlock && codeLang.type === \"code-language\" && codeBlock.type === \"code-block\" && typeof codeLang.content === \"string\") {\n                        // this might be a language that Prism does not support\n                        // do some replacements to support C++, C#, and F#\n                        var lang = codeLang.content.replace(/\\b#/g, \"sharp\").replace(/\\b\\+\\+/g, \"pp\") // only use the first word\n                        ;\n                        lang = (/[a-z][\\w-]*/i.exec(lang) || [\n                            \"\"\n                        ])[0].toLowerCase();\n                        var alias = \"language-\" + lang // add alias\n                        ;\n                        if (!codeBlock.alias) {\n                            codeBlock.alias = [\n                                alias\n                            ];\n                        } else if (typeof codeBlock.alias === \"string\") {\n                            codeBlock.alias = [\n                                codeBlock.alias,\n                                alias\n                            ];\n                        } else {\n                            codeBlock.alias.push(alias);\n                        }\n                    }\n                }\n            }\n            walkTokens(env.tokens);\n        });\n        Prism.hooks.add(\"wrap\", function(env) {\n            if (env.type !== \"code-block\") {\n                return;\n            }\n            var codeLang = \"\";\n            for(var i = 0, l = env.classes.length; i < l; i++){\n                var cls = env.classes[i];\n                var match = /language-(.+)/.exec(cls);\n                if (match) {\n                    codeLang = match[1];\n                    break;\n                }\n            }\n            var grammar = Prism.languages[codeLang];\n            if (!grammar) {\n                if (codeLang && codeLang !== \"none\" && Prism.plugins.autoloader) {\n                    var id = \"md-\" + new Date().valueOf() + \"-\" + Math.floor(Math.random() * 1e16);\n                    env.attributes[\"id\"] = id;\n                    Prism.plugins.autoloader.loadLanguages(codeLang, function() {\n                        var ele = document.getElementById(id);\n                        if (ele) {\n                            ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n                        }\n                    });\n                }\n            } else {\n                env.content = Prism.highlight(textContent(env.content.value), grammar, codeLang);\n            }\n        });\n        var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, \"gi\");\n        /**\n     * A list of known entity names.\n     *\n     * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n     *\n     * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n     */ var KNOWN_ENTITY_NAMES = {\n            amp: \"&\",\n            lt: \"<\",\n            gt: \">\",\n            quot: '\"'\n        } // IE 11 doesn't support `String.fromCodePoint`\n        ;\n        var fromCodePoint = String.fromCodePoint || String.fromCharCode;\n        /**\n     * Returns the text content of a given HTML source code string.\n     *\n     * @param {string} html\n     * @returns {string}\n     */ function textContent(html) {\n            // remove all tags\n            var text = html.replace(tagPattern, \"\") // decode known entities\n            ;\n            text = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function(m, code) {\n                code = code.toLowerCase();\n                if (code[0] === \"#\") {\n                    var value;\n                    if (code[1] === \"x\") {\n                        value = parseInt(code.slice(2), 16);\n                    } else {\n                        value = Number(code.slice(1));\n                    }\n                    return fromCodePoint(value);\n                } else {\n                    var known = KNOWN_ENTITY_NAMES[code];\n                    if (known) {\n                        return known;\n                    } // unable to decode\n                    return m;\n                }\n            });\n            return text;\n        }\n        Prism.languages.md = Prism.languages.markdown;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/markdown.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/markup-templating.js":
/*!**********************************************************!*\
  !*** ./node_modules/refractor/lang/markup-templating.js ***!
  \**********************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = markupTemplating;\nmarkupTemplating.displayName = \"markupTemplating\";\nmarkupTemplating.aliases = [];\nfunction markupTemplating(Prism) {\n    ;\n    (function(Prism) {\n        /**\n     * Returns the placeholder for the given language id and index.\n     *\n     * @param {string} language\n     * @param {string|number} index\n     * @returns {string}\n     */ function getPlaceholder(language, index) {\n            return \"___\" + language.toUpperCase() + index + \"___\";\n        }\n        Object.defineProperties(Prism.languages[\"markup-templating\"] = {}, {\n            buildPlaceholders: {\n                /**\n         * Tokenize all inline templating expressions matching `placeholderPattern`.\n         *\n         * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n         * `true` will be replaced.\n         *\n         * @param {object} env The environment of the `before-tokenize` hook.\n         * @param {string} language The language id.\n         * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n         * @param {(match: string) => boolean} [replaceFilter]\n         */ value: function(env, language, placeholderPattern, replaceFilter) {\n                    if (env.language !== language) {\n                        return;\n                    }\n                    var tokenStack = env.tokenStack = [];\n                    env.code = env.code.replace(placeholderPattern, function(match) {\n                        if (typeof replaceFilter === \"function\" && !replaceFilter(match)) {\n                            return match;\n                        }\n                        var i = tokenStack.length;\n                        var placeholder // Check for existing strings\n                        ;\n                        while(env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1){\n                            ++i;\n                        } // Create a sparse array\n                        tokenStack[i] = match;\n                        return placeholder;\n                    }) // Switch the grammar to markup\n                    ;\n                    env.grammar = Prism.languages.markup;\n                }\n            },\n            tokenizePlaceholders: {\n                /**\n         * Replace placeholders with proper tokens after tokenizing.\n         *\n         * @param {object} env The environment of the `after-tokenize` hook.\n         * @param {string} language The language id.\n         */ value: function(env, language) {\n                    if (env.language !== language || !env.tokenStack) {\n                        return;\n                    } // Switch the grammar back\n                    env.grammar = Prism.languages[language];\n                    var j = 0;\n                    var keys = Object.keys(env.tokenStack);\n                    function walkTokens(tokens) {\n                        for(var i = 0; i < tokens.length; i++){\n                            // all placeholders are replaced already\n                            if (j >= keys.length) {\n                                break;\n                            }\n                            var token = tokens[i];\n                            if (typeof token === \"string\" || token.content && typeof token.content === \"string\") {\n                                var k = keys[j];\n                                var t = env.tokenStack[k];\n                                var s = typeof token === \"string\" ? token : token.content;\n                                var placeholder = getPlaceholder(language, k);\n                                var index = s.indexOf(placeholder);\n                                if (index > -1) {\n                                    ++j;\n                                    var before = s.substring(0, index);\n                                    var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), \"language-\" + language, t);\n                                    var after = s.substring(index + placeholder.length);\n                                    var replacement = [];\n                                    if (before) {\n                                        replacement.push.apply(replacement, walkTokens([\n                                            before\n                                        ]));\n                                    }\n                                    replacement.push(middle);\n                                    if (after) {\n                                        replacement.push.apply(replacement, walkTokens([\n                                            after\n                                        ]));\n                                    }\n                                    if (typeof token === \"string\") {\n                                        tokens.splice.apply(tokens, [\n                                            i,\n                                            1\n                                        ].concat(replacement));\n                                    } else {\n                                        token.content = replacement;\n                                    }\n                                }\n                            } else if (token.content) {\n                                walkTokens(token.content);\n                            }\n                        }\n                        return tokens;\n                    }\n                    walkTokens(env.tokens);\n                }\n            }\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/markup-templating.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/markup.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/markup.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = markup;\nmarkup.displayName = \"markup\";\nmarkup.aliases = [\n    \"html\",\n    \"mathml\",\n    \"svg\",\n    \"xml\",\n    \"ssml\",\n    \"atom\",\n    \"rss\"\n];\nfunction markup(Prism) {\n    Prism.languages.markup = {\n        comment: {\n            pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n            greedy: true\n        },\n        prolog: {\n            pattern: /<\\?[\\s\\S]+?\\?>/,\n            greedy: true\n        },\n        doctype: {\n            // https://www.w3.org/TR/xml/#NT-doctypedecl\n            pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n            greedy: true,\n            inside: {\n                \"internal-subset\": {\n                    pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n                    lookbehind: true,\n                    greedy: true,\n                    inside: null // see below\n                },\n                string: {\n                    pattern: /\"[^\"]*\"|'[^']*'/,\n                    greedy: true\n                },\n                punctuation: /^<!|>$|[[\\]]/,\n                \"doctype-tag\": /^DOCTYPE/i,\n                name: /[^\\s<>'\"]+/\n            }\n        },\n        cdata: {\n            pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n            greedy: true\n        },\n        tag: {\n            pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n            greedy: true,\n            inside: {\n                tag: {\n                    pattern: /^<\\/?[^\\s>\\/]+/,\n                    inside: {\n                        punctuation: /^<\\/?/,\n                        namespace: /^[^\\s>\\/:]+:/\n                    }\n                },\n                \"special-attr\": [],\n                \"attr-value\": {\n                    pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n                    inside: {\n                        punctuation: [\n                            {\n                                pattern: /^=/,\n                                alias: \"attr-equals\"\n                            },\n                            /\"|'/\n                        ]\n                    }\n                },\n                punctuation: /\\/?>/,\n                \"attr-name\": {\n                    pattern: /[^\\s>\\/]+/,\n                    inside: {\n                        namespace: /^[^\\s>\\/:]+:/\n                    }\n                }\n            }\n        },\n        entity: [\n            {\n                pattern: /&[\\da-z]{1,8};/i,\n                alias: \"named-entity\"\n            },\n            /&#x?[\\da-f]{1,8};/i\n        ]\n    };\n    Prism.languages.markup[\"tag\"].inside[\"attr-value\"].inside[\"entity\"] = Prism.languages.markup[\"entity\"];\n    Prism.languages.markup[\"doctype\"].inside[\"internal-subset\"].inside = Prism.languages.markup // Plugin to make entity title show the real entity, idea by Roman Komarov\n    ;\n    Prism.hooks.add(\"wrap\", function(env) {\n        if (env.type === \"entity\") {\n            env.attributes[\"title\"] = env.content.value.replace(/&amp;/, \"&\");\n        }\n    });\n    Object.defineProperty(Prism.languages.markup.tag, \"addInlined\", {\n        /**\n     * Adds an inlined language to markup.\n     *\n     * An example of an inlined language is CSS with `<style>` tags.\n     *\n     * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addInlined('style', 'css');\n     */ value: function addInlined(tagName, lang) {\n            var includedCdataInside = {};\n            includedCdataInside[\"language-\" + lang] = {\n                pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n                lookbehind: true,\n                inside: Prism.languages[lang]\n            };\n            includedCdataInside[\"cdata\"] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n            var inside = {\n                \"included-cdata\": {\n                    pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n                    inside: includedCdataInside\n                }\n            };\n            inside[\"language-\" + lang] = {\n                pattern: /[\\s\\S]+/,\n                inside: Prism.languages[lang]\n            };\n            var def = {};\n            def[tagName] = {\n                pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function() {\n                    return tagName;\n                }), \"i\"),\n                lookbehind: true,\n                greedy: true,\n                inside: inside\n            };\n            Prism.languages.insertBefore(\"markup\", \"cdata\", def);\n        }\n    });\n    Object.defineProperty(Prism.languages.markup.tag, \"addAttribute\", {\n        /**\n     * Adds an pattern to highlight languages embedded in HTML attributes.\n     *\n     * An example of an inlined language is CSS with `style` attributes.\n     *\n     * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addAttribute('style', 'css');\n     */ value: function(attrName, lang) {\n            Prism.languages.markup.tag.inside[\"special-attr\"].push({\n                pattern: RegExp(/(^|[\"'\\s])/.source + \"(?:\" + attrName + \")\" + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source, \"i\"),\n                lookbehind: true,\n                inside: {\n                    \"attr-name\": /^[^\\s=]+/,\n                    \"attr-value\": {\n                        pattern: /=[\\s\\S]+/,\n                        inside: {\n                            value: {\n                                pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n                                lookbehind: true,\n                                alias: [\n                                    lang,\n                                    \"language-\" + lang\n                                ],\n                                inside: Prism.languages[lang]\n                            },\n                            punctuation: [\n                                {\n                                    pattern: /^=/,\n                                    alias: \"attr-equals\"\n                                },\n                                /\"|'/\n                            ]\n                        }\n                    }\n                }\n            });\n        }\n    });\n    Prism.languages.html = Prism.languages.markup;\n    Prism.languages.mathml = Prism.languages.markup;\n    Prism.languages.svg = Prism.languages.markup;\n    Prism.languages.xml = Prism.languages.extend(\"markup\", {});\n    Prism.languages.ssml = Prism.languages.xml;\n    Prism.languages.atom = Prism.languages.xml;\n    Prism.languages.rss = Prism.languages.xml;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/markup.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/matlab.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/matlab.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = matlab;\nmatlab.displayName = \"matlab\";\nmatlab.aliases = [];\nfunction matlab(Prism) {\n    Prism.languages.matlab = {\n        comment: [\n            /%\\{[\\s\\S]*?\\}%/,\n            /%.+/\n        ],\n        string: {\n            pattern: /\\B'(?:''|[^'\\r\\n])*'/,\n            greedy: true\n        },\n        // FIXME We could handle imaginary numbers as a whole\n        number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n        keyword: /\\b(?:NaN|break|case|catch|continue|else|elseif|end|for|function|if|inf|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n        function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n        operator: /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n        punctuation: /\\.{3}|[.,;\\[\\](){}!]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbWF0bGFiLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLE9BQU9DLFdBQVcsR0FBRztBQUNyQkQsT0FBT0UsT0FBTyxHQUFHLEVBQUU7QUFDbkIsU0FBU0YsT0FBT0csS0FBSztJQUNuQkEsTUFBTUMsU0FBUyxDQUFDSixNQUFNLEdBQUc7UUFDdkJLLFNBQVM7WUFBQztZQUFrQjtTQUFNO1FBQ2xDQyxRQUFRO1lBQ05DLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0EscURBQXFEO1FBQ3JEQyxRQUFRO1FBQ1JDLFNBQ0U7UUFDRkMsVUFBVTtRQUNWQyxVQUFVO1FBQ1ZDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL21hdGxhYi5qcz80ZjFkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IG1hdGxhYlxubWF0bGFiLmRpc3BsYXlOYW1lID0gJ21hdGxhYidcbm1hdGxhYi5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIG1hdGxhYihQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMubWF0bGFiID0ge1xuICAgIGNvbW1lbnQ6IFsvJVxce1tcXHNcXFNdKj9cXH0lLywgLyUuKy9dLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1xcQicoPzonJ3xbXidcXHJcXG5dKSonLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgLy8gRklYTUUgV2UgY291bGQgaGFuZGxlIGltYWdpbmFyeSBudW1iZXJzIGFzIGEgd2hvbGVcbiAgICBudW1iZXI6IC8oPzpcXGJcXGQrKD86XFwuXFxkKik/fFxcQlxcLlxcZCspKD86W2VFXVsrLV0/XFxkKyk/KD86W2lqXSk/fFxcYltpal1cXGIvLFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86TmFOfGJyZWFrfGNhc2V8Y2F0Y2h8Y29udGludWV8ZWxzZXxlbHNlaWZ8ZW5kfGZvcnxmdW5jdGlvbnxpZnxpbmZ8b3RoZXJ3aXNlfHBhcmZvcnxwYXVzZXxwaXxyZXR1cm58c3dpdGNofHRyeXx3aGlsZSlcXGIvLFxuICAgIGZ1bmN0aW9uOiAvXFxiKD8hXFxkKVxcdysoPz1cXHMqXFwoKS8sXG4gICAgb3BlcmF0b3I6IC9cXC4/WypeXFwvXFxcXCddfFsrXFwtOkBdfFs8Pj1+XT0/fCYmP3xcXHxcXHw/LyxcbiAgICBwdW5jdHVhdGlvbjogL1xcLnszfXxbLiw7XFxbXFxdKCl7fSFdL1xuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIm1hdGxhYiIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJudW1iZXIiLCJrZXl3b3JkIiwiZnVuY3Rpb24iLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/matlab.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/maxscript.js":
/*!**************************************************!*\
  !*** ./node_modules/refractor/lang/maxscript.js ***!
  \**************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = maxscript;\nmaxscript.displayName = \"maxscript\";\nmaxscript.aliases = [];\nfunction maxscript(Prism) {\n    ;\n    (function(Prism) {\n        var keywords = /\\b(?:about|and|animate|as|at|attributes|by|case|catch|collect|continue|coordsys|do|else|exit|fn|for|from|function|global|if|in|local|macroscript|mapped|max|not|of|off|on|or|parameters|persistent|plugin|rcmenu|return|rollout|set|struct|then|throw|to|tool|try|undo|utility|when|where|while|with)\\b/i;\n        Prism.languages.maxscript = {\n            comment: {\n                pattern: /\\/\\*[\\s\\S]*?(?:\\*\\/|$)|--.*/,\n                greedy: true\n            },\n            string: {\n                pattern: /(^|[^\"\\\\@])(?:\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|@\"[^\"]*\")/,\n                lookbehind: true,\n                greedy: true\n            },\n            path: {\n                pattern: /\\$(?:[\\w/\\\\.*?]|'[^']*')*/,\n                greedy: true,\n                alias: \"string\"\n            },\n            \"function-call\": {\n                pattern: RegExp(\"((?:\" + // start of line\n                (/^/.source + \"|\" + // operators and other language constructs\n                /[;=<>+\\-*/^({\\[]/.source + \"|\" + // keywords as part of statements\n                /\\b(?:and|by|case|catch|collect|do|else|if|in|not|or|return|then|to|try|where|while|with)\\b/.source) + \")[ \t]*)\" + \"(?!\" + keywords.source + \")\" + /[a-z_]\\w*\\b/.source + \"(?=[ \t]*(?:\" + // variable\n                (\"(?!\" + keywords.source + \")\" + /[a-z_]/.source + \"|\" + // number\n                /\\d|-\\.?\\d/.source + \"|\" + // other expressions or literals\n                /[({'\"$@#?]/.source) + \"))\", \"im\"),\n                lookbehind: true,\n                greedy: true,\n                alias: \"function\"\n            },\n            \"function-definition\": {\n                pattern: /(\\b(?:fn|function)\\s+)\\w+\\b/i,\n                lookbehind: true,\n                alias: \"function\"\n            },\n            argument: {\n                pattern: /\\b[a-z_]\\w*(?=:)/i,\n                alias: \"attr-name\"\n            },\n            keyword: keywords,\n            boolean: /\\b(?:false|true)\\b/,\n            time: {\n                pattern: /(^|[^\\w.])(?:(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?[msft])+|\\d+:\\d+(?:\\.\\d*)?)(?![\\w.:])/,\n                lookbehind: true,\n                alias: \"number\"\n            },\n            number: [\n                {\n                    pattern: /(^|[^\\w.])(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?|0x[a-fA-F0-9]+)(?![\\w.:])/,\n                    lookbehind: true\n                },\n                /\\b(?:e|pi)\\b/\n            ],\n            constant: /\\b(?:dontcollect|ok|silentValue|undefined|unsupplied)\\b/,\n            color: {\n                pattern: /\\b(?:black|blue|brown|gray|green|orange|red|white|yellow)\\b/i,\n                alias: \"constant\"\n            },\n            operator: /[-+*/<>=!]=?|[&^?]|#(?!\\()/,\n            punctuation: /[()\\[\\]{}.:,;]|#(?=\\()|\\\\$/m\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbWF4c2NyaXB0LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLFVBQVVDLFdBQVcsR0FBRztBQUN4QkQsVUFBVUUsT0FBTyxHQUFHLEVBQUU7QUFDdEIsU0FBU0YsVUFBVUcsS0FBSzs7SUFDcEIsVUFBVUEsS0FBSztRQUNmLElBQUlDLFdBQ0Y7UUFDRkQsTUFBTUUsU0FBUyxDQUFDTCxTQUFTLEdBQUc7WUFDMUJNLFNBQVM7Z0JBQ1BDLFNBQVM7Z0JBQ1RDLFFBQVE7WUFDVjtZQUNBQyxRQUFRO2dCQUNORixTQUFTO2dCQUNURyxZQUFZO2dCQUNaRixRQUFRO1lBQ1Y7WUFDQUcsTUFBTTtnQkFDSkosU0FBUztnQkFDVEMsUUFBUTtnQkFDUkksT0FBTztZQUNUO1lBQ0EsaUJBQWlCO2dCQUNmTCxTQUFTTSxPQUNQLFNBQVMsZ0JBQWdCO2dCQUN0QixLQUFJQyxNQUFNLEdBQ1QsTUFBTSwwQ0FBMEM7Z0JBQ2hELG1CQUFtQkEsTUFBTSxHQUN6QixNQUFNLGlDQUFpQztnQkFDdkMsNkZBQ0dBLE1BQU0sSUFDWCxZQUNBLFFBQ0FWLFNBQVNVLE1BQU0sR0FDZixNQUNBLGNBQWNBLE1BQU0sR0FDcEIsZ0JBQWlCLFdBQVc7Z0JBQzNCLFNBQ0NWLFNBQVNVLE1BQU0sR0FDZixNQUNBLFNBQVNBLE1BQU0sR0FDZixNQUFNLFNBQVM7Z0JBQ2YsWUFBWUEsTUFBTSxHQUNsQixNQUFNLGdDQUFnQztnQkFDdEMsYUFBYUEsTUFBTSxJQUNyQixNQUNGO2dCQUVGSixZQUFZO2dCQUNaRixRQUFRO2dCQUNSSSxPQUFPO1lBQ1Q7WUFDQSx1QkFBdUI7Z0JBQ3JCTCxTQUFTO2dCQUNURyxZQUFZO2dCQUNaRSxPQUFPO1lBQ1Q7WUFDQUcsVUFBVTtnQkFDUlIsU0FBUztnQkFDVEssT0FBTztZQUNUO1lBQ0FJLFNBQVNaO1lBQ1RhLFNBQVM7WUFDVEMsTUFBTTtnQkFDSlgsU0FDRTtnQkFDRkcsWUFBWTtnQkFDWkUsT0FBTztZQUNUO1lBQ0FPLFFBQVE7Z0JBQ047b0JBQ0VaLFNBQ0U7b0JBQ0ZHLFlBQVk7Z0JBQ2Q7Z0JBQ0E7YUFDRDtZQUNEVSxVQUFVO1lBQ1ZDLE9BQU87Z0JBQ0xkLFNBQVM7Z0JBQ1RLLE9BQU87WUFDVDtZQUNBVSxVQUFVO1lBQ1ZDLGFBQWE7UUFDZjtJQUNGLEdBQUdwQjtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL21heHNjcmlwdC5qcz9lNzFiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IG1heHNjcmlwdFxubWF4c2NyaXB0LmRpc3BsYXlOYW1lID0gJ21heHNjcmlwdCdcbm1heHNjcmlwdC5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIG1heHNjcmlwdChQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIHZhciBrZXl3b3JkcyA9XG4gICAgICAvXFxiKD86YWJvdXR8YW5kfGFuaW1hdGV8YXN8YXR8YXR0cmlidXRlc3xieXxjYXNlfGNhdGNofGNvbGxlY3R8Y29udGludWV8Y29vcmRzeXN8ZG98ZWxzZXxleGl0fGZufGZvcnxmcm9tfGZ1bmN0aW9ufGdsb2JhbHxpZnxpbnxsb2NhbHxtYWNyb3NjcmlwdHxtYXBwZWR8bWF4fG5vdHxvZnxvZmZ8b258b3J8cGFyYW1ldGVyc3xwZXJzaXN0ZW50fHBsdWdpbnxyY21lbnV8cmV0dXJufHJvbGxvdXR8c2V0fHN0cnVjdHx0aGVufHRocm93fHRvfHRvb2x8dHJ5fHVuZG98dXRpbGl0eXx3aGVufHdoZXJlfHdoaWxlfHdpdGgpXFxiL2lcbiAgICBQcmlzbS5sYW5ndWFnZXMubWF4c2NyaXB0ID0ge1xuICAgICAgY29tbWVudDoge1xuICAgICAgICBwYXR0ZXJuOiAvXFwvXFwqW1xcc1xcU10qPyg/OlxcKlxcL3wkKXwtLS4qLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAgc3RyaW5nOiB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxbXlwiXFxcXEBdKSg/OlwiKD86W15cIlxcXFxdfFxcXFxbXFxzXFxTXSkqXCJ8QFwiW15cIl0qXCIpLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAgcGF0aDoge1xuICAgICAgICBwYXR0ZXJuOiAvXFwkKD86W1xcdy9cXFxcLio/XXwnW14nXSonKSovLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGFsaWFzOiAnc3RyaW5nJ1xuICAgICAgfSxcbiAgICAgICdmdW5jdGlvbi1jYWxsJzoge1xuICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoXG4gICAgICAgICAgJygoPzonICsgLy8gc3RhcnQgb2YgbGluZVxuICAgICAgICAgICAgKC9eLy5zb3VyY2UgK1xuICAgICAgICAgICAgICAnfCcgKyAvLyBvcGVyYXRvcnMgYW5kIG90aGVyIGxhbmd1YWdlIGNvbnN0cnVjdHNcbiAgICAgICAgICAgICAgL1s7PTw+K1xcLSovXih7XFxbXS8uc291cmNlICtcbiAgICAgICAgICAgICAgJ3wnICsgLy8ga2V5d29yZHMgYXMgcGFydCBvZiBzdGF0ZW1lbnRzXG4gICAgICAgICAgICAgIC9cXGIoPzphbmR8Ynl8Y2FzZXxjYXRjaHxjb2xsZWN0fGRvfGVsc2V8aWZ8aW58bm90fG9yfHJldHVybnx0aGVufHRvfHRyeXx3aGVyZXx3aGlsZXx3aXRoKVxcYi9cbiAgICAgICAgICAgICAgICAuc291cmNlKSArXG4gICAgICAgICAgICAnKVsgXFx0XSopJyArXG4gICAgICAgICAgICAnKD8hJyArXG4gICAgICAgICAgICBrZXl3b3Jkcy5zb3VyY2UgK1xuICAgICAgICAgICAgJyknICtcbiAgICAgICAgICAgIC9bYS16X11cXHcqXFxiLy5zb3VyY2UgK1xuICAgICAgICAgICAgJyg/PVsgXFx0XSooPzonICsgLy8gdmFyaWFibGVcbiAgICAgICAgICAgICgnKD8hJyArXG4gICAgICAgICAgICAgIGtleXdvcmRzLnNvdXJjZSArXG4gICAgICAgICAgICAgICcpJyArXG4gICAgICAgICAgICAgIC9bYS16X10vLnNvdXJjZSArXG4gICAgICAgICAgICAgICd8JyArIC8vIG51bWJlclxuICAgICAgICAgICAgICAvXFxkfC1cXC4/XFxkLy5zb3VyY2UgK1xuICAgICAgICAgICAgICAnfCcgKyAvLyBvdGhlciBleHByZXNzaW9ucyBvciBsaXRlcmFsc1xuICAgICAgICAgICAgICAvWyh7J1wiJEAjP10vLnNvdXJjZSkgK1xuICAgICAgICAgICAgJykpJyxcbiAgICAgICAgICAnaW0nXG4gICAgICAgICksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdmdW5jdGlvbidcbiAgICAgIH0sXG4gICAgICAnZnVuY3Rpb24tZGVmaW5pdGlvbic6IHtcbiAgICAgICAgcGF0dGVybjogLyhcXGIoPzpmbnxmdW5jdGlvbilcXHMrKVxcdytcXGIvaSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdmdW5jdGlvbidcbiAgICAgIH0sXG4gICAgICBhcmd1bWVudDoge1xuICAgICAgICBwYXR0ZXJuOiAvXFxiW2Etel9dXFx3Kig/PTopL2ksXG4gICAgICAgIGFsaWFzOiAnYXR0ci1uYW1lJ1xuICAgICAgfSxcbiAgICAgIGtleXdvcmQ6IGtleXdvcmRzLFxuICAgICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiLyxcbiAgICAgIHRpbWU6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKF58W15cXHcuXSkoPzooPzooPzpcXGQrKD86XFwuXFxkKik/fFxcLlxcZCspKD86W2VFZERdWystXVxcZCt8W0xQXSk/W21zZnRdKSt8XFxkKzpcXGQrKD86XFwuXFxkKik/KSg/IVtcXHcuOl0pLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdudW1iZXInXG4gICAgICB9LFxuICAgICAgbnVtYmVyOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgLyhefFteXFx3Ll0pKD86KD86XFxkKyg/OlxcLlxcZCopP3xcXC5cXGQrKSg/OltlRWREXVsrLV1cXGQrfFtMUF0pP3wweFthLWZBLUYwLTldKykoPyFbXFx3LjpdKS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICAvXFxiKD86ZXxwaSlcXGIvXG4gICAgICBdLFxuICAgICAgY29uc3RhbnQ6IC9cXGIoPzpkb250Y29sbGVjdHxva3xzaWxlbnRWYWx1ZXx1bmRlZmluZWR8dW5zdXBwbGllZClcXGIvLFxuICAgICAgY29sb3I6IHtcbiAgICAgICAgcGF0dGVybjogL1xcYig/OmJsYWNrfGJsdWV8YnJvd258Z3JheXxncmVlbnxvcmFuZ2V8cmVkfHdoaXRlfHllbGxvdylcXGIvaSxcbiAgICAgICAgYWxpYXM6ICdjb25zdGFudCdcbiAgICAgIH0sXG4gICAgICBvcGVyYXRvcjogL1stKyovPD49IV09P3xbJl4/XXwjKD8hXFwoKS8sXG4gICAgICBwdW5jdHVhdGlvbjogL1soKVxcW1xcXXt9LjosO118Iyg/PVxcKCl8XFxcXCQvbVxuICAgIH1cbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIm1heHNjcmlwdCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwia2V5d29yZHMiLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImdyZWVkeSIsInN0cmluZyIsImxvb2tiZWhpbmQiLCJwYXRoIiwiYWxpYXMiLCJSZWdFeHAiLCJzb3VyY2UiLCJhcmd1bWVudCIsImtleXdvcmQiLCJib29sZWFuIiwidGltZSIsIm51bWJlciIsImNvbnN0YW50IiwiY29sb3IiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/maxscript.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/mel.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/mel.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = mel;\nmel.displayName = \"mel\";\nmel.aliases = [];\nfunction mel(Prism) {\n    Prism.languages.mel = {\n        comment: /\\/\\/.*/,\n        code: {\n            pattern: /`(?:\\\\.|[^\\\\`\\r\\n])*`/,\n            greedy: true,\n            alias: \"italic\",\n            inside: {\n                delimiter: {\n                    pattern: /^`|`$/,\n                    alias: \"punctuation\"\n                } // See rest below\n            }\n        },\n        string: {\n            pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n            greedy: true\n        },\n        variable: /\\$\\w+/,\n        number: /\\b0x[\\da-fA-F]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+/,\n        flag: {\n            pattern: /-[^\\d\\W]\\w*/,\n            alias: \"operator\"\n        },\n        keyword: /\\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\\b/,\n        function: /\\b\\w+(?=\\()|\\b(?:CBG|HfAddAttractorToAS|HfAssignAS|HfBuildEqualMap|HfBuildFurFiles|HfBuildFurImages|HfCancelAFR|HfConnectASToHF|HfCreateAttractor|HfDeleteAS|HfEditAS|HfPerformCreateAS|HfRemoveAttractorFromAS|HfSelectAttached|HfSelectAttractors|HfUnAssignAS|Mayatomr|about|abs|addAttr|addAttributeEditorNodeHelp|addDynamic|addNewShelfTab|addPP|addPanelCategory|addPrefixToName|advanceToNextDrivenKey|affectedNet|affects|aimConstraint|air|alias|aliasAttr|align|alignCtx|alignCurve|alignSurface|allViewFit|ambientLight|angle|angleBetween|animCone|animCurveEditor|animDisplay|animView|annotate|appendStringArray|applicationName|applyAttrPreset|applyTake|arcLenDimContext|arcLengthDimension|arclen|arrayMapper|art3dPaintCtx|artAttrCtx|artAttrPaintVertexCtx|artAttrSkinPaintCtx|artAttrTool|artBuildPaintMenu|artFluidAttrCtx|artPuttyCtx|artSelectCtx|artSetPaintCtx|artUserPaintCtx|assignCommand|assignInputDevice|assignViewportFactories|attachCurve|attachDeviceAttr|attachSurface|attrColorSliderGrp|attrCompatibility|attrControlGrp|attrEnumOptionMenu|attrEnumOptionMenuGrp|attrFieldGrp|attrFieldSliderGrp|attrNavigationControlGrp|attrPresetEditWin|attributeExists|attributeInfo|attributeMenu|attributeQuery|autoKeyframe|autoPlace|bakeClip|bakeFluidShading|bakePartialHistory|bakeResults|bakeSimulation|basename|basenameEx|batchRender|bessel|bevel|bevelPlus|binMembership|bindSkin|blend2|blendShape|blendShapeEditor|blendShapePanel|blendTwoAttr|blindDataType|boneLattice|boundary|boxDollyCtx|boxZoomCtx|bufferCurve|buildBookmarkMenu|buildKeyframeMenu|button|buttonManip|cacheFile|cacheFileCombine|cacheFileMerge|cacheFileTrack|camera|cameraView|canCreateManip|canvas|capitalizeString|catch|catchQuiet|ceil|changeSubdivComponentDisplayLevel|changeSubdivRegion|channelBox|character|characterMap|characterOutlineEditor|characterize|chdir|checkBox|checkBoxGrp|checkDefaultRenderGlobals|choice|circle|circularFillet|clamp|clear|clearCache|clip|clipEditor|clipEditorCurrentTimeCtx|clipSchedule|clipSchedulerOutliner|clipTrimBefore|closeCurve|closeSurface|cluster|cmdFileOutput|cmdScrollFieldExecuter|cmdScrollFieldReporter|cmdShell|coarsenSubdivSelectionList|collision|color|colorAtPoint|colorEditor|colorIndex|colorIndexSliderGrp|colorSliderButtonGrp|colorSliderGrp|columnLayout|commandEcho|commandLine|commandPort|compactHairSystem|componentEditor|compositingInterop|computePolysetVolume|condition|cone|confirmDialog|connectAttr|connectControl|connectDynamic|connectJoint|connectionInfo|constrain|constrainValue|constructionHistory|container|containsMultibyte|contextInfo|control|convertFromOldLayers|convertIffToPsd|convertLightmap|convertSolidTx|convertTessellation|convertUnit|copyArray|copyFlexor|copyKey|copySkinWeights|cos|cpButton|cpCache|cpClothSet|cpCollision|cpConstraint|cpConvClothToMesh|cpForces|cpGetSolverAttr|cpPanel|cpProperty|cpRigidCollisionFilter|cpSeam|cpSetEdit|cpSetSolverAttr|cpSolver|cpSolverTypes|cpTool|cpUpdateClothUVs|createDisplayLayer|createDrawCtx|createEditor|createLayeredPsdFile|createMotionField|createNewShelf|createNode|createRenderLayer|createSubdivRegion|cross|crossProduct|ctxAbort|ctxCompletion|ctxEditMode|ctxTraverse|currentCtx|currentTime|currentTimeCtx|currentUnit|curve|curveAddPtCtx|curveCVCtx|curveEPCtx|curveEditorCtx|curveIntersect|curveMoveEPCtx|curveOnSurface|curveSketchCtx|cutKey|cycleCheck|cylinder|dagPose|date|defaultLightListCheckBox|defaultNavigation|defineDataServer|defineVirtualDevice|deformer|deg_to_rad|delete|deleteAttr|deleteShadingGroupsAndMaterials|deleteShelfTab|deleteUI|deleteUnusedBrushes|delrandstr|detachCurve|detachDeviceAttr|detachSurface|deviceEditor|devicePanel|dgInfo|dgdirty|dgeval|dgtimer|dimWhen|directKeyCtx|directionalLight|dirmap|dirname|disable|disconnectAttr|disconnectJoint|diskCache|displacementToPoly|displayAffected|displayColor|displayCull|displayLevelOfDetail|displayPref|displayRGBColor|displaySmoothness|displayStats|displayString|displaySurface|distanceDimContext|distanceDimension|doBlur|dolly|dollyCtx|dopeSheetEditor|dot|dotProduct|doubleProfileBirailSurface|drag|dragAttrContext|draggerContext|dropoffLocator|duplicate|duplicateCurve|duplicateSurface|dynCache|dynControl|dynExport|dynExpression|dynGlobals|dynPaintEditor|dynParticleCtx|dynPref|dynRelEdPanel|dynRelEditor|dynamicLoad|editAttrLimits|editDisplayLayerGlobals|editDisplayLayerMembers|editRenderLayerAdjustment|editRenderLayerGlobals|editRenderLayerMembers|editor|editorTemplate|effector|emit|emitter|enableDevice|encodeString|endString|endsWith|env|equivalent|equivalentTol|erf|error|eval|evalDeferred|evalEcho|event|exactWorldBoundingBox|exclusiveLightCheckBox|exec|executeForEachObject|exists|exp|expression|expressionEditorListen|extendCurve|extendSurface|extrude|fcheck|fclose|feof|fflush|fgetline|fgetword|file|fileBrowserDialog|fileDialog|fileExtension|fileInfo|filetest|filletCurve|filter|filterCurve|filterExpand|filterStudioImport|findAllIntersections|findAnimCurves|findKeyframe|findMenuItem|findRelatedSkinCluster|finder|firstParentOf|fitBspline|flexor|floatEq|floatField|floatFieldGrp|floatScrollBar|floatSlider|floatSlider2|floatSliderButtonGrp|floatSliderGrp|floor|flow|fluidCacheInfo|fluidEmitter|fluidVoxelInfo|flushUndo|fmod|fontDialog|fopen|formLayout|format|fprint|frameLayout|fread|freeFormFillet|frewind|fromNativePath|fwrite|gamma|gauss|geometryConstraint|getApplicationVersionAsFloat|getAttr|getClassification|getDefaultBrush|getFileList|getFluidAttr|getInputDeviceRange|getMayaPanelTypes|getModifiers|getPanel|getParticleAttr|getPluginResource|getenv|getpid|glRender|glRenderEditor|globalStitch|gmatch|goal|gotoBindPose|grabColor|gradientControl|gradientControlNoAttr|graphDollyCtx|graphSelectContext|graphTrackCtx|gravity|grid|gridLayout|group|groupObjectsByName|hardenPointCurve|hardware|hardwareRenderPanel|headsUpDisplay|headsUpMessage|help|helpLine|hermite|hide|hilite|hitTest|hotBox|hotkey|hotkeyCheck|hsv_to_rgb|hudButton|hudSlider|hudSliderButton|hwReflectionMap|hwRender|hwRenderLoad|hyperGraph|hyperPanel|hyperShade|hypot|iconTextButton|iconTextCheckBox|iconTextRadioButton|iconTextRadioCollection|iconTextScrollList|iconTextStaticLabel|ikHandle|ikHandleCtx|ikHandleDisplayScale|ikSolver|ikSplineHandleCtx|ikSystem|ikSystemInfo|ikfkDisplayMethod|illustratorCurves|image|imfPlugins|inheritTransform|insertJoint|insertJointCtx|insertKeyCtx|insertKnotCurve|insertKnotSurface|instance|instanceable|instancer|intField|intFieldGrp|intScrollBar|intSlider|intSliderGrp|interToUI|internalVar|intersect|iprEngine|isAnimCurve|isConnected|isDirty|isParentOf|isSameObject|isTrue|isValidObjectName|isValidString|isValidUiName|isolateSelect|itemFilter|itemFilterAttr|itemFilterRender|itemFilterType|joint|jointCluster|jointCtx|jointDisplayScale|jointLattice|keyTangent|keyframe|keyframeOutliner|keyframeRegionCurrentTimeCtx|keyframeRegionDirectKeyCtx|keyframeRegionDollyCtx|keyframeRegionInsertKeyCtx|keyframeRegionMoveKeyCtx|keyframeRegionScaleKeyCtx|keyframeRegionSelectKeyCtx|keyframeRegionSetKeyCtx|keyframeRegionTrackCtx|keyframeStats|lassoContext|lattice|latticeDeformKeyCtx|launch|launchImageEditor|layerButton|layeredShaderPort|layeredTexturePort|layout|layoutDialog|lightList|lightListEditor|lightListPanel|lightlink|lineIntersection|linearPrecision|linstep|listAnimatable|listAttr|listCameras|listConnections|listDeviceAttachments|listHistory|listInputDeviceAxes|listInputDeviceButtons|listInputDevices|listMenuAnnotation|listNodeTypes|listPanelCategories|listRelatives|listSets|listTransforms|listUnselected|listerEditor|loadFluid|loadNewShelf|loadPlugin|loadPluginLanguageResources|loadPrefObjects|localizedPanelLabel|lockNode|loft|log|longNameOf|lookThru|ls|lsThroughFilter|lsType|lsUI|mag|makeIdentity|makeLive|makePaintable|makeRoll|makeSingleSurface|makeTubeOn|makebot|manipMoveContext|manipMoveLimitsCtx|manipOptions|manipRotateContext|manipRotateLimitsCtx|manipScaleContext|manipScaleLimitsCtx|marker|match|max|memory|menu|menuBarLayout|menuEditor|menuItem|menuItemToShelf|menuSet|menuSetPref|messageLine|min|minimizeApp|mirrorJoint|modelCurrentTimeCtx|modelEditor|modelPanel|mouse|movIn|movOut|move|moveIKtoFK|moveKeyCtx|moveVertexAlongDirection|multiProfileBirailSurface|mute|nParticle|nameCommand|nameField|namespace|namespaceInfo|newPanelItems|newton|nodeCast|nodeIconButton|nodeOutliner|nodePreset|nodeType|noise|nonLinear|normalConstraint|normalize|nurbsBoolean|nurbsCopyUVSet|nurbsCube|nurbsEditUV|nurbsPlane|nurbsSelect|nurbsSquare|nurbsToPoly|nurbsToPolygonsPref|nurbsToSubdiv|nurbsToSubdivPref|nurbsUVSet|nurbsViewDirectionVector|objExists|objectCenter|objectLayer|objectType|objectTypeUI|obsoleteProc|oceanNurbsPreviewPlane|offsetCurve|offsetCurveOnSurface|offsetSurface|openGLExtension|openMayaPref|optionMenu|optionMenuGrp|optionVar|orbit|orbitCtx|orientConstraint|outlinerEditor|outlinerPanel|overrideModifier|paintEffectsDisplay|pairBlend|palettePort|paneLayout|panel|panelConfiguration|panelHistory|paramDimContext|paramDimension|paramLocator|parent|parentConstraint|particle|particleExists|particleInstancer|particleRenderInfo|partition|pasteKey|pathAnimation|pause|pclose|percent|performanceOptions|pfxstrokes|pickWalk|picture|pixelMove|planarSrf|plane|play|playbackOptions|playblast|plugAttr|plugNode|pluginInfo|pluginResourceUtil|pointConstraint|pointCurveConstraint|pointLight|pointMatrixMult|pointOnCurve|pointOnSurface|pointPosition|poleVectorConstraint|polyAppend|polyAppendFacetCtx|polyAppendVertex|polyAutoProjection|polyAverageNormal|polyAverageVertex|polyBevel|polyBlendColor|polyBlindData|polyBoolOp|polyBridgeEdge|polyCacheMonitor|polyCheck|polyChipOff|polyClipboard|polyCloseBorder|polyCollapseEdge|polyCollapseFacet|polyColorBlindData|polyColorDel|polyColorPerVertex|polyColorSet|polyCompare|polyCone|polyCopyUV|polyCrease|polyCreaseCtx|polyCreateFacet|polyCreateFacetCtx|polyCube|polyCut|polyCutCtx|polyCylinder|polyCylindricalProjection|polyDelEdge|polyDelFacet|polyDelVertex|polyDuplicateAndConnect|polyDuplicateEdge|polyEditUV|polyEditUVShell|polyEvaluate|polyExtrudeEdge|polyExtrudeFacet|polyExtrudeVertex|polyFlipEdge|polyFlipUV|polyForceUV|polyGeoSampler|polyHelix|polyInfo|polyInstallAction|polyLayoutUV|polyListComponentConversion|polyMapCut|polyMapDel|polyMapSew|polyMapSewMove|polyMergeEdge|polyMergeEdgeCtx|polyMergeFacet|polyMergeFacetCtx|polyMergeUV|polyMergeVertex|polyMirrorFace|polyMoveEdge|polyMoveFacet|polyMoveFacetUV|polyMoveUV|polyMoveVertex|polyNormal|polyNormalPerVertex|polyNormalizeUV|polyOptUvs|polyOptions|polyOutput|polyPipe|polyPlanarProjection|polyPlane|polyPlatonicSolid|polyPoke|polyPrimitive|polyPrism|polyProjection|polyPyramid|polyQuad|polyQueryBlindData|polyReduce|polySelect|polySelectConstraint|polySelectConstraintMonitor|polySelectCtx|polySelectEditCtx|polySeparate|polySetToFaceNormal|polySewEdge|polyShortestPathCtx|polySmooth|polySoftEdge|polySphere|polySphericalProjection|polySplit|polySplitCtx|polySplitEdge|polySplitRing|polySplitVertex|polyStraightenUVBorder|polySubdivideEdge|polySubdivideFacet|polyToSubdiv|polyTorus|polyTransfer|polyTriangulate|polyUVSet|polyUnite|polyWedgeFace|popen|popupMenu|pose|pow|preloadRefEd|print|progressBar|progressWindow|projFileViewer|projectCurve|projectTangent|projectionContext|projectionManip|promptDialog|propModCtx|propMove|psdChannelOutliner|psdEditTextureFile|psdExport|psdTextureFile|putenv|pwd|python|querySubdiv|quit|rad_to_deg|radial|radioButton|radioButtonGrp|radioCollection|radioMenuItemCollection|rampColorPort|rand|randomizeFollicles|randstate|rangeControl|readTake|rebuildCurve|rebuildSurface|recordAttr|recordDevice|redo|reference|referenceEdit|referenceQuery|refineSubdivSelectionList|refresh|refreshAE|registerPluginResource|rehash|reloadImage|removeJoint|removeMultiInstance|removePanelCategory|rename|renameAttr|renameSelectionList|renameUI|render|renderGlobalsNode|renderInfo|renderLayerButton|renderLayerParent|renderLayerPostProcess|renderLayerUnparent|renderManip|renderPartition|renderQualityNode|renderSettings|renderThumbnailUpdate|renderWindowEditor|renderWindowSelectContext|renderer|reorder|reorderDeformers|requires|reroot|resampleFluid|resetAE|resetPfxToPolyCamera|resetTool|resolutionNode|retarget|reverseCurve|reverseSurface|revolve|rgb_to_hsv|rigidBody|rigidSolver|roll|rollCtx|rootOf|rot|rotate|rotationInterpolation|roundConstantRadius|rowColumnLayout|rowLayout|runTimeCommand|runup|sampleImage|saveAllShelves|saveAttrPreset|saveFluid|saveImage|saveInitialState|saveMenu|savePrefObjects|savePrefs|saveShelf|saveToolSettings|scale|scaleBrushBrightness|scaleComponents|scaleConstraint|scaleKey|scaleKeyCtx|sceneEditor|sceneUIReplacement|scmh|scriptCtx|scriptEditorInfo|scriptJob|scriptNode|scriptTable|scriptToShelf|scriptedPanel|scriptedPanelType|scrollField|scrollLayout|sculpt|searchPathArray|seed|selLoadSettings|select|selectContext|selectCurveCV|selectKey|selectKeyCtx|selectKeyframeRegionCtx|selectMode|selectPref|selectPriority|selectType|selectedNodes|selectionConnection|separator|setAttr|setAttrEnumResource|setAttrMapping|setAttrNiceNameResource|setConstraintRestPosition|setDefaultShadingGroup|setDrivenKeyframe|setDynamic|setEditCtx|setEditor|setFluidAttr|setFocus|setInfinity|setInputDeviceMapping|setKeyCtx|setKeyPath|setKeyframe|setKeyframeBlendshapeTargetWts|setMenuMode|setNodeNiceNameResource|setNodeTypeFlag|setParent|setParticleAttr|setPfxToPolyCamera|setPluginResource|setProject|setStampDensity|setStartupMessage|setState|setToolTo|setUITemplate|setXformManip|sets|shadingConnection|shadingGeometryRelCtx|shadingLightRelCtx|shadingNetworkCompare|shadingNode|shapeCompare|shelfButton|shelfLayout|shelfTabLayout|shellField|shortNameOf|showHelp|showHidden|showManipCtx|showSelectionInTitle|showShadingGroupAttrEditor|showWindow|sign|simplify|sin|singleProfileBirailSurface|size|sizeBytes|skinCluster|skinPercent|smoothCurve|smoothTangentSurface|smoothstep|snap2to2|snapKey|snapMode|snapTogetherCtx|snapshot|soft|softMod|softModCtx|sort|sound|soundControl|source|spaceLocator|sphere|sphrand|spotLight|spotLightPreviewPort|spreadSheetEditor|spring|sqrt|squareSurface|srtContext|stackTrace|startString|startsWith|stitchAndExplodeShell|stitchSurface|stitchSurfacePoints|strcmp|stringArrayCatenate|stringArrayContains|stringArrayCount|stringArrayInsertAtIndex|stringArrayIntersector|stringArrayRemove|stringArrayRemoveAtIndex|stringArrayRemoveDuplicates|stringArrayRemoveExact|stringArrayToString|stringToStringArray|strip|stripPrefixFromName|stroke|subdAutoProjection|subdCleanTopology|subdCollapse|subdDuplicateAndConnect|subdEditUV|subdListComponentConversion|subdMapCut|subdMapSewMove|subdMatchTopology|subdMirror|subdToBlind|subdToPoly|subdTransferUVsToCache|subdiv|subdivCrease|subdivDisplaySmoothness|substitute|substituteAllString|substituteGeometry|substring|surface|surfaceSampler|surfaceShaderList|swatchDisplayPort|switchTable|symbolButton|symbolCheckBox|sysFile|system|tabLayout|tan|tangentConstraint|texLatticeDeformContext|texManipContext|texMoveContext|texMoveUVShellContext|texRotateContext|texScaleContext|texSelectContext|texSelectShortestPathCtx|texSmudgeUVContext|texWinToolCtx|text|textCurves|textField|textFieldButtonGrp|textFieldGrp|textManip|textScrollList|textToShelf|textureDisplacePlane|textureHairColor|texturePlacementContext|textureWindow|threadCount|threePointArcCtx|timeControl|timePort|timerX|toNativePath|toggle|toggleAxis|toggleWindowVisibility|tokenize|tokenizeList|tolerance|tolower|toolButton|toolCollection|toolDropped|toolHasOptions|toolPropertyWindow|torus|toupper|trace|track|trackCtx|transferAttributes|transformCompare|transformLimits|translator|trim|trunc|truncateFluidCache|truncateHairCache|tumble|tumbleCtx|turbulence|twoPointArcCtx|uiRes|uiTemplate|unassignInputDevice|undo|undoInfo|ungroup|uniform|unit|unloadPlugin|untangleUV|untitledFileName|untrim|upAxis|updateAE|userCtx|uvLink|uvSnapshot|validateShelfName|vectorize|view2dToolCtx|viewCamera|viewClipPlane|viewFit|viewHeadOn|viewLookAt|viewManip|viewPlace|viewSet|visor|volumeAxis|vortex|waitCursor|warning|webBrowser|webBrowserPrefs|whatIs|window|windowPref|wire|wireContext|workspace|wrinkle|wrinkleContext|writeTake|xbmLangPathList|xform)\\b/,\n        operator: [\n            /\\+[+=]?|-[-=]?|&&|\\|\\||[<>]=|[*\\/!=]=?|[%^]/,\n            {\n                // We don't want to match <<\n                pattern: /(^|[^<])<(?!<)/,\n                lookbehind: true\n            },\n            {\n                // We don't want to match >>\n                pattern: /(^|[^>])>(?!>)/,\n                lookbehind: true\n            }\n        ],\n        punctuation: /<<|>>|[.,:;?\\[\\](){}]/\n    };\n    Prism.languages.mel[\"code\"].inside.rest = Prism.languages.mel;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/mel.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/mermaid.js":
/*!************************************************!*\
  !*** ./node_modules/refractor/lang/mermaid.js ***!
  \************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = mermaid;\nmermaid.displayName = \"mermaid\";\nmermaid.aliases = [];\nfunction mermaid(Prism) {\n    Prism.languages.mermaid = {\n        comment: {\n            pattern: /%%.*/,\n            greedy: true\n        },\n        style: {\n            pattern: /^([ \\t]*(?:classDef|linkStyle|style)[ \\t]+[\\w$-]+[ \\t]+)\\w.*[^\\s;]/m,\n            lookbehind: true,\n            inside: {\n                property: /\\b\\w[\\w-]*(?=[ \\t]*:)/,\n                operator: /:/,\n                punctuation: /,/\n            }\n        },\n        \"inter-arrow-label\": {\n            pattern: /([^<>ox.=-])(?:-[-.]|==)(?![<>ox.=-])[ \\t]*(?:\"[^\"\\r\\n]*\"|[^\\s\".=-](?:[^\\r\\n.=-]*[^\\s.=-])?)[ \\t]*(?:\\.+->?|--+[->]|==+[=>])(?![<>ox.=-])/,\n            lookbehind: true,\n            greedy: true,\n            inside: {\n                arrow: {\n                    pattern: /(?:\\.+->?|--+[->]|==+[=>])$/,\n                    alias: \"operator\"\n                },\n                label: {\n                    pattern: /^([\\s\\S]{2}[ \\t]*)\\S(?:[\\s\\S]*\\S)?/,\n                    lookbehind: true,\n                    alias: \"property\"\n                },\n                \"arrow-head\": {\n                    pattern: /^\\S+/,\n                    alias: [\n                        \"arrow\",\n                        \"operator\"\n                    ]\n                }\n            }\n        },\n        arrow: [\n            // This might look complex but it really isn't.\n            // There are many possible arrows (see tests) and it's impossible to fit all of them into one pattern. The\n            // problem is that we only have one lookbehind per pattern. However, we cannot disallow too many arrow\n            // characters in the one lookbehind because that would create too many false negatives. So we have to split the\n            // arrows into different patterns.\n            {\n                // ER diagram\n                pattern: /(^|[^{}|o.-])[|}][|o](?:--|\\.\\.)[|o][|{](?![{}|o.-])/,\n                lookbehind: true,\n                alias: \"operator\"\n            },\n            {\n                // flow chart\n                // (?:==+|--+|-\\.*-)\n                pattern: /(^|[^<>ox.=-])(?:[<ox](?:==+|--+|-\\.*-)[>ox]?|(?:==+|--+|-\\.*-)[>ox]|===+|---+|-\\.+-)(?![<>ox.=-])/,\n                lookbehind: true,\n                alias: \"operator\"\n            },\n            {\n                // sequence diagram\n                pattern: /(^|[^<>()x-])(?:--?(?:>>|[x>)])(?![<>()x])|(?:<<|[x<(])--?(?!-))/,\n                lookbehind: true,\n                alias: \"operator\"\n            },\n            {\n                // class diagram\n                pattern: /(^|[^<>|*o.-])(?:[*o]--|--[*o]|<\\|?(?:--|\\.\\.)|(?:--|\\.\\.)\\|?>|--|\\.\\.)(?![<>|*o.-])/,\n                lookbehind: true,\n                alias: \"operator\"\n            }\n        ],\n        label: {\n            pattern: /(^|[^|<])\\|(?:[^\\r\\n\"|]|\"[^\"\\r\\n]*\")+\\|/,\n            lookbehind: true,\n            greedy: true,\n            alias: \"property\"\n        },\n        text: {\n            pattern: /(?:[(\\[{]+|\\b>)(?:[^\\r\\n\"()\\[\\]{}]|\"[^\"\\r\\n]*\")+(?:[)\\]}]+|>)/,\n            alias: \"string\"\n        },\n        string: {\n            pattern: /\"[^\"\\r\\n]*\"/,\n            greedy: true\n        },\n        annotation: {\n            pattern: /<<(?:abstract|choice|enumeration|fork|interface|join|service)>>|\\[\\[(?:choice|fork|join)\\]\\]/i,\n            alias: \"important\"\n        },\n        keyword: [\n            // This language has both case-sensitive and case-insensitive keywords\n            {\n                pattern: /(^[ \\t]*)(?:action|callback|class|classDef|classDiagram|click|direction|erDiagram|flowchart|gantt|gitGraph|graph|journey|link|linkStyle|pie|requirementDiagram|sequenceDiagram|stateDiagram|stateDiagram-v2|style|subgraph)(?![\\w$-])/m,\n                lookbehind: true,\n                greedy: true\n            },\n            {\n                pattern: /(^[ \\t]*)(?:activate|alt|and|as|autonumber|deactivate|else|end(?:[ \\t]+note)?|loop|opt|par|participant|rect|state|note[ \\t]+(?:over|(?:left|right)[ \\t]+of))(?![\\w$-])/im,\n                lookbehind: true,\n                greedy: true\n            }\n        ],\n        entity: /#[a-z0-9]+;/,\n        operator: {\n            pattern: /(\\w[ \\t]*)&(?=[ \\t]*\\w)|:::|:/,\n            lookbehind: true\n        },\n        punctuation: /[(){};]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbWVybWFpZC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxRQUFRQyxXQUFXLEdBQUc7QUFDdEJELFFBQVFFLE9BQU8sR0FBRyxFQUFFO0FBQ3BCLFNBQVNGLFFBQVFHLEtBQUs7SUFDcEJBLE1BQU1DLFNBQVMsQ0FBQ0osT0FBTyxHQUFHO1FBQ3hCSyxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FDLE9BQU87WUFDTEYsU0FDRTtZQUNGRyxZQUFZO1lBQ1pDLFFBQVE7Z0JBQ05DLFVBQVU7Z0JBQ1ZDLFVBQVU7Z0JBQ1ZDLGFBQWE7WUFDZjtRQUNGO1FBQ0EscUJBQXFCO1lBQ25CUCxTQUNFO1lBQ0ZHLFlBQVk7WUFDWkYsUUFBUTtZQUNSRyxRQUFRO2dCQUNOSSxPQUFPO29CQUNMUixTQUFTO29CQUNUUyxPQUFPO2dCQUNUO2dCQUNBQyxPQUFPO29CQUNMVixTQUFTO29CQUNURyxZQUFZO29CQUNaTSxPQUFPO2dCQUNUO2dCQUNBLGNBQWM7b0JBQ1pULFNBQVM7b0JBQ1RTLE9BQU87d0JBQUM7d0JBQVM7cUJBQVc7Z0JBQzlCO1lBQ0Y7UUFDRjtRQUNBRCxPQUFPO1lBQ0wsK0NBQStDO1lBQy9DLDBHQUEwRztZQUMxRyxzR0FBc0c7WUFDdEcsK0dBQStHO1lBQy9HLGtDQUFrQztZQUNsQztnQkFDRSxhQUFhO2dCQUNiUixTQUFTO2dCQUNURyxZQUFZO2dCQUNaTSxPQUFPO1lBQ1Q7WUFDQTtnQkFDRSxhQUFhO2dCQUNiLG9CQUFvQjtnQkFDcEJULFNBQ0U7Z0JBQ0ZHLFlBQVk7Z0JBQ1pNLE9BQU87WUFDVDtZQUNBO2dCQUNFLG1CQUFtQjtnQkFDbkJULFNBQ0U7Z0JBQ0ZHLFlBQVk7Z0JBQ1pNLE9BQU87WUFDVDtZQUNBO2dCQUNFLGdCQUFnQjtnQkFDaEJULFNBQ0U7Z0JBQ0ZHLFlBQVk7Z0JBQ1pNLE9BQU87WUFDVDtTQUNEO1FBQ0RDLE9BQU87WUFDTFYsU0FBUztZQUNURyxZQUFZO1lBQ1pGLFFBQVE7WUFDUlEsT0FBTztRQUNUO1FBQ0FFLE1BQU07WUFDSlgsU0FBUztZQUNUUyxPQUFPO1FBQ1Q7UUFDQUcsUUFBUTtZQUNOWixTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBWSxZQUFZO1lBQ1ZiLFNBQ0U7WUFDRlMsT0FBTztRQUNUO1FBQ0FLLFNBQVM7WUFDUCxzRUFBc0U7WUFDdEU7Z0JBQ0VkLFNBQ0U7Z0JBQ0ZHLFlBQVk7Z0JBQ1pGLFFBQVE7WUFDVjtZQUNBO2dCQUNFRCxTQUNFO2dCQUNGRyxZQUFZO2dCQUNaRixRQUFRO1lBQ1Y7U0FDRDtRQUNEYyxRQUFRO1FBQ1JULFVBQVU7WUFDUk4sU0FBUztZQUNURyxZQUFZO1FBQ2Q7UUFDQUksYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbWVybWFpZC5qcz9hZTIyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IG1lcm1haWRcbm1lcm1haWQuZGlzcGxheU5hbWUgPSAnbWVybWFpZCdcbm1lcm1haWQuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBtZXJtYWlkKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5tZXJtYWlkID0ge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC8lJS4qLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgc3R5bGU6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC9eKFsgXFx0XSooPzpjbGFzc0RlZnxsaW5rU3R5bGV8c3R5bGUpWyBcXHRdK1tcXHckLV0rWyBcXHRdKylcXHcuKlteXFxzO10vbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgcHJvcGVydHk6IC9cXGJcXHdbXFx3LV0qKD89WyBcXHRdKjopLyxcbiAgICAgICAgb3BlcmF0b3I6IC86LyxcbiAgICAgICAgcHVuY3R1YXRpb246IC8sL1xuICAgICAgfVxuICAgIH0sXG4gICAgJ2ludGVyLWFycm93LWxhYmVsJzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhbXjw+b3guPS1dKSg/Oi1bLS5dfD09KSg/IVs8Pm94Lj0tXSlbIFxcdF0qKD86XCJbXlwiXFxyXFxuXSpcInxbXlxcc1wiLj0tXSg/OlteXFxyXFxuLj0tXSpbXlxccy49LV0pPylbIFxcdF0qKD86XFwuKy0+P3wtLStbLT5dfD09K1s9Pl0pKD8hWzw+b3guPS1dKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIGFycm93OiB7XG4gICAgICAgICAgcGF0dGVybjogLyg/OlxcListPj98LS0rWy0+XXw9PStbPT5dKSQvLFxuICAgICAgICAgIGFsaWFzOiAnb3BlcmF0b3InXG4gICAgICAgIH0sXG4gICAgICAgIGxhYmVsOiB7XG4gICAgICAgICAgcGF0dGVybjogL14oW1xcc1xcU117Mn1bIFxcdF0qKVxcUyg/OltcXHNcXFNdKlxcUyk/LyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGFsaWFzOiAncHJvcGVydHknXG4gICAgICAgIH0sXG4gICAgICAgICdhcnJvdy1oZWFkJzoge1xuICAgICAgICAgIHBhdHRlcm46IC9eXFxTKy8sXG4gICAgICAgICAgYWxpYXM6IFsnYXJyb3cnLCAnb3BlcmF0b3InXVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBhcnJvdzogW1xuICAgICAgLy8gVGhpcyBtaWdodCBsb29rIGNvbXBsZXggYnV0IGl0IHJlYWxseSBpc24ndC5cbiAgICAgIC8vIFRoZXJlIGFyZSBtYW55IHBvc3NpYmxlIGFycm93cyAoc2VlIHRlc3RzKSBhbmQgaXQncyBpbXBvc3NpYmxlIHRvIGZpdCBhbGwgb2YgdGhlbSBpbnRvIG9uZSBwYXR0ZXJuLiBUaGVcbiAgICAgIC8vIHByb2JsZW0gaXMgdGhhdCB3ZSBvbmx5IGhhdmUgb25lIGxvb2tiZWhpbmQgcGVyIHBhdHRlcm4uIEhvd2V2ZXIsIHdlIGNhbm5vdCBkaXNhbGxvdyB0b28gbWFueSBhcnJvd1xuICAgICAgLy8gY2hhcmFjdGVycyBpbiB0aGUgb25lIGxvb2tiZWhpbmQgYmVjYXVzZSB0aGF0IHdvdWxkIGNyZWF0ZSB0b28gbWFueSBmYWxzZSBuZWdhdGl2ZXMuIFNvIHdlIGhhdmUgdG8gc3BsaXQgdGhlXG4gICAgICAvLyBhcnJvd3MgaW50byBkaWZmZXJlbnQgcGF0dGVybnMuXG4gICAgICB7XG4gICAgICAgIC8vIEVSIGRpYWdyYW1cbiAgICAgICAgcGF0dGVybjogLyhefFtee318by4tXSlbfH1dW3xvXSg/Oi0tfFxcLlxcLilbfG9dW3x7XSg/IVt7fXxvLi1dKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiAnb3BlcmF0b3InXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAvLyBmbG93IGNoYXJ0XG4gICAgICAgIC8vICg/Oj09K3wtLSt8LVxcLiotKVxuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXnxbXjw+b3guPS1dKSg/Ols8b3hdKD86PT0rfC0tK3wtXFwuKi0pWz5veF0/fCg/Oj09K3wtLSt8LVxcLiotKVs+b3hdfD09PSt8LS0tK3wtXFwuKy0pKD8hWzw+b3guPS1dKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiAnb3BlcmF0b3InXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAvLyBzZXF1ZW5jZSBkaWFncmFtXG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhefFtePD4oKXgtXSkoPzotLT8oPzo+PnxbeD4pXSkoPyFbPD4oKXhdKXwoPzo8PHxbeDwoXSktLT8oPyEtKSkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogJ29wZXJhdG9yJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgLy8gY2xhc3MgZGlhZ3JhbVxuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXnxbXjw+fCpvLi1dKSg/Olsqb10tLXwtLVsqb118PFxcfD8oPzotLXxcXC5cXC4pfCg/Oi0tfFxcLlxcLilcXHw/PnwtLXxcXC5cXC4pKD8hWzw+fCpvLi1dKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiAnb3BlcmF0b3InXG4gICAgICB9XG4gICAgXSxcbiAgICBsYWJlbDoge1xuICAgICAgcGF0dGVybjogLyhefFtefDxdKVxcfCg/OlteXFxyXFxuXCJ8XXxcIlteXCJcXHJcXG5dKlwiKStcXHwvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGFsaWFzOiAncHJvcGVydHknXG4gICAgfSxcbiAgICB0ZXh0OiB7XG4gICAgICBwYXR0ZXJuOiAvKD86WyhcXFt7XSt8XFxiPikoPzpbXlxcclxcblwiKClcXFtcXF17fV18XCJbXlwiXFxyXFxuXSpcIikrKD86WylcXF19XSt8PikvLFxuICAgICAgYWxpYXM6ICdzdHJpbmcnXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIlteXCJcXHJcXG5dKlwiLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgYW5ub3RhdGlvbjoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLzw8KD86YWJzdHJhY3R8Y2hvaWNlfGVudW1lcmF0aW9ufGZvcmt8aW50ZXJmYWNlfGpvaW58c2VydmljZSk+PnxcXFtcXFsoPzpjaG9pY2V8Zm9ya3xqb2luKVxcXVxcXS9pLFxuICAgICAgYWxpYXM6ICdpbXBvcnRhbnQnXG4gICAgfSxcbiAgICBrZXl3b3JkOiBbXG4gICAgICAvLyBUaGlzIGxhbmd1YWdlIGhhcyBib3RoIGNhc2Utc2Vuc2l0aXZlIGFuZCBjYXNlLWluc2Vuc2l0aXZlIGtleXdvcmRzXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyheWyBcXHRdKikoPzphY3Rpb258Y2FsbGJhY2t8Y2xhc3N8Y2xhc3NEZWZ8Y2xhc3NEaWFncmFtfGNsaWNrfGRpcmVjdGlvbnxlckRpYWdyYW18Zmxvd2NoYXJ0fGdhbnR0fGdpdEdyYXBofGdyYXBofGpvdXJuZXl8bGlua3xsaW5rU3R5bGV8cGllfHJlcXVpcmVtZW50RGlhZ3JhbXxzZXF1ZW5jZURpYWdyYW18c3RhdGVEaWFncmFtfHN0YXRlRGlhZ3JhbS12MnxzdHlsZXxzdWJncmFwaCkoPyFbXFx3JC1dKS9tLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyheWyBcXHRdKikoPzphY3RpdmF0ZXxhbHR8YW5kfGFzfGF1dG9udW1iZXJ8ZGVhY3RpdmF0ZXxlbHNlfGVuZCg/OlsgXFx0XStub3RlKT98bG9vcHxvcHR8cGFyfHBhcnRpY2lwYW50fHJlY3R8c3RhdGV8bm90ZVsgXFx0XSsoPzpvdmVyfCg/OmxlZnR8cmlnaHQpWyBcXHRdK29mKSkoPyFbXFx3JC1dKS9pbSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9XG4gICAgXSxcbiAgICBlbnRpdHk6IC8jW2EtejAtOV0rOy8sXG4gICAgb3BlcmF0b3I6IHtcbiAgICAgIHBhdHRlcm46IC8oXFx3WyBcXHRdKikmKD89WyBcXHRdKlxcdyl8Ojo6fDovLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgcHVuY3R1YXRpb246IC9bKCl7fTtdL1xuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIm1lcm1haWQiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwiZ3JlZWR5Iiwic3R5bGUiLCJsb29rYmVoaW5kIiwiaW5zaWRlIiwicHJvcGVydHkiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIiwiYXJyb3ciLCJhbGlhcyIsImxhYmVsIiwidGV4dCIsInN0cmluZyIsImFubm90YXRpb24iLCJrZXl3b3JkIiwiZW50aXR5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/mermaid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/mizar.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/mizar.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = mizar;\nmizar.displayName = \"mizar\";\nmizar.aliases = [];\nfunction mizar(Prism) {\n    Prism.languages.mizar = {\n        comment: /::.+/,\n        keyword: /@proof\\b|\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|end|environ|equals|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:ies|y)|when|where|with|wrt)\\b/,\n        parameter: {\n            pattern: /\\$(?:10|\\d)/,\n            alias: \"variable\"\n        },\n        variable: /\\b\\w+(?=:)/,\n        number: /(?:\\b|-)\\d+\\b/,\n        operator: /\\.\\.\\.|->|&|\\.?=/,\n        punctuation: /\\(#|#\\)|[,:;\\[\\](){}]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbWl6YXIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsTUFBTUMsV0FBVyxHQUFHO0FBQ3BCRCxNQUFNRSxPQUFPLEdBQUcsRUFBRTtBQUNsQixTQUFTRixNQUFNRyxLQUFLO0lBQ2xCQSxNQUFNQyxTQUFTLENBQUNKLEtBQUssR0FBRztRQUN0QkssU0FBUztRQUNUQyxTQUNFO1FBQ0ZDLFdBQVc7WUFDVEMsU0FBUztZQUNUQyxPQUFPO1FBQ1Q7UUFDQUMsVUFBVTtRQUNWQyxRQUFRO1FBQ1JDLFVBQVU7UUFDVkMsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbWl6YXIuanM/ZjIyMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBtaXphclxubWl6YXIuZGlzcGxheU5hbWUgPSAnbWl6YXInXG5taXphci5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIG1pemFyKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5taXphciA9IHtcbiAgICBjb21tZW50OiAvOjouKy8sXG4gICAga2V5d29yZDpcbiAgICAgIC9AcHJvb2ZcXGJ8XFxiKD86YWNjb3JkaW5nfGFnZ3JlZ2F0ZXxhbGx8YW5kfGFudG9ueW18YXJlfGFzfGFzc29jaWF0aXZpdHl8YXNzdW1lfGFzeW1tZXRyeXxhdHRyfGJlfGJlZ2lufGJlaW5nfGJ5fGNhbmNlbGVkfGNhc2V8Y2FzZXN8Y2x1c3RlcnM/fGNvaGVyZW5jZXxjb21tdXRhdGl2aXR5fGNvbXBhdGliaWxpdHl8Y29ubmVjdGVkbmVzc3xjb25zaWRlcnxjb25zaXN0ZW5jeXxjb25zdHJ1Y3RvcnN8Y29udHJhZGljdGlvbnxjb3JyZWN0bmVzc3xkZWZ8ZGVmZnVuY3xkZWZpbmV8ZGVmaW5pdGlvbnM/fGRlZnByZWR8ZG98ZG9lc3xlbmR8ZW52aXJvbnxlcXVhbHN8ZXh8ZXhhY3RseXxleGlzdGVuY2V8Zm9yfGZyb218ZnVuY3xnaXZlbnxoZW5jZXxoZXJlYnl8aG9sZHN8aWRlbXBvdGVuY2V8aWRlbnRpdHl8aWZmP3xpbXBsaWVzfGludm9sdXRpdmVuZXNzfGlycmVmbGV4aXZpdHl8aXN8aXR8bGV0fG1lYW5zfG1vZGV8bm9ufG5vdHxub3RhdGlvbnM/fG5vd3xvZnxvcnxvdGhlcndpc2V8b3ZlcnxwZXJ8cHJlZHxwcmVmaXh8cHJvamVjdGl2aXR5fHByb29mfHByb3ZpZGVkfHF1YXxyZWNvbnNpZGVyfHJlZGVmaW5lfHJlZHVjZXxyZWR1Y2liaWxpdHl8cmVmbGV4aXZpdHl8cmVnaXN0cmF0aW9ucz98cmVxdWlyZW1lbnRzfHJlc2VydmV8c2NofHNjaGVtZXM/fHNlY3Rpb258c2VsZWN0b3J8c2V0fHNldGhvb2R8c3R8c3RydWN0fHN1Y2h8c3VwcG9zZXxzeW1tZXRyeXxzeW5vbnltfHRha2V8dGhhdHx0aGV8dGhlbnx0aGVvcmVtcz98dGhlc2lzfHRodXN8dG98dHJhbnNpdGl2aXR5fHVuaXF1ZW5lc3N8dm9jYWJ1bGFyKD86aWVzfHkpfHdoZW58d2hlcmV8d2l0aHx3cnQpXFxiLyxcbiAgICBwYXJhbWV0ZXI6IHtcbiAgICAgIHBhdHRlcm46IC9cXCQoPzoxMHxcXGQpLyxcbiAgICAgIGFsaWFzOiAndmFyaWFibGUnXG4gICAgfSxcbiAgICB2YXJpYWJsZTogL1xcYlxcdysoPz06KS8sXG4gICAgbnVtYmVyOiAvKD86XFxifC0pXFxkK1xcYi8sXG4gICAgb3BlcmF0b3I6IC9cXC5cXC5cXC58LT58JnxcXC4/PS8sXG4gICAgcHVuY3R1YXRpb246IC9cXCgjfCNcXCl8Wyw6O1xcW1xcXSgpe31dL1xuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIm1pemFyIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50Iiwia2V5d29yZCIsInBhcmFtZXRlciIsInBhdHRlcm4iLCJhbGlhcyIsInZhcmlhYmxlIiwibnVtYmVyIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/mizar.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/mongodb.js":
/*!************************************************!*\
  !*** ./node_modules/refractor/lang/mongodb.js ***!
  \************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = mongodb;\nmongodb.displayName = \"mongodb\";\nmongodb.aliases = [];\nfunction mongodb(Prism) {\n    ;\n    (function(Prism) {\n        var operators = [\n            // query and projection\n            \"$eq\",\n            \"$gt\",\n            \"$gte\",\n            \"$in\",\n            \"$lt\",\n            \"$lte\",\n            \"$ne\",\n            \"$nin\",\n            \"$and\",\n            \"$not\",\n            \"$nor\",\n            \"$or\",\n            \"$exists\",\n            \"$type\",\n            \"$expr\",\n            \"$jsonSchema\",\n            \"$mod\",\n            \"$regex\",\n            \"$text\",\n            \"$where\",\n            \"$geoIntersects\",\n            \"$geoWithin\",\n            \"$near\",\n            \"$nearSphere\",\n            \"$all\",\n            \"$elemMatch\",\n            \"$size\",\n            \"$bitsAllClear\",\n            \"$bitsAllSet\",\n            \"$bitsAnyClear\",\n            \"$bitsAnySet\",\n            \"$comment\",\n            \"$elemMatch\",\n            \"$meta\",\n            \"$slice\",\n            \"$currentDate\",\n            \"$inc\",\n            \"$min\",\n            \"$max\",\n            \"$mul\",\n            \"$rename\",\n            \"$set\",\n            \"$setOnInsert\",\n            \"$unset\",\n            \"$addToSet\",\n            \"$pop\",\n            \"$pull\",\n            \"$push\",\n            \"$pullAll\",\n            \"$each\",\n            \"$position\",\n            \"$slice\",\n            \"$sort\",\n            \"$bit\",\n            \"$addFields\",\n            \"$bucket\",\n            \"$bucketAuto\",\n            \"$collStats\",\n            \"$count\",\n            \"$currentOp\",\n            \"$facet\",\n            \"$geoNear\",\n            \"$graphLookup\",\n            \"$group\",\n            \"$indexStats\",\n            \"$limit\",\n            \"$listLocalSessions\",\n            \"$listSessions\",\n            \"$lookup\",\n            \"$match\",\n            \"$merge\",\n            \"$out\",\n            \"$planCacheStats\",\n            \"$project\",\n            \"$redact\",\n            \"$replaceRoot\",\n            \"$replaceWith\",\n            \"$sample\",\n            \"$set\",\n            \"$skip\",\n            \"$sort\",\n            \"$sortByCount\",\n            \"$unionWith\",\n            \"$unset\",\n            \"$unwind\",\n            \"$setWindowFields\",\n            \"$abs\",\n            \"$accumulator\",\n            \"$acos\",\n            \"$acosh\",\n            \"$add\",\n            \"$addToSet\",\n            \"$allElementsTrue\",\n            \"$and\",\n            \"$anyElementTrue\",\n            \"$arrayElemAt\",\n            \"$arrayToObject\",\n            \"$asin\",\n            \"$asinh\",\n            \"$atan\",\n            \"$atan2\",\n            \"$atanh\",\n            \"$avg\",\n            \"$binarySize\",\n            \"$bsonSize\",\n            \"$ceil\",\n            \"$cmp\",\n            \"$concat\",\n            \"$concatArrays\",\n            \"$cond\",\n            \"$convert\",\n            \"$cos\",\n            \"$dateFromParts\",\n            \"$dateToParts\",\n            \"$dateFromString\",\n            \"$dateToString\",\n            \"$dayOfMonth\",\n            \"$dayOfWeek\",\n            \"$dayOfYear\",\n            \"$degreesToRadians\",\n            \"$divide\",\n            \"$eq\",\n            \"$exp\",\n            \"$filter\",\n            \"$first\",\n            \"$floor\",\n            \"$function\",\n            \"$gt\",\n            \"$gte\",\n            \"$hour\",\n            \"$ifNull\",\n            \"$in\",\n            \"$indexOfArray\",\n            \"$indexOfBytes\",\n            \"$indexOfCP\",\n            \"$isArray\",\n            \"$isNumber\",\n            \"$isoDayOfWeek\",\n            \"$isoWeek\",\n            \"$isoWeekYear\",\n            \"$last\",\n            \"$last\",\n            \"$let\",\n            \"$literal\",\n            \"$ln\",\n            \"$log\",\n            \"$log10\",\n            \"$lt\",\n            \"$lte\",\n            \"$ltrim\",\n            \"$map\",\n            \"$max\",\n            \"$mergeObjects\",\n            \"$meta\",\n            \"$min\",\n            \"$millisecond\",\n            \"$minute\",\n            \"$mod\",\n            \"$month\",\n            \"$multiply\",\n            \"$ne\",\n            \"$not\",\n            \"$objectToArray\",\n            \"$or\",\n            \"$pow\",\n            \"$push\",\n            \"$radiansToDegrees\",\n            \"$range\",\n            \"$reduce\",\n            \"$regexFind\",\n            \"$regexFindAll\",\n            \"$regexMatch\",\n            \"$replaceOne\",\n            \"$replaceAll\",\n            \"$reverseArray\",\n            \"$round\",\n            \"$rtrim\",\n            \"$second\",\n            \"$setDifference\",\n            \"$setEquals\",\n            \"$setIntersection\",\n            \"$setIsSubset\",\n            \"$setUnion\",\n            \"$size\",\n            \"$sin\",\n            \"$slice\",\n            \"$split\",\n            \"$sqrt\",\n            \"$stdDevPop\",\n            \"$stdDevSamp\",\n            \"$strcasecmp\",\n            \"$strLenBytes\",\n            \"$strLenCP\",\n            \"$substr\",\n            \"$substrBytes\",\n            \"$substrCP\",\n            \"$subtract\",\n            \"$sum\",\n            \"$switch\",\n            \"$tan\",\n            \"$toBool\",\n            \"$toDate\",\n            \"$toDecimal\",\n            \"$toDouble\",\n            \"$toInt\",\n            \"$toLong\",\n            \"$toObjectId\",\n            \"$toString\",\n            \"$toLower\",\n            \"$toUpper\",\n            \"$trim\",\n            \"$trunc\",\n            \"$type\",\n            \"$week\",\n            \"$year\",\n            \"$zip\",\n            \"$count\",\n            \"$dateAdd\",\n            \"$dateDiff\",\n            \"$dateSubtract\",\n            \"$dateTrunc\",\n            \"$getField\",\n            \"$rand\",\n            \"$sampleRate\",\n            \"$setField\",\n            \"$unsetField\",\n            \"$comment\",\n            \"$explain\",\n            \"$hint\",\n            \"$max\",\n            \"$maxTimeMS\",\n            \"$min\",\n            \"$orderby\",\n            \"$query\",\n            \"$returnKey\",\n            \"$showDiskLoc\",\n            \"$natural\"\n        ];\n        var builtinFunctions = [\n            \"ObjectId\",\n            \"Code\",\n            \"BinData\",\n            \"DBRef\",\n            \"Timestamp\",\n            \"NumberLong\",\n            \"NumberDecimal\",\n            \"MaxKey\",\n            \"MinKey\",\n            \"RegExp\",\n            \"ISODate\",\n            \"UUID\"\n        ];\n        operators = operators.map(function(operator) {\n            return operator.replace(\"$\", \"\\\\$\");\n        });\n        var operatorsSource = \"(?:\" + operators.join(\"|\") + \")\\\\b\";\n        Prism.languages.mongodb = Prism.languages.extend(\"javascript\", {});\n        Prism.languages.insertBefore(\"mongodb\", \"string\", {\n            property: {\n                pattern: /(?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)(?=\\s*:)/,\n                greedy: true,\n                inside: {\n                    keyword: RegExp(\"^(['\\\"])?\" + operatorsSource + \"(?:\\\\1)?$\")\n                }\n            }\n        });\n        Prism.languages.mongodb.string.inside = {\n            url: {\n                // url pattern\n                pattern: /https?:\\/\\/[-\\w@:%.+~#=]{1,256}\\.[a-z0-9()]{1,6}\\b[-\\w()@:%+.~#?&/=]*/i,\n                greedy: true\n            },\n            entity: {\n                // ipv4\n                pattern: /\\b(?:(?:[01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d\\d?|2[0-4]\\d|25[0-5])\\b/,\n                greedy: true\n            }\n        };\n        Prism.languages.insertBefore(\"mongodb\", \"constant\", {\n            builtin: {\n                pattern: RegExp(\"\\\\b(?:\" + builtinFunctions.join(\"|\") + \")\\\\b\"),\n                alias: \"keyword\"\n            }\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/mongodb.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/monkey.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/monkey.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = monkey;\nmonkey.displayName = \"monkey\";\nmonkey.aliases = [];\nfunction monkey(Prism) {\n    Prism.languages.monkey = {\n        comment: {\n            pattern: /^#Rem\\s[\\s\\S]*?^#End|'.+/im,\n            greedy: true\n        },\n        string: {\n            pattern: /\"[^\"\\r\\n]*\"/,\n            greedy: true\n        },\n        preprocessor: {\n            pattern: /(^[ \\t]*)#.+/m,\n            lookbehind: true,\n            greedy: true,\n            alias: \"property\"\n        },\n        function: /\\b\\w+(?=\\()/,\n        \"type-char\": {\n            pattern: /\\b[?%#$]/,\n            alias: \"class-name\"\n        },\n        number: {\n            pattern: /((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,\n            lookbehind: true\n        },\n        keyword: /\\b(?:Abstract|Array|Bool|Case|Catch|Class|Const|Continue|Default|Eachin|Else|ElseIf|End|EndIf|Exit|Extends|Extern|False|Field|Final|Float|For|Forever|Function|Global|If|Implements|Import|Inline|Int|Interface|Local|Method|Module|New|Next|Null|Object|Private|Property|Public|Repeat|Return|Select|Self|Step|Strict|String|Super|Then|Throw|To|True|Try|Until|Void|Wend|While)\\b/i,\n        operator: /\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,\n        punctuation: /[.,:;()\\[\\]]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbW9ua2V5LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLE9BQU9DLFdBQVcsR0FBRztBQUNyQkQsT0FBT0UsT0FBTyxHQUFHLEVBQUU7QUFDbkIsU0FBU0YsT0FBT0csS0FBSztJQUNuQkEsTUFBTUMsU0FBUyxDQUFDSixNQUFNLEdBQUc7UUFDdkJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsUUFBUTtZQUNORixTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBRSxjQUFjO1lBQ1pILFNBQVM7WUFDVEksWUFBWTtZQUNaSCxRQUFRO1lBQ1JJLE9BQU87UUFDVDtRQUNBQyxVQUFVO1FBQ1YsYUFBYTtZQUNYTixTQUFTO1lBQ1RLLE9BQU87UUFDVDtRQUNBRSxRQUFRO1lBQ05QLFNBQ0U7WUFDRkksWUFBWTtRQUNkO1FBQ0FJLFNBQ0U7UUFDRkMsVUFDRTtRQUNGQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9tb25rZXkuanM/ODdlNiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBtb25rZXlcbm1vbmtleS5kaXNwbGF5TmFtZSA9ICdtb25rZXknXG5tb25rZXkuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBtb25rZXkoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLm1vbmtleSA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvXiNSZW1cXHNbXFxzXFxTXSo/XiNFbmR8Jy4rL2ltLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIlteXCJcXHJcXG5dKlwiLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgcHJlcHJvY2Vzc29yOiB7XG4gICAgICBwYXR0ZXJuOiAvKF5bIFxcdF0qKSMuKy9tLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGFsaWFzOiAncHJvcGVydHknXG4gICAgfSxcbiAgICBmdW5jdGlvbjogL1xcYlxcdysoPz1cXCgpLyxcbiAgICAndHlwZS1jaGFyJzoge1xuICAgICAgcGF0dGVybjogL1xcYls/JSMkXS8sXG4gICAgICBhbGlhczogJ2NsYXNzLW5hbWUnXG4gICAgfSxcbiAgICBudW1iZXI6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oKD86XFwuXFwuKT8pKD86KD86XFxifFxcQi1cXC4/fFxcQlxcLilcXGQrKD86KD8hXFwuXFwuKVxcLlxcZCopP3xcXCRbXFxkYS1mXSspL2ksXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OkFic3RyYWN0fEFycmF5fEJvb2x8Q2FzZXxDYXRjaHxDbGFzc3xDb25zdHxDb250aW51ZXxEZWZhdWx0fEVhY2hpbnxFbHNlfEVsc2VJZnxFbmR8RW5kSWZ8RXhpdHxFeHRlbmRzfEV4dGVybnxGYWxzZXxGaWVsZHxGaW5hbHxGbG9hdHxGb3J8Rm9yZXZlcnxGdW5jdGlvbnxHbG9iYWx8SWZ8SW1wbGVtZW50c3xJbXBvcnR8SW5saW5lfEludHxJbnRlcmZhY2V8TG9jYWx8TWV0aG9kfE1vZHVsZXxOZXd8TmV4dHxOdWxsfE9iamVjdHxQcml2YXRlfFByb3BlcnR5fFB1YmxpY3xSZXBlYXR8UmV0dXJufFNlbGVjdHxTZWxmfFN0ZXB8U3RyaWN0fFN0cmluZ3xTdXBlcnxUaGVufFRocm93fFRvfFRydWV8VHJ5fFVudGlsfFZvaWR8V2VuZHxXaGlsZSlcXGIvaSxcbiAgICBvcGVyYXRvcjpcbiAgICAgIC9cXC5cXC58PFs9Pl0/fD49P3w6Pz18KD86WytcXC0qXFwvJn58XXxcXGIoPzpNb2R8U2hsfFNocilcXGIpPT98XFxiKD86QW5kfE5vdHxPcilcXGIvaSxcbiAgICBwdW5jdHVhdGlvbjogL1suLDo7KClcXFtcXF1dL1xuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIm1vbmtleSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJncmVlZHkiLCJzdHJpbmciLCJwcmVwcm9jZXNzb3IiLCJsb29rYmVoaW5kIiwiYWxpYXMiLCJmdW5jdGlvbiIsIm51bWJlciIsImtleXdvcmQiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/monkey.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/moonscript.js":
/*!***************************************************!*\
  !*** ./node_modules/refractor/lang/moonscript.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = moonscript;\nmoonscript.displayName = \"moonscript\";\nmoonscript.aliases = [\n    \"moon\"\n];\nfunction moonscript(Prism) {\n    Prism.languages.moonscript = {\n        comment: /--.*/,\n        string: [\n            {\n                pattern: /'[^']*'|\\[(=*)\\[[\\s\\S]*?\\]\\1\\]/,\n                greedy: true\n            },\n            {\n                pattern: /\"[^\"]*\"/,\n                greedy: true,\n                inside: {\n                    interpolation: {\n                        pattern: /#\\{[^{}]*\\}/,\n                        inside: {\n                            moonscript: {\n                                pattern: /(^#\\{)[\\s\\S]+(?=\\})/,\n                                lookbehind: true,\n                                inside: null // see beow\n                            },\n                            \"interpolation-punctuation\": {\n                                pattern: /#\\{|\\}/,\n                                alias: \"punctuation\"\n                            }\n                        }\n                    }\n                }\n            }\n        ],\n        \"class-name\": [\n            {\n                pattern: /(\\b(?:class|extends)[ \\t]+)\\w+/,\n                lookbehind: true\n            },\n            /\\b[A-Z]\\w*/\n        ],\n        keyword: /\\b(?:class|continue|do|else|elseif|export|extends|for|from|if|import|in|local|nil|return|self|super|switch|then|unless|using|when|while|with)\\b/,\n        variable: /@@?\\w*/,\n        property: {\n            pattern: /\\b(?!\\d)\\w+(?=:)|(:)(?!\\d)\\w+/,\n            lookbehind: true\n        },\n        function: {\n            pattern: /\\b(?:_G|_VERSION|assert|collectgarbage|coroutine\\.(?:create|resume|running|status|wrap|yield)|debug\\.(?:debug|getfenv|gethook|getinfo|getlocal|getmetatable|getregistry|getupvalue|setfenv|sethook|setlocal|setmetatable|setupvalue|traceback)|dofile|error|getfenv|getmetatable|io\\.(?:close|flush|input|lines|open|output|popen|read|stderr|stdin|stdout|tmpfile|type|write)|ipairs|load|loadfile|loadstring|math\\.(?:abs|acos|asin|atan|atan2|ceil|cos|cosh|deg|exp|floor|fmod|frexp|ldexp|log|log10|max|min|modf|pi|pow|rad|random|randomseed|sin|sinh|sqrt|tan|tanh)|module|next|os\\.(?:clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)|package\\.(?:cpath|loaded|loadlib|path|preload|seeall)|pairs|pcall|print|rawequal|rawget|rawset|require|select|setfenv|setmetatable|string\\.(?:byte|char|dump|find|format|gmatch|gsub|len|lower|match|rep|reverse|sub|upper)|table\\.(?:concat|insert|maxn|remove|sort)|tonumber|tostring|type|unpack|xpcall)\\b/,\n            inside: {\n                punctuation: /\\./\n            }\n        },\n        boolean: /\\b(?:false|true)\\b/,\n        number: /(?:\\B\\.\\d+|\\b\\d+\\.\\d+|\\b\\d+(?=[eE]))(?:[eE][-+]?\\d+)?\\b|\\b(?:0x[a-fA-F\\d]+|\\d+)(?:U?LL)?\\b/,\n        operator: /\\.{3}|[-=]>|~=|(?:[-+*/%<>!=]|\\.\\.)=?|[:#^]|\\b(?:and|or)\\b=?|\\b(?:not)\\b/,\n        punctuation: /[.,()[\\]{}\\\\]/\n    };\n    Prism.languages.moonscript.string[1].inside.interpolation.inside.moonscript.inside = Prism.languages.moonscript;\n    Prism.languages.moon = Prism.languages.moonscript;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbW9vbnNjcmlwdC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxXQUFXQyxXQUFXLEdBQUc7QUFDekJELFdBQVdFLE9BQU8sR0FBRztJQUFDO0NBQU87QUFDN0IsU0FBU0YsV0FBV0csS0FBSztJQUN2QkEsTUFBTUMsU0FBUyxDQUFDSixVQUFVLEdBQUc7UUFDM0JLLFNBQVM7UUFDVEMsUUFBUTtZQUNOO2dCQUNFQyxTQUFTO2dCQUNUQyxRQUFRO1lBQ1Y7WUFDQTtnQkFDRUQsU0FBUztnQkFDVEMsUUFBUTtnQkFDUkMsUUFBUTtvQkFDTkMsZUFBZTt3QkFDYkgsU0FBUzt3QkFDVEUsUUFBUTs0QkFDTlQsWUFBWTtnQ0FDVk8sU0FBUztnQ0FDVEksWUFBWTtnQ0FDWkYsUUFBUSxLQUFLLFdBQVc7NEJBQzFCOzRCQUNBLDZCQUE2QjtnQ0FDM0JGLFNBQVM7Z0NBQ1RLLE9BQU87NEJBQ1Q7d0JBQ0Y7b0JBQ0Y7Z0JBQ0Y7WUFDRjtTQUNEO1FBQ0QsY0FBYztZQUNaO2dCQUNFTCxTQUFTO2dCQUNUSSxZQUFZO1lBQ2Q7WUFDQTtTQUNEO1FBQ0RFLFNBQ0U7UUFDRkMsVUFBVTtRQUNWQyxVQUFVO1lBQ1JSLFNBQVM7WUFDVEksWUFBWTtRQUNkO1FBQ0FLLFVBQVU7WUFDUlQsU0FDRTtZQUNGRSxRQUFRO2dCQUNOUSxhQUFhO1lBQ2Y7UUFDRjtRQUNBQyxTQUFTO1FBQ1RDLFFBQ0U7UUFDRkMsVUFDRTtRQUNGSCxhQUFhO0lBQ2Y7SUFDQWQsTUFBTUMsU0FBUyxDQUFDSixVQUFVLENBQUNNLE1BQU0sQ0FBQyxFQUFFLENBQUNHLE1BQU0sQ0FBQ0MsYUFBYSxDQUFDRCxNQUFNLENBQUNULFVBQVUsQ0FBQ1MsTUFBTSxHQUNoRk4sTUFBTUMsU0FBUyxDQUFDSixVQUFVO0lBQzVCRyxNQUFNQyxTQUFTLENBQUNpQixJQUFJLEdBQUdsQixNQUFNQyxTQUFTLENBQUNKLFVBQVU7QUFDbkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbW9vbnNjcmlwdC5qcz8xMjdlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IG1vb25zY3JpcHRcbm1vb25zY3JpcHQuZGlzcGxheU5hbWUgPSAnbW9vbnNjcmlwdCdcbm1vb25zY3JpcHQuYWxpYXNlcyA9IFsnbW9vbiddXG5mdW5jdGlvbiBtb29uc2NyaXB0KFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5tb29uc2NyaXB0ID0ge1xuICAgIGNvbW1lbnQ6IC8tLS4qLyxcbiAgICBzdHJpbmc6IFtcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLydbXiddKid8XFxbKD0qKVxcW1tcXHNcXFNdKj9cXF1cXDFcXF0vLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC9cIlteXCJdKlwiLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBpbnRlcnBvbGF0aW9uOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvI1xce1tee31dKlxcfS8sXG4gICAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICAgbW9vbnNjcmlwdDoge1xuICAgICAgICAgICAgICAgIHBhdHRlcm46IC8oXiNcXHspW1xcc1xcU10rKD89XFx9KS8sXG4gICAgICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBpbnNpZGU6IG51bGwgLy8gc2VlIGJlb3dcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgJ2ludGVycG9sYXRpb24tcHVuY3R1YXRpb24nOiB7XG4gICAgICAgICAgICAgICAgcGF0dGVybjogLyNcXHt8XFx9LyxcbiAgICAgICAgICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgXSxcbiAgICAnY2xhc3MtbmFtZSc6IFtcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyhcXGIoPzpjbGFzc3xleHRlbmRzKVsgXFx0XSspXFx3Ky8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sIC8vIGNsYXNzLWxpa2UgbmFtZXMgc3RhcnQgd2l0aCBhIGNhcGl0YWwgbGV0dGVyXG4gICAgICAvXFxiW0EtWl1cXHcqL1xuICAgIF0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzpjbGFzc3xjb250aW51ZXxkb3xlbHNlfGVsc2VpZnxleHBvcnR8ZXh0ZW5kc3xmb3J8ZnJvbXxpZnxpbXBvcnR8aW58bG9jYWx8bmlsfHJldHVybnxzZWxmfHN1cGVyfHN3aXRjaHx0aGVufHVubGVzc3x1c2luZ3x3aGVufHdoaWxlfHdpdGgpXFxiLyxcbiAgICB2YXJpYWJsZTogL0BAP1xcdyovLFxuICAgIHByb3BlcnR5OiB7XG4gICAgICBwYXR0ZXJuOiAvXFxiKD8hXFxkKVxcdysoPz06KXwoOikoPyFcXGQpXFx3Ky8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBmdW5jdGlvbjoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL1xcYig/Ol9HfF9WRVJTSU9OfGFzc2VydHxjb2xsZWN0Z2FyYmFnZXxjb3JvdXRpbmVcXC4oPzpjcmVhdGV8cmVzdW1lfHJ1bm5pbmd8c3RhdHVzfHdyYXB8eWllbGQpfGRlYnVnXFwuKD86ZGVidWd8Z2V0ZmVudnxnZXRob29rfGdldGluZm98Z2V0bG9jYWx8Z2V0bWV0YXRhYmxlfGdldHJlZ2lzdHJ5fGdldHVwdmFsdWV8c2V0ZmVudnxzZXRob29rfHNldGxvY2FsfHNldG1ldGF0YWJsZXxzZXR1cHZhbHVlfHRyYWNlYmFjayl8ZG9maWxlfGVycm9yfGdldGZlbnZ8Z2V0bWV0YXRhYmxlfGlvXFwuKD86Y2xvc2V8Zmx1c2h8aW5wdXR8bGluZXN8b3BlbnxvdXRwdXR8cG9wZW58cmVhZHxzdGRlcnJ8c3RkaW58c3Rkb3V0fHRtcGZpbGV8dHlwZXx3cml0ZSl8aXBhaXJzfGxvYWR8bG9hZGZpbGV8bG9hZHN0cmluZ3xtYXRoXFwuKD86YWJzfGFjb3N8YXNpbnxhdGFufGF0YW4yfGNlaWx8Y29zfGNvc2h8ZGVnfGV4cHxmbG9vcnxmbW9kfGZyZXhwfGxkZXhwfGxvZ3xsb2cxMHxtYXh8bWlufG1vZGZ8cGl8cG93fHJhZHxyYW5kb218cmFuZG9tc2VlZHxzaW58c2luaHxzcXJ0fHRhbnx0YW5oKXxtb2R1bGV8bmV4dHxvc1xcLig/OmNsb2NrfGRhdGV8ZGlmZnRpbWV8ZXhlY3V0ZXxleGl0fGdldGVudnxyZW1vdmV8cmVuYW1lfHNldGxvY2FsZXx0aW1lfHRtcG5hbWUpfHBhY2thZ2VcXC4oPzpjcGF0aHxsb2FkZWR8bG9hZGxpYnxwYXRofHByZWxvYWR8c2VlYWxsKXxwYWlyc3xwY2FsbHxwcmludHxyYXdlcXVhbHxyYXdnZXR8cmF3c2V0fHJlcXVpcmV8c2VsZWN0fHNldGZlbnZ8c2V0bWV0YXRhYmxlfHN0cmluZ1xcLig/OmJ5dGV8Y2hhcnxkdW1wfGZpbmR8Zm9ybWF0fGdtYXRjaHxnc3VifGxlbnxsb3dlcnxtYXRjaHxyZXB8cmV2ZXJzZXxzdWJ8dXBwZXIpfHRhYmxlXFwuKD86Y29uY2F0fGluc2VydHxtYXhufHJlbW92ZXxzb3J0KXx0b251bWJlcnx0b3N0cmluZ3x0eXBlfHVucGFja3x4cGNhbGwpXFxiLyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBwdW5jdHVhdGlvbjogL1xcLi9cbiAgICAgIH1cbiAgICB9LFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAgbnVtYmVyOlxuICAgICAgLyg/OlxcQlxcLlxcZCt8XFxiXFxkK1xcLlxcZCt8XFxiXFxkKyg/PVtlRV0pKSg/OltlRV1bLStdP1xcZCspP1xcYnxcXGIoPzoweFthLWZBLUZcXGRdK3xcXGQrKSg/OlU/TEwpP1xcYi8sXG4gICAgb3BlcmF0b3I6XG4gICAgICAvXFwuezN9fFstPV0+fH49fCg/OlstKyovJTw+IT1dfFxcLlxcLik9P3xbOiNeXXxcXGIoPzphbmR8b3IpXFxiPT98XFxiKD86bm90KVxcYi8sXG4gICAgcHVuY3R1YXRpb246IC9bLiwoKVtcXF17fVxcXFxdL1xuICB9XG4gIFByaXNtLmxhbmd1YWdlcy5tb29uc2NyaXB0LnN0cmluZ1sxXS5pbnNpZGUuaW50ZXJwb2xhdGlvbi5pbnNpZGUubW9vbnNjcmlwdC5pbnNpZGUgPVxuICAgIFByaXNtLmxhbmd1YWdlcy5tb29uc2NyaXB0XG4gIFByaXNtLmxhbmd1YWdlcy5tb29uID0gUHJpc20ubGFuZ3VhZ2VzLm1vb25zY3JpcHRcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwibW9vbnNjcmlwdCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJpbnNpZGUiLCJpbnRlcnBvbGF0aW9uIiwibG9va2JlaGluZCIsImFsaWFzIiwia2V5d29yZCIsInZhcmlhYmxlIiwicHJvcGVydHkiLCJmdW5jdGlvbiIsInB1bmN0dWF0aW9uIiwiYm9vbGVhbiIsIm51bWJlciIsIm9wZXJhdG9yIiwibW9vbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/moonscript.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/n1ql.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/n1ql.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = n1ql;\nn1ql.displayName = \"n1ql\";\nn1ql.aliases = [];\nfunction n1ql(Prism) {\n    // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/index.html\n    Prism.languages.n1ql = {\n        comment: {\n            pattern: /\\/\\*[\\s\\S]*?(?:$|\\*\\/)|--.*/,\n            greedy: true\n        },\n        string: {\n            pattern: /([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\]|\\1\\1)*\\1/,\n            greedy: true\n        },\n        identifier: {\n            pattern: /`(?:\\\\[\\s\\S]|[^\\\\`]|``)*`/,\n            greedy: true\n        },\n        parameter: /\\$[\\w.]+/,\n        // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/reservedwords.html#n1ql-reserved-words\n        keyword: /\\b(?:ADVISE|ALL|ALTER|ANALYZE|AS|ASC|AT|BEGIN|BINARY|BOOLEAN|BREAK|BUCKET|BUILD|BY|CALL|CAST|CLUSTER|COLLATE|COLLECTION|COMMIT|COMMITTED|CONNECT|CONTINUE|CORRELATE|CORRELATED|COVER|CREATE|CURRENT|DATABASE|DATASET|DATASTORE|DECLARE|DECREMENT|DELETE|DERIVED|DESC|DESCRIBE|DISTINCT|DO|DROP|EACH|ELEMENT|EXCEPT|EXCLUDE|EXECUTE|EXPLAIN|FETCH|FILTER|FLATTEN|FLUSH|FOLLOWING|FOR|FORCE|FROM|FTS|FUNCTION|GOLANG|GRANT|GROUP|GROUPS|GSI|HASH|HAVING|IF|IGNORE|ILIKE|INCLUDE|INCREMENT|INDEX|INFER|INLINE|INNER|INSERT|INTERSECT|INTO|IS|ISOLATION|JAVASCRIPT|JOIN|KEY|KEYS|KEYSPACE|KNOWN|LANGUAGE|LAST|LEFT|LET|LETTING|LEVEL|LIMIT|LSM|MAP|MAPPING|MATCHED|MATERIALIZED|MERGE|MINUS|MISSING|NAMESPACE|NEST|NL|NO|NTH_VALUE|NULL|NULLS|NUMBER|OBJECT|OFFSET|ON|OPTION|OPTIONS|ORDER|OTHERS|OUTER|OVER|PARSE|PARTITION|PASSWORD|PATH|POOL|PRECEDING|PREPARE|PRIMARY|PRIVATE|PRIVILEGE|PROBE|PROCEDURE|PUBLIC|RANGE|RAW|REALM|REDUCE|RENAME|RESPECT|RETURN|RETURNING|REVOKE|RIGHT|ROLE|ROLLBACK|ROW|ROWS|SATISFIES|SAVEPOINT|SCHEMA|SCOPE|SELECT|SELF|SEMI|SET|SHOW|SOME|START|STATISTICS|STRING|SYSTEM|TIES|TO|TRAN|TRANSACTION|TRIGGER|TRUNCATE|UNBOUNDED|UNDER|UNION|UNIQUE|UNKNOWN|UNNEST|UNSET|UPDATE|UPSERT|USE|USER|USING|VALIDATE|VALUE|VALUES|VIA|VIEW|WHERE|WHILE|WINDOW|WITH|WORK|XOR)\\b/i,\n        function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        boolean: /\\b(?:FALSE|TRUE)\\b/i,\n        number: /(?:\\b\\d+\\.|\\B\\.)\\d+e[+\\-]?\\d+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n        operator: /[-+*\\/%]|!=|==?|\\|\\||<[>=]?|>=?|\\b(?:AND|ANY|ARRAY|BETWEEN|CASE|ELSE|END|EVERY|EXISTS|FIRST|IN|LIKE|NOT|OR|THEN|VALUED|WHEN|WITHIN)\\b/i,\n        punctuation: /[;[\\](),.{}:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbjFxbC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDakIsb0ZBQW9GO0lBQ3BGQSxNQUFNQyxTQUFTLENBQUNKLElBQUksR0FBRztRQUNyQkssU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBQyxRQUFRO1lBQ05GLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FFLFlBQVk7WUFDVkgsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUcsV0FBVztRQUNYLGdIQUFnSDtRQUNoSEMsU0FDRTtRQUNGQyxVQUFVO1FBQ1ZDLFNBQVM7UUFDVEMsUUFBUTtRQUNSQyxVQUNFO1FBQ0ZDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL24xcWwuanM/Y2M2NSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBuMXFsXG5uMXFsLmRpc3BsYXlOYW1lID0gJ24xcWwnXG5uMXFsLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gbjFxbChQcmlzbSkge1xuICAvLyBodHRwczovL2RvY3MuY291Y2hiYXNlLmNvbS9zZXJ2ZXIvY3VycmVudC9uMXFsL24xcWwtbGFuZ3VhZ2UtcmVmZXJlbmNlL2luZGV4Lmh0bWxcbiAgUHJpc20ubGFuZ3VhZ2VzLm4xcWwgPSB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogL1xcL1xcKltcXHNcXFNdKj8oPzokfFxcKlxcLyl8LS0uKi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyhbXCInXSkoPzpcXFxcW1xcc1xcU118KD8hXFwxKVteXFxcXF18XFwxXFwxKSpcXDEvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBpZGVudGlmaWVyOiB7XG4gICAgICBwYXR0ZXJuOiAvYCg/OlxcXFxbXFxzXFxTXXxbXlxcXFxgXXxgYCkqYC8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHBhcmFtZXRlcjogL1xcJFtcXHcuXSsvLFxuICAgIC8vIGh0dHBzOi8vZG9jcy5jb3VjaGJhc2UuY29tL3NlcnZlci9jdXJyZW50L24xcWwvbjFxbC1sYW5ndWFnZS1yZWZlcmVuY2UvcmVzZXJ2ZWR3b3Jkcy5odG1sI24xcWwtcmVzZXJ2ZWQtd29yZHNcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OkFEVklTRXxBTEx8QUxURVJ8QU5BTFlaRXxBU3xBU0N8QVR8QkVHSU58QklOQVJZfEJPT0xFQU58QlJFQUt8QlVDS0VUfEJVSUxEfEJZfENBTEx8Q0FTVHxDTFVTVEVSfENPTExBVEV8Q09MTEVDVElPTnxDT01NSVR8Q09NTUlUVEVEfENPTk5FQ1R8Q09OVElOVUV8Q09SUkVMQVRFfENPUlJFTEFURUR8Q09WRVJ8Q1JFQVRFfENVUlJFTlR8REFUQUJBU0V8REFUQVNFVHxEQVRBU1RPUkV8REVDTEFSRXxERUNSRU1FTlR8REVMRVRFfERFUklWRUR8REVTQ3xERVNDUklCRXxESVNUSU5DVHxET3xEUk9QfEVBQ0h8RUxFTUVOVHxFWENFUFR8RVhDTFVERXxFWEVDVVRFfEVYUExBSU58RkVUQ0h8RklMVEVSfEZMQVRURU58RkxVU0h8Rk9MTE9XSU5HfEZPUnxGT1JDRXxGUk9NfEZUU3xGVU5DVElPTnxHT0xBTkd8R1JBTlR8R1JPVVB8R1JPVVBTfEdTSXxIQVNIfEhBVklOR3xJRnxJR05PUkV8SUxJS0V8SU5DTFVERXxJTkNSRU1FTlR8SU5ERVh8SU5GRVJ8SU5MSU5FfElOTkVSfElOU0VSVHxJTlRFUlNFQ1R8SU5UT3xJU3xJU09MQVRJT058SkFWQVNDUklQVHxKT0lOfEtFWXxLRVlTfEtFWVNQQUNFfEtOT1dOfExBTkdVQUdFfExBU1R8TEVGVHxMRVR8TEVUVElOR3xMRVZFTHxMSU1JVHxMU018TUFQfE1BUFBJTkd8TUFUQ0hFRHxNQVRFUklBTElaRUR8TUVSR0V8TUlOVVN8TUlTU0lOR3xOQU1FU1BBQ0V8TkVTVHxOTHxOT3xOVEhfVkFMVUV8TlVMTHxOVUxMU3xOVU1CRVJ8T0JKRUNUfE9GRlNFVHxPTnxPUFRJT058T1BUSU9OU3xPUkRFUnxPVEhFUlN8T1VURVJ8T1ZFUnxQQVJTRXxQQVJUSVRJT058UEFTU1dPUkR8UEFUSHxQT09MfFBSRUNFRElOR3xQUkVQQVJFfFBSSU1BUll8UFJJVkFURXxQUklWSUxFR0V8UFJPQkV8UFJPQ0VEVVJFfFBVQkxJQ3xSQU5HRXxSQVd8UkVBTE18UkVEVUNFfFJFTkFNRXxSRVNQRUNUfFJFVFVSTnxSRVRVUk5JTkd8UkVWT0tFfFJJR0hUfFJPTEV8Uk9MTEJBQ0t8Uk9XfFJPV1N8U0FUSVNGSUVTfFNBVkVQT0lOVHxTQ0hFTUF8U0NPUEV8U0VMRUNUfFNFTEZ8U0VNSXxTRVR8U0hPV3xTT01FfFNUQVJUfFNUQVRJU1RJQ1N8U1RSSU5HfFNZU1RFTXxUSUVTfFRPfFRSQU58VFJBTlNBQ1RJT058VFJJR0dFUnxUUlVOQ0FURXxVTkJPVU5ERUR8VU5ERVJ8VU5JT058VU5JUVVFfFVOS05PV058VU5ORVNUfFVOU0VUfFVQREFURXxVUFNFUlR8VVNFfFVTRVJ8VVNJTkd8VkFMSURBVEV8VkFMVUV8VkFMVUVTfFZJQXxWSUVXfFdIRVJFfFdISUxFfFdJTkRPV3xXSVRIfFdPUkt8WE9SKVxcYi9pLFxuICAgIGZ1bmN0aW9uOiAvXFxiW2Etel9dXFx3Kig/PVxccypcXCgpL2ksXG4gICAgYm9vbGVhbjogL1xcYig/OkZBTFNFfFRSVUUpXFxiL2ksXG4gICAgbnVtYmVyOiAvKD86XFxiXFxkK1xcLnxcXEJcXC4pXFxkK2VbK1xcLV0/XFxkK1xcYnxcXGJcXGQrKD86XFwuXFxkKik/fFxcQlxcLlxcZCtcXGIvaSxcbiAgICBvcGVyYXRvcjpcbiAgICAgIC9bLSsqXFwvJV18IT18PT0/fFxcfFxcfHw8Wz49XT98Pj0/fFxcYig/OkFORHxBTll8QVJSQVl8QkVUV0VFTnxDQVNFfEVMU0V8RU5EfEVWRVJZfEVYSVNUU3xGSVJTVHxJTnxMSUtFfE5PVHxPUnxUSEVOfFZBTFVFRHxXSEVOfFdJVEhJTilcXGIvaSxcbiAgICBwdW5jdHVhdGlvbjogL1s7W1xcXSgpLC57fTpdL1xuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIm4xcWwiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwiZ3JlZWR5Iiwic3RyaW5nIiwiaWRlbnRpZmllciIsInBhcmFtZXRlciIsImtleXdvcmQiLCJmdW5jdGlvbiIsImJvb2xlYW4iLCJudW1iZXIiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/n1ql.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/n4js.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/n4js.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = n4js;\nn4js.displayName = \"n4js\";\nn4js.aliases = [\n    \"n4jsd\"\n];\nfunction n4js(Prism) {\n    Prism.languages.n4js = Prism.languages.extend(\"javascript\", {\n        // Keywords from N4JS language spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html\n        keyword: /\\b(?:Array|any|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/\n    });\n    Prism.languages.insertBefore(\"n4js\", \"constant\", {\n        // Annotations in N4JS spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html#_annotations\n        annotation: {\n            pattern: /@+\\w+/,\n            alias: \"operator\"\n        }\n    });\n    Prism.languages.n4jsd = Prism.languages.n4js;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbjRqcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRztJQUFDO0NBQVE7QUFDeEIsU0FBU0YsS0FBS0csS0FBSztJQUNqQkEsTUFBTUMsU0FBUyxDQUFDSixJQUFJLEdBQUdHLE1BQU1DLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLGNBQWM7UUFDMUQseUZBQXlGO1FBQ3pGQyxTQUNFO0lBQ0o7SUFDQUgsTUFBTUMsU0FBUyxDQUFDRyxZQUFZLENBQUMsUUFBUSxZQUFZO1FBQy9DLDhGQUE4RjtRQUM5RkMsWUFBWTtZQUNWQyxTQUFTO1lBQ1RDLE9BQU87UUFDVDtJQUNGO0lBQ0FQLE1BQU1DLFNBQVMsQ0FBQ08sS0FBSyxHQUFHUixNQUFNQyxTQUFTLENBQUNKLElBQUk7QUFDOUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbjRqcy5qcz8zNDdhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IG40anNcbm40anMuZGlzcGxheU5hbWUgPSAnbjRqcydcbm40anMuYWxpYXNlcyA9IFsnbjRqc2QnXVxuZnVuY3Rpb24gbjRqcyhQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMubjRqcyA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2phdmFzY3JpcHQnLCB7XG4gICAgLy8gS2V5d29yZHMgZnJvbSBONEpTIGxhbmd1YWdlIHNwZWM6IGh0dHBzOi8vbnVtYmVyZm91ci5naXRodWIuaW8vbjRqcy9zcGVjL040SlNTcGVjLmh0bWxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OkFycmF5fGFueXxib29sZWFufGJyZWFrfGNhc2V8Y2F0Y2h8Y2xhc3N8Y29uc3R8Y29uc3RydWN0b3J8Y29udGludWV8ZGVidWdnZXJ8ZGVjbGFyZXxkZWZhdWx0fGRlbGV0ZXxkb3xlbHNlfGVudW18ZXhwb3J0fGV4dGVuZHN8ZmFsc2V8ZmluYWxseXxmb3J8ZnJvbXxmdW5jdGlvbnxnZXR8aWZ8aW1wbGVtZW50c3xpbXBvcnR8aW58aW5zdGFuY2VvZnxpbnRlcmZhY2V8bGV0fG1vZHVsZXxuZXd8bnVsbHxudW1iZXJ8cGFja2FnZXxwcml2YXRlfHByb3RlY3RlZHxwdWJsaWN8cmV0dXJufHNldHxzdGF0aWN8c3RyaW5nfHN1cGVyfHN3aXRjaHx0aGlzfHRocm93fHRydWV8dHJ5fHR5cGVvZnx2YXJ8dm9pZHx3aGlsZXx3aXRofHlpZWxkKVxcYi9cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnbjRqcycsICdjb25zdGFudCcsIHtcbiAgICAvLyBBbm5vdGF0aW9ucyBpbiBONEpTIHNwZWM6IGh0dHBzOi8vbnVtYmVyZm91ci5naXRodWIuaW8vbjRqcy9zcGVjL040SlNTcGVjLmh0bWwjX2Fubm90YXRpb25zXG4gICAgYW5ub3RhdGlvbjoge1xuICAgICAgcGF0dGVybjogL0ArXFx3Ky8sXG4gICAgICBhbGlhczogJ29wZXJhdG9yJ1xuICAgIH1cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLm40anNkID0gUHJpc20ubGFuZ3VhZ2VzLm40anNcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwibjRqcyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwia2V5d29yZCIsImluc2VydEJlZm9yZSIsImFubm90YXRpb24iLCJwYXR0ZXJuIiwiYWxpYXMiLCJuNGpzZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/n4js.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/nand2tetris-hdl.js":
/*!********************************************************!*\
  !*** ./node_modules/refractor/lang/nand2tetris-hdl.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = nand2tetrisHdl;\nnand2tetrisHdl.displayName = \"nand2tetrisHdl\";\nnand2tetrisHdl.aliases = [];\nfunction nand2tetrisHdl(Prism) {\n    Prism.languages[\"nand2tetris-hdl\"] = {\n        comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        keyword: /\\b(?:BUILTIN|CHIP|CLOCKED|IN|OUT|PARTS)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        function: /\\b[A-Za-z][A-Za-z0-9]*(?=\\()/,\n        number: /\\b\\d+\\b/,\n        operator: /=|\\.\\./,\n        punctuation: /[{}[\\];(),:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbmFuZDJ0ZXRyaXMtaGRsLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLGVBQWVDLFdBQVcsR0FBRztBQUM3QkQsZUFBZUUsT0FBTyxHQUFHLEVBQUU7QUFDM0IsU0FBU0YsZUFBZUcsS0FBSztJQUMzQkEsTUFBTUMsU0FBUyxDQUFDLGtCQUFrQixHQUFHO1FBQ25DQyxTQUFTO1FBQ1RDLFNBQVM7UUFDVEMsU0FBUztRQUNUQyxVQUFVO1FBQ1ZDLFFBQVE7UUFDUkMsVUFBVTtRQUNWQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9uYW5kMnRldHJpcy1oZGwuanM/ZmYzOCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBuYW5kMnRldHJpc0hkbFxubmFuZDJ0ZXRyaXNIZGwuZGlzcGxheU5hbWUgPSAnbmFuZDJ0ZXRyaXNIZGwnXG5uYW5kMnRldHJpc0hkbC5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIG5hbmQydGV0cmlzSGRsKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlc1snbmFuZDJ0ZXRyaXMtaGRsJ10gPSB7XG4gICAgY29tbWVudDogL1xcL1xcLy4qfFxcL1xcKltcXHNcXFNdKj8oPzpcXCpcXC98JCkvLFxuICAgIGtleXdvcmQ6IC9cXGIoPzpCVUlMVElOfENISVB8Q0xPQ0tFRHxJTnxPVVR8UEFSVFMpXFxiLyxcbiAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvLFxuICAgIGZ1bmN0aW9uOiAvXFxiW0EtWmEtel1bQS1aYS16MC05XSooPz1cXCgpLyxcbiAgICBudW1iZXI6IC9cXGJcXGQrXFxiLyxcbiAgICBvcGVyYXRvcjogLz18XFwuXFwuLyxcbiAgICBwdW5jdHVhdGlvbjogL1t7fVtcXF07KCksOl0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwibmFuZDJ0ZXRyaXNIZGwiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJrZXl3b3JkIiwiYm9vbGVhbiIsImZ1bmN0aW9uIiwibnVtYmVyIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/nand2tetris-hdl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/naniscript.js":
/*!***************************************************!*\
  !*** ./node_modules/refractor/lang/naniscript.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = naniscript;\nnaniscript.displayName = \"naniscript\";\nnaniscript.aliases = [];\nfunction naniscript(Prism) {\n    ;\n    (function(Prism) {\n        var expressionDef = /\\{[^\\r\\n\\[\\]{}]*\\}/;\n        var params = {\n            \"quoted-string\": {\n                pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n                alias: \"operator\"\n            },\n            \"command-param-id\": {\n                pattern: /(\\s)\\w+:/,\n                lookbehind: true,\n                alias: \"property\"\n            },\n            \"command-param-value\": [\n                {\n                    pattern: expressionDef,\n                    alias: \"selector\"\n                },\n                {\n                    pattern: /([\\t ])\\S+/,\n                    lookbehind: true,\n                    greedy: true,\n                    alias: \"operator\"\n                },\n                {\n                    pattern: /\\S(?:.*\\S)?/,\n                    alias: \"operator\"\n                }\n            ]\n        };\n        Prism.languages.naniscript = {\n            // ; ...\n            comment: {\n                pattern: /^([\\t ]*);.*/m,\n                lookbehind: true\n            },\n            // > ...\n            // Define is a control line starting with '>' followed by a word, a space and a text.\n            define: {\n                pattern: /^>.+/m,\n                alias: \"tag\",\n                inside: {\n                    value: {\n                        pattern: /(^>\\w+[\\t ]+)(?!\\s)[^{}\\r\\n]+/,\n                        lookbehind: true,\n                        alias: \"operator\"\n                    },\n                    key: {\n                        pattern: /(^>)\\w+/,\n                        lookbehind: true\n                    }\n                }\n            },\n            // # ...\n            label: {\n                pattern: /^([\\t ]*)#[\\t ]*\\w+[\\t ]*$/m,\n                lookbehind: true,\n                alias: \"regex\"\n            },\n            command: {\n                pattern: /^([\\t ]*)@\\w+(?=[\\t ]|$).*/m,\n                lookbehind: true,\n                alias: \"function\",\n                inside: {\n                    \"command-name\": /^@\\w+/,\n                    expression: {\n                        pattern: expressionDef,\n                        greedy: true,\n                        alias: \"selector\"\n                    },\n                    \"command-params\": {\n                        pattern: /\\s*\\S[\\s\\S]*/,\n                        inside: params\n                    }\n                }\n            },\n            // Generic is any line that doesn't start with operators: ;>#@\n            \"generic-text\": {\n                pattern: /(^[ \\t]*)[^#@>;\\s].*/m,\n                lookbehind: true,\n                alias: \"punctuation\",\n                inside: {\n                    // \\{ ... \\} ... \\[ ... \\] ... \\\"\n                    \"escaped-char\": /\\\\[{}\\[\\]\"]/,\n                    expression: {\n                        pattern: expressionDef,\n                        greedy: true,\n                        alias: \"selector\"\n                    },\n                    \"inline-command\": {\n                        pattern: /\\[[\\t ]*\\w[^\\r\\n\\[\\]]*\\]/,\n                        greedy: true,\n                        alias: \"function\",\n                        inside: {\n                            \"command-params\": {\n                                pattern: /(^\\[[\\t ]*\\w+\\b)[\\s\\S]+(?=\\]$)/,\n                                lookbehind: true,\n                                inside: params\n                            },\n                            \"command-param-name\": {\n                                pattern: /^(\\[[\\t ]*)\\w+/,\n                                lookbehind: true,\n                                alias: \"name\"\n                            },\n                            \"start-stop-char\": /[\\[\\]]/\n                        }\n                    }\n                }\n            }\n        };\n        Prism.languages.nani = Prism.languages[\"naniscript\"];\n        /** @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token */ /**\n     * This hook is used to validate generic-text tokens for balanced brackets.\n     * Mark token as bad-line when contains not balanced brackets: {},[]\n     */ Prism.hooks.add(\"after-tokenize\", function(env) {\n            /** @type {(Token | string)[]} */ var tokens = env.tokens;\n            tokens.forEach(function(token) {\n                if (typeof token !== \"string\" && token.type === \"generic-text\") {\n                    var content = getTextContent(token);\n                    if (!isBracketsBalanced(content)) {\n                        token.type = \"bad-line\";\n                        token.content = content;\n                    }\n                }\n            });\n        });\n        /**\n     * @param {string} input\n     * @returns {boolean}\n     */ function isBracketsBalanced(input) {\n            var brackets = \"[]{}\";\n            var stack = [];\n            for(var i = 0; i < input.length; i++){\n                var bracket = input[i];\n                var bracketsIndex = brackets.indexOf(bracket);\n                if (bracketsIndex !== -1) {\n                    if (bracketsIndex % 2 === 0) {\n                        stack.push(bracketsIndex + 1);\n                    } else if (stack.pop() !== bracketsIndex) {\n                        return false;\n                    }\n                }\n            }\n            return stack.length === 0;\n        }\n        /**\n     * @param {string | Token | (string | Token)[]} token\n     * @returns {string}\n     */ function getTextContent(token) {\n            if (typeof token === \"string\") {\n                return token;\n            } else if (Array.isArray(token)) {\n                return token.map(getTextContent).join(\"\");\n            } else {\n                return getTextContent(token.content);\n            }\n        }\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/naniscript.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/nasm.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/nasm.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = nasm;\nnasm.displayName = \"nasm\";\nnasm.aliases = [];\nfunction nasm(Prism) {\n    Prism.languages.nasm = {\n        comment: /;.*$/m,\n        string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        label: {\n            pattern: /(^\\s*)[A-Za-z._?$][\\w.?$@~#]*:/m,\n            lookbehind: true,\n            alias: \"function\"\n        },\n        keyword: [\n            /\\[?BITS (?:16|32|64)\\]?/,\n            {\n                pattern: /(^\\s*)section\\s*[a-z.]+:?/im,\n                lookbehind: true\n            },\n            /(?:extern|global)[^;\\r\\n]*/i,\n            /(?:CPU|DEFAULT|FLOAT).*$/m\n        ],\n        register: {\n            pattern: /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s)\\b/i,\n            alias: \"variable\"\n        },\n        number: /(?:\\b|(?=\\$))(?:0[hx](?:\\.[\\da-f]+|[\\da-f]+(?:\\.[\\da-f]+)?)(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n        operator: /[\\[\\]*+\\-\\/%<>=&|$!]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbmFzbS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDakJBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHO1FBQ3JCSyxTQUFTO1FBQ1RDLFFBQVE7UUFDUkMsT0FBTztZQUNMQyxTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsT0FBTztRQUNUO1FBQ0FDLFNBQVM7WUFDUDtZQUNBO2dCQUNFSCxTQUFTO2dCQUNUQyxZQUFZO1lBQ2Q7WUFDQTtZQUNBO1NBQ0Q7UUFDREcsVUFBVTtZQUNSSixTQUNFO1lBQ0ZFLE9BQU87UUFDVDtRQUNBRyxRQUNFO1FBQ0ZDLFVBQVU7SUFDWjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL25hc20uanM/YTk3MCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBuYXNtXG5uYXNtLmRpc3BsYXlOYW1lID0gJ25hc20nXG5uYXNtLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gbmFzbShQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMubmFzbSA9IHtcbiAgICBjb21tZW50OiAvOy4qJC9tLFxuICAgIHN0cmluZzogLyhbXCInYF0pKD86XFxcXC58KD8hXFwxKVteXFxcXFxcclxcbl0pKlxcMS8sXG4gICAgbGFiZWw6IHtcbiAgICAgIHBhdHRlcm46IC8oXlxccyopW0EtWmEtei5fPyRdW1xcdy4/JEB+I10qOi9tLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAnZnVuY3Rpb24nXG4gICAgfSxcbiAgICBrZXl3b3JkOiBbXG4gICAgICAvXFxbP0JJVFMgKD86MTZ8MzJ8NjQpXFxdPy8sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC8oXlxccyopc2VjdGlvblxccypbYS16Ll0rOj8vaW0sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICAvKD86ZXh0ZXJufGdsb2JhbClbXjtcXHJcXG5dKi9pLFxuICAgICAgLyg/OkNQVXxERUZBVUxUfEZMT0FUKS4qJC9tXG4gICAgXSxcbiAgICByZWdpc3Rlcjoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL1xcYig/OnN0XFxkfFt4eXpdbW1cXGRcXGQ/fFtjZHRdclxcZHxyXFxkXFxkP1tid2RdP3xbZXJdP1thYmNkXXh8W2FiY2RdW2hsXXxbZXJdPyg/OmJwfGRpfHNpfHNwKXxbY2RlZmdzXXMpXFxiL2ksXG4gICAgICBhbGlhczogJ3ZhcmlhYmxlJ1xuICAgIH0sXG4gICAgbnVtYmVyOlxuICAgICAgLyg/OlxcYnwoPz1cXCQpKSg/OjBbaHhdKD86XFwuW1xcZGEtZl0rfFtcXGRhLWZdKyg/OlxcLltcXGRhLWZdKyk/KSg/OnBbKy1dP1xcZCspP3xcXGRbXFxkYS1mXStbaHhdfFxcJFxcZFtcXGRhLWZdKnwwW29xXVswLTddK3xbMC03XStbb3FdfDBbYnldWzAxXSt8WzAxXStbYnldfDBbZHRdXFxkK3woPzpcXGQrKD86XFwuXFxkKyk/fFxcLlxcZCspKD86XFwuP2VbKy1dP1xcZCspP1tkdF0/KVxcYi9pLFxuICAgIG9wZXJhdG9yOiAvW1xcW1xcXSorXFwtXFwvJTw+PSZ8JCFdL1xuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIm5hc20iLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJzdHJpbmciLCJsYWJlbCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiYWxpYXMiLCJrZXl3b3JkIiwicmVnaXN0ZXIiLCJudW1iZXIiLCJvcGVyYXRvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/nasm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/neon.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/neon.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = neon;\nneon.displayName = \"neon\";\nneon.aliases = [];\nfunction neon(Prism) {\n    Prism.languages.neon = {\n        comment: {\n            pattern: /#.*/,\n            greedy: true\n        },\n        datetime: {\n            pattern: /(^|[[{(=:,\\s])\\d\\d\\d\\d-\\d\\d?-\\d\\d?(?:(?:[Tt]| +)\\d\\d?:\\d\\d:\\d\\d(?:\\.\\d*)? *(?:Z|[-+]\\d\\d?(?::?\\d\\d)?)?)?(?=$|[\\]}),\\s])/,\n            lookbehind: true,\n            alias: \"number\"\n        },\n        key: {\n            pattern: /(^|[[{(,\\s])[^,:=[\\]{}()'\"\\s]+(?=\\s*:(?:$|[\\]}),\\s])|\\s*=)/,\n            lookbehind: true,\n            alias: \"atrule\"\n        },\n        number: {\n            pattern: /(^|[[{(=:,\\s])[+-]?(?:0x[\\da-fA-F]+|0o[0-7]+|0b[01]+|(?:\\d+(?:\\.\\d*)?|\\.?\\d+)(?:[eE][+-]?\\d+)?)(?=$|[\\]}),:=\\s])/,\n            lookbehind: true\n        },\n        boolean: {\n            pattern: /(^|[[{(=:,\\s])(?:false|no|true|yes)(?=$|[\\]}),:=\\s])/i,\n            lookbehind: true\n        },\n        null: {\n            pattern: /(^|[[{(=:,\\s])(?:null)(?=$|[\\]}),:=\\s])/i,\n            lookbehind: true,\n            alias: \"keyword\"\n        },\n        string: {\n            pattern: /(^|[[{(=:,\\s])(?:('''|\"\"\")\\r?\\n(?:(?:[^\\r\\n]|\\r?\\n(?![\\t ]*\\2))*\\r?\\n)?[\\t ]*\\2|'[^'\\r\\n]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/,\n            lookbehind: true,\n            greedy: true\n        },\n        literal: {\n            pattern: /(^|[[{(=:,\\s])(?:[^#\"',:=[\\]{}()\\s`-]|[:-][^\"',=[\\]{}()\\s])(?:[^,:=\\]})(\\s]|:(?![\\s,\\]})]|$)|[ \\t]+[^#,:=\\]})(\\s])*/,\n            lookbehind: true,\n            alias: \"string\"\n        },\n        punctuation: /[,:=[\\]{}()-]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbmVvbi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDakJBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHO1FBQ3JCSyxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FDLFVBQVU7WUFDUkYsU0FDRTtZQUNGRyxZQUFZO1lBQ1pDLE9BQU87UUFDVDtRQUNBQyxLQUFLO1lBQ0hMLFNBQVM7WUFDVEcsWUFBWTtZQUNaQyxPQUFPO1FBQ1Q7UUFDQUUsUUFBUTtZQUNOTixTQUNFO1lBQ0ZHLFlBQVk7UUFDZDtRQUNBSSxTQUFTO1lBQ1BQLFNBQVM7WUFDVEcsWUFBWTtRQUNkO1FBQ0FLLE1BQU07WUFDSlIsU0FBUztZQUNURyxZQUFZO1lBQ1pDLE9BQU87UUFDVDtRQUNBSyxRQUFRO1lBQ05ULFNBQ0U7WUFDRkcsWUFBWTtZQUNaRixRQUFRO1FBQ1Y7UUFDQVMsU0FBUztZQUNQVixTQUNFO1lBQ0ZHLFlBQVk7WUFDWkMsT0FBTztRQUNUO1FBQ0FPLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL25lb24uanM/OTQ0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBuZW9uXG5uZW9uLmRpc3BsYXlOYW1lID0gJ25lb24nXG5uZW9uLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gbmVvbihQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMubmVvbiA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvIy4qLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgZGF0ZXRpbWU6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXnxbW3soPTosXFxzXSlcXGRcXGRcXGRcXGQtXFxkXFxkPy1cXGRcXGQ/KD86KD86W1R0XXwgKylcXGRcXGQ/OlxcZFxcZDpcXGRcXGQoPzpcXC5cXGQqKT8gKig/Olp8Wy0rXVxcZFxcZD8oPzo6P1xcZFxcZCk/KT8pPyg/PSR8W1xcXX0pLFxcc10pLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ251bWJlcidcbiAgICB9LFxuICAgIGtleToge1xuICAgICAgcGF0dGVybjogLyhefFtbeygsXFxzXSlbXiw6PVtcXF17fSgpJ1wiXFxzXSsoPz1cXHMqOig/OiR8W1xcXX0pLFxcc10pfFxccyo9KS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdhdHJ1bGUnXG4gICAgfSxcbiAgICBudW1iZXI6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXnxbW3soPTosXFxzXSlbKy1dPyg/OjB4W1xcZGEtZkEtRl0rfDBvWzAtN10rfDBiWzAxXSt8KD86XFxkKyg/OlxcLlxcZCopP3xcXC4/XFxkKykoPzpbZUVdWystXT9cXGQrKT8pKD89JHxbXFxdfSksOj1cXHNdKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBib29sZWFuOiB7XG4gICAgICBwYXR0ZXJuOiAvKF58W1t7KD06LFxcc10pKD86ZmFsc2V8bm98dHJ1ZXx5ZXMpKD89JHxbXFxdfSksOj1cXHNdKS9pLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgbnVsbDoge1xuICAgICAgcGF0dGVybjogLyhefFtbeyg9OixcXHNdKSg/Om51bGwpKD89JHxbXFxdfSksOj1cXHNdKS9pLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhefFtbeyg9OixcXHNdKSg/OignJyd8XCJcIlwiKVxccj9cXG4oPzooPzpbXlxcclxcbl18XFxyP1xcbig/IVtcXHQgXSpcXDIpKSpcXHI/XFxuKT9bXFx0IF0qXFwyfCdbXidcXHJcXG5dKid8XCIoPzpcXFxcLnxbXlxcXFxcIlxcclxcbl0pKlwiKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBsaXRlcmFsOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKF58W1t7KD06LFxcc10pKD86W14jXCInLDo9W1xcXXt9KClcXHNgLV18WzotXVteXCInLD1bXFxde30oKVxcc10pKD86W14sOj1cXF19KShcXHNdfDooPyFbXFxzLFxcXX0pXXwkKXxbIFxcdF0rW14jLDo9XFxdfSkoXFxzXSkqLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ3N0cmluZydcbiAgICB9LFxuICAgIHB1bmN0dWF0aW9uOiAvWyw6PVtcXF17fSgpLV0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwibmVvbiIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJncmVlZHkiLCJkYXRldGltZSIsImxvb2tiZWhpbmQiLCJhbGlhcyIsImtleSIsIm51bWJlciIsImJvb2xlYW4iLCJudWxsIiwic3RyaW5nIiwibGl0ZXJhbCIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/neon.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/nevod.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/nevod.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = nevod;\nnevod.displayName = \"nevod\";\nnevod.aliases = [];\nfunction nevod(Prism) {\n    Prism.languages.nevod = {\n        comment: /\\/\\/.*|(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$))/,\n        string: {\n            pattern: /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))!?\\*?/,\n            greedy: true,\n            inside: {\n                \"string-attrs\": /!$|!\\*$|\\*$/\n            }\n        },\n        namespace: {\n            pattern: /(@namespace\\s+)[a-zA-Z0-9\\-.]+(?=\\s*\\{)/,\n            lookbehind: true\n        },\n        pattern: {\n            pattern: /(@pattern\\s+)?#?[a-zA-Z0-9\\-.]+(?:\\s*\\(\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]+\\s*(?:,\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]*)*\\))?(?=\\s*=)/,\n            lookbehind: true,\n            inside: {\n                \"pattern-name\": {\n                    pattern: /^#?[a-zA-Z0-9\\-.]+/,\n                    alias: \"class-name\"\n                },\n                fields: {\n                    pattern: /\\(.*\\)/,\n                    inside: {\n                        \"field-name\": {\n                            pattern: /[a-zA-Z0-9\\-.]+/,\n                            alias: \"variable\"\n                        },\n                        punctuation: /[,()]/,\n                        operator: {\n                            pattern: /~/,\n                            alias: \"field-hidden-mark\"\n                        }\n                    }\n                }\n            }\n        },\n        search: {\n            pattern: /(@search\\s+|#)[a-zA-Z0-9\\-.]+(?:\\.\\*)?(?=\\s*;)/,\n            alias: \"function\",\n            lookbehind: true\n        },\n        keyword: /@(?:having|inside|namespace|outside|pattern|require|search|where)\\b/,\n        \"standard-pattern\": {\n            pattern: /\\b(?:Alpha|AlphaNum|Any|Blank|End|LineBreak|Num|NumAlpha|Punct|Space|Start|Symbol|Word|WordBreak)\\b(?:\\([a-zA-Z0-9\\-.,\\s+]*\\))?/,\n            inside: {\n                \"standard-pattern-name\": {\n                    pattern: /^[a-zA-Z0-9\\-.]+/,\n                    alias: \"builtin\"\n                },\n                quantifier: {\n                    pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n                    alias: \"number\"\n                },\n                \"standard-pattern-attr\": {\n                    pattern: /[a-zA-Z0-9\\-.]+/,\n                    alias: \"builtin\"\n                },\n                punctuation: /[,()]/\n            }\n        },\n        quantifier: {\n            pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n            alias: \"number\"\n        },\n        operator: [\n            {\n                pattern: /=/,\n                alias: \"pattern-def\"\n            },\n            {\n                pattern: /&/,\n                alias: \"conjunction\"\n            },\n            {\n                pattern: /~/,\n                alias: \"exception\"\n            },\n            {\n                pattern: /\\?/,\n                alias: \"optionality\"\n            },\n            {\n                pattern: /[[\\]]/,\n                alias: \"repetition\"\n            },\n            {\n                pattern: /[{}]/,\n                alias: \"variation\"\n            },\n            {\n                pattern: /[+_]/,\n                alias: \"sequence\"\n            },\n            {\n                pattern: /\\.{2,3}/,\n                alias: \"span\"\n            }\n        ],\n        \"field-capture\": [\n            {\n                pattern: /([a-zA-Z0-9\\-.]+\\s*\\()\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+(?:\\s*,\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+)*(?=\\s*\\))/,\n                lookbehind: true,\n                inside: {\n                    \"field-name\": {\n                        pattern: /[a-zA-Z0-9\\-.]+/,\n                        alias: \"variable\"\n                    },\n                    colon: /:/\n                }\n            },\n            {\n                pattern: /[a-zA-Z0-9\\-.]+\\s*:/,\n                inside: {\n                    \"field-name\": {\n                        pattern: /[a-zA-Z0-9\\-.]+/,\n                        alias: \"variable\"\n                    },\n                    colon: /:/\n                }\n            }\n        ],\n        punctuation: /[:;,()]/,\n        name: /[a-zA-Z0-9\\-.]+/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbmV2b2QuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsTUFBTUMsV0FBVyxHQUFHO0FBQ3BCRCxNQUFNRSxPQUFPLEdBQUcsRUFBRTtBQUNsQixTQUFTRixNQUFNRyxLQUFLO0lBQ2xCQSxNQUFNQyxTQUFTLENBQUNKLEtBQUssR0FBRztRQUN0QkssU0FBUztRQUNUQyxRQUFRO1lBQ05DLFNBQVM7WUFDVEMsUUFBUTtZQUNSQyxRQUFRO2dCQUNOLGdCQUFnQjtZQUNsQjtRQUNGO1FBQ0FDLFdBQVc7WUFDVEgsU0FBUztZQUNUSSxZQUFZO1FBQ2Q7UUFDQUosU0FBUztZQUNQQSxTQUNFO1lBQ0ZJLFlBQVk7WUFDWkYsUUFBUTtnQkFDTixnQkFBZ0I7b0JBQ2RGLFNBQVM7b0JBQ1RLLE9BQU87Z0JBQ1Q7Z0JBQ0FDLFFBQVE7b0JBQ05OLFNBQVM7b0JBQ1RFLFFBQVE7d0JBQ04sY0FBYzs0QkFDWkYsU0FBUzs0QkFDVEssT0FBTzt3QkFDVDt3QkFDQUUsYUFBYTt3QkFDYkMsVUFBVTs0QkFDUlIsU0FBUzs0QkFDVEssT0FBTzt3QkFDVDtvQkFDRjtnQkFDRjtZQUNGO1FBQ0Y7UUFDQUksUUFBUTtZQUNOVCxTQUFTO1lBQ1RLLE9BQU87WUFDUEQsWUFBWTtRQUNkO1FBQ0FNLFNBQ0U7UUFDRixvQkFBb0I7WUFDbEJWLFNBQ0U7WUFDRkUsUUFBUTtnQkFDTix5QkFBeUI7b0JBQ3ZCRixTQUFTO29CQUNUSyxPQUFPO2dCQUNUO2dCQUNBTSxZQUFZO29CQUNWWCxTQUFTO29CQUNUSyxPQUFPO2dCQUNUO2dCQUNBLHlCQUF5QjtvQkFDdkJMLFNBQVM7b0JBQ1RLLE9BQU87Z0JBQ1Q7Z0JBQ0FFLGFBQWE7WUFDZjtRQUNGO1FBQ0FJLFlBQVk7WUFDVlgsU0FBUztZQUNUSyxPQUFPO1FBQ1Q7UUFDQUcsVUFBVTtZQUNSO2dCQUNFUixTQUFTO2dCQUNUSyxPQUFPO1lBQ1Q7WUFDQTtnQkFDRUwsU0FBUztnQkFDVEssT0FBTztZQUNUO1lBQ0E7Z0JBQ0VMLFNBQVM7Z0JBQ1RLLE9BQU87WUFDVDtZQUNBO2dCQUNFTCxTQUFTO2dCQUNUSyxPQUFPO1lBQ1Q7WUFDQTtnQkFDRUwsU0FBUztnQkFDVEssT0FBTztZQUNUO1lBQ0E7Z0JBQ0VMLFNBQVM7Z0JBQ1RLLE9BQU87WUFDVDtZQUNBO2dCQUNFTCxTQUFTO2dCQUNUSyxPQUFPO1lBQ1Q7WUFDQTtnQkFDRUwsU0FBUztnQkFDVEssT0FBTztZQUNUO1NBQ0Q7UUFDRCxpQkFBaUI7WUFDZjtnQkFDRUwsU0FDRTtnQkFDRkksWUFBWTtnQkFDWkYsUUFBUTtvQkFDTixjQUFjO3dCQUNaRixTQUFTO3dCQUNUSyxPQUFPO29CQUNUO29CQUNBTyxPQUFPO2dCQUNUO1lBQ0Y7WUFDQTtnQkFDRVosU0FBUztnQkFDVEUsUUFBUTtvQkFDTixjQUFjO3dCQUNaRixTQUFTO3dCQUNUSyxPQUFPO29CQUNUO29CQUNBTyxPQUFPO2dCQUNUO1lBQ0Y7U0FDRDtRQUNETCxhQUFhO1FBQ2JNLE1BQU07SUFDUjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL25ldm9kLmpzP2M3MTEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gbmV2b2Rcbm5ldm9kLmRpc3BsYXlOYW1lID0gJ25ldm9kJ1xubmV2b2QuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBuZXZvZChQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMubmV2b2QgPSB7XG4gICAgY29tbWVudDogL1xcL1xcLy4qfCg/OlxcL1xcKltcXHNcXFNdKj8oPzpcXCpcXC98JCkpLyxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC8oPzpcIig/OlwiXCJ8W15cIl0pKlwiKD8hXCIpfCcoPzonJ3xbXiddKSonKD8hJykpIT9cXCo/LyxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICAnc3RyaW5nLWF0dHJzJzogLyEkfCFcXCokfFxcKiQvXG4gICAgICB9XG4gICAgfSxcbiAgICBuYW1lc3BhY2U6IHtcbiAgICAgIHBhdHRlcm46IC8oQG5hbWVzcGFjZVxccyspW2EtekEtWjAtOVxcLS5dKyg/PVxccypcXHspLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIHBhdHRlcm46IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oQHBhdHRlcm5cXHMrKT8jP1thLXpBLVowLTlcXC0uXSsoPzpcXHMqXFwoXFxzKig/On5cXHMqKT9bYS16QS1aMC05XFwtLl0rXFxzKig/OixcXHMqKD86flxccyopP1thLXpBLVowLTlcXC0uXSopKlxcKSk/KD89XFxzKj0pLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgJ3BhdHRlcm4tbmFtZSc6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXiM/W2EtekEtWjAtOVxcLS5dKy8sXG4gICAgICAgICAgYWxpYXM6ICdjbGFzcy1uYW1lJ1xuICAgICAgICB9LFxuICAgICAgICBmaWVsZHM6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXFwoLipcXCkvLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgJ2ZpZWxkLW5hbWUnOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC9bYS16QS1aMC05XFwtLl0rLyxcbiAgICAgICAgICAgICAgYWxpYXM6ICd2YXJpYWJsZSdcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwdW5jdHVhdGlvbjogL1ssKCldLyxcbiAgICAgICAgICAgIG9wZXJhdG9yOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC9+LyxcbiAgICAgICAgICAgICAgYWxpYXM6ICdmaWVsZC1oaWRkZW4tbWFyaydcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIHNlYXJjaDoge1xuICAgICAgcGF0dGVybjogLyhAc2VhcmNoXFxzK3wjKVthLXpBLVowLTlcXC0uXSsoPzpcXC5cXCopPyg/PVxccyo7KS8sXG4gICAgICBhbGlhczogJ2Z1bmN0aW9uJyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIGtleXdvcmQ6XG4gICAgICAvQCg/OmhhdmluZ3xpbnNpZGV8bmFtZXNwYWNlfG91dHNpZGV8cGF0dGVybnxyZXF1aXJlfHNlYXJjaHx3aGVyZSlcXGIvLFxuICAgICdzdGFuZGFyZC1wYXR0ZXJuJzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL1xcYig/OkFscGhhfEFscGhhTnVtfEFueXxCbGFua3xFbmR8TGluZUJyZWFrfE51bXxOdW1BbHBoYXxQdW5jdHxTcGFjZXxTdGFydHxTeW1ib2x8V29yZHxXb3JkQnJlYWspXFxiKD86XFwoW2EtekEtWjAtOVxcLS4sXFxzK10qXFwpKT8vLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgICdzdGFuZGFyZC1wYXR0ZXJuLW5hbWUnOiB7XG4gICAgICAgICAgcGF0dGVybjogL15bYS16QS1aMC05XFwtLl0rLyxcbiAgICAgICAgICBhbGlhczogJ2J1aWx0aW4nXG4gICAgICAgIH0sXG4gICAgICAgIHF1YW50aWZpZXI6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXFxiXFxkKyg/OlxccypcXCt8XFxzKi1cXHMqXFxkKyk/KD8hXFx3KS8sXG4gICAgICAgICAgYWxpYXM6ICdudW1iZXInXG4gICAgICAgIH0sXG4gICAgICAgICdzdGFuZGFyZC1wYXR0ZXJuLWF0dHInOiB7XG4gICAgICAgICAgcGF0dGVybjogL1thLXpBLVowLTlcXC0uXSsvLFxuICAgICAgICAgIGFsaWFzOiAnYnVpbHRpbidcbiAgICAgICAgfSxcbiAgICAgICAgcHVuY3R1YXRpb246IC9bLCgpXS9cbiAgICAgIH1cbiAgICB9LFxuICAgIHF1YW50aWZpZXI6IHtcbiAgICAgIHBhdHRlcm46IC9cXGJcXGQrKD86XFxzKlxcK3xcXHMqLVxccypcXGQrKT8oPyFcXHcpLyxcbiAgICAgIGFsaWFzOiAnbnVtYmVyJ1xuICAgIH0sXG4gICAgb3BlcmF0b3I6IFtcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLz0vLFxuICAgICAgICBhbGlhczogJ3BhdHRlcm4tZGVmJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyYvLFxuICAgICAgICBhbGlhczogJ2Nvbmp1bmN0aW9uJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogL34vLFxuICAgICAgICBhbGlhczogJ2V4Y2VwdGlvbidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC9cXD8vLFxuICAgICAgICBhbGlhczogJ29wdGlvbmFsaXR5J1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogL1tbXFxdXS8sXG4gICAgICAgIGFsaWFzOiAncmVwZXRpdGlvbidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC9be31dLyxcbiAgICAgICAgYWxpYXM6ICd2YXJpYXRpb24nXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvWytfXS8sXG4gICAgICAgIGFsaWFzOiAnc2VxdWVuY2UnXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvXFwuezIsM30vLFxuICAgICAgICBhbGlhczogJ3NwYW4nXG4gICAgICB9XG4gICAgXSxcbiAgICAnZmllbGQtY2FwdHVyZSc6IFtcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKFthLXpBLVowLTlcXC0uXStcXHMqXFwoKVxccypbYS16QS1aMC05XFwtLl0rXFxzKjpcXHMqW2EtekEtWjAtOVxcLS5dKyg/OlxccyosXFxzKlthLXpBLVowLTlcXC0uXStcXHMqOlxccypbYS16QS1aMC05XFwtLl0rKSooPz1cXHMqXFwpKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgICdmaWVsZC1uYW1lJzoge1xuICAgICAgICAgICAgcGF0dGVybjogL1thLXpBLVowLTlcXC0uXSsvLFxuICAgICAgICAgICAgYWxpYXM6ICd2YXJpYWJsZSdcbiAgICAgICAgICB9LFxuICAgICAgICAgIGNvbG9uOiAvOi9cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogL1thLXpBLVowLTlcXC0uXStcXHMqOi8sXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgICdmaWVsZC1uYW1lJzoge1xuICAgICAgICAgICAgcGF0dGVybjogL1thLXpBLVowLTlcXC0uXSsvLFxuICAgICAgICAgICAgYWxpYXM6ICd2YXJpYWJsZSdcbiAgICAgICAgICB9LFxuICAgICAgICAgIGNvbG9uOiAvOi9cbiAgICAgICAgfVxuICAgICAgfVxuICAgIF0sXG4gICAgcHVuY3R1YXRpb246IC9bOjssKCldLyxcbiAgICBuYW1lOiAvW2EtekEtWjAtOVxcLS5dKy9cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJuZXZvZCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJpbnNpZGUiLCJuYW1lc3BhY2UiLCJsb29rYmVoaW5kIiwiYWxpYXMiLCJmaWVsZHMiLCJwdW5jdHVhdGlvbiIsIm9wZXJhdG9yIiwic2VhcmNoIiwia2V5d29yZCIsInF1YW50aWZpZXIiLCJjb2xvbiIsIm5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/nevod.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/nginx.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/nginx.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = nginx;\nnginx.displayName = \"nginx\";\nnginx.aliases = [];\nfunction nginx(Prism) {\n    ;\n    (function(Prism) {\n        var variable = /\\$(?:\\w[a-z\\d]*(?:_[^\\x00-\\x1F\\s\"'\\\\()$]*)?|\\{[^}\\s\"'\\\\]+\\})/i;\n        Prism.languages.nginx = {\n            comment: {\n                pattern: /(^|[\\s{};])#.*/,\n                lookbehind: true,\n                greedy: true\n            },\n            directive: {\n                pattern: /(^|\\s)\\w(?:[^;{}\"'\\\\\\s]|\\\\.|\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|\\s+(?:#.*(?!.)|(?![#\\s])))*?(?=\\s*[;{])/,\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    string: {\n                        pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)(?:\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')/,\n                        lookbehind: true,\n                        greedy: true,\n                        inside: {\n                            escape: {\n                                pattern: /\\\\[\"'\\\\nrt]/,\n                                alias: \"entity\"\n                            },\n                            variable: variable\n                        }\n                    },\n                    comment: {\n                        pattern: /(\\s)#.*/,\n                        lookbehind: true,\n                        greedy: true\n                    },\n                    keyword: {\n                        pattern: /^\\S+/,\n                        greedy: true\n                    },\n                    // other patterns\n                    boolean: {\n                        pattern: /(\\s)(?:off|on)(?!\\S)/,\n                        lookbehind: true\n                    },\n                    number: {\n                        pattern: /(\\s)\\d+[a-z]*(?!\\S)/i,\n                        lookbehind: true\n                    },\n                    variable: variable\n                }\n            },\n            punctuation: /[{};]/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbmdpbnguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsTUFBTUMsV0FBVyxHQUFHO0FBQ3BCRCxNQUFNRSxPQUFPLEdBQUcsRUFBRTtBQUNsQixTQUFTRixNQUFNRyxLQUFLOztJQUNoQixVQUFVQSxLQUFLO1FBQ2YsSUFBSUMsV0FDRjtRQUNGRCxNQUFNRSxTQUFTLENBQUNMLEtBQUssR0FBRztZQUN0Qk0sU0FBUztnQkFDUEMsU0FBUztnQkFDVEMsWUFBWTtnQkFDWkMsUUFBUTtZQUNWO1lBQ0FDLFdBQVc7Z0JBQ1RILFNBQ0U7Z0JBQ0ZDLFlBQVk7Z0JBQ1pDLFFBQVE7Z0JBQ1JFLFFBQVE7b0JBQ05DLFFBQVE7d0JBQ05MLFNBQ0U7d0JBQ0ZDLFlBQVk7d0JBQ1pDLFFBQVE7d0JBQ1JFLFFBQVE7NEJBQ05FLFFBQVE7Z0NBQ05OLFNBQVM7Z0NBQ1RPLE9BQU87NEJBQ1Q7NEJBQ0FWLFVBQVVBO3dCQUNaO29CQUNGO29CQUNBRSxTQUFTO3dCQUNQQyxTQUFTO3dCQUNUQyxZQUFZO3dCQUNaQyxRQUFRO29CQUNWO29CQUNBTSxTQUFTO3dCQUNQUixTQUFTO3dCQUNURSxRQUFRO29CQUNWO29CQUNBLGlCQUFpQjtvQkFDakJPLFNBQVM7d0JBQ1BULFNBQVM7d0JBQ1RDLFlBQVk7b0JBQ2Q7b0JBQ0FTLFFBQVE7d0JBQ05WLFNBQVM7d0JBQ1RDLFlBQVk7b0JBQ2Q7b0JBQ0FKLFVBQVVBO2dCQUNaO1lBQ0Y7WUFDQWMsYUFBYTtRQUNmO0lBQ0YsR0FBR2Y7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9uZ2lueC5qcz9jNzFmIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IG5naW54XG5uZ2lueC5kaXNwbGF5TmFtZSA9ICduZ2lueCdcbm5naW54LmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gbmdpbngoUHJpc20pIHtcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIgdmFyaWFibGUgPVxuICAgICAgL1xcJCg/Olxcd1thLXpcXGRdKig/Ol9bXlxceDAwLVxceDFGXFxzXCInXFxcXCgpJF0qKT98XFx7W159XFxzXCInXFxcXF0rXFx9KS9pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLm5naW54ID0ge1xuICAgICAgY29tbWVudDoge1xuICAgICAgICBwYXR0ZXJuOiAvKF58W1xcc3t9O10pIy4qLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAgZGlyZWN0aXZlOiB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhefFxccylcXHcoPzpbXjt7fVwiJ1xcXFxcXHNdfFxcXFwufFwiKD86W15cIlxcXFxdfFxcXFwuKSpcInwnKD86W14nXFxcXF18XFxcXC4pKid8XFxzKyg/OiMuKig/IS4pfCg/IVsjXFxzXSkpKSo/KD89XFxzKls7e10pLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBzdHJpbmc6IHtcbiAgICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAgIC8oKD86XnxbXlxcXFxdKSg/OlxcXFxcXFxcKSopKD86XCIoPzpbXlwiXFxcXF18XFxcXC4pKlwifCcoPzpbXidcXFxcXXxcXFxcLikqJykvLFxuICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgICBlc2NhcGU6IHtcbiAgICAgICAgICAgICAgICBwYXR0ZXJuOiAvXFxcXFtcIidcXFxcbnJ0XS8sXG4gICAgICAgICAgICAgICAgYWxpYXM6ICdlbnRpdHknXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHZhcmlhYmxlOiB2YXJpYWJsZVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY29tbWVudDoge1xuICAgICAgICAgICAgcGF0dGVybjogLyhcXHMpIy4qLyxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgICAgICB9LFxuICAgICAgICAgIGtleXdvcmQ6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC9eXFxTKy8sXG4gICAgICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgICAgICB9LFxuICAgICAgICAgIC8vIG90aGVyIHBhdHRlcm5zXG4gICAgICAgICAgYm9vbGVhbjoge1xuICAgICAgICAgICAgcGF0dGVybjogLyhcXHMpKD86b2ZmfG9uKSg/IVxcUykvLFxuICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICAgIH0sXG4gICAgICAgICAgbnVtYmVyOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvKFxccylcXGQrW2Etel0qKD8hXFxTKS9pLFxuICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICAgIH0sXG4gICAgICAgICAgdmFyaWFibGU6IHZhcmlhYmxlXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBwdW5jdHVhdGlvbjogL1t7fTtdL1xuICAgIH1cbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIm5naW54IiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJ2YXJpYWJsZSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImdyZWVkeSIsImRpcmVjdGl2ZSIsImluc2lkZSIsInN0cmluZyIsImVzY2FwZSIsImFsaWFzIiwia2V5d29yZCIsImJvb2xlYW4iLCJudW1iZXIiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/nginx.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/nim.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/nim.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = nim;\nnim.displayName = \"nim\";\nnim.aliases = [];\nfunction nim(Prism) {\n    Prism.languages.nim = {\n        comment: {\n            pattern: /#.*/,\n            greedy: true\n        },\n        string: {\n            // Double-quoted strings can be prefixed by an identifier (Generalized raw string literals)\n            pattern: /(?:\\b(?!\\d)(?:\\w|\\\\x[89a-fA-F][0-9a-fA-F])+)?(?:\"\"\"[\\s\\S]*?\"\"\"(?!\")|\"(?:\\\\[\\s\\S]|\"\"|[^\"\\\\])*\")/,\n            greedy: true\n        },\n        char: {\n            // Character literals are handled specifically to prevent issues with numeric type suffixes\n            pattern: /'(?:\\\\(?:\\d+|x[\\da-fA-F]{0,2}|.)|[^'])'/,\n            greedy: true\n        },\n        function: {\n            pattern: /(?:(?!\\d)(?:\\w|\\\\x[89a-fA-F][0-9a-fA-F])+|`[^`\\r\\n]+`)\\*?(?:\\[[^\\]]+\\])?(?=\\s*\\()/,\n            greedy: true,\n            inside: {\n                operator: /\\*$/\n            }\n        },\n        // We don't want to highlight operators (and anything really) inside backticks\n        identifier: {\n            pattern: /`[^`\\r\\n]+`/,\n            greedy: true,\n            inside: {\n                punctuation: /`/\n            }\n        },\n        // The negative look ahead prevents wrong highlighting of the .. operator\n        number: /\\b(?:0[xXoObB][\\da-fA-F_]+|\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:[eE][+-]?\\d[\\d_]*)?)(?:'?[iuf]\\d*)?/,\n        keyword: /\\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\\b/,\n        operator: {\n            // Look behind and look ahead prevent wrong highlighting of punctuations [. .] {. .} (. .)\n            // but allow the slice operator .. to take precedence over them\n            // One can define his own operators in Nim so all combination of operators might be an operator.\n            pattern: /(^|[({\\[](?=\\.\\.)|(?![({\\[]\\.).)(?:(?:[=+\\-*\\/<>@$~&%|!?^:\\\\]|\\.\\.|\\.(?![)}\\]]))+|\\b(?:and|div|in|is|isnot|mod|not|notin|of|or|shl|shr|xor)\\b)/m,\n            lookbehind: true\n        },\n        punctuation: /[({\\[]\\.|\\.[)}\\]]|[`(){}\\[\\],:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbmltLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLElBQUlDLFdBQVcsR0FBRztBQUNsQkQsSUFBSUUsT0FBTyxHQUFHLEVBQUU7QUFDaEIsU0FBU0YsSUFBSUcsS0FBSztJQUNoQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsUUFBUTtZQUNOLDJGQUEyRjtZQUMzRkYsU0FDRTtZQUNGQyxRQUFRO1FBQ1Y7UUFDQUUsTUFBTTtZQUNKLDJGQUEyRjtZQUMzRkgsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUcsVUFBVTtZQUNSSixTQUNFO1lBQ0ZDLFFBQVE7WUFDUkksUUFBUTtnQkFDTkMsVUFBVTtZQUNaO1FBQ0Y7UUFDQSw4RUFBOEU7UUFDOUVDLFlBQVk7WUFDVlAsU0FBUztZQUNUQyxRQUFRO1lBQ1JJLFFBQVE7Z0JBQ05HLGFBQWE7WUFDZjtRQUNGO1FBQ0EseUVBQXlFO1FBQ3pFQyxRQUNFO1FBQ0ZDLFNBQ0U7UUFDRkosVUFBVTtZQUNSLDBGQUEwRjtZQUMxRiwrREFBK0Q7WUFDL0QsZ0dBQWdHO1lBQ2hHTixTQUNFO1lBQ0ZXLFlBQVk7UUFDZDtRQUNBSCxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9uaW0uanM/MDczYyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBuaW1cbm5pbS5kaXNwbGF5TmFtZSA9ICduaW0nXG5uaW0uYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBuaW0oUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLm5pbSA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvIy4qLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICAvLyBEb3VibGUtcXVvdGVkIHN0cmluZ3MgY2FuIGJlIHByZWZpeGVkIGJ5IGFuIGlkZW50aWZpZXIgKEdlbmVyYWxpemVkIHJhdyBzdHJpbmcgbGl0ZXJhbHMpXG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKD86XFxiKD8hXFxkKSg/Olxcd3xcXFxceFs4OWEtZkEtRl1bMC05YS1mQS1GXSkrKT8oPzpcIlwiXCJbXFxzXFxTXSo/XCJcIlwiKD8hXCIpfFwiKD86XFxcXFtcXHNcXFNdfFwiXCJ8W15cIlxcXFxdKSpcIikvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBjaGFyOiB7XG4gICAgICAvLyBDaGFyYWN0ZXIgbGl0ZXJhbHMgYXJlIGhhbmRsZWQgc3BlY2lmaWNhbGx5IHRvIHByZXZlbnQgaXNzdWVzIHdpdGggbnVtZXJpYyB0eXBlIHN1ZmZpeGVzXG4gICAgICBwYXR0ZXJuOiAvJyg/OlxcXFwoPzpcXGQrfHhbXFxkYS1mQS1GXXswLDJ9fC4pfFteJ10pJy8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGZ1bmN0aW9uOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKD86KD8hXFxkKSg/Olxcd3xcXFxceFs4OWEtZkEtRl1bMC05YS1mQS1GXSkrfGBbXmBcXHJcXG5dK2ApXFwqPyg/OlxcW1teXFxdXStcXF0pPyg/PVxccypcXCgpLyxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBvcGVyYXRvcjogL1xcKiQvXG4gICAgICB9XG4gICAgfSxcbiAgICAvLyBXZSBkb24ndCB3YW50IHRvIGhpZ2hsaWdodCBvcGVyYXRvcnMgKGFuZCBhbnl0aGluZyByZWFsbHkpIGluc2lkZSBiYWNrdGlja3NcbiAgICBpZGVudGlmaWVyOiB7XG4gICAgICBwYXR0ZXJuOiAvYFteYFxcclxcbl0rYC8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgcHVuY3R1YXRpb246IC9gL1xuICAgICAgfVxuICAgIH0sXG4gICAgLy8gVGhlIG5lZ2F0aXZlIGxvb2sgYWhlYWQgcHJldmVudHMgd3JvbmcgaGlnaGxpZ2h0aW5nIG9mIHRoZSAuLiBvcGVyYXRvclxuICAgIG51bWJlcjpcbiAgICAgIC9cXGIoPzowW3hYb09iQl1bXFxkYS1mQS1GX10rfFxcZFtcXGRfXSooPzooPyFcXC5cXC4pXFwuW1xcZF9dKik/KD86W2VFXVsrLV0/XFxkW1xcZF9dKik/KSg/Oic/W2l1Zl1cXGQqKT8vLFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YWRkcnxhc3xhc218YXRvbWljfGJpbmR8YmxvY2t8YnJlYWt8Y2FzZXxjYXN0fGNvbmNlcHR8Y29uc3R8Y29udGludWV8Y29udmVydGVyfGRlZmVyfGRpc2NhcmR8ZGlzdGluY3R8ZG98ZWxpZnxlbHNlfGVuZHxlbnVtfGV4Y2VwdHxleHBvcnR8ZmluYWxseXxmb3J8ZnJvbXxmdW5jfGdlbmVyaWN8aWZ8aW1wb3J0fGluY2x1ZGV8aW50ZXJmYWNlfGl0ZXJhdG9yfGxldHxtYWNyb3xtZXRob2R8bWl4aW58bmlsfG9iamVjdHxvdXR8cHJvY3xwdHJ8cmFpc2V8cmVmfHJldHVybnxzdGF0aWN8dGVtcGxhdGV8dHJ5fHR1cGxlfHR5cGV8dXNpbmd8dmFyfHdoZW58d2hpbGV8d2l0aHx3aXRob3V0fHlpZWxkKVxcYi8sXG4gICAgb3BlcmF0b3I6IHtcbiAgICAgIC8vIExvb2sgYmVoaW5kIGFuZCBsb29rIGFoZWFkIHByZXZlbnQgd3JvbmcgaGlnaGxpZ2h0aW5nIG9mIHB1bmN0dWF0aW9ucyBbLiAuXSB7LiAufSAoLiAuKVxuICAgICAgLy8gYnV0IGFsbG93IHRoZSBzbGljZSBvcGVyYXRvciAuLiB0byB0YWtlIHByZWNlZGVuY2Ugb3ZlciB0aGVtXG4gICAgICAvLyBPbmUgY2FuIGRlZmluZSBoaXMgb3duIG9wZXJhdG9ycyBpbiBOaW0gc28gYWxsIGNvbWJpbmF0aW9uIG9mIG9wZXJhdG9ycyBtaWdodCBiZSBhbiBvcGVyYXRvci5cbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXnxbKHtcXFtdKD89XFwuXFwuKXwoPyFbKHtcXFtdXFwuKS4pKD86KD86Wz0rXFwtKlxcLzw+QCR+JiV8IT9eOlxcXFxdfFxcLlxcLnxcXC4oPyFbKX1cXF1dKSkrfFxcYig/OmFuZHxkaXZ8aW58aXN8aXNub3R8bW9kfG5vdHxub3RpbnxvZnxvcnxzaGx8c2hyfHhvcilcXGIpL20sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBwdW5jdHVhdGlvbjogL1soe1xcW11cXC58XFwuWyl9XFxdXXxbYCgpe31cXFtcXF0sOl0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwibmltIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImdyZWVkeSIsInN0cmluZyIsImNoYXIiLCJmdW5jdGlvbiIsImluc2lkZSIsIm9wZXJhdG9yIiwiaWRlbnRpZmllciIsInB1bmN0dWF0aW9uIiwibnVtYmVyIiwia2V5d29yZCIsImxvb2tiZWhpbmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/nim.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/nix.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/nix.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = nix;\nnix.displayName = \"nix\";\nnix.aliases = [];\nfunction nix(Prism) {\n    Prism.languages.nix = {\n        comment: {\n            pattern: /\\/\\*[\\s\\S]*?\\*\\/|#.*/,\n            greedy: true\n        },\n        string: {\n            pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|''(?:(?!'')[\\s\\S]|''(?:'|\\\\|\\$\\{))*''/,\n            greedy: true,\n            inside: {\n                interpolation: {\n                    // The lookbehind ensures the ${} is not preceded by \\ or ''\n                    pattern: /(^|(?:^|(?!'').)[^\\\\])\\$\\{(?:[^{}]|\\{[^}]*\\})*\\}/,\n                    lookbehind: true,\n                    inside: null // see below\n                }\n            }\n        },\n        url: [\n            /\\b(?:[a-z]{3,7}:\\/\\/)[\\w\\-+%~\\/.:#=?&]+/,\n            {\n                pattern: /([^\\/])(?:[\\w\\-+%~.:#=?&]*(?!\\/\\/)[\\w\\-+%~\\/.:#=?&])?(?!\\/\\/)\\/[\\w\\-+%~\\/.:#=?&]*/,\n                lookbehind: true\n            }\n        ],\n        antiquotation: {\n            pattern: /\\$(?=\\{)/,\n            alias: \"important\"\n        },\n        number: /\\b\\d+\\b/,\n        keyword: /\\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\\b/,\n        function: /\\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:Tarball|url)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\\b|\\bfoldl'\\B/,\n        boolean: /\\b(?:false|true)\\b/,\n        operator: /[=!<>]=?|\\+\\+?|\\|\\||&&|\\/\\/|->?|[?@]/,\n        punctuation: /[{}()[\\].,:;]/\n    };\n    Prism.languages.nix.string.inside.interpolation.inside = Prism.languages.nix;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbml4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLElBQUlDLFdBQVcsR0FBRztBQUNsQkQsSUFBSUUsT0FBTyxHQUFHLEVBQUU7QUFDaEIsU0FBU0YsSUFBSUcsS0FBSztJQUNoQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsUUFBUTtZQUNORixTQUFTO1lBQ1RDLFFBQVE7WUFDUkUsUUFBUTtnQkFDTkMsZUFBZTtvQkFDYiw0REFBNEQ7b0JBQzVESixTQUFTO29CQUNUSyxZQUFZO29CQUNaRixRQUFRLEtBQUssWUFBWTtnQkFDM0I7WUFDRjtRQUNGO1FBQ0FHLEtBQUs7WUFDSDtZQUNBO2dCQUNFTixTQUNFO2dCQUNGSyxZQUFZO1lBQ2Q7U0FDRDtRQUNERSxlQUFlO1lBQ2JQLFNBQVM7WUFDVFEsT0FBTztRQUNUO1FBQ0FDLFFBQVE7UUFDUkMsU0FBUztRQUNUQyxVQUNFO1FBQ0ZDLFNBQVM7UUFDVEMsVUFBVTtRQUNWQyxhQUFhO0lBQ2Y7SUFDQWpCLE1BQU1DLFNBQVMsQ0FBQ0osR0FBRyxDQUFDUSxNQUFNLENBQUNDLE1BQU0sQ0FBQ0MsYUFBYSxDQUFDRCxNQUFNLEdBQUdOLE1BQU1DLFNBQVMsQ0FBQ0osR0FBRztBQUM5RSIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9uaXguanM/NTBiNCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBuaXhcbm5peC5kaXNwbGF5TmFtZSA9ICduaXgnXG5uaXguYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBuaXgoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLm5peCA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvXFwvXFwqW1xcc1xcU10qP1xcKlxcL3wjLiovLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIig/OlteXCJcXFxcXXxcXFxcW1xcc1xcU10pKlwifCcnKD86KD8hJycpW1xcc1xcU118JycoPzonfFxcXFx8XFwkXFx7KSkqJycvLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIGludGVycG9sYXRpb246IHtcbiAgICAgICAgICAvLyBUaGUgbG9va2JlaGluZCBlbnN1cmVzIHRoZSAke30gaXMgbm90IHByZWNlZGVkIGJ5IFxcIG9yICcnXG4gICAgICAgICAgcGF0dGVybjogLyhefCg/Ol58KD8hJycpLilbXlxcXFxdKVxcJFxceyg/Oltee31dfFxce1tefV0qXFx9KSpcXH0vLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgaW5zaWRlOiBudWxsIC8vIHNlZSBiZWxvd1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICB1cmw6IFtcbiAgICAgIC9cXGIoPzpbYS16XXszLDd9OlxcL1xcLylbXFx3XFwtKyV+XFwvLjojPT8mXSsvLFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oW15cXC9dKSg/OltcXHdcXC0rJX4uOiM9PyZdKig/IVxcL1xcLylbXFx3XFwtKyV+XFwvLjojPT8mXSk/KD8hXFwvXFwvKVxcL1tcXHdcXC0rJX5cXC8uOiM9PyZdKi8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH1cbiAgICBdLFxuICAgIGFudGlxdW90YXRpb246IHtcbiAgICAgIHBhdHRlcm46IC9cXCQoPz1cXHspLyxcbiAgICAgIGFsaWFzOiAnaW1wb3J0YW50J1xuICAgIH0sXG4gICAgbnVtYmVyOiAvXFxiXFxkK1xcYi8sXG4gICAga2V5d29yZDogL1xcYig/OmFzc2VydHxidWlsdGluc3xlbHNlfGlmfGlufGluaGVyaXR8bGV0fG51bGx8b3J8dGhlbnx3aXRoKVxcYi8sXG4gICAgZnVuY3Rpb246XG4gICAgICAvXFxiKD86YWJvcnR8YWRkfGFsbHxhbnl8YXR0ck5hbWVzfGF0dHJWYWx1ZXN8YmFzZU5hbWVPZnxjb21wYXJlVmVyc2lvbnN8Y29uY2F0TGlzdHN8Y3VycmVudFN5c3RlbXxkZWVwU2VxfGRlcml2YXRpb258ZGlyT2Z8ZGl2fGVsZW0oPzpBdCk/fGZldGNoKD86VGFyYmFsbHx1cmwpfGZpbHRlcig/OlNvdXJjZSk/fGZyb21KU09OfGdlbkxpc3R8Z2V0QXR0cnxnZXRFbnZ8aGFzQXR0cnxoYXNoU3RyaW5nfGhlYWR8aW1wb3J0fGludGVyc2VjdEF0dHJzfGlzKD86QXR0cnN8Qm9vbHxGdW5jdGlvbnxJbnR8TGlzdHxOdWxsfFN0cmluZyl8bGVuZ3RofGxlc3NUaGFufGxpc3RUb0F0dHJzfG1hcHxtdWx8cGFyc2VEcnZOYW1lfHBhdGhFeGlzdHN8cmVhZCg/OkRpcnxGaWxlKXxyZW1vdmVBdHRyc3xyZXBsYWNlU3RyaW5nc3xzZXF8c29ydHxzdHJpbmdMZW5ndGh8c3ViKD86c3RyaW5nKT98dGFpbHx0aHJvd3x0byg/OkZpbGV8SlNPTnxQYXRofFN0cmluZ3xYTUwpfHRyYWNlfHR5cGVPZilcXGJ8XFxiZm9sZGwnXFxCLyxcbiAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvLFxuICAgIG9wZXJhdG9yOiAvWz0hPD5dPT98XFwrXFwrP3xcXHxcXHx8JiZ8XFwvXFwvfC0+P3xbP0BdLyxcbiAgICBwdW5jdHVhdGlvbjogL1t7fSgpW1xcXS4sOjtdL1xuICB9XG4gIFByaXNtLmxhbmd1YWdlcy5uaXguc3RyaW5nLmluc2lkZS5pbnRlcnBvbGF0aW9uLmluc2lkZSA9IFByaXNtLmxhbmd1YWdlcy5uaXhcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwibml4IiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImdyZWVkeSIsInN0cmluZyIsImluc2lkZSIsImludGVycG9sYXRpb24iLCJsb29rYmVoaW5kIiwidXJsIiwiYW50aXF1b3RhdGlvbiIsImFsaWFzIiwibnVtYmVyIiwia2V5d29yZCIsImZ1bmN0aW9uIiwiYm9vbGVhbiIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/nix.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/nsis.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/nsis.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = nsis;\nnsis.displayName = \"nsis\";\nnsis.aliases = [];\nfunction nsis(Prism) {\n    /**\n   * Original by Jan T. Sott (http://github.com/idleberg)\n   *\n   * Includes all commands and plug-ins shipped with NSIS 3.08\n   */ Prism.languages.nsis = {\n        comment: {\n            pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|[#;].*)/,\n            lookbehind: true,\n            greedy: true\n        },\n        string: {\n            pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true\n        },\n        keyword: {\n            pattern: /(^[\\t ]*)(?:Abort|Add(?:BrandingImage|Size)|AdvSplash|Allow(?:RootDirInstall|SkipFiles)|AutoCloseWindow|BG(?:Font|Gradient|Image)|Banner|BrandingText|BringToFront|CRCCheck|Call(?:InstDLL)?|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|Create(?:Directory|Font|ShortCut)|Delete(?:INISec|INIStr|RegKey|RegValue)?|Detail(?:Print|sButtonText)|Dialer|Dir(?:Text|Var|Verify)|EnableWindow|Enum(?:RegKey|RegValue)|Exch|Exec(?:Shell(?:Wait)?|Wait)?|ExpandEnvStrings|File(?:BufSize|Close|ErrorText|Open|Read|ReadByte|ReadUTF16LE|ReadWord|Seek|Write|WriteByte|WriteUTF16LE|WriteWord)?|Find(?:Close|First|Next|Window)|FlushINI|Get(?:CurInstType|CurrentAddress|DLLVersion(?:Local)?|DlgItem|ErrorLevel|FileTime(?:Local)?|FullPathName|Function(?:Address|End)?|InstDirError|LabelAddress|TempFileName)|Goto|HideWindow|Icon|If(?:Abort|Errors|FileExists|RebootFlag|Silent)|InitPluginsDir|InstProgressFlags|Inst(?:Type(?:GetText|SetText)?)|Install(?:ButtonText|Colors|Dir(?:RegKey)?)|Int(?:64|Ptr)?CmpU?|Int(?:64)?Fmt|Int(?:Ptr)?Op|IsWindow|Lang(?:DLL|String)|License(?:BkColor|Data|ForceSelection|LangString|Text)|LoadLanguageFile|LockWindow|Log(?:Set|Text)|Manifest(?:DPIAware|SupportedOS)|Math|MessageBox|MiscButtonText|NSISdl|Name|Nop|OutFile|PE(?:DllCharacteristics|SubsysVer)|Page(?:Callbacks)?|Pop|Push|Quit|RMDir|Read(?:EnvStr|INIStr|RegDWORD|RegStr)|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|SearchPath|Section(?:End|GetFlags|GetInstTypes|GetSize|GetText|Group|In|SetFlags|SetInstTypes|SetSize|SetText)?|SendMessage|Set(?:AutoClose|BrandingImage|Compress|Compressor(?:DictSize)?|CtlColors|CurInstType|DatablockOptimize|DateSave|Details(?:Print|View)|ErrorLevel|Errors|FileAttributes|Font|OutPath|Overwrite|PluginUnload|RebootFlag|RegView|ShellVarContext|Silent)|Show(?:InstDetails|UninstDetails|Window)|Silent(?:Install|UnInstall)|Sleep|SpaceTexts|Splash|StartMenu|Str(?:CmpS?|Cpy|Len)|SubCaption|System|UnRegDLL|Unicode|UninstPage|Uninstall(?:ButtonText|Caption|Icon|SubCaption|Text)|UserInfo|VI(?:AddVersionKey|FileVersion|ProductVersion)|VPatch|Var|WindowIcon|Write(?:INIStr|Reg(?:Bin|DWORD|ExpandStr|MultiStr|None|Str)|Uninstaller)|XPStyle|ns(?:Dialogs|Exec))\\b/m,\n            lookbehind: true\n        },\n        property: /\\b(?:ARCHIVE|FILE_(?:ATTRIBUTE_ARCHIVE|ATTRIBUTE_NORMAL|ATTRIBUTE_OFFLINE|ATTRIBUTE_READONLY|ATTRIBUTE_SYSTEM|ATTRIBUTE_TEMPORARY)|HK(?:(?:CR|CU|LM)(?:32|64)?|DD|PD|U)|HKEY_(?:CLASSES_ROOT|CURRENT_CONFIG|CURRENT_USER|DYN_DATA|LOCAL_MACHINE|PERFORMANCE_DATA|USERS)|ID(?:ABORT|CANCEL|IGNORE|NO|OK|RETRY|YES)|MB_(?:ABORTRETRYIGNORE|DEFBUTTON1|DEFBUTTON2|DEFBUTTON3|DEFBUTTON4|ICONEXCLAMATION|ICONINFORMATION|ICONQUESTION|ICONSTOP|OK|OKCANCEL|RETRYCANCEL|RIGHT|RTLREADING|SETFOREGROUND|TOPMOST|USERICON|YESNO)|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY|admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user)\\b/,\n        constant: /\\$\\{[!\\w\\.:\\^-]+\\}|\\$\\([!\\w\\.:\\^-]+\\)/,\n        variable: /\\$\\w[\\w\\.]*/,\n        number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        operator: /--?|\\+\\+?|<=?|>=?|==?=?|&&?|\\|\\|?|[?*\\/~^%]/,\n        punctuation: /[{}[\\];(),.:]/,\n        important: {\n            pattern: /(^[\\t ]*)!(?:addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversion|gettlbversion|if|ifdef|ifmacrodef|ifmacrondef|ifndef|include|insertmacro|macro|macroend|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|verbose|warning)\\b/im,\n            lookbehind: true\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbnNpcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDakI7Ozs7R0FJQyxHQUNEQSxNQUFNQyxTQUFTLENBQUNKLElBQUksR0FBRztRQUNyQkssU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsUUFBUTtRQUNWO1FBQ0FDLFFBQVE7WUFDTkgsU0FBUztZQUNURSxRQUFRO1FBQ1Y7UUFDQUUsU0FBUztZQUNQSixTQUNFO1lBQ0ZDLFlBQVk7UUFDZDtRQUNBSSxVQUNFO1FBQ0ZDLFVBQVU7UUFDVkMsVUFBVTtRQUNWQyxRQUFRO1FBQ1JDLFVBQVU7UUFDVkMsYUFBYTtRQUNiQyxXQUFXO1lBQ1RYLFNBQ0U7WUFDRkMsWUFBWTtRQUNkO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9uc2lzLmpzP2ZkYTkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gbnNpc1xubnNpcy5kaXNwbGF5TmFtZSA9ICduc2lzJ1xubnNpcy5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIG5zaXMoUHJpc20pIHtcbiAgLyoqXG4gICAqIE9yaWdpbmFsIGJ5IEphbiBULiBTb3R0IChodHRwOi8vZ2l0aHViLmNvbS9pZGxlYmVyZylcbiAgICpcbiAgICogSW5jbHVkZXMgYWxsIGNvbW1hbmRzIGFuZCBwbHVnLWlucyBzaGlwcGVkIHdpdGggTlNJUyAzLjA4XG4gICAqL1xuICBQcmlzbS5sYW5ndWFnZXMubnNpcyA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvKF58W15cXFxcXSkoPzpcXC9cXCpbXFxzXFxTXSo/XFwqXFwvfFsjO10uKikvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvKFwifCcpKD86XFxcXC58KD8hXFwxKVteXFxcXFxcclxcbl0pKlxcMS8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGtleXdvcmQ6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXltcXHQgXSopKD86QWJvcnR8QWRkKD86QnJhbmRpbmdJbWFnZXxTaXplKXxBZHZTcGxhc2h8QWxsb3coPzpSb290RGlySW5zdGFsbHxTa2lwRmlsZXMpfEF1dG9DbG9zZVdpbmRvd3xCRyg/OkZvbnR8R3JhZGllbnR8SW1hZ2UpfEJhbm5lcnxCcmFuZGluZ1RleHR8QnJpbmdUb0Zyb250fENSQ0NoZWNrfENhbGwoPzpJbnN0RExMKT98Q2FwdGlvbnxDaGFuZ2VVSXxDaGVja0JpdG1hcHxDbGVhckVycm9yc3xDb21wbGV0ZWRUZXh0fENvbXBvbmVudFRleHR8Q29weUZpbGVzfENyZWF0ZSg/OkRpcmVjdG9yeXxGb250fFNob3J0Q3V0KXxEZWxldGUoPzpJTklTZWN8SU5JU3RyfFJlZ0tleXxSZWdWYWx1ZSk/fERldGFpbCg/OlByaW50fHNCdXR0b25UZXh0KXxEaWFsZXJ8RGlyKD86VGV4dHxWYXJ8VmVyaWZ5KXxFbmFibGVXaW5kb3d8RW51bSg/OlJlZ0tleXxSZWdWYWx1ZSl8RXhjaHxFeGVjKD86U2hlbGwoPzpXYWl0KT98V2FpdCk/fEV4cGFuZEVudlN0cmluZ3N8RmlsZSg/OkJ1ZlNpemV8Q2xvc2V8RXJyb3JUZXh0fE9wZW58UmVhZHxSZWFkQnl0ZXxSZWFkVVRGMTZMRXxSZWFkV29yZHxTZWVrfFdyaXRlfFdyaXRlQnl0ZXxXcml0ZVVURjE2TEV8V3JpdGVXb3JkKT98RmluZCg/OkNsb3NlfEZpcnN0fE5leHR8V2luZG93KXxGbHVzaElOSXxHZXQoPzpDdXJJbnN0VHlwZXxDdXJyZW50QWRkcmVzc3xETExWZXJzaW9uKD86TG9jYWwpP3xEbGdJdGVtfEVycm9yTGV2ZWx8RmlsZVRpbWUoPzpMb2NhbCk/fEZ1bGxQYXRoTmFtZXxGdW5jdGlvbig/OkFkZHJlc3N8RW5kKT98SW5zdERpckVycm9yfExhYmVsQWRkcmVzc3xUZW1wRmlsZU5hbWUpfEdvdG98SGlkZVdpbmRvd3xJY29ufElmKD86QWJvcnR8RXJyb3JzfEZpbGVFeGlzdHN8UmVib290RmxhZ3xTaWxlbnQpfEluaXRQbHVnaW5zRGlyfEluc3RQcm9ncmVzc0ZsYWdzfEluc3QoPzpUeXBlKD86R2V0VGV4dHxTZXRUZXh0KT8pfEluc3RhbGwoPzpCdXR0b25UZXh0fENvbG9yc3xEaXIoPzpSZWdLZXkpPyl8SW50KD86NjR8UHRyKT9DbXBVP3xJbnQoPzo2NCk/Rm10fEludCg/OlB0cik/T3B8SXNXaW5kb3d8TGFuZyg/OkRMTHxTdHJpbmcpfExpY2Vuc2UoPzpCa0NvbG9yfERhdGF8Rm9yY2VTZWxlY3Rpb258TGFuZ1N0cmluZ3xUZXh0KXxMb2FkTGFuZ3VhZ2VGaWxlfExvY2tXaW5kb3d8TG9nKD86U2V0fFRleHQpfE1hbmlmZXN0KD86RFBJQXdhcmV8U3VwcG9ydGVkT1MpfE1hdGh8TWVzc2FnZUJveHxNaXNjQnV0dG9uVGV4dHxOU0lTZGx8TmFtZXxOb3B8T3V0RmlsZXxQRSg/OkRsbENoYXJhY3RlcmlzdGljc3xTdWJzeXNWZXIpfFBhZ2UoPzpDYWxsYmFja3MpP3xQb3B8UHVzaHxRdWl0fFJNRGlyfFJlYWQoPzpFbnZTdHJ8SU5JU3RyfFJlZ0RXT1JEfFJlZ1N0cil8UmVib290fFJlZ0RMTHxSZW5hbWV8UmVxdWVzdEV4ZWN1dGlvbkxldmVsfFJlc2VydmVGaWxlfFJldHVybnxTZWFyY2hQYXRofFNlY3Rpb24oPzpFbmR8R2V0RmxhZ3N8R2V0SW5zdFR5cGVzfEdldFNpemV8R2V0VGV4dHxHcm91cHxJbnxTZXRGbGFnc3xTZXRJbnN0VHlwZXN8U2V0U2l6ZXxTZXRUZXh0KT98U2VuZE1lc3NhZ2V8U2V0KD86QXV0b0Nsb3NlfEJyYW5kaW5nSW1hZ2V8Q29tcHJlc3N8Q29tcHJlc3Nvcig/OkRpY3RTaXplKT98Q3RsQ29sb3JzfEN1ckluc3RUeXBlfERhdGFibG9ja09wdGltaXplfERhdGVTYXZlfERldGFpbHMoPzpQcmludHxWaWV3KXxFcnJvckxldmVsfEVycm9yc3xGaWxlQXR0cmlidXRlc3xGb250fE91dFBhdGh8T3ZlcndyaXRlfFBsdWdpblVubG9hZHxSZWJvb3RGbGFnfFJlZ1ZpZXd8U2hlbGxWYXJDb250ZXh0fFNpbGVudCl8U2hvdyg/Okluc3REZXRhaWxzfFVuaW5zdERldGFpbHN8V2luZG93KXxTaWxlbnQoPzpJbnN0YWxsfFVuSW5zdGFsbCl8U2xlZXB8U3BhY2VUZXh0c3xTcGxhc2h8U3RhcnRNZW51fFN0cig/OkNtcFM/fENweXxMZW4pfFN1YkNhcHRpb258U3lzdGVtfFVuUmVnRExMfFVuaWNvZGV8VW5pbnN0UGFnZXxVbmluc3RhbGwoPzpCdXR0b25UZXh0fENhcHRpb258SWNvbnxTdWJDYXB0aW9ufFRleHQpfFVzZXJJbmZvfFZJKD86QWRkVmVyc2lvbktleXxGaWxlVmVyc2lvbnxQcm9kdWN0VmVyc2lvbil8VlBhdGNofFZhcnxXaW5kb3dJY29ufFdyaXRlKD86SU5JU3RyfFJlZyg/OkJpbnxEV09SRHxFeHBhbmRTdHJ8TXVsdGlTdHJ8Tm9uZXxTdHIpfFVuaW5zdGFsbGVyKXxYUFN0eWxlfG5zKD86RGlhbG9nc3xFeGVjKSlcXGIvbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIHByb3BlcnR5OlxuICAgICAgL1xcYig/OkFSQ0hJVkV8RklMRV8oPzpBVFRSSUJVVEVfQVJDSElWRXxBVFRSSUJVVEVfTk9STUFMfEFUVFJJQlVURV9PRkZMSU5FfEFUVFJJQlVURV9SRUFET05MWXxBVFRSSUJVVEVfU1lTVEVNfEFUVFJJQlVURV9URU1QT1JBUlkpfEhLKD86KD86Q1J8Q1V8TE0pKD86MzJ8NjQpP3xERHxQRHxVKXxIS0VZXyg/OkNMQVNTRVNfUk9PVHxDVVJSRU5UX0NPTkZJR3xDVVJSRU5UX1VTRVJ8RFlOX0RBVEF8TE9DQUxfTUFDSElORXxQRVJGT1JNQU5DRV9EQVRBfFVTRVJTKXxJRCg/OkFCT1JUfENBTkNFTHxJR05PUkV8Tk98T0t8UkVUUll8WUVTKXxNQl8oPzpBQk9SVFJFVFJZSUdOT1JFfERFRkJVVFRPTjF8REVGQlVUVE9OMnxERUZCVVRUT04zfERFRkJVVFRPTjR8SUNPTkVYQ0xBTUFUSU9OfElDT05JTkZPUk1BVElPTnxJQ09OUVVFU1RJT058SUNPTlNUT1B8T0t8T0tDQU5DRUx8UkVUUllDQU5DRUx8UklHSFR8UlRMUkVBRElOR3xTRVRGT1JFR1JPVU5EfFRPUE1PU1R8VVNFUklDT058WUVTTk8pfE5PUk1BTHxPRkZMSU5FfFJFQURPTkxZfFNIQ1RYfFNIRUxMX0NPTlRFWFR8U1lTVEVNfFRFTVBPUkFSWXxhZG1pbnxhbGx8YXV0b3xib3RofGNvbG9yZWR8ZmFsc2V8Zm9yY2V8aGlkZXxoaWdoZXN0fGxhc3R1c2VkfGxlYXZlfGxpc3Rvbmx5fG5vbmV8bm9ybWFsfG5vdHNldHxvZmZ8b258b3BlbnxwcmludHxzaG93fHNpbGVudHxzaWxlbnRsb2d8c21vb3RofHRleHRvbmx5fHRydWV8dXNlcilcXGIvLFxuICAgIGNvbnN0YW50OiAvXFwkXFx7WyFcXHdcXC46XFxeLV0rXFx9fFxcJFxcKFshXFx3XFwuOlxcXi1dK1xcKS8sXG4gICAgdmFyaWFibGU6IC9cXCRcXHdbXFx3XFwuXSovLFxuICAgIG51bWJlcjogL1xcYjB4W1xcZEEtRmEtZl0rXFxifCg/OlxcYlxcZCsoPzpcXC5cXGQqKT98XFxCXFwuXFxkKykoPzpbRWVdLT9cXGQrKT8vLFxuICAgIG9wZXJhdG9yOiAvLS0/fFxcK1xcKz98PD0/fD49P3w9PT89P3wmJj98XFx8XFx8P3xbPypcXC9+XiVdLyxcbiAgICBwdW5jdHVhdGlvbjogL1t7fVtcXF07KCksLjpdLyxcbiAgICBpbXBvcnRhbnQ6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXltcXHQgXSopISg/OmFkZGluY2x1ZGVkaXJ8YWRkcGx1Z2luZGlyfGFwcGVuZGZpbGV8Y2R8ZGVmaW5lfGRlbGZpbGV8ZWNob3xlbHNlfGVuZGlmfGVycm9yfGV4ZWN1dGV8ZmluYWxpemV8Z2V0ZGxsdmVyc2lvbnxnZXR0bGJ2ZXJzaW9ufGlmfGlmZGVmfGlmbWFjcm9kZWZ8aWZtYWNyb25kZWZ8aWZuZGVmfGluY2x1ZGV8aW5zZXJ0bWFjcm98bWFjcm98bWFjcm9lbmR8bWFrZW5zaXN8cGFja2hkcnxwcmFnbWF8c2VhcmNocGFyc2V8c2VhcmNocmVwbGFjZXxzeXN0ZW18dGVtcGZpbGV8dW5kZWZ8dmVyYm9zZXx3YXJuaW5nKVxcYi9pbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwibnNpcyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiZ3JlZWR5Iiwic3RyaW5nIiwia2V5d29yZCIsInByb3BlcnR5IiwiY29uc3RhbnQiLCJ2YXJpYWJsZSIsIm51bWJlciIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iLCJpbXBvcnRhbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/nsis.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/objectivec.js":
/*!***************************************************!*\
  !*** ./node_modules/refractor/lang/objectivec.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorC = __webpack_require__(/*! ./c.js */ \"(ssr)/./node_modules/refractor/lang/c.js\");\nmodule.exports = objectivec;\nobjectivec.displayName = \"objectivec\";\nobjectivec.aliases = [\n    \"objc\"\n];\nfunction objectivec(Prism) {\n    Prism.register(refractorC);\n    Prism.languages.objectivec = Prism.languages.extend(\"c\", {\n        string: {\n            pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n            greedy: true\n        },\n        keyword: /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n        operator: /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n    });\n    delete Prism.languages.objectivec[\"class-name\"];\n    Prism.languages.objc = Prism.languages.objectivec;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvb2JqZWN0aXZlYy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLElBQUlBLGFBQWFDLG1CQUFPQSxDQUFDO0FBQ3pCQyxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxXQUFXQyxXQUFXLEdBQUc7QUFDekJELFdBQVdFLE9BQU8sR0FBRztJQUFDO0NBQU87QUFDN0IsU0FBU0YsV0FBV0csS0FBSztJQUN2QkEsTUFBTUMsUUFBUSxDQUFDUjtJQUNmTyxNQUFNRSxTQUFTLENBQUNMLFVBQVUsR0FBR0csTUFBTUUsU0FBUyxDQUFDQyxNQUFNLENBQUMsS0FBSztRQUN2REMsUUFBUTtZQUNOQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBQyxTQUNFO1FBQ0ZDLFVBQVU7SUFDWjtJQUNBLE9BQU9SLE1BQU1FLFNBQVMsQ0FBQ0wsVUFBVSxDQUFDLGFBQWE7SUFDL0NHLE1BQU1FLFNBQVMsQ0FBQ08sSUFBSSxHQUFHVCxNQUFNRSxTQUFTLENBQUNMLFVBQVU7QUFDbkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvb2JqZWN0aXZlYy5qcz9lZmM4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xudmFyIHJlZnJhY3RvckMgPSByZXF1aXJlKCcuL2MuanMnKVxubW9kdWxlLmV4cG9ydHMgPSBvYmplY3RpdmVjXG5vYmplY3RpdmVjLmRpc3BsYXlOYW1lID0gJ29iamVjdGl2ZWMnXG5vYmplY3RpdmVjLmFsaWFzZXMgPSBbJ29iamMnXVxuZnVuY3Rpb24gb2JqZWN0aXZlYyhQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JDKVxuICBQcmlzbS5sYW5ndWFnZXMub2JqZWN0aXZlYyA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2MnLCB7XG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvQD9cIig/OlxcXFwoPzpcXHJcXG58W1xcc1xcU10pfFteXCJcXFxcXFxyXFxuXSkqXCIvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OmFzbXxhdXRvfGJyZWFrfGNhc2V8Y2hhcnxjb25zdHxjb250aW51ZXxkZWZhdWx0fGRvfGRvdWJsZXxlbHNlfGVudW18ZXh0ZXJufGZsb2F0fGZvcnxnb3RvfGlmfGlufGlubGluZXxpbnR8bG9uZ3xyZWdpc3RlcnxyZXR1cm58c2VsZnxzaG9ydHxzaWduZWR8c2l6ZW9mfHN0YXRpY3xzdHJ1Y3R8c3VwZXJ8c3dpdGNofHR5cGVkZWZ8dHlwZW9mfHVuaW9ufHVuc2lnbmVkfHZvaWR8dm9sYXRpbGV8d2hpbGUpXFxifCg/OkBpbnRlcmZhY2V8QGVuZHxAaW1wbGVtZW50YXRpb258QHByb3RvY29sfEBjbGFzc3xAcHVibGljfEBwcm90ZWN0ZWR8QHByaXZhdGV8QHByb3BlcnR5fEB0cnl8QGNhdGNofEBmaW5hbGx5fEB0aHJvd3xAc3ludGhlc2l6ZXxAZHluYW1pY3xAc2VsZWN0b3IpXFxiLyxcbiAgICBvcGVyYXRvcjogLy1bLT5dP3xcXCtcXCs/fCE9P3w8PD89P3w+Pj89P3w9PT98JiY/fFxcfFxcfD98W35eJT8qXFwvQF0vXG4gIH0pXG4gIGRlbGV0ZSBQcmlzbS5sYW5ndWFnZXMub2JqZWN0aXZlY1snY2xhc3MtbmFtZSddXG4gIFByaXNtLmxhbmd1YWdlcy5vYmpjID0gUHJpc20ubGFuZ3VhZ2VzLm9iamVjdGl2ZWNcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JDIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJvYmplY3RpdmVjIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImV4dGVuZCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJrZXl3b3JkIiwib3BlcmF0b3IiLCJvYmpjIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/objectivec.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/ocaml.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/ocaml.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = ocaml;\nocaml.displayName = \"ocaml\";\nocaml.aliases = [];\nfunction ocaml(Prism) {\n    // https://ocaml.org/manual/lex.html\n    Prism.languages.ocaml = {\n        comment: {\n            pattern: /\\(\\*[\\s\\S]*?\\*\\)/,\n            greedy: true\n        },\n        char: {\n            pattern: /'(?:[^\\\\\\r\\n']|\\\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,\n            greedy: true\n        },\n        string: [\n            {\n                pattern: /\"(?:\\\\(?:[\\s\\S]|\\r\\n)|[^\\\\\\r\\n\"])*\"/,\n                greedy: true\n            },\n            {\n                pattern: /\\{([a-z_]*)\\|[\\s\\S]*?\\|\\1\\}/,\n                greedy: true\n            }\n        ],\n        number: [\n            // binary and octal\n            /\\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\\b/i,\n            /\\b0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]*)?(?:p[+-]?\\d[\\d_]*)?(?!\\w)/i,\n            /\\b\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?(?!\\w)/i\n        ],\n        directive: {\n            pattern: /\\B#\\w+/,\n            alias: \"property\"\n        },\n        label: {\n            pattern: /\\B~\\w+/,\n            alias: \"property\"\n        },\n        \"type-variable\": {\n            pattern: /\\B'\\w+/,\n            alias: \"function\"\n        },\n        variant: {\n            pattern: /`\\w+/,\n            alias: \"symbol\"\n        },\n        // For the list of keywords and operators,\n        // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n        keyword: /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        \"operator-like-punctuation\": {\n            pattern: /\\[[<>|]|[>|]\\]|\\{<|>\\}/,\n            alias: \"punctuation\"\n        },\n        // Custom operators are allowed\n        operator: /\\.[.~]|:[=>]|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n        punctuation: /;;|::|[(){}\\[\\].,:;#]|\\b_\\b/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvb2NhbWwuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsTUFBTUMsV0FBVyxHQUFHO0FBQ3BCRCxNQUFNRSxPQUFPLEdBQUcsRUFBRTtBQUNsQixTQUFTRixNQUFNRyxLQUFLO0lBQ2xCLG9DQUFvQztJQUNwQ0EsTUFBTUMsU0FBUyxDQUFDSixLQUFLLEdBQUc7UUFDdEJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsTUFBTTtZQUNKRixTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBRSxRQUFRO1lBQ047Z0JBQ0VILFNBQVM7Z0JBQ1RDLFFBQVE7WUFDVjtZQUNBO2dCQUNFRCxTQUFTO2dCQUNUQyxRQUFRO1lBQ1Y7U0FDRDtRQUNERyxRQUFRO1lBQ04sbUJBQW1CO1lBQ25CO1lBQ0E7WUFDQTtTQUNEO1FBQ0RDLFdBQVc7WUFDVEwsU0FBUztZQUNUTSxPQUFPO1FBQ1Q7UUFDQUMsT0FBTztZQUNMUCxTQUFTO1lBQ1RNLE9BQU87UUFDVDtRQUNBLGlCQUFpQjtZQUNmTixTQUFTO1lBQ1RNLE9BQU87UUFDVDtRQUNBRSxTQUFTO1lBQ1BSLFNBQVM7WUFDVE0sT0FBTztRQUNUO1FBQ0EsMENBQTBDO1FBQzFDLGlFQUFpRTtRQUNqRUcsU0FDRTtRQUNGQyxTQUFTO1FBQ1QsNkJBQTZCO1lBQzNCVixTQUFTO1lBQ1RNLE9BQU87UUFDVDtRQUNBLCtCQUErQjtRQUMvQkssVUFDRTtRQUNGQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9vY2FtbC5qcz8wOTQ0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IG9jYW1sXG5vY2FtbC5kaXNwbGF5TmFtZSA9ICdvY2FtbCdcbm9jYW1sLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gb2NhbWwoUHJpc20pIHtcbiAgLy8gaHR0cHM6Ly9vY2FtbC5vcmcvbWFudWFsL2xleC5odG1sXG4gIFByaXNtLmxhbmd1YWdlcy5vY2FtbCA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvXFwoXFwqW1xcc1xcU10qP1xcKlxcKS8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGNoYXI6IHtcbiAgICAgIHBhdHRlcm46IC8nKD86W15cXFxcXFxyXFxuJ118XFxcXCg/Oi58W294XT9bMC05YS1mXXsxLDN9KSknL2ksXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHN0cmluZzogW1xuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvXCIoPzpcXFxcKD86W1xcc1xcU118XFxyXFxuKXxbXlxcXFxcXHJcXG5cIl0pKlwiLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvXFx7KFthLXpfXSopXFx8W1xcc1xcU10qP1xcfFxcMVxcfS8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfVxuICAgIF0sXG4gICAgbnVtYmVyOiBbXG4gICAgICAvLyBiaW5hcnkgYW5kIG9jdGFsXG4gICAgICAvXFxiKD86MGJbMDFdWzAxX10qfDBvWzAtN11bMC03X10qKVxcYi9pLCAvLyBoZXhhZGVjaW1hbFxuICAgICAgL1xcYjB4W2EtZjAtOV1bYS1mMC05X10qKD86XFwuW2EtZjAtOV9dKik/KD86cFsrLV0/XFxkW1xcZF9dKik/KD8hXFx3KS9pLCAvLyBkZWNpbWFsXG4gICAgICAvXFxiXFxkW1xcZF9dKig/OlxcLltcXGRfXSopPyg/OmVbKy1dP1xcZFtcXGRfXSopPyg/IVxcdykvaVxuICAgIF0sXG4gICAgZGlyZWN0aXZlOiB7XG4gICAgICBwYXR0ZXJuOiAvXFxCI1xcdysvLFxuICAgICAgYWxpYXM6ICdwcm9wZXJ0eSdcbiAgICB9LFxuICAgIGxhYmVsOiB7XG4gICAgICBwYXR0ZXJuOiAvXFxCflxcdysvLFxuICAgICAgYWxpYXM6ICdwcm9wZXJ0eSdcbiAgICB9LFxuICAgICd0eXBlLXZhcmlhYmxlJzoge1xuICAgICAgcGF0dGVybjogL1xcQidcXHcrLyxcbiAgICAgIGFsaWFzOiAnZnVuY3Rpb24nXG4gICAgfSxcbiAgICB2YXJpYW50OiB7XG4gICAgICBwYXR0ZXJuOiAvYFxcdysvLFxuICAgICAgYWxpYXM6ICdzeW1ib2wnXG4gICAgfSxcbiAgICAvLyBGb3IgdGhlIGxpc3Qgb2Yga2V5d29yZHMgYW5kIG9wZXJhdG9ycyxcbiAgICAvLyBzZWU6IGh0dHA6Ly9jYW1sLmlucmlhLmZyL3B1Yi9kb2NzL21hbnVhbC1vY2FtbC9sZXguaHRtbCNzZWM4NFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YXN8YXNzZXJ0fGJlZ2lufGNsYXNzfGNvbnN0cmFpbnR8ZG98ZG9uZXxkb3dudG98ZWxzZXxlbmR8ZXhjZXB0aW9ufGV4dGVybmFsfGZvcnxmdW58ZnVuY3Rpb258ZnVuY3RvcnxpZnxpbnxpbmNsdWRlfGluaGVyaXR8aW5pdGlhbGl6ZXJ8bGF6eXxsZXR8bWF0Y2h8bWV0aG9kfG1vZHVsZXxtdXRhYmxlfG5ld3xub25yZWN8b2JqZWN0fG9mfG9wZW58cHJpdmF0ZXxyZWN8c2lnfHN0cnVjdHx0aGVufHRvfHRyeXx0eXBlfHZhbHx2YWx1ZXx2aXJ0dWFsfHdoZW58d2hlcmV8d2hpbGV8d2l0aClcXGIvLFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAgJ29wZXJhdG9yLWxpa2UtcHVuY3R1YXRpb24nOiB7XG4gICAgICBwYXR0ZXJuOiAvXFxbWzw+fF18Wz58XVxcXXxcXHs8fD5cXH0vLFxuICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbidcbiAgICB9LFxuICAgIC8vIEN1c3RvbSBvcGVyYXRvcnMgYXJlIGFsbG93ZWRcbiAgICBvcGVyYXRvcjpcbiAgICAgIC9cXC5bLn5dfDpbPT5dfFs9PD5AXnwmK1xcLSpcXC8kJSE/fl1bISQlJiorXFwtLlxcLzo8PT4/QF58fl0qfFxcYig/OmFuZHxhc3J8bGFuZHxsb3J8bHNsfGxzcnxseG9yfG1vZHxvcilcXGIvLFxuICAgIHB1bmN0dWF0aW9uOiAvOzt8Ojp8Wygpe31cXFtcXF0uLDo7I118XFxiX1xcYi9cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJvY2FtbCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJncmVlZHkiLCJjaGFyIiwic3RyaW5nIiwibnVtYmVyIiwiZGlyZWN0aXZlIiwiYWxpYXMiLCJsYWJlbCIsInZhcmlhbnQiLCJrZXl3b3JkIiwiYm9vbGVhbiIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/ocaml.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/opencl.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/opencl.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorC = __webpack_require__(/*! ./c.js */ \"(ssr)/./node_modules/refractor/lang/c.js\");\nmodule.exports = opencl;\nopencl.displayName = \"opencl\";\nopencl.aliases = [];\nfunction opencl(Prism) {\n    Prism.register(refractorC);\n    (function(Prism) {\n        /* OpenCL kernel language */ Prism.languages.opencl = Prism.languages.extend(\"c\", {\n            // Extracted from the official specs (2.0) and http://streamcomputing.eu/downloads/?opencl.lang (opencl-keywords, opencl-types) and http://sourceforge.net/tracker/?func=detail&aid=2957794&group_id=95717&atid=612384 (Words2, partly Words3)\n            keyword: /\\b(?:(?:__)?(?:constant|global|kernel|local|private|read_only|read_write|write_only)|__attribute__|auto|(?:bool|u?(?:char|int|long|short)|half|quad)(?:2|3|4|8|16)?|break|case|complex|const|continue|(?:double|float)(?:16(?:x(?:1|2|4|8|16))?|1x(?:1|2|4|8|16)|2(?:x(?:1|2|4|8|16))?|3|4(?:x(?:1|2|4|8|16))?|8(?:x(?:1|2|4|8|16))?)?|default|do|else|enum|extern|for|goto|if|imaginary|inline|packed|pipe|register|restrict|return|signed|sizeof|static|struct|switch|typedef|uniform|union|unsigned|void|volatile|while)\\b/,\n            // Extracted from http://streamcomputing.eu/downloads/?opencl.lang (opencl-const)\n            // Math Constants: https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/mathConstants.html\n            // Macros and Limits: https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/macroLimits.html\n            number: /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[fuhl]{0,4}/i,\n            boolean: /\\b(?:false|true)\\b/,\n            \"constant-opencl-kernel\": {\n                pattern: /\\b(?:CHAR_(?:BIT|MAX|MIN)|CLK_(?:ADDRESS_(?:CLAMP(?:_TO_EDGE)?|NONE|REPEAT)|FILTER_(?:LINEAR|NEAREST)|(?:GLOBAL|LOCAL)_MEM_FENCE|NORMALIZED_COORDS_(?:FALSE|TRUE))|CL_(?:BGRA|(?:HALF_)?FLOAT|INTENSITY|LUMINANCE|A?R?G?B?[Ax]?|(?:(?:UN)?SIGNED|[US]NORM)_(?:INT(?:8|16|32))|UNORM_(?:INT_101010|SHORT_(?:555|565)))|(?:DBL|FLT|HALF)_(?:DIG|EPSILON|(?:MAX|MIN)(?:(?:_10)?_EXP)?|MANT_DIG)|FLT_RADIX|HUGE_VALF?|(?:INT|LONG|SCHAR|SHRT)_(?:MAX|MIN)|INFINITY|MAXFLOAT|M_(?:[12]_PI|2_SQRTPI|E|LN(?:2|10)|LOG(?:2|10)E?|PI(?:_[24])?|SQRT(?:1_2|2))(?:_F|_H)?|NAN|(?:UCHAR|UINT|ULONG|USHRT)_MAX)\\b/,\n                alias: \"constant\"\n            }\n        });\n        Prism.languages.insertBefore(\"opencl\", \"class-name\", {\n            // https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/scalarDataTypes.html\n            // https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/otherDataTypes.html\n            \"builtin-type\": {\n                pattern: /\\b(?:_cl_(?:command_queue|context|device_id|event|kernel|mem|platform_id|program|sampler)|cl_(?:image_format|mem_fence_flags)|clk_event_t|event_t|image(?:1d_(?:array_|buffer_)?t|2d_(?:array_(?:depth_|msaa_depth_|msaa_)?|depth_|msaa_depth_|msaa_)?t|3d_t)|intptr_t|ndrange_t|ptrdiff_t|queue_t|reserve_id_t|sampler_t|size_t|uintptr_t)\\b/,\n                alias: \"keyword\"\n            }\n        });\n        var attributes = {\n            // Extracted from http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-types and opencl-host)\n            \"type-opencl-host\": {\n                pattern: /\\b(?:cl_(?:GLenum|GLint|GLuin|addressing_mode|bitfield|bool|buffer_create_type|build_status|channel_(?:order|type)|(?:u?(?:char|int|long|short)|double|float)(?:2|3|4|8|16)?|command_(?:queue(?:_info|_properties)?|type)|context(?:_info|_properties)?|device_(?:exec_capabilities|fp_config|id|info|local_mem_type|mem_cache_type|type)|(?:event|sampler)(?:_info)?|filter_mode|half|image_info|kernel(?:_info|_work_group_info)?|map_flags|mem(?:_flags|_info|_object_type)?|platform_(?:id|info)|profiling_info|program(?:_build_info|_info)?))\\b/,\n                alias: \"keyword\"\n            },\n            \"boolean-opencl-host\": {\n                pattern: /\\bCL_(?:FALSE|TRUE)\\b/,\n                alias: \"boolean\"\n            },\n            // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-const)\n            \"constant-opencl-host\": {\n                pattern: /\\bCL_(?:A|ABGR|ADDRESS_(?:CLAMP(?:_TO_EDGE)?|MIRRORED_REPEAT|NONE|REPEAT)|ARGB|BGRA|BLOCKING|BUFFER_CREATE_TYPE_REGION|BUILD_(?:ERROR|IN_PROGRESS|NONE|PROGRAM_FAILURE|SUCCESS)|COMMAND_(?:ACQUIRE_GL_OBJECTS|BARRIER|COPY_(?:BUFFER(?:_RECT|_TO_IMAGE)?|IMAGE(?:_TO_BUFFER)?)|FILL_(?:BUFFER|IMAGE)|MAP(?:_BUFFER|_IMAGE)|MARKER|MIGRATE(?:_SVM)?_MEM_OBJECTS|NATIVE_KERNEL|NDRANGE_KERNEL|READ_(?:BUFFER(?:_RECT)?|IMAGE)|RELEASE_GL_OBJECTS|SVM_(?:FREE|MAP|MEMCPY|MEMFILL|UNMAP)|TASK|UNMAP_MEM_OBJECT|USER|WRITE_(?:BUFFER(?:_RECT)?|IMAGE))|COMPILER_NOT_AVAILABLE|COMPILE_PROGRAM_FAILURE|COMPLETE|CONTEXT_(?:DEVICES|INTEROP_USER_SYNC|NUM_DEVICES|PLATFORM|PROPERTIES|REFERENCE_COUNT)|DEPTH(?:_STENCIL)?|DEVICE_(?:ADDRESS_BITS|AFFINITY_DOMAIN_(?:L[1-4]_CACHE|NEXT_PARTITIONABLE|NUMA)|AVAILABLE|BUILT_IN_KERNELS|COMPILER_AVAILABLE|DOUBLE_FP_CONFIG|ENDIAN_LITTLE|ERROR_CORRECTION_SUPPORT|EXECUTION_CAPABILITIES|EXTENSIONS|GLOBAL_(?:MEM_(?:CACHELINE_SIZE|CACHE_SIZE|CACHE_TYPE|SIZE)|VARIABLE_PREFERRED_TOTAL_SIZE)|HOST_UNIFIED_MEMORY|IL_VERSION|IMAGE(?:2D_MAX_(?:HEIGHT|WIDTH)|3D_MAX_(?:DEPTH|HEIGHT|WIDTH)|_BASE_ADDRESS_ALIGNMENT|_MAX_ARRAY_SIZE|_MAX_BUFFER_SIZE|_PITCH_ALIGNMENT|_SUPPORT)|LINKER_AVAILABLE|LOCAL_MEM_SIZE|LOCAL_MEM_TYPE|MAX_(?:CLOCK_FREQUENCY|COMPUTE_UNITS|CONSTANT_ARGS|CONSTANT_BUFFER_SIZE|GLOBAL_VARIABLE_SIZE|MEM_ALLOC_SIZE|NUM_SUB_GROUPS|ON_DEVICE_(?:EVENTS|QUEUES)|PARAMETER_SIZE|PIPE_ARGS|READ_IMAGE_ARGS|READ_WRITE_IMAGE_ARGS|SAMPLERS|WORK_GROUP_SIZE|WORK_ITEM_DIMENSIONS|WORK_ITEM_SIZES|WRITE_IMAGE_ARGS)|MEM_BASE_ADDR_ALIGN|MIN_DATA_TYPE_ALIGN_SIZE|NAME|NATIVE_VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT)|NOT_(?:AVAILABLE|FOUND)|OPENCL_C_VERSION|PARENT_DEVICE|PARTITION_(?:AFFINITY_DOMAIN|BY_AFFINITY_DOMAIN|BY_COUNTS|BY_COUNTS_LIST_END|EQUALLY|FAILED|MAX_SUB_DEVICES|PROPERTIES|TYPE)|PIPE_MAX_(?:ACTIVE_RESERVATIONS|PACKET_SIZE)|PLATFORM|PREFERRED_(?:GLOBAL_ATOMIC_ALIGNMENT|INTEROP_USER_SYNC|LOCAL_ATOMIC_ALIGNMENT|PLATFORM_ATOMIC_ALIGNMENT|VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT))|PRINTF_BUFFER_SIZE|PROFILE|PROFILING_TIMER_RESOLUTION|QUEUE_(?:ON_(?:DEVICE_(?:MAX_SIZE|PREFERRED_SIZE|PROPERTIES)|HOST_PROPERTIES)|PROPERTIES)|REFERENCE_COUNT|SINGLE_FP_CONFIG|SUB_GROUP_INDEPENDENT_FORWARD_PROGRESS|SVM_(?:ATOMICS|CAPABILITIES|COARSE_GRAIN_BUFFER|FINE_GRAIN_BUFFER|FINE_GRAIN_SYSTEM)|TYPE(?:_ACCELERATOR|_ALL|_CPU|_CUSTOM|_DEFAULT|_GPU)?|VENDOR(?:_ID)?|VERSION)|DRIVER_VERSION|EVENT_(?:COMMAND_(?:EXECUTION_STATUS|QUEUE|TYPE)|CONTEXT|REFERENCE_COUNT)|EXEC_(?:KERNEL|NATIVE_KERNEL|STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST)|FILTER_(?:LINEAR|NEAREST)|FLOAT|FP_(?:CORRECTLY_ROUNDED_DIVIDE_SQRT|DENORM|FMA|INF_NAN|ROUND_TO_INF|ROUND_TO_NEAREST|ROUND_TO_ZERO|SOFT_FLOAT)|GLOBAL|HALF_FLOAT|IMAGE_(?:ARRAY_SIZE|BUFFER|DEPTH|ELEMENT_SIZE|FORMAT|FORMAT_MISMATCH|FORMAT_NOT_SUPPORTED|HEIGHT|NUM_MIP_LEVELS|NUM_SAMPLES|ROW_PITCH|SLICE_PITCH|WIDTH)|INTENSITY|INVALID_(?:ARG_INDEX|ARG_SIZE|ARG_VALUE|BINARY|BUFFER_SIZE|BUILD_OPTIONS|COMMAND_QUEUE|COMPILER_OPTIONS|CONTEXT|DEVICE|DEVICE_PARTITION_COUNT|DEVICE_QUEUE|DEVICE_TYPE|EVENT|EVENT_WAIT_LIST|GLOBAL_OFFSET|GLOBAL_WORK_SIZE|GL_OBJECT|HOST_PTR|IMAGE_DESCRIPTOR|IMAGE_FORMAT_DESCRIPTOR|IMAGE_SIZE|KERNEL|KERNEL_ARGS|KERNEL_DEFINITION|KERNEL_NAME|LINKER_OPTIONS|MEM_OBJECT|MIP_LEVEL|OPERATION|PIPE_SIZE|PLATFORM|PROGRAM|PROGRAM_EXECUTABLE|PROPERTY|QUEUE_PROPERTIES|SAMPLER|VALUE|WORK_DIMENSION|WORK_GROUP_SIZE|WORK_ITEM_SIZE)|KERNEL_(?:ARG_(?:ACCESS_(?:NONE|QUALIFIER|READ_ONLY|READ_WRITE|WRITE_ONLY)|ADDRESS_(?:CONSTANT|GLOBAL|LOCAL|PRIVATE|QUALIFIER)|INFO_NOT_AVAILABLE|NAME|TYPE_(?:CONST|NAME|NONE|PIPE|QUALIFIER|RESTRICT|VOLATILE))|ATTRIBUTES|COMPILE_NUM_SUB_GROUPS|COMPILE_WORK_GROUP_SIZE|CONTEXT|EXEC_INFO_SVM_FINE_GRAIN_SYSTEM|EXEC_INFO_SVM_PTRS|FUNCTION_NAME|GLOBAL_WORK_SIZE|LOCAL_MEM_SIZE|LOCAL_SIZE_FOR_SUB_GROUP_COUNT|MAX_NUM_SUB_GROUPS|MAX_SUB_GROUP_SIZE_FOR_NDRANGE|NUM_ARGS|PREFERRED_WORK_GROUP_SIZE_MULTIPLE|PRIVATE_MEM_SIZE|PROGRAM|REFERENCE_COUNT|SUB_GROUP_COUNT_FOR_NDRANGE|WORK_GROUP_SIZE)|LINKER_NOT_AVAILABLE|LINK_PROGRAM_FAILURE|LOCAL|LUMINANCE|MAP_(?:FAILURE|READ|WRITE|WRITE_INVALIDATE_REGION)|MEM_(?:ALLOC_HOST_PTR|ASSOCIATED_MEMOBJECT|CONTEXT|COPY_HOST_PTR|COPY_OVERLAP|FLAGS|HOST_NO_ACCESS|HOST_PTR|HOST_READ_ONLY|HOST_WRITE_ONLY|KERNEL_READ_AND_WRITE|MAP_COUNT|OBJECT_(?:ALLOCATION_FAILURE|BUFFER|IMAGE1D|IMAGE1D_ARRAY|IMAGE1D_BUFFER|IMAGE2D|IMAGE2D_ARRAY|IMAGE3D|PIPE)|OFFSET|READ_ONLY|READ_WRITE|REFERENCE_COUNT|SIZE|SVM_ATOMICS|SVM_FINE_GRAIN_BUFFER|TYPE|USES_SVM_POINTER|USE_HOST_PTR|WRITE_ONLY)|MIGRATE_MEM_OBJECT_(?:CONTENT_UNDEFINED|HOST)|MISALIGNED_SUB_BUFFER_OFFSET|NONE|NON_BLOCKING|OUT_OF_(?:HOST_MEMORY|RESOURCES)|PIPE_(?:MAX_PACKETS|PACKET_SIZE)|PLATFORM_(?:EXTENSIONS|HOST_TIMER_RESOLUTION|NAME|PROFILE|VENDOR|VERSION)|PROFILING_(?:COMMAND_(?:COMPLETE|END|QUEUED|START|SUBMIT)|INFO_NOT_AVAILABLE)|PROGRAM_(?:BINARIES|BINARY_SIZES|BINARY_TYPE(?:_COMPILED_OBJECT|_EXECUTABLE|_LIBRARY|_NONE)?|BUILD_(?:GLOBAL_VARIABLE_TOTAL_SIZE|LOG|OPTIONS|STATUS)|CONTEXT|DEVICES|IL|KERNEL_NAMES|NUM_DEVICES|NUM_KERNELS|REFERENCE_COUNT|SOURCE)|QUEUED|QUEUE_(?:CONTEXT|DEVICE|DEVICE_DEFAULT|ON_DEVICE|ON_DEVICE_DEFAULT|OUT_OF_ORDER_EXEC_MODE_ENABLE|PROFILING_ENABLE|PROPERTIES|REFERENCE_COUNT|SIZE)|R|RA|READ_(?:ONLY|WRITE)_CACHE|RG|RGB|RGBA|RGBx|RGx|RUNNING|Rx|SAMPLER_(?:ADDRESSING_MODE|CONTEXT|FILTER_MODE|LOD_MAX|LOD_MIN|MIP_FILTER_MODE|NORMALIZED_COORDS|REFERENCE_COUNT)|(?:UN)?SIGNED_INT(?:8|16|32)|SNORM_INT(?:8|16)|SUBMITTED|SUCCESS|UNORM_INT(?:8|16|24|_101010|_101010_2)|UNORM_SHORT_(?:555|565)|VERSION_(?:1_0|1_1|1_2|2_0|2_1)|sBGRA|sRGB|sRGBA|sRGBx)\\b/,\n                alias: \"constant\"\n            },\n            // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-host)\n            \"function-opencl-host\": {\n                pattern: /\\bcl(?:BuildProgram|CloneKernel|CompileProgram|Create(?:Buffer|CommandQueue(?:WithProperties)?|Context|ContextFromType|Image|Image2D|Image3D|Kernel|KernelsInProgram|Pipe|ProgramWith(?:Binary|BuiltInKernels|IL|Source)|Sampler|SamplerWithProperties|SubBuffer|SubDevices|UserEvent)|Enqueue(?:(?:Barrier|Marker)(?:WithWaitList)?|Copy(?:Buffer(?:Rect|ToImage)?|Image(?:ToBuffer)?)|(?:Fill|Map)(?:Buffer|Image)|MigrateMemObjects|NDRangeKernel|NativeKernel|(?:Read|Write)(?:Buffer(?:Rect)?|Image)|SVM(?:Free|Map|MemFill|Memcpy|MigrateMem|Unmap)|Task|UnmapMemObject|WaitForEvents)|Finish|Flush|Get(?:CommandQueueInfo|ContextInfo|Device(?:AndHostTimer|IDs|Info)|Event(?:Profiling)?Info|ExtensionFunctionAddress(?:ForPlatform)?|HostTimer|ImageInfo|Kernel(?:ArgInfo|Info|SubGroupInfo|WorkGroupInfo)|MemObjectInfo|PipeInfo|Platform(?:IDs|Info)|Program(?:Build)?Info|SamplerInfo|SupportedImageFormats)|LinkProgram|(?:Release|Retain)(?:CommandQueue|Context|Device|Event|Kernel|MemObject|Program|Sampler)|SVM(?:Alloc|Free)|Set(?:CommandQueueProperty|DefaultDeviceCommandQueue|EventCallback|Kernel|Kernel(?:Arg(?:SVMPointer)?|ExecInfo)|MemObjectDestructorCallback|UserEventStatus)|Unload(?:Platform)?Compiler|WaitForEvents)\\b/,\n                alias: \"function\"\n            }\n        };\n        /* OpenCL host API */ Prism.languages.insertBefore(\"c\", \"keyword\", attributes) // C++ includes everything from the OpenCL C host API plus the classes defined in cl2.h\n        ;\n        if (Prism.languages.cpp) {\n            // Extracted from doxygen class list http://github.khronos.org/OpenCL-CLHPP/annotated.html\n            attributes[\"type-opencl-host-cpp\"] = {\n                pattern: /\\b(?:Buffer|BufferGL|BufferRenderGL|CommandQueue|Context|Device|DeviceCommandQueue|EnqueueArgs|Event|Image|Image1D|Image1DArray|Image1DBuffer|Image2D|Image2DArray|Image2DGL|Image3D|Image3DGL|ImageFormat|ImageGL|Kernel|KernelFunctor|LocalSpaceArg|Memory|NDRange|Pipe|Platform|Program|SVMAllocator|SVMTraitAtomic|SVMTraitCoarse|SVMTraitFine|SVMTraitReadOnly|SVMTraitReadWrite|SVMTraitWriteOnly|Sampler|UserEvent)\\b/,\n                alias: \"keyword\"\n            };\n            Prism.languages.insertBefore(\"cpp\", \"keyword\", attributes);\n        }\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/opencl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/openqasm.js":
/*!*************************************************!*\
  !*** ./node_modules/refractor/lang/openqasm.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = openqasm;\nopenqasm.displayName = \"openqasm\";\nopenqasm.aliases = [\n    \"qasm\"\n];\nfunction openqasm(Prism) {\n    // https://qiskit.github.io/openqasm/grammar/index.html\n    Prism.languages.openqasm = {\n        comment: /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,\n        string: {\n            pattern: /\"[^\"\\r\\n\\t]*\"|'[^'\\r\\n\\t]*'/,\n            greedy: true\n        },\n        keyword: /\\b(?:CX|OPENQASM|U|barrier|boxas|boxto|break|const|continue|ctrl|def|defcal|defcalgrammar|delay|else|end|for|gate|gphase|if|in|include|inv|kernel|lengthof|let|measure|pow|reset|return|rotary|stretchinf|while)\\b|#pragma\\b/,\n        \"class-name\": /\\b(?:angle|bit|bool|creg|fixed|float|int|length|qreg|qubit|stretch|uint)\\b/,\n        function: /\\b(?:cos|exp|ln|popcount|rotl|rotr|sin|sqrt|tan)\\b(?=\\s*\\()/,\n        constant: /\\b(?:euler|pi|tau)\\b|π|𝜏|ℇ/,\n        number: {\n            pattern: /(^|[^.\\w$])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?(?:dt|ns|us|µs|ms|s)?/i,\n            lookbehind: true\n        },\n        operator: /->|>>=?|<<=?|&&|\\|\\||\\+\\+|--|[!=<>&|~^+\\-*/%]=?|@/,\n        punctuation: /[(){}\\[\\];,:.]/\n    };\n    Prism.languages.qasm = Prism.languages.openqasm;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvb3BlbnFhc20uanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsU0FBU0MsV0FBVyxHQUFHO0FBQ3ZCRCxTQUFTRSxPQUFPLEdBQUc7SUFBQztDQUFPO0FBQzNCLFNBQVNGLFNBQVNHLEtBQUs7SUFDckIsdURBQXVEO0lBQ3ZEQSxNQUFNQyxTQUFTLENBQUNKLFFBQVEsR0FBRztRQUN6QkssU0FBUztRQUNUQyxRQUFRO1lBQ05DLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FDLFNBQ0U7UUFDRixjQUNFO1FBQ0ZDLFVBQVU7UUFDVkMsVUFBVTtRQUNWQyxRQUFRO1lBQ05MLFNBQ0U7WUFDRk0sWUFBWTtRQUNkO1FBQ0FDLFVBQVU7UUFDVkMsYUFBYTtJQUNmO0lBQ0FaLE1BQU1DLFNBQVMsQ0FBQ1ksSUFBSSxHQUFHYixNQUFNQyxTQUFTLENBQUNKLFFBQVE7QUFDakQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvb3BlbnFhc20uanM/MDQzYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBvcGVucWFzbVxub3BlbnFhc20uZGlzcGxheU5hbWUgPSAnb3BlbnFhc20nXG5vcGVucWFzbS5hbGlhc2VzID0gWydxYXNtJ11cbmZ1bmN0aW9uIG9wZW5xYXNtKFByaXNtKSB7XG4gIC8vIGh0dHBzOi8vcWlza2l0LmdpdGh1Yi5pby9vcGVucWFzbS9ncmFtbWFyL2luZGV4Lmh0bWxcbiAgUHJpc20ubGFuZ3VhZ2VzLm9wZW5xYXNtID0ge1xuICAgIGNvbW1lbnQ6IC9cXC9cXCpbXFxzXFxTXSo/XFwqXFwvfFxcL1xcLy4qLyxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIlteXCJcXHJcXG5cXHRdKlwifCdbXidcXHJcXG5cXHRdKicvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OkNYfE9QRU5RQVNNfFV8YmFycmllcnxib3hhc3xib3h0b3xicmVha3xjb25zdHxjb250aW51ZXxjdHJsfGRlZnxkZWZjYWx8ZGVmY2FsZ3JhbW1hcnxkZWxheXxlbHNlfGVuZHxmb3J8Z2F0ZXxncGhhc2V8aWZ8aW58aW5jbHVkZXxpbnZ8a2VybmVsfGxlbmd0aG9mfGxldHxtZWFzdXJlfHBvd3xyZXNldHxyZXR1cm58cm90YXJ5fHN0cmV0Y2hpbmZ8d2hpbGUpXFxifCNwcmFnbWFcXGIvLFxuICAgICdjbGFzcy1uYW1lJzpcbiAgICAgIC9cXGIoPzphbmdsZXxiaXR8Ym9vbHxjcmVnfGZpeGVkfGZsb2F0fGludHxsZW5ndGh8cXJlZ3xxdWJpdHxzdHJldGNofHVpbnQpXFxiLyxcbiAgICBmdW5jdGlvbjogL1xcYig/OmNvc3xleHB8bG58cG9wY291bnR8cm90bHxyb3RyfHNpbnxzcXJ0fHRhbilcXGIoPz1cXHMqXFwoKS8sXG4gICAgY29uc3RhbnQ6IC9cXGIoPzpldWxlcnxwaXx0YXUpXFxifM+AfPCdnI984oSHLyxcbiAgICBudW1iZXI6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXnxbXi5cXHckXSkoPzpcXGQrKD86XFwuXFxkKik/fFxcLlxcZCspKD86ZVsrLV0/XFxkKyk/KD86ZHR8bnN8dXN8wrVzfG1zfHMpPy9pLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgb3BlcmF0b3I6IC8tPnw+Pj0/fDw8PT98JiZ8XFx8XFx8fFxcK1xcK3wtLXxbIT08PiZ8fl4rXFwtKi8lXT0/fEAvLFxuICAgIHB1bmN0dWF0aW9uOiAvWygpe31cXFtcXF07LDouXS9cbiAgfVxuICBQcmlzbS5sYW5ndWFnZXMucWFzbSA9IFByaXNtLmxhbmd1YWdlcy5vcGVucWFzbVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJvcGVucWFzbSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJrZXl3b3JkIiwiZnVuY3Rpb24iLCJjb25zdGFudCIsIm51bWJlciIsImxvb2tiZWhpbmQiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIiwicWFzbSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/openqasm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/oz.js":
/*!*******************************************!*\
  !*** ./node_modules/refractor/lang/oz.js ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = oz;\noz.displayName = \"oz\";\noz.aliases = [];\nfunction oz(Prism) {\n    Prism.languages.oz = {\n        comment: {\n            pattern: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n            greedy: true\n        },\n        string: {\n            pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n            greedy: true\n        },\n        atom: {\n            pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n            greedy: true,\n            alias: \"builtin\"\n        },\n        keyword: /\\$|\\[\\]|\\b(?:_|at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\\b/,\n        function: [\n            /\\b[a-z][A-Za-z\\d]*(?=\\()/,\n            {\n                pattern: /(\\{)[A-Z][A-Za-z\\d]*\\b/,\n                lookbehind: true\n            }\n        ],\n        number: /\\b(?:0[bx][\\da-f]+|\\d+(?:\\.\\d*)?(?:e~?\\d+)?)\\b|&(?:[^\\\\]|\\\\(?:\\d{3}|.))/i,\n        variable: /`(?:[^`\\\\]|\\\\.)+`/,\n        \"attr-name\": /\\b\\w+(?=[ \\t]*:(?![:=]))/,\n        operator: /:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\\\=:?|!!?|[|#+\\-*\\/,~^@]|\\b(?:andthen|div|mod|orelse)\\b/,\n        punctuation: /[\\[\\](){}.:;?]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvb3ouanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsR0FBR0MsV0FBVyxHQUFHO0FBQ2pCRCxHQUFHRSxPQUFPLEdBQUcsRUFBRTtBQUNmLFNBQVNGLEdBQUdHLEtBQUs7SUFDZkEsTUFBTUMsU0FBUyxDQUFDSixFQUFFLEdBQUc7UUFDbkJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsUUFBUTtZQUNORixTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBRSxNQUFNO1lBQ0pILFNBQVM7WUFDVEMsUUFBUTtZQUNSRyxPQUFPO1FBQ1Q7UUFDQUMsU0FDRTtRQUNGQyxVQUFVO1lBQ1I7WUFDQTtnQkFDRU4sU0FBUztnQkFDVE8sWUFBWTtZQUNkO1NBQ0Q7UUFDREMsUUFDRTtRQUNGQyxVQUFVO1FBQ1YsYUFBYTtRQUNiQyxVQUNFO1FBQ0ZDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL296LmpzPzg0M2MiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gb3pcbm96LmRpc3BsYXlOYW1lID0gJ296J1xub3ouYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBveihQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMub3ogPSB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogL1xcL1xcKltcXHNcXFNdKj9cXCpcXC98JS4qLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvXCIoPzpbXlwiXFxcXF18XFxcXFtcXHNcXFNdKSpcIi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGF0b206IHtcbiAgICAgIHBhdHRlcm46IC8nKD86W14nXFxcXF18XFxcXFtcXHNcXFNdKSonLyxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGFsaWFzOiAnYnVpbHRpbidcbiAgICB9LFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFwkfFxcW1xcXXxcXGIoPzpffGF0fGF0dHJ8Y2FzZXxjYXRjaHxjaG9pY2V8Y2xhc3N8Y29uZHxkZWNsYXJlfGRlZmluZXxkaXN8ZWxzZSg/OmNhc2V8aWYpP3xlbmR8ZXhwb3J0fGZhaWx8ZmFsc2V8ZmVhdHxmaW5hbGx5fGZyb218ZnVufGZ1bmN0b3J8aWZ8aW1wb3J0fGlufGxvY2FsfGxvY2t8bWV0aHxuaWx8bm90fG9mfG9yfHByZXBhcmV8cHJvY3xwcm9wfHJhaXNlfHJlcXVpcmV8c2VsZnxza2lwfHRoZW58dGhyZWFkfHRydWV8dHJ5fHVuaXQpXFxiLyxcbiAgICBmdW5jdGlvbjogW1xuICAgICAgL1xcYlthLXpdW0EtWmEtelxcZF0qKD89XFwoKS8sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC8oXFx7KVtBLVpdW0EtWmEtelxcZF0qXFxiLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfVxuICAgIF0sXG4gICAgbnVtYmVyOlxuICAgICAgL1xcYig/OjBbYnhdW1xcZGEtZl0rfFxcZCsoPzpcXC5cXGQqKT8oPzplfj9cXGQrKT8pXFxifCYoPzpbXlxcXFxdfFxcXFwoPzpcXGR7M318LikpL2ksXG4gICAgdmFyaWFibGU6IC9gKD86W15gXFxcXF18XFxcXC4pK2AvLFxuICAgICdhdHRyLW5hbWUnOiAvXFxiXFx3Kyg/PVsgXFx0XSo6KD8hWzo9XSkpLyxcbiAgICBvcGVyYXRvcjpcbiAgICAgIC86KD86PXw6Oj8pfDxbLTo9XT98PSg/Oj18PD86Pyl8Pj0/Oj98XFxcXD06P3whIT98W3wjK1xcLSpcXC8sfl5AXXxcXGIoPzphbmR0aGVufGRpdnxtb2R8b3JlbHNlKVxcYi8sXG4gICAgcHVuY3R1YXRpb246IC9bXFxbXFxdKCl7fS46Oz9dL1xuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIm96IiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImdyZWVkeSIsInN0cmluZyIsImF0b20iLCJhbGlhcyIsImtleXdvcmQiLCJmdW5jdGlvbiIsImxvb2tiZWhpbmQiLCJudW1iZXIiLCJ2YXJpYWJsZSIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/oz.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/parigp.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/parigp.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = parigp;\nparigp.displayName = \"parigp\";\nparigp.aliases = [];\nfunction parigp(Prism) {\n    Prism.languages.parigp = {\n        comment: /\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,\n        string: {\n            pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n            greedy: true\n        },\n        // PARI/GP does not care about white spaces at all\n        // so let's process the keywords to build an appropriate regexp\n        // (e.g. \"b *r *e *a *k\", etc.)\n        keyword: function() {\n            var keywords = [\n                \"breakpoint\",\n                \"break\",\n                \"dbg_down\",\n                \"dbg_err\",\n                \"dbg_up\",\n                \"dbg_x\",\n                \"forcomposite\",\n                \"fordiv\",\n                \"forell\",\n                \"forpart\",\n                \"forprime\",\n                \"forstep\",\n                \"forsubgroup\",\n                \"forvec\",\n                \"for\",\n                \"iferr\",\n                \"if\",\n                \"local\",\n                \"my\",\n                \"next\",\n                \"return\",\n                \"until\",\n                \"while\"\n            ];\n            keywords = keywords.map(function(keyword) {\n                return keyword.split(\"\").join(\" *\");\n            }).join(\"|\");\n            return RegExp(\"\\\\b(?:\" + keywords + \")\\\\b\");\n        }(),\n        function: /\\b\\w(?:[\\w ]*\\w)?(?= *\\()/,\n        number: {\n            // The lookbehind and the negative lookahead prevent from breaking the .. operator\n            pattern: /((?:\\. *\\. *)?)(?:\\b\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *(?:[+-] *)?\\d(?: *\\d)*)?/i,\n            lookbehind: true\n        },\n        operator: /\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?: *>|(?: *<)?(?: *=)?)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,\n        punctuation: /[\\[\\]{}().,:;|]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcGFyaWdwLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLE9BQU9DLFdBQVcsR0FBRztBQUNyQkQsT0FBT0UsT0FBTyxHQUFHLEVBQUU7QUFDbkIsU0FBU0YsT0FBT0csS0FBSztJQUNuQkEsTUFBTUMsU0FBUyxDQUFDSixNQUFNLEdBQUc7UUFDdkJLLFNBQVM7UUFDVEMsUUFBUTtZQUNOQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBLGtEQUFrRDtRQUNsRCwrREFBK0Q7UUFDL0QsK0JBQStCO1FBQy9CQyxTQUFTO1lBQ1AsSUFBSUMsV0FBVztnQkFDYjtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTthQUNEO1lBQ0RBLFdBQVdBLFNBQ1JDLEdBQUcsQ0FBQyxTQUFVRixPQUFPO2dCQUNwQixPQUFPQSxRQUFRRyxLQUFLLENBQUMsSUFBSUMsSUFBSSxDQUFDO1lBQ2hDLEdBQ0NBLElBQUksQ0FBQztZQUNSLE9BQU9DLE9BQU8sV0FBV0osV0FBVztRQUN0QztRQUNBSyxVQUFVO1FBQ1ZDLFFBQVE7WUFDTixrRkFBa0Y7WUFDbEZULFNBQ0U7WUFDRlUsWUFBWTtRQUNkO1FBQ0FDLFVBQ0U7UUFDRkMsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcGFyaWdwLmpzPzA1MGEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gcGFyaWdwXG5wYXJpZ3AuZGlzcGxheU5hbWUgPSAncGFyaWdwJ1xucGFyaWdwLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gcGFyaWdwKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5wYXJpZ3AgPSB7XG4gICAgY29tbWVudDogL1xcL1xcKltcXHNcXFNdKj9cXCpcXC98XFxcXFxcXFwuKi8sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvXCIoPzpbXlwiXFxcXFxcclxcbl18XFxcXC4pKlwiLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgLy8gUEFSSS9HUCBkb2VzIG5vdCBjYXJlIGFib3V0IHdoaXRlIHNwYWNlcyBhdCBhbGxcbiAgICAvLyBzbyBsZXQncyBwcm9jZXNzIHRoZSBrZXl3b3JkcyB0byBidWlsZCBhbiBhcHByb3ByaWF0ZSByZWdleHBcbiAgICAvLyAoZS5nLiBcImIgKnIgKmUgKmEgKmtcIiwgZXRjLilcbiAgICBrZXl3b3JkOiAoZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGtleXdvcmRzID0gW1xuICAgICAgICAnYnJlYWtwb2ludCcsXG4gICAgICAgICdicmVhaycsXG4gICAgICAgICdkYmdfZG93bicsXG4gICAgICAgICdkYmdfZXJyJyxcbiAgICAgICAgJ2RiZ191cCcsXG4gICAgICAgICdkYmdfeCcsXG4gICAgICAgICdmb3Jjb21wb3NpdGUnLFxuICAgICAgICAnZm9yZGl2JyxcbiAgICAgICAgJ2ZvcmVsbCcsXG4gICAgICAgICdmb3JwYXJ0JyxcbiAgICAgICAgJ2ZvcnByaW1lJyxcbiAgICAgICAgJ2ZvcnN0ZXAnLFxuICAgICAgICAnZm9yc3ViZ3JvdXAnLFxuICAgICAgICAnZm9ydmVjJyxcbiAgICAgICAgJ2ZvcicsXG4gICAgICAgICdpZmVycicsXG4gICAgICAgICdpZicsXG4gICAgICAgICdsb2NhbCcsXG4gICAgICAgICdteScsXG4gICAgICAgICduZXh0JyxcbiAgICAgICAgJ3JldHVybicsXG4gICAgICAgICd1bnRpbCcsXG4gICAgICAgICd3aGlsZSdcbiAgICAgIF1cbiAgICAgIGtleXdvcmRzID0ga2V5d29yZHNcbiAgICAgICAgLm1hcChmdW5jdGlvbiAoa2V5d29yZCkge1xuICAgICAgICAgIHJldHVybiBrZXl3b3JkLnNwbGl0KCcnKS5qb2luKCcgKicpXG4gICAgICAgIH0pXG4gICAgICAgIC5qb2luKCd8JylcbiAgICAgIHJldHVybiBSZWdFeHAoJ1xcXFxiKD86JyArIGtleXdvcmRzICsgJylcXFxcYicpXG4gICAgfSkoKSxcbiAgICBmdW5jdGlvbjogL1xcYlxcdyg/OltcXHcgXSpcXHcpPyg/PSAqXFwoKS8sXG4gICAgbnVtYmVyOiB7XG4gICAgICAvLyBUaGUgbG9va2JlaGluZCBhbmQgdGhlIG5lZ2F0aXZlIGxvb2thaGVhZCBwcmV2ZW50IGZyb20gYnJlYWtpbmcgdGhlIC4uIG9wZXJhdG9yXG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKCg/OlxcLiAqXFwuICopPykoPzpcXGJcXGQoPzogKlxcZCkqKD86ICooPyFcXC4gKlxcLilcXC4oPzogKlxcZCkqKT98XFwuICpcXGQoPzogKlxcZCkqKSg/OiAqZSAqKD86WystXSAqKT9cXGQoPzogKlxcZCkqKT8vaSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIG9wZXJhdG9yOlxuICAgICAgL1xcLiAqXFwufFsqXFwvIV0oPzogKj0pP3wlKD86ICo9fCg/OiAqIyk/KD86IConKSopP3xcXCsoPzogKlsrPV0pP3wtKD86ICpbLT0+XSk/fDwoPzogKj58KD86ICo8KT8oPzogKj0pPyk/fD4oPzogKj4pPyg/OiAqPSk/fD0oPzogKj0pezAsMn18XFxcXCg/OiAqXFwvKT8oPzogKj0pP3wmKD86IComKT98XFx8ICpcXHx8Wycjfl5dLyxcbiAgICBwdW5jdHVhdGlvbjogL1tcXFtcXF17fSgpLiw6O3xdL1xuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInBhcmlncCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJrZXl3b3JkIiwia2V5d29yZHMiLCJtYXAiLCJzcGxpdCIsImpvaW4iLCJSZWdFeHAiLCJmdW5jdGlvbiIsIm51bWJlciIsImxvb2tiZWhpbmQiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/parigp.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/parser.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/parser.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = parser;\nparser.displayName = \"parser\";\nparser.aliases = [];\nfunction parser(Prism) {\n    ;\n    (function(Prism) {\n        var parser = Prism.languages.parser = Prism.languages.extend(\"markup\", {\n            keyword: {\n                pattern: /(^|[^^])(?:\\^(?:case|eval|for|if|switch|throw)\\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\\b)/,\n                lookbehind: true\n            },\n            variable: {\n                pattern: /(^|[^^])\\B\\$(?:\\w+|(?=[.{]))(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n                lookbehind: true,\n                inside: {\n                    punctuation: /\\.|:+/\n                }\n            },\n            function: {\n                pattern: /(^|[^^])\\B[@^]\\w+(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n                lookbehind: true,\n                inside: {\n                    keyword: {\n                        pattern: /(^@)(?:GET_|SET_)/,\n                        lookbehind: true\n                    },\n                    punctuation: /\\.|:+/\n                }\n            },\n            escape: {\n                pattern: /\\^(?:[$^;@()\\[\\]{}\"':]|#[a-f\\d]*)/i,\n                alias: \"builtin\"\n            },\n            punctuation: /[\\[\\](){};]/\n        });\n        parser = Prism.languages.insertBefore(\"parser\", \"keyword\", {\n            \"parser-comment\": {\n                pattern: /(\\s)#.*/,\n                lookbehind: true,\n                alias: \"comment\"\n            },\n            expression: {\n                // Allow for 3 levels of depth\n                pattern: /(^|[^^])\\((?:[^()]|\\((?:[^()]|\\((?:[^()])*\\))*\\))*\\)/,\n                greedy: true,\n                lookbehind: true,\n                inside: {\n                    string: {\n                        pattern: /(^|[^^])([\"'])(?:(?!\\2)[^^]|\\^[\\s\\S])*\\2/,\n                        lookbehind: true\n                    },\n                    keyword: parser.keyword,\n                    variable: parser.variable,\n                    function: parser.function,\n                    boolean: /\\b(?:false|true)\\b/,\n                    number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?)\\b/i,\n                    escape: parser.escape,\n                    operator: /[~+*\\/\\\\%]|!(?:\\|\\|?|=)?|&&?|\\|\\|?|==|<[<=]?|>[>=]?|-[fd]?|\\b(?:def|eq|ge|gt|in|is|le|lt|ne)\\b/,\n                    punctuation: parser.punctuation\n                }\n            }\n        });\n        Prism.languages.insertBefore(\"inside\", \"punctuation\", {\n            expression: parser.expression,\n            keyword: parser.keyword,\n            variable: parser.variable,\n            function: parser.function,\n            escape: parser.escape,\n            \"parser-punctuation\": {\n                pattern: parser.punctuation,\n                alias: \"punctuation\"\n            }\n        }, parser[\"tag\"].inside[\"attr-value\"]);\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcGFyc2VyLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLE9BQU9DLFdBQVcsR0FBRztBQUNyQkQsT0FBT0UsT0FBTyxHQUFHLEVBQUU7QUFDbkIsU0FBU0YsT0FBT0csS0FBSzs7SUFDakIsVUFBVUEsS0FBSztRQUNmLElBQUlILFNBQVVHLE1BQU1DLFNBQVMsQ0FBQ0osTUFBTSxHQUFHRyxNQUFNQyxTQUFTLENBQUNDLE1BQU0sQ0FBQyxVQUFVO1lBQ3RFQyxTQUFTO2dCQUNQQyxTQUNFO2dCQUNGQyxZQUFZO1lBQ2Q7WUFDQUMsVUFBVTtnQkFDUkYsU0FBUztnQkFDVEMsWUFBWTtnQkFDWkUsUUFBUTtvQkFDTkMsYUFBYTtnQkFDZjtZQUNGO1lBQ0FDLFVBQVU7Z0JBQ1JMLFNBQVM7Z0JBQ1RDLFlBQVk7Z0JBQ1pFLFFBQVE7b0JBQ05KLFNBQVM7d0JBQ1BDLFNBQVM7d0JBQ1RDLFlBQVk7b0JBQ2Q7b0JBQ0FHLGFBQWE7Z0JBQ2Y7WUFDRjtZQUNBRSxRQUFRO2dCQUNOTixTQUFTO2dCQUNUTyxPQUFPO1lBQ1Q7WUFDQUgsYUFBYTtRQUNmO1FBQ0FYLFNBQVNHLE1BQU1DLFNBQVMsQ0FBQ1csWUFBWSxDQUFDLFVBQVUsV0FBVztZQUN6RCxrQkFBa0I7Z0JBQ2hCUixTQUFTO2dCQUNUQyxZQUFZO2dCQUNaTSxPQUFPO1lBQ1Q7WUFDQUUsWUFBWTtnQkFDViw4QkFBOEI7Z0JBQzlCVCxTQUFTO2dCQUNUVSxRQUFRO2dCQUNSVCxZQUFZO2dCQUNaRSxRQUFRO29CQUNOUSxRQUFRO3dCQUNOWCxTQUFTO3dCQUNUQyxZQUFZO29CQUNkO29CQUNBRixTQUFTTixPQUFPTSxPQUFPO29CQUN2QkcsVUFBVVQsT0FBT1MsUUFBUTtvQkFDekJHLFVBQVVaLE9BQU9ZLFFBQVE7b0JBQ3pCTyxTQUFTO29CQUNUQyxRQUFRO29CQUNSUCxRQUFRYixPQUFPYSxNQUFNO29CQUNyQlEsVUFDRTtvQkFDRlYsYUFBYVgsT0FBT1csV0FBVztnQkFDakM7WUFDRjtRQUNGO1FBQ0FSLE1BQU1DLFNBQVMsQ0FBQ1csWUFBWSxDQUMxQixVQUNBLGVBQ0E7WUFDRUMsWUFBWWhCLE9BQU9nQixVQUFVO1lBQzdCVixTQUFTTixPQUFPTSxPQUFPO1lBQ3ZCRyxVQUFVVCxPQUFPUyxRQUFRO1lBQ3pCRyxVQUFVWixPQUFPWSxRQUFRO1lBQ3pCQyxRQUFRYixPQUFPYSxNQUFNO1lBQ3JCLHNCQUFzQjtnQkFDcEJOLFNBQVNQLE9BQU9XLFdBQVc7Z0JBQzNCRyxPQUFPO1lBQ1Q7UUFDRixHQUNBZCxNQUFNLENBQUMsTUFBTSxDQUFDVSxNQUFNLENBQUMsYUFBYTtJQUV0QyxHQUFHUDtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3BhcnNlci5qcz84MGFhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHBhcnNlclxucGFyc2VyLmRpc3BsYXlOYW1lID0gJ3BhcnNlcidcbnBhcnNlci5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIHBhcnNlcihQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIHZhciBwYXJzZXIgPSAoUHJpc20ubGFuZ3VhZ2VzLnBhcnNlciA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ21hcmt1cCcsIHtcbiAgICAgIGtleXdvcmQ6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKF58W15eXSkoPzpcXF4oPzpjYXNlfGV2YWx8Zm9yfGlmfHN3aXRjaHx0aHJvdylcXGJ8QCg/OkJBU0V8Q0xBU1N8R0VUKD86X0RFRkFVTFQpP3xPUFRJT05TfFNFVF9ERUZBVUxUfFVTRSlcXGIpLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHZhcmlhYmxlOiB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxbXl5dKVxcQlxcJCg/Olxcdyt8KD89Wy57XSkpKD86KD86XFwufDo6PylcXHcrKSooPzpcXC58Ojo/KT8vLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjogL1xcLnw6Ky9cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGZ1bmN0aW9uOiB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxbXl5dKVxcQltAXl1cXHcrKD86KD86XFwufDo6PylcXHcrKSooPzpcXC58Ojo/KT8vLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBrZXl3b3JkOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvKF5AKSg/OkdFVF98U0VUXykvLFxuICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICAgIH0sXG4gICAgICAgICAgcHVuY3R1YXRpb246IC9cXC58OisvXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBlc2NhcGU6IHtcbiAgICAgICAgcGF0dGVybjogL1xcXig/OlskXjtAKClcXFtcXF17fVwiJzpdfCNbYS1mXFxkXSopL2ksXG4gICAgICAgIGFsaWFzOiAnYnVpbHRpbidcbiAgICAgIH0sXG4gICAgICBwdW5jdHVhdGlvbjogL1tcXFtcXF0oKXt9O10vXG4gICAgfSkpXG4gICAgcGFyc2VyID0gUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgncGFyc2VyJywgJ2tleXdvcmQnLCB7XG4gICAgICAncGFyc2VyLWNvbW1lbnQnOiB7XG4gICAgICAgIHBhdHRlcm46IC8oXFxzKSMuKi8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiAnY29tbWVudCdcbiAgICAgIH0sXG4gICAgICBleHByZXNzaW9uOiB7XG4gICAgICAgIC8vIEFsbG93IGZvciAzIGxldmVscyBvZiBkZXB0aFxuICAgICAgICBwYXR0ZXJuOiAvKF58W15eXSlcXCgoPzpbXigpXXxcXCgoPzpbXigpXXxcXCgoPzpbXigpXSkqXFwpKSpcXCkpKlxcKS8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgc3RyaW5nOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvKF58W15eXSkoW1wiJ10pKD86KD8hXFwyKVteXl18XFxeW1xcc1xcU10pKlxcMi8sXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgICAgfSxcbiAgICAgICAgICBrZXl3b3JkOiBwYXJzZXIua2V5d29yZCxcbiAgICAgICAgICB2YXJpYWJsZTogcGFyc2VyLnZhcmlhYmxlLFxuICAgICAgICAgIGZ1bmN0aW9uOiBwYXJzZXIuZnVuY3Rpb24sXG4gICAgICAgICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiLyxcbiAgICAgICAgICBudW1iZXI6IC9cXGIoPzoweFthLWZcXGRdK3xcXGQrKD86XFwuXFxkKik/KD86ZVsrLV0/XFxkKyk/KVxcYi9pLFxuICAgICAgICAgIGVzY2FwZTogcGFyc2VyLmVzY2FwZSxcbiAgICAgICAgICBvcGVyYXRvcjpcbiAgICAgICAgICAgIC9bfisqXFwvXFxcXCVdfCEoPzpcXHxcXHw/fD0pP3wmJj98XFx8XFx8P3w9PXw8Wzw9XT98Pls+PV0/fC1bZmRdP3xcXGIoPzpkZWZ8ZXF8Z2V8Z3R8aW58aXN8bGV8bHR8bmUpXFxiLyxcbiAgICAgICAgICBwdW5jdHVhdGlvbjogcGFyc2VyLnB1bmN0dWF0aW9uXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KVxuICAgIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoXG4gICAgICAnaW5zaWRlJyxcbiAgICAgICdwdW5jdHVhdGlvbicsXG4gICAgICB7XG4gICAgICAgIGV4cHJlc3Npb246IHBhcnNlci5leHByZXNzaW9uLFxuICAgICAgICBrZXl3b3JkOiBwYXJzZXIua2V5d29yZCxcbiAgICAgICAgdmFyaWFibGU6IHBhcnNlci52YXJpYWJsZSxcbiAgICAgICAgZnVuY3Rpb246IHBhcnNlci5mdW5jdGlvbixcbiAgICAgICAgZXNjYXBlOiBwYXJzZXIuZXNjYXBlLFxuICAgICAgICAncGFyc2VyLXB1bmN0dWF0aW9uJzoge1xuICAgICAgICAgIHBhdHRlcm46IHBhcnNlci5wdW5jdHVhdGlvbixcbiAgICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgcGFyc2VyWyd0YWcnXS5pbnNpZGVbJ2F0dHItdmFsdWUnXVxuICAgIClcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInBhcnNlciIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwia2V5d29yZCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwidmFyaWFibGUiLCJpbnNpZGUiLCJwdW5jdHVhdGlvbiIsImZ1bmN0aW9uIiwiZXNjYXBlIiwiYWxpYXMiLCJpbnNlcnRCZWZvcmUiLCJleHByZXNzaW9uIiwiZ3JlZWR5Iiwic3RyaW5nIiwiYm9vbGVhbiIsIm51bWJlciIsIm9wZXJhdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/parser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/pascal.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/pascal.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = pascal;\npascal.displayName = \"pascal\";\npascal.aliases = [\n    \"objectpascal\"\n];\nfunction pascal(Prism) {\n    // Based on Free Pascal\n    /* TODO\nSupport inline asm ?\n*/ Prism.languages.pascal = {\n        directive: {\n            pattern: /\\{\\$[\\s\\S]*?\\}/,\n            greedy: true,\n            alias: [\n                \"marco\",\n                \"property\"\n            ]\n        },\n        comment: {\n            pattern: /\\(\\*[\\s\\S]*?\\*\\)|\\{[\\s\\S]*?\\}|\\/\\/.*/,\n            greedy: true\n        },\n        string: {\n            pattern: /(?:'(?:''|[^'\\r\\n])*'(?!')|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\n            greedy: true\n        },\n        asm: {\n            pattern: /(\\basm\\b)[\\s\\S]+?(?=\\bend\\s*[;[])/i,\n            lookbehind: true,\n            greedy: true,\n            inside: null // see below\n        },\n        keyword: [\n            {\n                // Turbo Pascal\n                pattern: /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\n                lookbehind: true\n            },\n            {\n                // Free Pascal\n                pattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\n                lookbehind: true\n            },\n            {\n                // Object Pascal\n                pattern: /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\n                lookbehind: true\n            },\n            {\n                // Modifiers\n                pattern: /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\n                lookbehind: true\n            }\n        ],\n        number: [\n            // Hexadecimal, octal and binary\n            /(?:[&%]\\d+|\\$[a-f\\d]+)/i,\n            /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i\n        ],\n        operator: [\n            /\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/,\n            {\n                pattern: /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\n                lookbehind: true\n            }\n        ],\n        punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\n    };\n    Prism.languages.pascal.asm.inside = Prism.languages.extend(\"pascal\", {\n        asm: undefined,\n        keyword: undefined,\n        operator: undefined\n    });\n    Prism.languages.objectpascal = Prism.languages.pascal;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcGFzY2FsLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLE9BQU9DLFdBQVcsR0FBRztBQUNyQkQsT0FBT0UsT0FBTyxHQUFHO0lBQUM7Q0FBZTtBQUNqQyxTQUFTRixPQUFPRyxLQUFLO0lBQ25CLHVCQUF1QjtJQUN2Qjs7QUFFRixHQUNFQSxNQUFNQyxTQUFTLENBQUNKLE1BQU0sR0FBRztRQUN2QkssV0FBVztZQUNUQyxTQUFTO1lBQ1RDLFFBQVE7WUFDUkMsT0FBTztnQkFBQztnQkFBUzthQUFXO1FBQzlCO1FBQ0FDLFNBQVM7WUFDUEgsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUcsUUFBUTtZQUNOSixTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBSSxLQUFLO1lBQ0hMLFNBQVM7WUFDVE0sWUFBWTtZQUNaTCxRQUFRO1lBQ1JNLFFBQVEsS0FBSyxZQUFZO1FBQzNCO1FBQ0FDLFNBQVM7WUFDUDtnQkFDRSxlQUFlO2dCQUNmUixTQUNFO2dCQUNGTSxZQUFZO1lBQ2Q7WUFDQTtnQkFDRSxjQUFjO2dCQUNkTixTQUFTO2dCQUNUTSxZQUFZO1lBQ2Q7WUFDQTtnQkFDRSxnQkFBZ0I7Z0JBQ2hCTixTQUNFO2dCQUNGTSxZQUFZO1lBQ2Q7WUFDQTtnQkFDRSxZQUFZO2dCQUNaTixTQUNFO2dCQUNGTSxZQUFZO1lBQ2Q7U0FDRDtRQUNERyxRQUFRO1lBQ04sZ0NBQWdDO1lBQ2hDO1lBQ0E7U0FDRDtRQUNEQyxVQUFVO1lBQ1I7WUFDQTtnQkFDRVYsU0FDRTtnQkFDRk0sWUFBWTtZQUNkO1NBQ0Q7UUFDREssYUFBYTtJQUNmO0lBQ0FkLE1BQU1DLFNBQVMsQ0FBQ0osTUFBTSxDQUFDVyxHQUFHLENBQUNFLE1BQU0sR0FBR1YsTUFBTUMsU0FBUyxDQUFDYyxNQUFNLENBQUMsVUFBVTtRQUNuRVAsS0FBS1E7UUFDTEwsU0FBU0s7UUFDVEgsVUFBVUc7SUFDWjtJQUNBaEIsTUFBTUMsU0FBUyxDQUFDZ0IsWUFBWSxHQUFHakIsTUFBTUMsU0FBUyxDQUFDSixNQUFNO0FBQ3ZEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3Bhc2NhbC5qcz8wNDdmIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHBhc2NhbFxucGFzY2FsLmRpc3BsYXlOYW1lID0gJ3Bhc2NhbCdcbnBhc2NhbC5hbGlhc2VzID0gWydvYmplY3RwYXNjYWwnXVxuZnVuY3Rpb24gcGFzY2FsKFByaXNtKSB7XG4gIC8vIEJhc2VkIG9uIEZyZWUgUGFzY2FsXG4gIC8qIFRPRE9cblN1cHBvcnQgaW5saW5lIGFzbSA/XG4qL1xuICBQcmlzbS5sYW5ndWFnZXMucGFzY2FsID0ge1xuICAgIGRpcmVjdGl2ZToge1xuICAgICAgcGF0dGVybjogL1xce1xcJFtcXHNcXFNdKj9cXH0vLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgYWxpYXM6IFsnbWFyY28nLCAncHJvcGVydHknXVxuICAgIH0sXG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogL1xcKFxcKltcXHNcXFNdKj9cXCpcXCl8XFx7W1xcc1xcU10qP1xcfXxcXC9cXC8uKi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyg/OicoPzonJ3xbXidcXHJcXG5dKSonKD8hJyl8I1smJCVdP1thLWZcXGRdKykrfFxcXlthLXpdL2ksXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGFzbToge1xuICAgICAgcGF0dGVybjogLyhcXGJhc21cXGIpW1xcc1xcU10rPyg/PVxcYmVuZFxccypbO1tdKS9pLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGluc2lkZTogbnVsbCAvLyBzZWUgYmVsb3dcbiAgICB9LFxuICAgIGtleXdvcmQ6IFtcbiAgICAgIHtcbiAgICAgICAgLy8gVHVyYm8gUGFzY2FsXG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhefFteJl0pXFxiKD86YWJzb2x1dGV8YXJyYXl8YXNtfGJlZ2lufGNhc2V8Y29uc3R8Y29uc3RydWN0b3J8ZGVzdHJ1Y3Rvcnxkb3xkb3dudG98ZWxzZXxlbmR8ZmlsZXxmb3J8ZnVuY3Rpb258Z290b3xpZnxpbXBsZW1lbnRhdGlvbnxpbmhlcml0ZWR8aW5saW5lfGludGVyZmFjZXxsYWJlbHxuaWx8b2JqZWN0fG9mfG9wZXJhdG9yfHBhY2tlZHxwcm9jZWR1cmV8cHJvZ3JhbXxyZWNvcmR8cmVpbnRyb2R1Y2V8cmVwZWF0fHNlbGZ8c2V0fHN0cmluZ3x0aGVufHRvfHR5cGV8dW5pdHx1bnRpbHx1c2VzfHZhcnx3aGlsZXx3aXRoKVxcYi9pLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAvLyBGcmVlIFBhc2NhbFxuICAgICAgICBwYXR0ZXJuOiAvKF58W14mXSlcXGIoPzpkaXNwb3NlfGV4aXR8ZmFsc2V8bmV3fHRydWUpXFxiL2ksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIC8vIE9iamVjdCBQYXNjYWxcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKF58W14mXSlcXGIoPzpjbGFzc3xkaXNwaW50ZXJmYWNlfGV4Y2VwdHxleHBvcnRzfGZpbmFsaXphdGlvbnxmaW5hbGx5fGluaXRpYWxpemF0aW9ufGlubGluZXxsaWJyYXJ5fG9ufG91dHxwYWNrZWR8cHJvcGVydHl8cmFpc2V8cmVzb3VyY2VzdHJpbmd8dGhyZWFkdmFyfHRyeSlcXGIvaSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgLy8gTW9kaWZpZXJzXG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhefFteJl0pXFxiKD86YWJzb2x1dGV8YWJzdHJhY3R8YWxpYXN8YXNzZW1ibGVyfGJpdHBhY2tlZHxicmVha3xjZGVjbHxjb250aW51ZXxjcHBkZWNsfGN2YXJ8ZGVmYXVsdHxkZXByZWNhdGVkfGR5bmFtaWN8ZW51bWVyYXRvcnxleHBlcmltZW50YWx8ZXhwb3J0fGV4dGVybmFsfGZhcnxmYXIxNnxmb3J3YXJkfGdlbmVyaWN8aGVscGVyfGltcGxlbWVudHN8aW5kZXh8aW50ZXJydXB0fGlvY2hlY2tzfGxvY2FsfG1lc3NhZ2V8bmFtZXxuZWFyfG5vZGVmYXVsdHxub3JldHVybnxub3N0YWNrZnJhbWV8b2xkZnBjY2FsbHxvdGhlcndpc2V8b3ZlcmxvYWR8b3ZlcnJpZGV8cGFzY2FsfHBsYXRmb3JtfHByaXZhdGV8cHJvdGVjdGVkfHB1YmxpY3xwdWJsaXNoZWR8cmVhZHxyZWdpc3RlcnxyZWludHJvZHVjZXxyZXN1bHR8c2FmZWNhbGx8c2F2ZXJlZ2lzdGVyc3xzb2Z0ZmxvYXR8c3BlY2lhbGl6ZXxzdGF0aWN8c3RkY2FsbHxzdG9yZWR8c3RyaWN0fHVuYWxpZ25lZHx1bmltcGxlbWVudGVkfHZhcmFyZ3N8dmlydHVhbHx3cml0ZSlcXGIvaSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfVxuICAgIF0sXG4gICAgbnVtYmVyOiBbXG4gICAgICAvLyBIZXhhZGVjaW1hbCwgb2N0YWwgYW5kIGJpbmFyeVxuICAgICAgLyg/OlsmJV1cXGQrfFxcJFthLWZcXGRdKykvaSwgLy8gRGVjaW1hbFxuICAgICAgL1xcYlxcZCsoPzpcXC5cXGQrKT8oPzplWystXT9cXGQrKT8vaVxuICAgIF0sXG4gICAgb3BlcmF0b3I6IFtcbiAgICAgIC9cXC5cXC58XFwqXFwqfDo9fDxbPD0+XT98Pls+PV0/fFsrXFwtKlxcL109P3xbQF49XS8sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhefFteJl0pXFxiKD86YW5kfGFzfGRpdnxleGNsdWRlfGlufGluY2x1ZGV8aXN8bW9kfG5vdHxvcnxzaGx8c2hyfHhvcilcXGIvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9XG4gICAgXSxcbiAgICBwdW5jdHVhdGlvbjogL1xcKFxcLnxcXC5cXCl8WygpXFxbXFxdOjssLl0vXG4gIH1cbiAgUHJpc20ubGFuZ3VhZ2VzLnBhc2NhbC5hc20uaW5zaWRlID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgncGFzY2FsJywge1xuICAgIGFzbTogdW5kZWZpbmVkLFxuICAgIGtleXdvcmQ6IHVuZGVmaW5lZCxcbiAgICBvcGVyYXRvcjogdW5kZWZpbmVkXG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5vYmplY3RwYXNjYWwgPSBQcmlzbS5sYW5ndWFnZXMucGFzY2FsXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInBhc2NhbCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiZGlyZWN0aXZlIiwicGF0dGVybiIsImdyZWVkeSIsImFsaWFzIiwiY29tbWVudCIsInN0cmluZyIsImFzbSIsImxvb2tiZWhpbmQiLCJpbnNpZGUiLCJrZXl3b3JkIiwibnVtYmVyIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiIsImV4dGVuZCIsInVuZGVmaW5lZCIsIm9iamVjdHBhc2NhbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/pascal.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/pascaligo.js":
/*!**************************************************!*\
  !*** ./node_modules/refractor/lang/pascaligo.js ***!
  \**************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = pascaligo;\npascaligo.displayName = \"pascaligo\";\npascaligo.aliases = [];\nfunction pascaligo(Prism) {\n    ;\n    (function(Prism) {\n        // Pascaligo is a layer 2 smart contract language for the tezos blockchain\n        var braces = /\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\)/.source;\n        var type = /(?:\\b\\w+(?:<braces>)?|<braces>)/.source.replace(/<braces>/g, function() {\n            return braces;\n        });\n        var pascaligo = Prism.languages.pascaligo = {\n            comment: /\\(\\*[\\s\\S]+?\\*\\)|\\/\\/.*/,\n            string: {\n                pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\^[a-z]/i,\n                greedy: true\n            },\n            \"class-name\": [\n                {\n                    pattern: RegExp(/(\\btype\\s+\\w+\\s+is\\s+)<type>/.source.replace(/<type>/g, function() {\n                        return type;\n                    }), \"i\"),\n                    lookbehind: true,\n                    inside: null // see below\n                },\n                {\n                    pattern: RegExp(/<type>(?=\\s+is\\b)/.source.replace(/<type>/g, function() {\n                        return type;\n                    }), \"i\"),\n                    inside: null // see below\n                },\n                {\n                    pattern: RegExp(/(:\\s*)<type>/.source.replace(/<type>/g, function() {\n                        return type;\n                    })),\n                    lookbehind: true,\n                    inside: null // see below\n                }\n            ],\n            keyword: {\n                pattern: /(^|[^&])\\b(?:begin|block|case|const|else|end|fail|for|from|function|if|is|nil|of|remove|return|skip|then|type|var|while|with)\\b/i,\n                lookbehind: true\n            },\n            boolean: {\n                pattern: /(^|[^&])\\b(?:False|True)\\b/i,\n                lookbehind: true\n            },\n            builtin: {\n                pattern: /(^|[^&])\\b(?:bool|int|list|map|nat|record|string|unit)\\b/i,\n                lookbehind: true\n            },\n            function: /\\b\\w+(?=\\s*\\()/,\n            number: [\n                // Hexadecimal, octal and binary\n                /%[01]+|&[0-7]+|\\$[a-f\\d]+/i,\n                /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?(?:mtz|n)?/i\n            ],\n            operator: /->|=\\/=|\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=|]|\\b(?:and|mod|or)\\b/,\n            punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.{}]/\n        };\n        var classNameInside = [\n            \"comment\",\n            \"keyword\",\n            \"builtin\",\n            \"operator\",\n            \"punctuation\"\n        ].reduce(function(accum, key) {\n            accum[key] = pascaligo[key];\n            return accum;\n        }, {});\n        pascaligo[\"class-name\"].forEach(function(p) {\n            p.inside = classNameInside;\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcGFzY2FsaWdvLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLFVBQVVDLFdBQVcsR0FBRztBQUN4QkQsVUFBVUUsT0FBTyxHQUFHLEVBQUU7QUFDdEIsU0FBU0YsVUFBVUcsS0FBSzs7SUFDcEIsVUFBVUEsS0FBSztRQUNmLDBFQUEwRTtRQUMxRSxJQUFJQyxTQUFTLDJDQUEyQ0MsTUFBTTtRQUM5RCxJQUFJQyxPQUFPLGtDQUFrQ0QsTUFBTSxDQUFDRSxPQUFPLENBQ3pELGFBQ0E7WUFDRSxPQUFPSDtRQUNUO1FBRUYsSUFBSUosWUFBYUcsTUFBTUssU0FBUyxDQUFDUixTQUFTLEdBQUc7WUFDM0NTLFNBQVM7WUFDVEMsUUFBUTtnQkFDTkMsU0FBUztnQkFDVEMsUUFBUTtZQUNWO1lBQ0EsY0FBYztnQkFDWjtvQkFDRUQsU0FBU0UsT0FDUCwrQkFBK0JSLE1BQU0sQ0FBQ0UsT0FBTyxDQUMzQyxXQUNBO3dCQUNFLE9BQU9EO29CQUNULElBRUY7b0JBRUZRLFlBQVk7b0JBQ1pDLFFBQVEsS0FBSyxZQUFZO2dCQUMzQjtnQkFDQTtvQkFDRUosU0FBU0UsT0FDUCxvQkFBb0JSLE1BQU0sQ0FBQ0UsT0FBTyxDQUFDLFdBQVc7d0JBQzVDLE9BQU9EO29CQUNULElBQ0E7b0JBRUZTLFFBQVEsS0FBSyxZQUFZO2dCQUMzQjtnQkFDQTtvQkFDRUosU0FBU0UsT0FDUCxlQUFlUixNQUFNLENBQUNFLE9BQU8sQ0FBQyxXQUFXO3dCQUN2QyxPQUFPRDtvQkFDVDtvQkFFRlEsWUFBWTtvQkFDWkMsUUFBUSxLQUFLLFlBQVk7Z0JBQzNCO2FBQ0Q7WUFDREMsU0FBUztnQkFDUEwsU0FDRTtnQkFDRkcsWUFBWTtZQUNkO1lBQ0FHLFNBQVM7Z0JBQ1BOLFNBQVM7Z0JBQ1RHLFlBQVk7WUFDZDtZQUNBSSxTQUFTO2dCQUNQUCxTQUFTO2dCQUNURyxZQUFZO1lBQ2Q7WUFDQUssVUFBVTtZQUNWQyxRQUFRO2dCQUNOLGdDQUFnQztnQkFDaEM7Z0JBQ0E7YUFDRDtZQUNEQyxVQUNFO1lBQ0ZDLGFBQWE7UUFDZjtRQUNBLElBQUlDLGtCQUFrQjtZQUNwQjtZQUNBO1lBQ0E7WUFDQTtZQUNBO1NBQ0QsQ0FBQ0MsTUFBTSxDQUFDLFNBQVVDLEtBQUssRUFBRUMsR0FBRztZQUMzQkQsS0FBSyxDQUFDQyxJQUFJLEdBQUcxQixTQUFTLENBQUMwQixJQUFJO1lBQzNCLE9BQU9EO1FBQ1QsR0FBRyxDQUFDO1FBQ0p6QixTQUFTLENBQUMsYUFBYSxDQUFDMkIsT0FBTyxDQUFDLFNBQVVDLENBQUM7WUFDekNBLEVBQUViLE1BQU0sR0FBR1E7UUFDYjtJQUNGLEdBQUdwQjtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3Bhc2NhbGlnby5qcz8yMGNiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHBhc2NhbGlnb1xucGFzY2FsaWdvLmRpc3BsYXlOYW1lID0gJ3Bhc2NhbGlnbydcbnBhc2NhbGlnby5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIHBhc2NhbGlnbyhQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIC8vIFBhc2NhbGlnbyBpcyBhIGxheWVyIDIgc21hcnQgY29udHJhY3QgbGFuZ3VhZ2UgZm9yIHRoZSB0ZXpvcyBibG9ja2NoYWluXG4gICAgdmFyIGJyYWNlcyA9IC9cXCgoPzpbXigpXXxcXCgoPzpbXigpXXxcXChbXigpXSpcXCkpKlxcKSkqXFwpLy5zb3VyY2VcbiAgICB2YXIgdHlwZSA9IC8oPzpcXGJcXHcrKD86PGJyYWNlcz4pP3w8YnJhY2VzPikvLnNvdXJjZS5yZXBsYWNlKFxuICAgICAgLzxicmFjZXM+L2csXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBicmFjZXNcbiAgICAgIH1cbiAgICApXG4gICAgdmFyIHBhc2NhbGlnbyA9IChQcmlzbS5sYW5ndWFnZXMucGFzY2FsaWdvID0ge1xuICAgICAgY29tbWVudDogL1xcKFxcKltcXHNcXFNdKz9cXCpcXCl8XFwvXFwvLiovLFxuICAgICAgc3RyaW5nOiB7XG4gICAgICAgIHBhdHRlcm46IC8oW1wiJ2BdKSg/OlxcXFxbXFxzXFxTXXwoPyFcXDEpW15cXFxcXSkqXFwxfFxcXlthLXpdL2ksXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgICdjbGFzcy1uYW1lJzogW1xuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgICAgLyhcXGJ0eXBlXFxzK1xcdytcXHMraXNcXHMrKTx0eXBlPi8uc291cmNlLnJlcGxhY2UoXG4gICAgICAgICAgICAgIC88dHlwZT4vZyxcbiAgICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0eXBlXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICksXG4gICAgICAgICAgICAnaSdcbiAgICAgICAgICApLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgaW5zaWRlOiBudWxsIC8vIHNlZSBiZWxvd1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgICAgLzx0eXBlPig/PVxccytpc1xcYikvLnNvdXJjZS5yZXBsYWNlKC88dHlwZT4vZywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICByZXR1cm4gdHlwZVxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAnaSdcbiAgICAgICAgICApLFxuICAgICAgICAgIGluc2lkZTogbnVsbCAvLyBzZWUgYmVsb3dcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICAgIC8oOlxccyopPHR5cGU+Ly5zb3VyY2UucmVwbGFjZSgvPHR5cGU+L2csIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHR5cGVcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgKSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGluc2lkZTogbnVsbCAvLyBzZWUgYmVsb3dcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIGtleXdvcmQ6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKF58W14mXSlcXGIoPzpiZWdpbnxibG9ja3xjYXNlfGNvbnN0fGVsc2V8ZW5kfGZhaWx8Zm9yfGZyb218ZnVuY3Rpb258aWZ8aXN8bmlsfG9mfHJlbW92ZXxyZXR1cm58c2tpcHx0aGVufHR5cGV8dmFyfHdoaWxlfHdpdGgpXFxiL2ksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBib29sZWFuOiB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxbXiZdKVxcYig/OkZhbHNlfFRydWUpXFxiL2ksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBidWlsdGluOiB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxbXiZdKVxcYig/OmJvb2x8aW50fGxpc3R8bWFwfG5hdHxyZWNvcmR8c3RyaW5nfHVuaXQpXFxiL2ksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBmdW5jdGlvbjogL1xcYlxcdysoPz1cXHMqXFwoKS8sXG4gICAgICBudW1iZXI6IFtcbiAgICAgICAgLy8gSGV4YWRlY2ltYWwsIG9jdGFsIGFuZCBiaW5hcnlcbiAgICAgICAgLyVbMDFdK3wmWzAtN10rfFxcJFthLWZcXGRdKy9pLCAvLyBEZWNpbWFsXG4gICAgICAgIC9cXGJcXGQrKD86XFwuXFxkKyk/KD86ZVsrLV0/XFxkKyk/KD86bXR6fG4pPy9pXG4gICAgICBdLFxuICAgICAgb3BlcmF0b3I6XG4gICAgICAgIC8tPnw9XFwvPXxcXC5cXC58XFwqXFwqfDo9fDxbPD0+XT98Pls+PV0/fFsrXFwtKlxcL109P3xbQF49fF18XFxiKD86YW5kfG1vZHxvcilcXGIvLFxuICAgICAgcHVuY3R1YXRpb246IC9cXChcXC58XFwuXFwpfFsoKVxcW1xcXTo7LC57fV0vXG4gICAgfSlcbiAgICB2YXIgY2xhc3NOYW1lSW5zaWRlID0gW1xuICAgICAgJ2NvbW1lbnQnLFxuICAgICAgJ2tleXdvcmQnLFxuICAgICAgJ2J1aWx0aW4nLFxuICAgICAgJ29wZXJhdG9yJyxcbiAgICAgICdwdW5jdHVhdGlvbidcbiAgICBdLnJlZHVjZShmdW5jdGlvbiAoYWNjdW0sIGtleSkge1xuICAgICAgYWNjdW1ba2V5XSA9IHBhc2NhbGlnb1trZXldXG4gICAgICByZXR1cm4gYWNjdW1cbiAgICB9LCB7fSlcbiAgICBwYXNjYWxpZ29bJ2NsYXNzLW5hbWUnXS5mb3JFYWNoKGZ1bmN0aW9uIChwKSB7XG4gICAgICBwLmluc2lkZSA9IGNsYXNzTmFtZUluc2lkZVxuICAgIH0pXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJwYXNjYWxpZ28iLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImJyYWNlcyIsInNvdXJjZSIsInR5cGUiLCJyZXBsYWNlIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJSZWdFeHAiLCJsb29rYmVoaW5kIiwiaW5zaWRlIiwia2V5d29yZCIsImJvb2xlYW4iLCJidWlsdGluIiwiZnVuY3Rpb24iLCJudW1iZXIiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIiwiY2xhc3NOYW1lSW5zaWRlIiwicmVkdWNlIiwiYWNjdW0iLCJrZXkiLCJmb3JFYWNoIiwicCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/pascaligo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/pcaxis.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/pcaxis.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = pcaxis;\npcaxis.displayName = \"pcaxis\";\npcaxis.aliases = [\n    \"px\"\n];\nfunction pcaxis(Prism) {\n    Prism.languages.pcaxis = {\n        string: /\"[^\"]*\"/,\n        keyword: {\n            pattern: /((?:^|;)\\s*)[-A-Z\\d]+(?:\\s*\\[[-\\w]+\\])?(?:\\s*\\(\"[^\"]*\"(?:,\\s*\"[^\"]*\")*\\))?(?=\\s*=)/,\n            lookbehind: true,\n            greedy: true,\n            inside: {\n                keyword: /^[-A-Z\\d]+/,\n                language: {\n                    pattern: /^(\\s*)\\[[-\\w]+\\]/,\n                    lookbehind: true,\n                    inside: {\n                        punctuation: /^\\[|\\]$/,\n                        property: /[-\\w]+/\n                    }\n                },\n                \"sub-key\": {\n                    pattern: /^(\\s*)\\S[\\s\\S]*/,\n                    lookbehind: true,\n                    inside: {\n                        parameter: {\n                            pattern: /\"[^\"]*\"/,\n                            alias: \"property\"\n                        },\n                        punctuation: /^\\(|\\)$|,/\n                    }\n                }\n            }\n        },\n        operator: /=/,\n        tlist: {\n            pattern: /TLIST\\s*\\(\\s*\\w+(?:(?:\\s*,\\s*\"[^\"]*\")+|\\s*,\\s*\"[^\"]*\"-\"[^\"]*\")?\\s*\\)/,\n            greedy: true,\n            inside: {\n                function: /^TLIST/,\n                property: {\n                    pattern: /^(\\s*\\(\\s*)\\w+/,\n                    lookbehind: true\n                },\n                string: /\"[^\"]*\"/,\n                punctuation: /[(),]/,\n                operator: /-/\n            }\n        },\n        punctuation: /[;,]/,\n        number: {\n            pattern: /(^|\\s)\\d+(?:\\.\\d+)?(?!\\S)/,\n            lookbehind: true\n        },\n        boolean: /NO|YES/\n    };\n    Prism.languages.px = Prism.languages.pcaxis;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcGNheGlzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLE9BQU9DLFdBQVcsR0FBRztBQUNyQkQsT0FBT0UsT0FBTyxHQUFHO0lBQUM7Q0FBSztBQUN2QixTQUFTRixPQUFPRyxLQUFLO0lBQ25CQSxNQUFNQyxTQUFTLENBQUNKLE1BQU0sR0FBRztRQUN2QkssUUFBUTtRQUNSQyxTQUFTO1lBQ1BDLFNBQ0U7WUFDRkMsWUFBWTtZQUNaQyxRQUFRO1lBQ1JDLFFBQVE7Z0JBQ05KLFNBQVM7Z0JBQ1RLLFVBQVU7b0JBQ1JKLFNBQVM7b0JBQ1RDLFlBQVk7b0JBQ1pFLFFBQVE7d0JBQ05FLGFBQWE7d0JBQ2JDLFVBQVU7b0JBQ1o7Z0JBQ0Y7Z0JBQ0EsV0FBVztvQkFDVE4sU0FBUztvQkFDVEMsWUFBWTtvQkFDWkUsUUFBUTt3QkFDTkksV0FBVzs0QkFDVFAsU0FBUzs0QkFDVFEsT0FBTzt3QkFDVDt3QkFDQUgsYUFBYTtvQkFDZjtnQkFDRjtZQUNGO1FBQ0Y7UUFDQUksVUFBVTtRQUNWQyxPQUFPO1lBQ0xWLFNBQ0U7WUFDRkUsUUFBUTtZQUNSQyxRQUFRO2dCQUNOUSxVQUFVO2dCQUNWTCxVQUFVO29CQUNSTixTQUFTO29CQUNUQyxZQUFZO2dCQUNkO2dCQUNBSCxRQUFRO2dCQUNSTyxhQUFhO2dCQUNiSSxVQUFVO1lBQ1o7UUFDRjtRQUNBSixhQUFhO1FBQ2JPLFFBQVE7WUFDTlosU0FBUztZQUNUQyxZQUFZO1FBQ2Q7UUFDQVksU0FBUztJQUNYO0lBQ0FqQixNQUFNQyxTQUFTLENBQUNpQixFQUFFLEdBQUdsQixNQUFNQyxTQUFTLENBQUNKLE1BQU07QUFDN0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcGNheGlzLmpzPzhlNTgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gcGNheGlzXG5wY2F4aXMuZGlzcGxheU5hbWUgPSAncGNheGlzJ1xucGNheGlzLmFsaWFzZXMgPSBbJ3B4J11cbmZ1bmN0aW9uIHBjYXhpcyhQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMucGNheGlzID0ge1xuICAgIHN0cmluZzogL1wiW15cIl0qXCIvLFxuICAgIGtleXdvcmQ6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oKD86Xnw7KVxccyopWy1BLVpcXGRdKyg/OlxccypcXFtbLVxcd10rXFxdKT8oPzpcXHMqXFwoXCJbXlwiXSpcIig/OixcXHMqXCJbXlwiXSpcIikqXFwpKT8oPz1cXHMqPSkvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBrZXl3b3JkOiAvXlstQS1aXFxkXSsvLFxuICAgICAgICBsYW5ndWFnZToge1xuICAgICAgICAgIHBhdHRlcm46IC9eKFxccyopXFxbWy1cXHddK1xcXS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXlxcW3xcXF0kLyxcbiAgICAgICAgICAgIHByb3BlcnR5OiAvWy1cXHddKy9cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgICdzdWIta2V5Jzoge1xuICAgICAgICAgIHBhdHRlcm46IC9eKFxccyopXFxTW1xcc1xcU10qLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgcGFyYW1ldGVyOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC9cIlteXCJdKlwiLyxcbiAgICAgICAgICAgICAgYWxpYXM6ICdwcm9wZXJ0eSdcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwdW5jdHVhdGlvbjogL15cXCh8XFwpJHwsL1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgb3BlcmF0b3I6IC89LyxcbiAgICB0bGlzdDoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL1RMSVNUXFxzKlxcKFxccypcXHcrKD86KD86XFxzKixcXHMqXCJbXlwiXSpcIikrfFxccyosXFxzKlwiW15cIl0qXCItXCJbXlwiXSpcIik/XFxzKlxcKS8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgZnVuY3Rpb246IC9eVExJU1QvLFxuICAgICAgICBwcm9wZXJ0eToge1xuICAgICAgICAgIHBhdHRlcm46IC9eKFxccypcXChcXHMqKVxcdysvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgc3RyaW5nOiAvXCJbXlwiXSpcIi8sXG4gICAgICAgIHB1bmN0dWF0aW9uOiAvWygpLF0vLFxuICAgICAgICBvcGVyYXRvcjogLy0vXG4gICAgICB9XG4gICAgfSxcbiAgICBwdW5jdHVhdGlvbjogL1s7LF0vLFxuICAgIG51bWJlcjoge1xuICAgICAgcGF0dGVybjogLyhefFxccylcXGQrKD86XFwuXFxkKyk/KD8hXFxTKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBib29sZWFuOiAvTk98WUVTL1xuICB9XG4gIFByaXNtLmxhbmd1YWdlcy5weCA9IFByaXNtLmxhbmd1YWdlcy5wY2F4aXNcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicGNheGlzIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJzdHJpbmciLCJrZXl3b3JkIiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJncmVlZHkiLCJpbnNpZGUiLCJsYW5ndWFnZSIsInB1bmN0dWF0aW9uIiwicHJvcGVydHkiLCJwYXJhbWV0ZXIiLCJhbGlhcyIsIm9wZXJhdG9yIiwidGxpc3QiLCJmdW5jdGlvbiIsIm51bWJlciIsImJvb2xlYW4iLCJweCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/pcaxis.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/peoplecode.js":
/*!***************************************************!*\
  !*** ./node_modules/refractor/lang/peoplecode.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = peoplecode;\npeoplecode.displayName = \"peoplecode\";\npeoplecode.aliases = [\n    \"pcode\"\n];\nfunction peoplecode(Prism) {\n    Prism.languages.peoplecode = {\n        comment: RegExp([\n            // C-style multiline comments\n            /\\/\\*[\\s\\S]*?\\*\\//.source,\n            /\\bREM[^;]*;/.source,\n            /<\\*(?:[^<*]|\\*(?!>)|<(?!\\*)|<\\*(?:(?!\\*>)[\\s\\S])*\\*>)*\\*>/.source,\n            /\\/\\+[\\s\\S]*?\\+\\//.source\n        ].join(\"|\")),\n        string: {\n            pattern: /'(?:''|[^'\\r\\n])*'(?!')|\"(?:\"\"|[^\"\\r\\n])*\"(?!\")/,\n            greedy: true\n        },\n        variable: /%\\w+/,\n        \"function-definition\": {\n            pattern: /((?:^|[^\\w-])(?:function|method)\\s+)\\w+/i,\n            lookbehind: true,\n            alias: \"function\"\n        },\n        \"class-name\": {\n            pattern: /((?:^|[^-\\w])(?:as|catch|class|component|create|extends|global|implements|instance|local|of|property|returns)\\s+)\\w+(?::\\w+)*/i,\n            lookbehind: true,\n            inside: {\n                punctuation: /:/\n            }\n        },\n        keyword: /\\b(?:abstract|alias|as|catch|class|component|constant|create|declare|else|end-(?:class|evaluate|for|function|get|if|method|set|try|while)|evaluate|extends|for|function|get|global|if|implements|import|instance|library|local|method|null|of|out|peopleCode|private|program|property|protected|readonly|ref|repeat|returns?|set|step|then|throw|to|try|until|value|when(?:-other)?|while)\\b/i,\n        \"operator-keyword\": {\n            pattern: /\\b(?:and|not|or)\\b/i,\n            alias: \"operator\"\n        },\n        function: /[_a-z]\\w*(?=\\s*\\()/i,\n        boolean: /\\b(?:false|true)\\b/i,\n        number: /\\b\\d+(?:\\.\\d+)?\\b/,\n        operator: /<>|[<>]=?|!=|\\*\\*|[-+*/|=@]/,\n        punctuation: /[:.;,()[\\]]/\n    };\n    Prism.languages.pcode = Prism.languages.peoplecode;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcGVvcGxlY29kZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxXQUFXQyxXQUFXLEdBQUc7QUFDekJELFdBQVdFLE9BQU8sR0FBRztJQUFDO0NBQVE7QUFDOUIsU0FBU0YsV0FBV0csS0FBSztJQUN2QkEsTUFBTUMsU0FBUyxDQUFDSixVQUFVLEdBQUc7UUFDM0JLLFNBQVNDLE9BQ1A7WUFDRSw2QkFBNkI7WUFDN0IsbUJBQW1CQyxNQUFNO1lBQ3pCLGNBQWNBLE1BQU07WUFDcEIsNERBQTREQSxNQUFNO1lBQ2xFLG1CQUFtQkEsTUFBTTtTQUMxQixDQUFDQyxJQUFJLENBQUM7UUFFVEMsUUFBUTtZQUNOQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBQyxVQUFVO1FBQ1YsdUJBQXVCO1lBQ3JCRixTQUFTO1lBQ1RHLFlBQVk7WUFDWkMsT0FBTztRQUNUO1FBQ0EsY0FBYztZQUNaSixTQUNFO1lBQ0ZHLFlBQVk7WUFDWkUsUUFBUTtnQkFDTkMsYUFBYTtZQUNmO1FBQ0Y7UUFDQUMsU0FDRTtRQUNGLG9CQUFvQjtZQUNsQlAsU0FBUztZQUNUSSxPQUFPO1FBQ1Q7UUFDQUksVUFBVTtRQUNWQyxTQUFTO1FBQ1RDLFFBQVE7UUFDUkMsVUFBVTtRQUNWTCxhQUFhO0lBQ2Y7SUFDQWIsTUFBTUMsU0FBUyxDQUFDa0IsS0FBSyxHQUFHbkIsTUFBTUMsU0FBUyxDQUFDSixVQUFVO0FBQ3BEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3Blb3BsZWNvZGUuanM/MTU0MiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBwZW9wbGVjb2RlXG5wZW9wbGVjb2RlLmRpc3BsYXlOYW1lID0gJ3Blb3BsZWNvZGUnXG5wZW9wbGVjb2RlLmFsaWFzZXMgPSBbJ3Bjb2RlJ11cbmZ1bmN0aW9uIHBlb3BsZWNvZGUoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLnBlb3BsZWNvZGUgPSB7XG4gICAgY29tbWVudDogUmVnRXhwKFxuICAgICAgW1xuICAgICAgICAvLyBDLXN0eWxlIG11bHRpbGluZSBjb21tZW50c1xuICAgICAgICAvXFwvXFwqW1xcc1xcU10qP1xcKlxcLy8uc291cmNlLCAvLyBSRU0gY29tbWVudHNcbiAgICAgICAgL1xcYlJFTVteO10qOy8uc291cmNlLCAvLyBOZXN0ZWQgPCogKj4gY29tbWVudHNcbiAgICAgICAgLzxcXCooPzpbXjwqXXxcXCooPyE+KXw8KD8hXFwqKXw8XFwqKD86KD8hXFwqPilbXFxzXFxTXSkqXFwqPikqXFwqPi8uc291cmNlLCAvLyAvKyArLyBjb21tZW50c1xuICAgICAgICAvXFwvXFwrW1xcc1xcU10qP1xcK1xcLy8uc291cmNlXG4gICAgICBdLmpvaW4oJ3wnKVxuICAgICksXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvJyg/OicnfFteJ1xcclxcbl0pKicoPyEnKXxcIig/OlwiXCJ8W15cIlxcclxcbl0pKlwiKD8hXCIpLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgdmFyaWFibGU6IC8lXFx3Ky8sXG4gICAgJ2Z1bmN0aW9uLWRlZmluaXRpb24nOiB7XG4gICAgICBwYXR0ZXJuOiAvKCg/Ol58W15cXHctXSkoPzpmdW5jdGlvbnxtZXRob2QpXFxzKylcXHcrL2ksXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdmdW5jdGlvbidcbiAgICB9LFxuICAgICdjbGFzcy1uYW1lJzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLygoPzpefFteLVxcd10pKD86YXN8Y2F0Y2h8Y2xhc3N8Y29tcG9uZW50fGNyZWF0ZXxleHRlbmRzfGdsb2JhbHxpbXBsZW1lbnRzfGluc3RhbmNlfGxvY2FsfG9mfHByb3BlcnR5fHJldHVybnMpXFxzKylcXHcrKD86OlxcdyspKi9pLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBwdW5jdHVhdGlvbjogLzovXG4gICAgICB9XG4gICAgfSxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OmFic3RyYWN0fGFsaWFzfGFzfGNhdGNofGNsYXNzfGNvbXBvbmVudHxjb25zdGFudHxjcmVhdGV8ZGVjbGFyZXxlbHNlfGVuZC0oPzpjbGFzc3xldmFsdWF0ZXxmb3J8ZnVuY3Rpb258Z2V0fGlmfG1ldGhvZHxzZXR8dHJ5fHdoaWxlKXxldmFsdWF0ZXxleHRlbmRzfGZvcnxmdW5jdGlvbnxnZXR8Z2xvYmFsfGlmfGltcGxlbWVudHN8aW1wb3J0fGluc3RhbmNlfGxpYnJhcnl8bG9jYWx8bWV0aG9kfG51bGx8b2Z8b3V0fHBlb3BsZUNvZGV8cHJpdmF0ZXxwcm9ncmFtfHByb3BlcnR5fHByb3RlY3RlZHxyZWFkb25seXxyZWZ8cmVwZWF0fHJldHVybnM/fHNldHxzdGVwfHRoZW58dGhyb3d8dG98dHJ5fHVudGlsfHZhbHVlfHdoZW4oPzotb3RoZXIpP3x3aGlsZSlcXGIvaSxcbiAgICAnb3BlcmF0b3Ita2V5d29yZCc6IHtcbiAgICAgIHBhdHRlcm46IC9cXGIoPzphbmR8bm90fG9yKVxcYi9pLFxuICAgICAgYWxpYXM6ICdvcGVyYXRvcidcbiAgICB9LFxuICAgIGZ1bmN0aW9uOiAvW19hLXpdXFx3Kig/PVxccypcXCgpL2ksXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiL2ksXG4gICAgbnVtYmVyOiAvXFxiXFxkKyg/OlxcLlxcZCspP1xcYi8sXG4gICAgb3BlcmF0b3I6IC88PnxbPD5dPT98IT18XFwqXFwqfFstKyovfD1AXS8sXG4gICAgcHVuY3R1YXRpb246IC9bOi47LCgpW1xcXV0vXG4gIH1cbiAgUHJpc20ubGFuZ3VhZ2VzLnBjb2RlID0gUHJpc20ubGFuZ3VhZ2VzLnBlb3BsZWNvZGVcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicGVvcGxlY29kZSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsIlJlZ0V4cCIsInNvdXJjZSIsImpvaW4iLCJzdHJpbmciLCJwYXR0ZXJuIiwiZ3JlZWR5IiwidmFyaWFibGUiLCJsb29rYmVoaW5kIiwiYWxpYXMiLCJpbnNpZGUiLCJwdW5jdHVhdGlvbiIsImtleXdvcmQiLCJmdW5jdGlvbiIsImJvb2xlYW4iLCJudW1iZXIiLCJvcGVyYXRvciIsInBjb2RlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/peoplecode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/perl.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/perl.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = perl;\nperl.displayName = \"perl\";\nperl.aliases = [];\nfunction perl(Prism) {\n    ;\n    (function(Prism) {\n        var brackets = /(?:\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}|\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)/.source;\n        Prism.languages.perl = {\n            comment: [\n                {\n                    // POD\n                    pattern: /(^\\s*)=\\w[\\s\\S]*?=cut.*/m,\n                    lookbehind: true,\n                    greedy: true\n                },\n                {\n                    pattern: /(^|[^\\\\$])#.*/,\n                    lookbehind: true,\n                    greedy: true\n                }\n            ],\n            // TODO Could be nice to handle Heredoc too.\n            string: [\n                {\n                    pattern: RegExp(/\\b(?:q|qq|qw|qx)(?![a-zA-Z0-9])\\s*/.source + \"(?:\" + [\n                        // q/.../\n                        /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n                        // eslint-disable-next-line regexp/strict\n                        /([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source,\n                        // q{...}\n                        // q[...]\n                        // q<...>\n                        brackets\n                    ].join(\"|\") + \")\"),\n                    greedy: true\n                },\n                {\n                    pattern: /(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n                    greedy: true\n                },\n                // FIXME Multi-line single-quoted strings are not supported as they would break variables containing '\n                {\n                    pattern: /'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n                    greedy: true\n                }\n            ],\n            regex: [\n                {\n                    pattern: RegExp(/\\b(?:m|qr)(?![a-zA-Z0-9])\\s*/.source + \"(?:\" + [\n                        // m/.../\n                        /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n                        // eslint-disable-next-line regexp/strict\n                        /([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source,\n                        // m{...}\n                        // m[...]\n                        // m<...>\n                        brackets\n                    ].join(\"|\") + \")\" + /[msixpodualngc]*/.source),\n                    greedy: true\n                },\n                {\n                    pattern: RegExp(/(^|[^-])\\b(?:s|tr|y)(?![a-zA-Z0-9])\\s*/.source + \"(?:\" + [\n                        // s/.../.../\n                        // eslint-disable-next-line regexp/strict\n                        /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source,\n                        // eslint-disable-next-line regexp/strict\n                        /([a-zA-Z0-9])(?:(?!\\3)[^\\\\]|\\\\[\\s\\S])*\\3(?:(?!\\3)[^\\\\]|\\\\[\\s\\S])*\\3/.source,\n                        // s{...}{...}\n                        // s[...][...]\n                        // s<...><...>\n                        // s(...)[...]\n                        brackets + /\\s*/.source + brackets\n                    ].join(\"|\") + \")\" + /[msixpodualngcer]*/.source),\n                    lookbehind: true,\n                    greedy: true\n                },\n                // The look-ahead tries to prevent two divisions on\n                // the same line from being highlighted as regex.\n                // This does not support multi-line regex.\n                {\n                    pattern: /\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|x|xor)\\b))/,\n                    greedy: true\n                }\n            ],\n            // FIXME Not sure about the handling of ::, ', and #\n            variable: [\n                // ${^POSTMATCH}\n                /[&*$@%]\\{\\^[A-Z]+\\}/,\n                /[&*$@%]\\^[A-Z_]/,\n                /[&*$@%]#?(?=\\{)/,\n                /[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+(?![\\w$]))+(?:::)*/,\n                /[&*$@%]\\d+/,\n                // The negative lookahead prevents from breaking the %= operator\n                /(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/\n            ],\n            filehandle: {\n                // <>, <FOO>, _\n                pattern: /<(?![<=])\\S*?>|\\b_\\b/,\n                alias: \"symbol\"\n            },\n            \"v-string\": {\n                // v1.2, 1.2.3\n                pattern: /v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,\n                alias: \"string\"\n            },\n            function: {\n                pattern: /(\\bsub[ \\t]+)\\w+/,\n                lookbehind: true\n            },\n            keyword: /\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|return|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,\n            number: /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,\n            operator: /-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|xor)\\b/,\n            punctuation: /[{}[\\];(),:]/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/perl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/php-extras.js":
/*!***************************************************!*\
  !*** ./node_modules/refractor/lang/php-extras.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorPhp = __webpack_require__(/*! ./php.js */ \"(ssr)/./node_modules/refractor/lang/php.js\");\nmodule.exports = phpExtras;\nphpExtras.displayName = \"phpExtras\";\nphpExtras.aliases = [];\nfunction phpExtras(Prism) {\n    Prism.register(refractorPhp);\n    Prism.languages.insertBefore(\"php\", \"variable\", {\n        this: {\n            pattern: /\\$this\\b/,\n            alias: \"keyword\"\n        },\n        global: /\\$(?:GLOBALS|HTTP_RAW_POST_DATA|_(?:COOKIE|ENV|FILES|GET|POST|REQUEST|SERVER|SESSION)|argc|argv|http_response_header|php_errormsg)\\b/,\n        scope: {\n            pattern: /\\b[\\w\\\\]+::/,\n            inside: {\n                keyword: /\\b(?:parent|self|static)\\b/,\n                punctuation: /::|\\\\/\n            }\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcGhwLWV4dHJhcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLElBQUlBLGVBQWVDLG1CQUFPQSxDQUFDO0FBQzNCQyxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxVQUFVQyxXQUFXLEdBQUc7QUFDeEJELFVBQVVFLE9BQU8sR0FBRyxFQUFFO0FBQ3RCLFNBQVNGLFVBQVVHLEtBQUs7SUFDdEJBLE1BQU1DLFFBQVEsQ0FBQ1I7SUFDZk8sTUFBTUUsU0FBUyxDQUFDQyxZQUFZLENBQUMsT0FBTyxZQUFZO1FBQzlDQyxNQUFNO1lBQ0pDLFNBQVM7WUFDVEMsT0FBTztRQUNUO1FBQ0FDLFFBQ0U7UUFDRkMsT0FBTztZQUNMSCxTQUFTO1lBQ1RJLFFBQVE7Z0JBQ05DLFNBQVM7Z0JBQ1RDLGFBQWE7WUFDZjtRQUNGO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9waHAtZXh0cmFzLmpzPzM4N2EiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG52YXIgcmVmcmFjdG9yUGhwID0gcmVxdWlyZSgnLi9waHAuanMnKVxubW9kdWxlLmV4cG9ydHMgPSBwaHBFeHRyYXNcbnBocEV4dHJhcy5kaXNwbGF5TmFtZSA9ICdwaHBFeHRyYXMnXG5waHBFeHRyYXMuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBwaHBFeHRyYXMoUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yUGhwKVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdwaHAnLCAndmFyaWFibGUnLCB7XG4gICAgdGhpczoge1xuICAgICAgcGF0dGVybjogL1xcJHRoaXNcXGIvLFxuICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgIH0sXG4gICAgZ2xvYmFsOlxuICAgICAgL1xcJCg/OkdMT0JBTFN8SFRUUF9SQVdfUE9TVF9EQVRBfF8oPzpDT09LSUV8RU5WfEZJTEVTfEdFVHxQT1NUfFJFUVVFU1R8U0VSVkVSfFNFU1NJT04pfGFyZ2N8YXJndnxodHRwX3Jlc3BvbnNlX2hlYWRlcnxwaHBfZXJyb3Jtc2cpXFxiLyxcbiAgICBzY29wZToge1xuICAgICAgcGF0dGVybjogL1xcYltcXHdcXFxcXSs6Oi8sXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAga2V5d29yZDogL1xcYig/OnBhcmVudHxzZWxmfHN0YXRpYylcXGIvLFxuICAgICAgICBwdW5jdHVhdGlvbjogLzo6fFxcXFwvXG4gICAgICB9XG4gICAgfVxuICB9KVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3RvclBocCIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwicGhwRXh0cmFzIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImluc2VydEJlZm9yZSIsInRoaXMiLCJwYXR0ZXJuIiwiYWxpYXMiLCJnbG9iYWwiLCJzY29wZSIsImluc2lkZSIsImtleXdvcmQiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/php-extras.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/php.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/php.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorMarkupTemplating = __webpack_require__(/*! ./markup-templating.js */ \"(ssr)/./node_modules/refractor/lang/markup-templating.js\");\nmodule.exports = php;\nphp.displayName = \"php\";\nphp.aliases = [];\nfunction php(Prism) {\n    Prism.register(refractorMarkupTemplating) /**\n   * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n   * Modified by Miles Johnson: http://milesj.me\n   * Rewritten by Tom Pavelec\n   *\n   * Supports PHP 5.3 - 8.0\n   */ ;\n    (function(Prism) {\n        var comment = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*|#(?!\\[).*/;\n        var constant = [\n            {\n                pattern: /\\b(?:false|true)\\b/i,\n                alias: \"boolean\"\n            },\n            {\n                pattern: /(::\\s*)\\b[a-z_]\\w*\\b(?!\\s*\\()/i,\n                greedy: true,\n                lookbehind: true\n            },\n            {\n                pattern: /(\\b(?:case|const)\\s+)\\b[a-z_]\\w*(?=\\s*[;=])/i,\n                greedy: true,\n                lookbehind: true\n            },\n            /\\b(?:null)\\b/i,\n            /\\b[A-Z_][A-Z0-9_]*\\b(?!\\s*\\()/\n        ];\n        var number = /\\b0b[01]+(?:_[01]+)*\\b|\\b0o[0-7]+(?:_[0-7]+)*\\b|\\b0x[\\da-f]+(?:_[\\da-f]+)*\\b|(?:\\b\\d+(?:_\\d+)*\\.?(?:\\d+(?:_\\d+)*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i;\n        var operator = /<?=>|\\?\\?=?|\\.{3}|\\??->|[!=]=?=?|::|\\*\\*=?|--|\\+\\+|&&|\\|\\||<<|>>|[?~]|[/^|%*&<>.+-]=?/;\n        var punctuation = /[{}\\[\\](),:;]/;\n        Prism.languages.php = {\n            delimiter: {\n                pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n                alias: \"important\"\n            },\n            comment: comment,\n            variable: /\\$+(?:\\w+\\b|(?=\\{))/,\n            package: {\n                pattern: /(namespace\\s+|use\\s+(?:function\\s+)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n                lookbehind: true,\n                inside: {\n                    punctuation: /\\\\/\n                }\n            },\n            \"class-name-definition\": {\n                pattern: /(\\b(?:class|enum|interface|trait)\\s+)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n                lookbehind: true,\n                alias: \"class-name\"\n            },\n            \"function-definition\": {\n                pattern: /(\\bfunction\\s+)[a-z_]\\w*(?=\\s*\\()/i,\n                lookbehind: true,\n                alias: \"function\"\n            },\n            keyword: [\n                {\n                    pattern: /(\\(\\s*)\\b(?:array|bool|boolean|float|int|integer|object|string)\\b(?=\\s*\\))/i,\n                    alias: \"type-casting\",\n                    greedy: true,\n                    lookbehind: true\n                },\n                {\n                    pattern: /([(,?]\\s*)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|object|self|static|string)\\b(?=\\s*\\$)/i,\n                    alias: \"type-hint\",\n                    greedy: true,\n                    lookbehind: true\n                },\n                {\n                    pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|object|self|static|string|void)\\b/i,\n                    alias: \"return-type\",\n                    greedy: true,\n                    lookbehind: true\n                },\n                {\n                    pattern: /\\b(?:array(?!\\s*\\()|bool|float|int|iterable|mixed|object|string|void)\\b/i,\n                    alias: \"type-declaration\",\n                    greedy: true\n                },\n                {\n                    pattern: /(\\|\\s*)(?:false|null)\\b|\\b(?:false|null)(?=\\s*\\|)/i,\n                    alias: \"type-declaration\",\n                    greedy: true,\n                    lookbehind: true\n                },\n                {\n                    pattern: /\\b(?:parent|self|static)(?=\\s*::)/i,\n                    alias: \"static-context\",\n                    greedy: true\n                },\n                {\n                    // yield from\n                    pattern: /(\\byield\\s+)from\\b/i,\n                    lookbehind: true\n                },\n                /\\bclass\\b/i,\n                {\n                    // https://www.php.net/manual/en/reserved.keywords.php\n                    //\n                    // keywords cannot be preceded by \"->\"\n                    // the complex lookbehind means `(?<!(?:->|::)\\s*)`\n                    pattern: /((?:^|[^\\s>:]|(?:^|[^-])>|(?:^|[^:]):)\\s*)\\b(?:abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|match|namespace|new|or|parent|print|private|protected|public|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield|__halt_compiler)\\b/i,\n                    lookbehind: true\n                }\n            ],\n            \"argument-name\": {\n                pattern: /([(,]\\s+)\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n                lookbehind: true\n            },\n            \"class-name\": [\n                {\n                    pattern: /(\\b(?:extends|implements|instanceof|new(?!\\s+self|\\s+static))\\s+|\\bcatch\\s*\\()\\b[a-z_]\\w*(?!\\\\)\\b/i,\n                    greedy: true,\n                    lookbehind: true\n                },\n                {\n                    pattern: /(\\|\\s*)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n                    greedy: true,\n                    lookbehind: true\n                },\n                {\n                    pattern: /\\b[a-z_]\\w*(?!\\\\)\\b(?=\\s*\\|)/i,\n                    greedy: true\n                },\n                {\n                    pattern: /(\\|\\s*)(?:\\\\?\\b[a-z_]\\w*)+\\b/i,\n                    alias: \"class-name-fully-qualified\",\n                    greedy: true,\n                    lookbehind: true,\n                    inside: {\n                        punctuation: /\\\\/\n                    }\n                },\n                {\n                    pattern: /(?:\\\\?\\b[a-z_]\\w*)+\\b(?=\\s*\\|)/i,\n                    alias: \"class-name-fully-qualified\",\n                    greedy: true,\n                    inside: {\n                        punctuation: /\\\\/\n                    }\n                },\n                {\n                    pattern: /(\\b(?:extends|implements|instanceof|new(?!\\s+self\\b|\\s+static\\b))\\s+|\\bcatch\\s*\\()(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n                    alias: \"class-name-fully-qualified\",\n                    greedy: true,\n                    lookbehind: true,\n                    inside: {\n                        punctuation: /\\\\/\n                    }\n                },\n                {\n                    pattern: /\\b[a-z_]\\w*(?=\\s*\\$)/i,\n                    alias: \"type-declaration\",\n                    greedy: true\n                },\n                {\n                    pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n                    alias: [\n                        \"class-name-fully-qualified\",\n                        \"type-declaration\"\n                    ],\n                    greedy: true,\n                    inside: {\n                        punctuation: /\\\\/\n                    }\n                },\n                {\n                    pattern: /\\b[a-z_]\\w*(?=\\s*::)/i,\n                    alias: \"static-context\",\n                    greedy: true\n                },\n                {\n                    pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*::)/i,\n                    alias: [\n                        \"class-name-fully-qualified\",\n                        \"static-context\"\n                    ],\n                    greedy: true,\n                    inside: {\n                        punctuation: /\\\\/\n                    }\n                },\n                {\n                    pattern: /([(,?]\\s*)[a-z_]\\w*(?=\\s*\\$)/i,\n                    alias: \"type-hint\",\n                    greedy: true,\n                    lookbehind: true\n                },\n                {\n                    pattern: /([(,?]\\s*)(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n                    alias: [\n                        \"class-name-fully-qualified\",\n                        \"type-hint\"\n                    ],\n                    greedy: true,\n                    lookbehind: true,\n                    inside: {\n                        punctuation: /\\\\/\n                    }\n                },\n                {\n                    pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n                    alias: \"return-type\",\n                    greedy: true,\n                    lookbehind: true\n                },\n                {\n                    pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n                    alias: [\n                        \"class-name-fully-qualified\",\n                        \"return-type\"\n                    ],\n                    greedy: true,\n                    lookbehind: true,\n                    inside: {\n                        punctuation: /\\\\/\n                    }\n                }\n            ],\n            constant: constant,\n            function: {\n                pattern: /(^|[^\\\\\\w])\\\\?[a-z_](?:[\\w\\\\]*\\w)?(?=\\s*\\()/i,\n                lookbehind: true,\n                inside: {\n                    punctuation: /\\\\/\n                }\n            },\n            property: {\n                pattern: /(->\\s*)\\w+/,\n                lookbehind: true\n            },\n            number: number,\n            operator: operator,\n            punctuation: punctuation\n        };\n        var string_interpolation = {\n            pattern: /\\{\\$(?:\\{(?:\\{[^{}]+\\}|[^{}]+)\\}|[^{}])+\\}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)?)/,\n            lookbehind: true,\n            inside: Prism.languages.php\n        };\n        var string = [\n            {\n                pattern: /<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,\n                alias: \"nowdoc-string\",\n                greedy: true,\n                inside: {\n                    delimiter: {\n                        pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n                        alias: \"symbol\",\n                        inside: {\n                            punctuation: /^<<<'?|[';]$/\n                        }\n                    }\n                }\n            },\n            {\n                pattern: /<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,\n                alias: \"heredoc-string\",\n                greedy: true,\n                inside: {\n                    delimiter: {\n                        pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n                        alias: \"symbol\",\n                        inside: {\n                            punctuation: /^<<<\"?|[\";]$/\n                        }\n                    },\n                    interpolation: string_interpolation\n                }\n            },\n            {\n                pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n                alias: \"backtick-quoted-string\",\n                greedy: true\n            },\n            {\n                pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n                alias: \"single-quoted-string\",\n                greedy: true\n            },\n            {\n                pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n                alias: \"double-quoted-string\",\n                greedy: true,\n                inside: {\n                    interpolation: string_interpolation\n                }\n            }\n        ];\n        Prism.languages.insertBefore(\"php\", \"variable\", {\n            string: string,\n            attribute: {\n                pattern: /#\\[(?:[^\"'\\/#]|\\/(?![*/])|\\/\\/.*$|#(?!\\[).*$|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*')+\\](?=\\s*[a-z$#])/im,\n                greedy: true,\n                inside: {\n                    \"attribute-content\": {\n                        pattern: /^(#\\[)[\\s\\S]+(?=\\]$)/,\n                        lookbehind: true,\n                        // inside can appear subset of php\n                        inside: {\n                            comment: comment,\n                            string: string,\n                            \"attribute-class-name\": [\n                                {\n                                    pattern: /([^:]|^)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n                                    alias: \"class-name\",\n                                    greedy: true,\n                                    lookbehind: true\n                                },\n                                {\n                                    pattern: /([^:]|^)(?:\\\\?\\b[a-z_]\\w*)+/i,\n                                    alias: [\n                                        \"class-name\",\n                                        \"class-name-fully-qualified\"\n                                    ],\n                                    greedy: true,\n                                    lookbehind: true,\n                                    inside: {\n                                        punctuation: /\\\\/\n                                    }\n                                }\n                            ],\n                            constant: constant,\n                            number: number,\n                            operator: operator,\n                            punctuation: punctuation\n                        }\n                    },\n                    delimiter: {\n                        pattern: /^#\\[|\\]$/,\n                        alias: \"punctuation\"\n                    }\n                }\n            }\n        });\n        Prism.hooks.add(\"before-tokenize\", function(env) {\n            if (!/<\\?/.test(env.code)) {\n                return;\n            }\n            var phpPattern = /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#(?!\\[))(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|#\\[|\\/\\*(?:[^*]|\\*(?!\\/))*(?:\\*\\/|$))*?(?:\\?>|$)/g;\n            Prism.languages[\"markup-templating\"].buildPlaceholders(env, \"php\", phpPattern);\n        });\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            Prism.languages[\"markup-templating\"].tokenizePlaceholders(env, \"php\");\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/php.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/phpdoc.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/phpdoc.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorPhp = __webpack_require__(/*! ./php.js */ \"(ssr)/./node_modules/refractor/lang/php.js\");\nvar refractorJavadoclike = __webpack_require__(/*! ./javadoclike.js */ \"(ssr)/./node_modules/refractor/lang/javadoclike.js\");\nmodule.exports = phpdoc;\nphpdoc.displayName = \"phpdoc\";\nphpdoc.aliases = [];\nfunction phpdoc(Prism) {\n    Prism.register(refractorPhp);\n    Prism.register(refractorJavadoclike);\n    (function(Prism) {\n        var typeExpression = /(?:\\b[a-zA-Z]\\w*|[|\\\\[\\]])+/.source;\n        Prism.languages.phpdoc = Prism.languages.extend(\"javadoclike\", {\n            parameter: {\n                pattern: RegExp(\"(@(?:global|param|property(?:-read|-write)?|var)\\\\s+(?:\" + typeExpression + \"\\\\s+)?)\\\\$\\\\w+\"),\n                lookbehind: true\n            }\n        });\n        Prism.languages.insertBefore(\"phpdoc\", \"keyword\", {\n            \"class-name\": [\n                {\n                    pattern: RegExp(\"(@(?:global|package|param|property(?:-read|-write)?|return|subpackage|throws|var)\\\\s+)\" + typeExpression),\n                    lookbehind: true,\n                    inside: {\n                        keyword: /\\b(?:array|bool|boolean|callback|double|false|float|int|integer|mixed|null|object|resource|self|string|true|void)\\b/,\n                        punctuation: /[|\\\\[\\]()]/\n                    }\n                }\n            ]\n        });\n        Prism.languages.javadoclike.addSupport(\"php\", Prism.languages.phpdoc);\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcGhwZG9jLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsSUFBSUEsZUFBZUMsbUJBQU9BLENBQUM7QUFDM0IsSUFBSUMsdUJBQXVCRCxtQkFBT0EsQ0FBQztBQUNuQ0UsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUcsRUFBRTtBQUNuQixTQUFTRixPQUFPRyxLQUFLO0lBQ25CQSxNQUFNQyxRQUFRLENBQUNUO0lBQ2ZRLE1BQU1DLFFBQVEsQ0FBQ1A7SUFDYixVQUFVTSxLQUFLO1FBQ2YsSUFBSUUsaUJBQWlCLDhCQUE4QkMsTUFBTTtRQUN6REgsTUFBTUksU0FBUyxDQUFDUCxNQUFNLEdBQUdHLE1BQU1JLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLGVBQWU7WUFDN0RDLFdBQVc7Z0JBQ1RDLFNBQVNDLE9BQ1AsNERBQ0VOLGlCQUNBO2dCQUVKTyxZQUFZO1lBQ2Q7UUFDRjtRQUNBVCxNQUFNSSxTQUFTLENBQUNNLFlBQVksQ0FBQyxVQUFVLFdBQVc7WUFDaEQsY0FBYztnQkFDWjtvQkFDRUgsU0FBU0MsT0FDUCwyRkFDRU47b0JBRUpPLFlBQVk7b0JBQ1pFLFFBQVE7d0JBQ05DLFNBQ0U7d0JBQ0ZDLGFBQWE7b0JBQ2Y7Z0JBQ0Y7YUFDRDtRQUNIO1FBQ0FiLE1BQU1JLFNBQVMsQ0FBQ1UsV0FBVyxDQUFDQyxVQUFVLENBQUMsT0FBT2YsTUFBTUksU0FBUyxDQUFDUCxNQUFNO0lBQ3RFLEdBQUdHO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcGhwZG9jLmpzPzQyZWQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG52YXIgcmVmcmFjdG9yUGhwID0gcmVxdWlyZSgnLi9waHAuanMnKVxudmFyIHJlZnJhY3RvckphdmFkb2NsaWtlID0gcmVxdWlyZSgnLi9qYXZhZG9jbGlrZS5qcycpXG5tb2R1bGUuZXhwb3J0cyA9IHBocGRvY1xucGhwZG9jLmRpc3BsYXlOYW1lID0gJ3BocGRvYydcbnBocGRvYy5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIHBocGRvYyhQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JQaHApXG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvckphdmFkb2NsaWtlKVxuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIHZhciB0eXBlRXhwcmVzc2lvbiA9IC8oPzpcXGJbYS16QS1aXVxcdyp8W3xcXFxcW1xcXV0pKy8uc291cmNlXG4gICAgUHJpc20ubGFuZ3VhZ2VzLnBocGRvYyA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2phdmFkb2NsaWtlJywge1xuICAgICAgcGFyYW1ldGVyOiB7XG4gICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICAnKEAoPzpnbG9iYWx8cGFyYW18cHJvcGVydHkoPzotcmVhZHwtd3JpdGUpP3x2YXIpXFxcXHMrKD86JyArXG4gICAgICAgICAgICB0eXBlRXhwcmVzc2lvbiArXG4gICAgICAgICAgICAnXFxcXHMrKT8pXFxcXCRcXFxcdysnXG4gICAgICAgICksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH1cbiAgICB9KVxuICAgIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ3BocGRvYycsICdrZXl3b3JkJywge1xuICAgICAgJ2NsYXNzLW5hbWUnOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoXG4gICAgICAgICAgICAnKEAoPzpnbG9iYWx8cGFja2FnZXxwYXJhbXxwcm9wZXJ0eSg/Oi1yZWFkfC13cml0ZSk/fHJldHVybnxzdWJwYWNrYWdlfHRocm93c3x2YXIpXFxcXHMrKScgK1xuICAgICAgICAgICAgICB0eXBlRXhwcmVzc2lvblxuICAgICAgICAgICksXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIGtleXdvcmQ6XG4gICAgICAgICAgICAgIC9cXGIoPzphcnJheXxib29sfGJvb2xlYW58Y2FsbGJhY2t8ZG91YmxlfGZhbHNlfGZsb2F0fGludHxpbnRlZ2VyfG1peGVkfG51bGx8b2JqZWN0fHJlc291cmNlfHNlbGZ8c3RyaW5nfHRydWV8dm9pZClcXGIvLFxuICAgICAgICAgICAgcHVuY3R1YXRpb246IC9bfFxcXFxbXFxdKCldL1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgXVxuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmphdmFkb2NsaWtlLmFkZFN1cHBvcnQoJ3BocCcsIFByaXNtLmxhbmd1YWdlcy5waHBkb2MpXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3RvclBocCIsInJlcXVpcmUiLCJyZWZyYWN0b3JKYXZhZG9jbGlrZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJwaHBkb2MiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwidHlwZUV4cHJlc3Npb24iLCJzb3VyY2UiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJwYXJhbWV0ZXIiLCJwYXR0ZXJuIiwiUmVnRXhwIiwibG9va2JlaGluZCIsImluc2VydEJlZm9yZSIsImluc2lkZSIsImtleXdvcmQiLCJwdW5jdHVhdGlvbiIsImphdmFkb2NsaWtlIiwiYWRkU3VwcG9ydCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/phpdoc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/plsql.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/plsql.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorSql = __webpack_require__(/*! ./sql.js */ \"(ssr)/./node_modules/refractor/lang/sql.js\");\nmodule.exports = plsql;\nplsql.displayName = \"plsql\";\nplsql.aliases = [];\nfunction plsql(Prism) {\n    Prism.register(refractorSql);\n    Prism.languages.plsql = Prism.languages.extend(\"sql\", {\n        comment: {\n            pattern: /\\/\\*[\\s\\S]*?\\*\\/|--.*/,\n            greedy: true\n        },\n        // https://docs.oracle.com/en/database/oracle/oracle-database/21/lnpls/plsql-reserved-words-keywords.html\n        keyword: /\\b(?:A|ACCESSIBLE|ADD|AGENT|AGGREGATE|ALL|ALTER|AND|ANY|ARRAY|AS|ASC|AT|ATTRIBUTE|AUTHID|AVG|BEGIN|BETWEEN|BFILE_BASE|BINARY|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BULK|BY|BYTE|C|CALL|CALLING|CASCADE|CASE|CHAR|CHARACTER|CHARSET|CHARSETFORM|CHARSETID|CHAR_BASE|CHECK|CLOB_BASE|CLONE|CLOSE|CLUSTER|CLUSTERS|COLAUTH|COLLECT|COLUMNS|COMMENT|COMMIT|COMMITTED|COMPILED|COMPRESS|CONNECT|CONSTANT|CONSTRUCTOR|CONTEXT|CONTINUE|CONVERT|COUNT|CRASH|CREATE|CREDENTIAL|CURRENT|CURSOR|CUSTOMDATUM|DANGLING|DATA|DATE|DATE_BASE|DAY|DECLARE|DEFAULT|DEFINE|DELETE|DESC|DETERMINISTIC|DIRECTORY|DISTINCT|DOUBLE|DROP|DURATION|ELEMENT|ELSE|ELSIF|EMPTY|END|ESCAPE|EXCEPT|EXCEPTION|EXCEPTIONS|EXCLUSIVE|EXECUTE|EXISTS|EXIT|EXTERNAL|FETCH|FINAL|FIRST|FIXED|FLOAT|FOR|FORALL|FORCE|FROM|FUNCTION|GENERAL|GOTO|GRANT|GROUP|HASH|HAVING|HEAP|HIDDEN|HOUR|IDENTIFIED|IF|IMMEDIATE|IMMUTABLE|IN|INCLUDING|INDEX|INDEXES|INDICATOR|INDICES|INFINITE|INSERT|INSTANTIABLE|INT|INTERFACE|INTERSECT|INTERVAL|INTO|INVALIDATE|IS|ISOLATION|JAVA|LANGUAGE|LARGE|LEADING|LENGTH|LEVEL|LIBRARY|LIKE|LIKE2|LIKE4|LIKEC|LIMIT|LIMITED|LOCAL|LOCK|LONG|LOOP|MAP|MAX|MAXLEN|MEMBER|MERGE|MIN|MINUS|MINUTE|MOD|MODE|MODIFY|MONTH|MULTISET|MUTABLE|NAME|NAN|NATIONAL|NATIVE|NCHAR|NEW|NOCOMPRESS|NOCOPY|NOT|NOWAIT|NULL|NUMBER_BASE|OBJECT|OCICOLL|OCIDATE|OCIDATETIME|OCIDURATION|OCIINTERVAL|OCILOBLOCATOR|OCINUMBER|OCIRAW|OCIREF|OCIREFCURSOR|OCIROWID|OCISTRING|OCITYPE|OF|OLD|ON|ONLY|OPAQUE|OPEN|OPERATOR|OPTION|OR|ORACLE|ORADATA|ORDER|ORGANIZATION|ORLANY|ORLVARY|OTHERS|OUT|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETER|PARAMETERS|PARENT|PARTITION|PASCAL|PERSISTABLE|PIPE|PIPELINED|PLUGGABLE|POLYMORPHIC|PRAGMA|PRECISION|PRIOR|PRIVATE|PROCEDURE|PUBLIC|RAISE|RANGE|RAW|READ|RECORD|REF|REFERENCE|RELIES_ON|REM|REMAINDER|RENAME|RESOURCE|RESULT|RESULT_CACHE|RETURN|RETURNING|REVERSE|REVOKE|ROLLBACK|ROW|SAMPLE|SAVE|SAVEPOINT|SB1|SB2|SB4|SECOND|SEGMENT|SELECT|SELF|SEPARATE|SEQUENCE|SERIALIZABLE|SET|SHARE|SHORT|SIZE|SIZE_T|SOME|SPARSE|SQL|SQLCODE|SQLDATA|SQLNAME|SQLSTATE|STANDARD|START|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUM|SYNONYM|TABAUTH|TABLE|TDO|THE|THEN|TIME|TIMESTAMP|TIMEZONE_ABBR|TIMEZONE_HOUR|TIMEZONE_MINUTE|TIMEZONE_REGION|TO|TRAILING|TRANSACTION|TRANSACTIONAL|TRUSTED|TYPE|UB1|UB2|UB4|UNDER|UNION|UNIQUE|UNPLUG|UNSIGNED|UNTRUSTED|UPDATE|USE|USING|VALIST|VALUE|VALUES|VARIABLE|VARIANCE|VARRAY|VARYING|VIEW|VIEWS|VOID|WHEN|WHERE|WHILE|WITH|WORK|WRAPPED|WRITE|YEAR|ZONE)\\b/i,\n        // https://docs.oracle.com/en/database/oracle/oracle-database/21/lnpls/plsql-language-fundamentals.html#GUID-96A42F7C-7A71-4B90-8255-CA9C8BD9722E\n        operator: /:=?|=>|[<>^~!]=|\\.\\.|\\|\\||\\*\\*|[-+*/%<>=@]/\n    });\n    Prism.languages.insertBefore(\"plsql\", \"operator\", {\n        label: {\n            pattern: /<<\\s*\\w+\\s*>>/,\n            alias: \"symbol\"\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcGxzcWwuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxJQUFJQSxlQUFlQyxtQkFBT0EsQ0FBQztBQUMzQkMsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsTUFBTUMsV0FBVyxHQUFHO0FBQ3BCRCxNQUFNRSxPQUFPLEdBQUcsRUFBRTtBQUNsQixTQUFTRixNQUFNRyxLQUFLO0lBQ2xCQSxNQUFNQyxRQUFRLENBQUNSO0lBQ2ZPLE1BQU1FLFNBQVMsQ0FBQ0wsS0FBSyxHQUFHRyxNQUFNRSxTQUFTLENBQUNDLE1BQU0sQ0FBQyxPQUFPO1FBQ3BEQyxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0EseUdBQXlHO1FBQ3pHQyxTQUNFO1FBQ0YsaUpBQWlKO1FBQ2pKQyxVQUFVO0lBQ1o7SUFDQVIsTUFBTUUsU0FBUyxDQUFDTyxZQUFZLENBQUMsU0FBUyxZQUFZO1FBQ2hEQyxPQUFPO1lBQ0xMLFNBQVM7WUFDVE0sT0FBTztRQUNUO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wbHNxbC5qcz9kMGFjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xudmFyIHJlZnJhY3RvclNxbCA9IHJlcXVpcmUoJy4vc3FsLmpzJylcbm1vZHVsZS5leHBvcnRzID0gcGxzcWxcbnBsc3FsLmRpc3BsYXlOYW1lID0gJ3Bsc3FsJ1xucGxzcWwuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBwbHNxbChQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JTcWwpXG4gIFByaXNtLmxhbmd1YWdlcy5wbHNxbCA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ3NxbCcsIHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvXFwvXFwqW1xcc1xcU10qP1xcKlxcL3wtLS4qLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgLy8gaHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vZW4vZGF0YWJhc2Uvb3JhY2xlL29yYWNsZS1kYXRhYmFzZS8yMS9sbnBscy9wbHNxbC1yZXNlcnZlZC13b3Jkcy1rZXl3b3Jkcy5odG1sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzpBfEFDQ0VTU0lCTEV8QUREfEFHRU5UfEFHR1JFR0FURXxBTEx8QUxURVJ8QU5EfEFOWXxBUlJBWXxBU3xBU0N8QVR8QVRUUklCVVRFfEFVVEhJRHxBVkd8QkVHSU58QkVUV0VFTnxCRklMRV9CQVNFfEJJTkFSWXxCTE9CX0JBU0V8QkxPQ0t8Qk9EWXxCT1RIfEJPVU5EfEJVTEt8Qll8QllURXxDfENBTEx8Q0FMTElOR3xDQVNDQURFfENBU0V8Q0hBUnxDSEFSQUNURVJ8Q0hBUlNFVHxDSEFSU0VURk9STXxDSEFSU0VUSUR8Q0hBUl9CQVNFfENIRUNLfENMT0JfQkFTRXxDTE9ORXxDTE9TRXxDTFVTVEVSfENMVVNURVJTfENPTEFVVEh8Q09MTEVDVHxDT0xVTU5TfENPTU1FTlR8Q09NTUlUfENPTU1JVFRFRHxDT01QSUxFRHxDT01QUkVTU3xDT05ORUNUfENPTlNUQU5UfENPTlNUUlVDVE9SfENPTlRFWFR8Q09OVElOVUV8Q09OVkVSVHxDT1VOVHxDUkFTSHxDUkVBVEV8Q1JFREVOVElBTHxDVVJSRU5UfENVUlNPUnxDVVNUT01EQVRVTXxEQU5HTElOR3xEQVRBfERBVEV8REFURV9CQVNFfERBWXxERUNMQVJFfERFRkFVTFR8REVGSU5FfERFTEVURXxERVNDfERFVEVSTUlOSVNUSUN8RElSRUNUT1JZfERJU1RJTkNUfERPVUJMRXxEUk9QfERVUkFUSU9OfEVMRU1FTlR8RUxTRXxFTFNJRnxFTVBUWXxFTkR8RVNDQVBFfEVYQ0VQVHxFWENFUFRJT058RVhDRVBUSU9OU3xFWENMVVNJVkV8RVhFQ1VURXxFWElTVFN8RVhJVHxFWFRFUk5BTHxGRVRDSHxGSU5BTHxGSVJTVHxGSVhFRHxGTE9BVHxGT1J8Rk9SQUxMfEZPUkNFfEZST018RlVOQ1RJT058R0VORVJBTHxHT1RPfEdSQU5UfEdST1VQfEhBU0h8SEFWSU5HfEhFQVB8SElEREVOfEhPVVJ8SURFTlRJRklFRHxJRnxJTU1FRElBVEV8SU1NVVRBQkxFfElOfElOQ0xVRElOR3xJTkRFWHxJTkRFWEVTfElORElDQVRPUnxJTkRJQ0VTfElORklOSVRFfElOU0VSVHxJTlNUQU5USUFCTEV8SU5UfElOVEVSRkFDRXxJTlRFUlNFQ1R8SU5URVJWQUx8SU5UT3xJTlZBTElEQVRFfElTfElTT0xBVElPTnxKQVZBfExBTkdVQUdFfExBUkdFfExFQURJTkd8TEVOR1RIfExFVkVMfExJQlJBUll8TElLRXxMSUtFMnxMSUtFNHxMSUtFQ3xMSU1JVHxMSU1JVEVEfExPQ0FMfExPQ0t8TE9OR3xMT09QfE1BUHxNQVh8TUFYTEVOfE1FTUJFUnxNRVJHRXxNSU58TUlOVVN8TUlOVVRFfE1PRHxNT0RFfE1PRElGWXxNT05USHxNVUxUSVNFVHxNVVRBQkxFfE5BTUV8TkFOfE5BVElPTkFMfE5BVElWRXxOQ0hBUnxORVd8Tk9DT01QUkVTU3xOT0NPUFl8Tk9UfE5PV0FJVHxOVUxMfE5VTUJFUl9CQVNFfE9CSkVDVHxPQ0lDT0xMfE9DSURBVEV8T0NJREFURVRJTUV8T0NJRFVSQVRJT058T0NJSU5URVJWQUx8T0NJTE9CTE9DQVRPUnxPQ0lOVU1CRVJ8T0NJUkFXfE9DSVJFRnxPQ0lSRUZDVVJTT1J8T0NJUk9XSUR8T0NJU1RSSU5HfE9DSVRZUEV8T0Z8T0xEfE9OfE9OTFl8T1BBUVVFfE9QRU58T1BFUkFUT1J8T1BUSU9OfE9SfE9SQUNMRXxPUkFEQVRBfE9SREVSfE9SR0FOSVpBVElPTnxPUkxBTll8T1JMVkFSWXxPVEhFUlN8T1VUfE9WRVJMQVBTfE9WRVJSSURJTkd8UEFDS0FHRXxQQVJBTExFTF9FTkFCTEV8UEFSQU1FVEVSfFBBUkFNRVRFUlN8UEFSRU5UfFBBUlRJVElPTnxQQVNDQUx8UEVSU0lTVEFCTEV8UElQRXxQSVBFTElORUR8UExVR0dBQkxFfFBPTFlNT1JQSElDfFBSQUdNQXxQUkVDSVNJT058UFJJT1J8UFJJVkFURXxQUk9DRURVUkV8UFVCTElDfFJBSVNFfFJBTkdFfFJBV3xSRUFEfFJFQ09SRHxSRUZ8UkVGRVJFTkNFfFJFTElFU19PTnxSRU18UkVNQUlOREVSfFJFTkFNRXxSRVNPVVJDRXxSRVNVTFR8UkVTVUxUX0NBQ0hFfFJFVFVSTnxSRVRVUk5JTkd8UkVWRVJTRXxSRVZPS0V8Uk9MTEJBQ0t8Uk9XfFNBTVBMRXxTQVZFfFNBVkVQT0lOVHxTQjF8U0IyfFNCNHxTRUNPTkR8U0VHTUVOVHxTRUxFQ1R8U0VMRnxTRVBBUkFURXxTRVFVRU5DRXxTRVJJQUxJWkFCTEV8U0VUfFNIQVJFfFNIT1JUfFNJWkV8U0laRV9UfFNPTUV8U1BBUlNFfFNRTHxTUUxDT0RFfFNRTERBVEF8U1FMTkFNRXxTUUxTVEFURXxTVEFOREFSRHxTVEFSVHxTVEFUSUN8U1REREVWfFNUT1JFRHxTVFJJTkd8U1RSVUNUfFNUWUxFfFNVQk1VTFRJU0VUfFNVQlBBUlRJVElPTnxTVUJTVElUVVRBQkxFfFNVQlRZUEV8U1VNfFNZTk9OWU18VEFCQVVUSHxUQUJMRXxURE98VEhFfFRIRU58VElNRXxUSU1FU1RBTVB8VElNRVpPTkVfQUJCUnxUSU1FWk9ORV9IT1VSfFRJTUVaT05FX01JTlVURXxUSU1FWk9ORV9SRUdJT058VE98VFJBSUxJTkd8VFJBTlNBQ1RJT058VFJBTlNBQ1RJT05BTHxUUlVTVEVEfFRZUEV8VUIxfFVCMnxVQjR8VU5ERVJ8VU5JT058VU5JUVVFfFVOUExVR3xVTlNJR05FRHxVTlRSVVNURUR8VVBEQVRFfFVTRXxVU0lOR3xWQUxJU1R8VkFMVUV8VkFMVUVTfFZBUklBQkxFfFZBUklBTkNFfFZBUlJBWXxWQVJZSU5HfFZJRVd8VklFV1N8Vk9JRHxXSEVOfFdIRVJFfFdISUxFfFdJVEh8V09SS3xXUkFQUEVEfFdSSVRFfFlFQVJ8Wk9ORSlcXGIvaSxcbiAgICAvLyBodHRwczovL2RvY3Mub3JhY2xlLmNvbS9lbi9kYXRhYmFzZS9vcmFjbGUvb3JhY2xlLWRhdGFiYXNlLzIxL2xucGxzL3Bsc3FsLWxhbmd1YWdlLWZ1bmRhbWVudGFscy5odG1sI0dVSUQtOTZBNDJGN0MtN0E3MS00QjkwLTgyNTUtQ0E5QzhCRDk3MjJFXG4gICAgb3BlcmF0b3I6IC86PT98PT58Wzw+Xn4hXT18XFwuXFwufFxcfFxcfHxcXCpcXCp8Wy0rKi8lPD49QF0vXG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ3Bsc3FsJywgJ29wZXJhdG9yJywge1xuICAgIGxhYmVsOiB7XG4gICAgICBwYXR0ZXJuOiAvPDxcXHMqXFx3K1xccyo+Pi8sXG4gICAgICBhbGlhczogJ3N5bWJvbCdcbiAgICB9XG4gIH0pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yU3FsIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJwbHNxbCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJjb21tZW50IiwicGF0dGVybiIsImdyZWVkeSIsImtleXdvcmQiLCJvcGVyYXRvciIsImluc2VydEJlZm9yZSIsImxhYmVsIiwiYWxpYXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/plsql.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/powerquery.js":
/*!***************************************************!*\
  !*** ./node_modules/refractor/lang/powerquery.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = powerquery;\npowerquery.displayName = \"powerquery\";\npowerquery.aliases = [];\nfunction powerquery(Prism) {\n    // https://docs.microsoft.com/en-us/powerquery-m/power-query-m-language-specification\n    Prism.languages.powerquery = {\n        comment: {\n            pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n            lookbehind: true,\n            greedy: true\n        },\n        \"quoted-identifier\": {\n            pattern: /#\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n            greedy: true\n        },\n        string: {\n            pattern: /(?:#!)?\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n            greedy: true\n        },\n        constant: [\n            /\\bDay\\.(?:Friday|Monday|Saturday|Sunday|Thursday|Tuesday|Wednesday)\\b/,\n            /\\bTraceLevel\\.(?:Critical|Error|Information|Verbose|Warning)\\b/,\n            /\\bOccurrence\\.(?:All|First|Last)\\b/,\n            /\\bOrder\\.(?:Ascending|Descending)\\b/,\n            /\\bRoundingMode\\.(?:AwayFromZero|Down|ToEven|TowardZero|Up)\\b/,\n            /\\bMissingField\\.(?:Error|Ignore|UseNull)\\b/,\n            /\\bQuoteStyle\\.(?:Csv|None)\\b/,\n            /\\bJoinKind\\.(?:FullOuter|Inner|LeftAnti|LeftOuter|RightAnti|RightOuter)\\b/,\n            /\\bGroupKind\\.(?:Global|Local)\\b/,\n            /\\bExtraValues\\.(?:Error|Ignore|List)\\b/,\n            /\\bJoinAlgorithm\\.(?:Dynamic|LeftHash|LeftIndex|PairwiseHash|RightHash|RightIndex|SortMerge)\\b/,\n            /\\bJoinSide\\.(?:Left|Right)\\b/,\n            /\\bPrecision\\.(?:Decimal|Double)\\b/,\n            /\\bRelativePosition\\.From(?:End|Start)\\b/,\n            /\\bTextEncoding\\.(?:Ascii|BigEndianUnicode|Unicode|Utf16|Utf8|Windows)\\b/,\n            /\\b(?:Any|Binary|Date|DateTime|DateTimeZone|Duration|Function|Int16|Int32|Int64|Int8|List|Logical|None|Number|Record|Table|Text|Time)\\.Type\\b/,\n            /\\bnull\\b/\n        ],\n        boolean: /\\b(?:false|true)\\b/,\n        keyword: /\\b(?:and|as|each|else|error|if|in|is|let|meta|not|nullable|optional|or|otherwise|section|shared|then|try|type)\\b|#(?:binary|date|datetime|datetimezone|duration|infinity|nan|sections|shared|table|time)\\b/,\n        function: {\n            pattern: /(^|[^#\\w.])[a-z_][\\w.]*(?=\\s*\\()/i,\n            lookbehind: true\n        },\n        \"data-type\": {\n            pattern: /\\b(?:any|anynonnull|binary|date|datetime|datetimezone|duration|function|list|logical|none|number|record|table|text|time)\\b/,\n            alias: \"class-name\"\n        },\n        number: {\n            pattern: /\\b0x[\\da-f]+\\b|(?:[+-]?(?:\\b\\d+\\.)?\\b\\d+|[+-]\\.\\d+|(^|[^.])\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n            lookbehind: true\n        },\n        operator: /[-+*\\/&?@^]|<(?:=>?|>)?|>=?|=>?|\\.\\.\\.?/,\n        punctuation: /[,;\\[\\](){}]/\n    };\n    Prism.languages.pq = Prism.languages[\"powerquery\"];\n    Prism.languages.mscript = Prism.languages[\"powerquery\"];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcG93ZXJxdWVyeS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxXQUFXQyxXQUFXLEdBQUc7QUFDekJELFdBQVdFLE9BQU8sR0FBRyxFQUFFO0FBQ3ZCLFNBQVNGLFdBQVdHLEtBQUs7SUFDdkIscUZBQXFGO0lBQ3JGQSxNQUFNQyxTQUFTLENBQUNKLFVBQVUsR0FBRztRQUMzQkssU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsUUFBUTtRQUNWO1FBQ0EscUJBQXFCO1lBQ25CRixTQUFTO1lBQ1RFLFFBQVE7UUFDVjtRQUNBQyxRQUFRO1lBQ05ILFNBQVM7WUFDVEUsUUFBUTtRQUNWO1FBQ0FFLFVBQVU7WUFDUjtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1NBQ0Q7UUFDREMsU0FBUztRQUNUQyxTQUNFO1FBQ0ZDLFVBQVU7WUFDUlAsU0FBUztZQUNUQyxZQUFZO1FBQ2Q7UUFDQSxhQUFhO1lBQ1hELFNBQ0U7WUFDRlEsT0FBTztRQUNUO1FBQ0FDLFFBQVE7WUFDTlQsU0FDRTtZQUNGQyxZQUFZO1FBQ2Q7UUFDQVMsVUFBVTtRQUNWQyxhQUFhO0lBQ2Y7SUFDQWQsTUFBTUMsU0FBUyxDQUFDYyxFQUFFLEdBQUdmLE1BQU1DLFNBQVMsQ0FBQyxhQUFhO0lBQ2xERCxNQUFNQyxTQUFTLENBQUNlLE9BQU8sR0FBR2hCLE1BQU1DLFNBQVMsQ0FBQyxhQUFhO0FBQ3pEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3Bvd2VycXVlcnkuanM/NmJkYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBwb3dlcnF1ZXJ5XG5wb3dlcnF1ZXJ5LmRpc3BsYXlOYW1lID0gJ3Bvd2VycXVlcnknXG5wb3dlcnF1ZXJ5LmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gcG93ZXJxdWVyeShQcmlzbSkge1xuICAvLyBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi11cy9wb3dlcnF1ZXJ5LW0vcG93ZXItcXVlcnktbS1sYW5ndWFnZS1zcGVjaWZpY2F0aW9uXG4gIFByaXNtLmxhbmd1YWdlcy5wb3dlcnF1ZXJ5ID0ge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKSg/OlxcL1xcKltcXHNcXFNdKj9cXCpcXC98XFwvXFwvLiopLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgICdxdW90ZWQtaWRlbnRpZmllcic6IHtcbiAgICAgIHBhdHRlcm46IC8jXCIoPzpbXlwiXFxyXFxuXXxcIlwiKSpcIig/IVwiKS8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyg/OiMhKT9cIig/OlteXCJcXHJcXG5dfFwiXCIpKlwiKD8hXCIpLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgY29uc3RhbnQ6IFtcbiAgICAgIC9cXGJEYXlcXC4oPzpGcmlkYXl8TW9uZGF5fFNhdHVyZGF5fFN1bmRheXxUaHVyc2RheXxUdWVzZGF5fFdlZG5lc2RheSlcXGIvLFxuICAgICAgL1xcYlRyYWNlTGV2ZWxcXC4oPzpDcml0aWNhbHxFcnJvcnxJbmZvcm1hdGlvbnxWZXJib3NlfFdhcm5pbmcpXFxiLyxcbiAgICAgIC9cXGJPY2N1cnJlbmNlXFwuKD86QWxsfEZpcnN0fExhc3QpXFxiLyxcbiAgICAgIC9cXGJPcmRlclxcLig/OkFzY2VuZGluZ3xEZXNjZW5kaW5nKVxcYi8sXG4gICAgICAvXFxiUm91bmRpbmdNb2RlXFwuKD86QXdheUZyb21aZXJvfERvd258VG9FdmVufFRvd2FyZFplcm98VXApXFxiLyxcbiAgICAgIC9cXGJNaXNzaW5nRmllbGRcXC4oPzpFcnJvcnxJZ25vcmV8VXNlTnVsbClcXGIvLFxuICAgICAgL1xcYlF1b3RlU3R5bGVcXC4oPzpDc3Z8Tm9uZSlcXGIvLFxuICAgICAgL1xcYkpvaW5LaW5kXFwuKD86RnVsbE91dGVyfElubmVyfExlZnRBbnRpfExlZnRPdXRlcnxSaWdodEFudGl8UmlnaHRPdXRlcilcXGIvLFxuICAgICAgL1xcYkdyb3VwS2luZFxcLig/Okdsb2JhbHxMb2NhbClcXGIvLFxuICAgICAgL1xcYkV4dHJhVmFsdWVzXFwuKD86RXJyb3J8SWdub3JlfExpc3QpXFxiLyxcbiAgICAgIC9cXGJKb2luQWxnb3JpdGhtXFwuKD86RHluYW1pY3xMZWZ0SGFzaHxMZWZ0SW5kZXh8UGFpcndpc2VIYXNofFJpZ2h0SGFzaHxSaWdodEluZGV4fFNvcnRNZXJnZSlcXGIvLFxuICAgICAgL1xcYkpvaW5TaWRlXFwuKD86TGVmdHxSaWdodClcXGIvLFxuICAgICAgL1xcYlByZWNpc2lvblxcLig/OkRlY2ltYWx8RG91YmxlKVxcYi8sXG4gICAgICAvXFxiUmVsYXRpdmVQb3NpdGlvblxcLkZyb20oPzpFbmR8U3RhcnQpXFxiLyxcbiAgICAgIC9cXGJUZXh0RW5jb2RpbmdcXC4oPzpBc2NpaXxCaWdFbmRpYW5Vbmljb2RlfFVuaWNvZGV8VXRmMTZ8VXRmOHxXaW5kb3dzKVxcYi8sXG4gICAgICAvXFxiKD86QW55fEJpbmFyeXxEYXRlfERhdGVUaW1lfERhdGVUaW1lWm9uZXxEdXJhdGlvbnxGdW5jdGlvbnxJbnQxNnxJbnQzMnxJbnQ2NHxJbnQ4fExpc3R8TG9naWNhbHxOb25lfE51bWJlcnxSZWNvcmR8VGFibGV8VGV4dHxUaW1lKVxcLlR5cGVcXGIvLFxuICAgICAgL1xcYm51bGxcXGIvXG4gICAgXSxcbiAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvLFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YW5kfGFzfGVhY2h8ZWxzZXxlcnJvcnxpZnxpbnxpc3xsZXR8bWV0YXxub3R8bnVsbGFibGV8b3B0aW9uYWx8b3J8b3RoZXJ3aXNlfHNlY3Rpb258c2hhcmVkfHRoZW58dHJ5fHR5cGUpXFxifCMoPzpiaW5hcnl8ZGF0ZXxkYXRldGltZXxkYXRldGltZXpvbmV8ZHVyYXRpb258aW5maW5pdHl8bmFufHNlY3Rpb25zfHNoYXJlZHx0YWJsZXx0aW1lKVxcYi8sXG4gICAgZnVuY3Rpb246IHtcbiAgICAgIHBhdHRlcm46IC8oXnxbXiNcXHcuXSlbYS16X11bXFx3Ll0qKD89XFxzKlxcKCkvaSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgICdkYXRhLXR5cGUnOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvXFxiKD86YW55fGFueW5vbm51bGx8YmluYXJ5fGRhdGV8ZGF0ZXRpbWV8ZGF0ZXRpbWV6b25lfGR1cmF0aW9ufGZ1bmN0aW9ufGxpc3R8bG9naWNhbHxub25lfG51bWJlcnxyZWNvcmR8dGFibGV8dGV4dHx0aW1lKVxcYi8sXG4gICAgICBhbGlhczogJ2NsYXNzLW5hbWUnXG4gICAgfSxcbiAgICBudW1iZXI6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC9cXGIweFtcXGRhLWZdK1xcYnwoPzpbKy1dPyg/OlxcYlxcZCtcXC4pP1xcYlxcZCt8WystXVxcLlxcZCt8KF58W14uXSlcXEJcXC5cXGQrKSg/OmVbKy1dP1xcZCspP1xcYi9pLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgb3BlcmF0b3I6IC9bLSsqXFwvJj9AXl18PCg/Oj0+P3w+KT98Pj0/fD0+P3xcXC5cXC5cXC4/LyxcbiAgICBwdW5jdHVhdGlvbjogL1ssO1xcW1xcXSgpe31dL1xuICB9XG4gIFByaXNtLmxhbmd1YWdlcy5wcSA9IFByaXNtLmxhbmd1YWdlc1sncG93ZXJxdWVyeSddXG4gIFByaXNtLmxhbmd1YWdlcy5tc2NyaXB0ID0gUHJpc20ubGFuZ3VhZ2VzWydwb3dlcnF1ZXJ5J11cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicG93ZXJxdWVyeSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiZ3JlZWR5Iiwic3RyaW5nIiwiY29uc3RhbnQiLCJib29sZWFuIiwia2V5d29yZCIsImZ1bmN0aW9uIiwiYWxpYXMiLCJudW1iZXIiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIiwicHEiLCJtc2NyaXB0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/powerquery.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/powershell.js":
/*!***************************************************!*\
  !*** ./node_modules/refractor/lang/powershell.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = powershell;\npowershell.displayName = \"powershell\";\npowershell.aliases = [];\nfunction powershell(Prism) {\n    ;\n    (function(Prism) {\n        var powershell = Prism.languages.powershell = {\n            comment: [\n                {\n                    pattern: /(^|[^`])<#[\\s\\S]*?#>/,\n                    lookbehind: true\n                },\n                {\n                    pattern: /(^|[^`])#.*/,\n                    lookbehind: true\n                }\n            ],\n            string: [\n                {\n                    pattern: /\"(?:`[\\s\\S]|[^`\"])*\"/,\n                    greedy: true,\n                    inside: null // see below\n                },\n                {\n                    pattern: /'(?:[^']|'')*'/,\n                    greedy: true\n                }\n            ],\n            // Matches name spaces as well as casts, attribute decorators. Force starting with letter to avoid matching array indices\n            // Supports two levels of nested brackets (e.g. `[OutputType([System.Collections.Generic.List[int]])]`)\n            namespace: /\\[[a-z](?:\\[(?:\\[[^\\]]*\\]|[^\\[\\]])*\\]|[^\\[\\]])*\\]/i,\n            boolean: /\\$(?:false|true)\\b/i,\n            variable: /\\$\\w+\\b/,\n            // Cmdlets and aliases. Aliases should come last, otherwise \"write\" gets preferred over \"write-host\" for example\n            // Get-Command | ?{ $_.ModuleName -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n            // Get-Alias | ?{ $_.ReferencedCommand.Module.Name -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n            function: [\n                /\\b(?:Add|Approve|Assert|Backup|Block|Checkpoint|Clear|Close|Compare|Complete|Compress|Confirm|Connect|Convert|ConvertFrom|ConvertTo|Copy|Debug|Deny|Disable|Disconnect|Dismount|Edit|Enable|Enter|Exit|Expand|Export|Find|ForEach|Format|Get|Grant|Group|Hide|Import|Initialize|Install|Invoke|Join|Limit|Lock|Measure|Merge|Move|New|Open|Optimize|Out|Ping|Pop|Protect|Publish|Push|Read|Receive|Redo|Register|Remove|Rename|Repair|Request|Reset|Resize|Resolve|Restart|Restore|Resume|Revoke|Save|Search|Select|Send|Set|Show|Skip|Sort|Split|Start|Step|Stop|Submit|Suspend|Switch|Sync|Tee|Test|Trace|Unblock|Undo|Uninstall|Unlock|Unprotect|Unpublish|Unregister|Update|Use|Wait|Watch|Where|Write)-[a-z]+\\b/i,\n                /\\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\\b/i\n            ],\n            // per http://technet.microsoft.com/en-us/library/hh847744.aspx\n            keyword: /\\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\\b/i,\n            operator: {\n                pattern: /(^|\\W)(?:!|-(?:b?(?:and|x?or)|as|(?:Not)?(?:Contains|In|Like|Match)|eq|ge|gt|is(?:Not)?|Join|le|lt|ne|not|Replace|sh[lr])\\b|-[-=]?|\\+[+=]?|[*\\/%]=?)/i,\n                lookbehind: true\n            },\n            punctuation: /[|{}[\\];(),.]/\n        } // Variable interpolation inside strings, and nested expressions\n        ;\n        powershell.string[0].inside = {\n            function: {\n                // Allow for one level of nesting\n                pattern: /(^|[^`])\\$\\((?:\\$\\([^\\r\\n()]*\\)|(?!\\$\\()[^\\r\\n)])*\\)/,\n                lookbehind: true,\n                inside: powershell\n            },\n            boolean: powershell.boolean,\n            variable: powershell.variable\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcG93ZXJzaGVsbC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxXQUFXQyxXQUFXLEdBQUc7QUFDekJELFdBQVdFLE9BQU8sR0FBRyxFQUFFO0FBQ3ZCLFNBQVNGLFdBQVdHLEtBQUs7O0lBQ3JCLFVBQVVBLEtBQUs7UUFDZixJQUFJSCxhQUFjRyxNQUFNQyxTQUFTLENBQUNKLFVBQVUsR0FBRztZQUM3Q0ssU0FBUztnQkFDUDtvQkFDRUMsU0FBUztvQkFDVEMsWUFBWTtnQkFDZDtnQkFDQTtvQkFDRUQsU0FBUztvQkFDVEMsWUFBWTtnQkFDZDthQUNEO1lBQ0RDLFFBQVE7Z0JBQ047b0JBQ0VGLFNBQVM7b0JBQ1RHLFFBQVE7b0JBQ1JDLFFBQVEsS0FBSyxZQUFZO2dCQUMzQjtnQkFDQTtvQkFDRUosU0FBUztvQkFDVEcsUUFBUTtnQkFDVjthQUNEO1lBQ0QseUhBQXlIO1lBQ3pILHVHQUF1RztZQUN2R0UsV0FBVztZQUNYQyxTQUFTO1lBQ1RDLFVBQVU7WUFDVixnSEFBZ0g7WUFDaEgsd0ZBQXdGO1lBQ3hGLHlHQUF5RztZQUN6R0MsVUFBVTtnQkFDUjtnQkFDQTthQUNEO1lBQ0QsK0RBQStEO1lBQy9EQyxTQUNFO1lBQ0ZDLFVBQVU7Z0JBQ1JWLFNBQ0U7Z0JBQ0ZDLFlBQVk7WUFDZDtZQUNBVSxhQUFhO1FBQ2YsRUFBRyxnRUFBZ0U7O1FBQ25FakIsV0FBV1EsTUFBTSxDQUFDLEVBQUUsQ0FBQ0UsTUFBTSxHQUFHO1lBQzVCSSxVQUFVO2dCQUNSLGlDQUFpQztnQkFDakNSLFNBQVM7Z0JBQ1RDLFlBQVk7Z0JBQ1pHLFFBQVFWO1lBQ1Y7WUFDQVksU0FBU1osV0FBV1ksT0FBTztZQUMzQkMsVUFBVWIsV0FBV2EsUUFBUTtRQUMvQjtJQUNGLEdBQUdWO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcG93ZXJzaGVsbC5qcz85ZjI3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHBvd2Vyc2hlbGxcbnBvd2Vyc2hlbGwuZGlzcGxheU5hbWUgPSAncG93ZXJzaGVsbCdcbnBvd2Vyc2hlbGwuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBwb3dlcnNoZWxsKFByaXNtKSB7XG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIHBvd2Vyc2hlbGwgPSAoUHJpc20ubGFuZ3VhZ2VzLnBvd2Vyc2hlbGwgPSB7XG4gICAgICBjb21tZW50OiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKF58W15gXSk8I1tcXHNcXFNdKj8jPi8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogLyhefFteYF0pIy4qLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBzdHJpbmc6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IC9cIig/OmBbXFxzXFxTXXxbXmBcIl0pKlwiLyxcbiAgICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgICAgaW5zaWRlOiBudWxsIC8vIHNlZSBiZWxvd1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogLycoPzpbXiddfCcnKSonLyxcbiAgICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIC8vIE1hdGNoZXMgbmFtZSBzcGFjZXMgYXMgd2VsbCBhcyBjYXN0cywgYXR0cmlidXRlIGRlY29yYXRvcnMuIEZvcmNlIHN0YXJ0aW5nIHdpdGggbGV0dGVyIHRvIGF2b2lkIG1hdGNoaW5nIGFycmF5IGluZGljZXNcbiAgICAgIC8vIFN1cHBvcnRzIHR3byBsZXZlbHMgb2YgbmVzdGVkIGJyYWNrZXRzIChlLmcuIGBbT3V0cHV0VHlwZShbU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuTGlzdFtpbnRdXSldYClcbiAgICAgIG5hbWVzcGFjZTogL1xcW1thLXpdKD86XFxbKD86XFxbW15cXF1dKlxcXXxbXlxcW1xcXV0pKlxcXXxbXlxcW1xcXV0pKlxcXS9pLFxuICAgICAgYm9vbGVhbjogL1xcJCg/OmZhbHNlfHRydWUpXFxiL2ksXG4gICAgICB2YXJpYWJsZTogL1xcJFxcdytcXGIvLFxuICAgICAgLy8gQ21kbGV0cyBhbmQgYWxpYXNlcy4gQWxpYXNlcyBzaG91bGQgY29tZSBsYXN0LCBvdGhlcndpc2UgXCJ3cml0ZVwiIGdldHMgcHJlZmVycmVkIG92ZXIgXCJ3cml0ZS1ob3N0XCIgZm9yIGV4YW1wbGVcbiAgICAgIC8vIEdldC1Db21tYW5kIHwgP3sgJF8uTW9kdWxlTmFtZSAtbWF0Y2ggXCJNaWNyb3NvZnQuUG93ZXJTaGVsbC4oVXRpbHxDb3JlfE1hbmFnZW1lbnQpXCIgfVxuICAgICAgLy8gR2V0LUFsaWFzIHwgP3sgJF8uUmVmZXJlbmNlZENvbW1hbmQuTW9kdWxlLk5hbWUgLW1hdGNoIFwiTWljcm9zb2Z0LlBvd2VyU2hlbGwuKFV0aWx8Q29yZXxNYW5hZ2VtZW50KVwiIH1cbiAgICAgIGZ1bmN0aW9uOiBbXG4gICAgICAgIC9cXGIoPzpBZGR8QXBwcm92ZXxBc3NlcnR8QmFja3VwfEJsb2NrfENoZWNrcG9pbnR8Q2xlYXJ8Q2xvc2V8Q29tcGFyZXxDb21wbGV0ZXxDb21wcmVzc3xDb25maXJtfENvbm5lY3R8Q29udmVydHxDb252ZXJ0RnJvbXxDb252ZXJ0VG98Q29weXxEZWJ1Z3xEZW55fERpc2FibGV8RGlzY29ubmVjdHxEaXNtb3VudHxFZGl0fEVuYWJsZXxFbnRlcnxFeGl0fEV4cGFuZHxFeHBvcnR8RmluZHxGb3JFYWNofEZvcm1hdHxHZXR8R3JhbnR8R3JvdXB8SGlkZXxJbXBvcnR8SW5pdGlhbGl6ZXxJbnN0YWxsfEludm9rZXxKb2lufExpbWl0fExvY2t8TWVhc3VyZXxNZXJnZXxNb3ZlfE5ld3xPcGVufE9wdGltaXplfE91dHxQaW5nfFBvcHxQcm90ZWN0fFB1Ymxpc2h8UHVzaHxSZWFkfFJlY2VpdmV8UmVkb3xSZWdpc3RlcnxSZW1vdmV8UmVuYW1lfFJlcGFpcnxSZXF1ZXN0fFJlc2V0fFJlc2l6ZXxSZXNvbHZlfFJlc3RhcnR8UmVzdG9yZXxSZXN1bWV8UmV2b2tlfFNhdmV8U2VhcmNofFNlbGVjdHxTZW5kfFNldHxTaG93fFNraXB8U29ydHxTcGxpdHxTdGFydHxTdGVwfFN0b3B8U3VibWl0fFN1c3BlbmR8U3dpdGNofFN5bmN8VGVlfFRlc3R8VHJhY2V8VW5ibG9ja3xVbmRvfFVuaW5zdGFsbHxVbmxvY2t8VW5wcm90ZWN0fFVucHVibGlzaHxVbnJlZ2lzdGVyfFVwZGF0ZXxVc2V8V2FpdHxXYXRjaHxXaGVyZXxXcml0ZSktW2Etel0rXFxiL2ksXG4gICAgICAgIC9cXGIoPzphY3xjYXR8Y2hkaXJ8Y2xjfGNsaXxjbHB8Y2x2fGNvbXBhcmV8Y29weXxjcHxjcGl8Y3BwfGN2cGF8ZGJwfGRlbHxkaWZmfGRpcnxlYnB8ZWNob3xlcGFsfGVwY3N2fGVwc258ZXJhc2V8ZmN8Zmx8ZnR8Znd8Z2FsfGdicHxnY3xnY2l8Z2NzfGdkcnxnaXxnbHxnbXxncHxncHN8Z3JvdXB8Z3N2fGd1fGd2fGd3bWl8aWV4fGlpfGlwYWx8aXBjc3Z8aXBzbnxpcm18aXdtaXxpd3J8a2lsbHxscHxsc3xtZWFzdXJlfG1pfG1vdW50fG1vdmV8bXB8bXZ8bmFsfG5kcnxuaXxudnxvZ3Z8cG9wZHxwc3xwdXNoZHxwd2R8cmJwfHJkfHJkcnxyZW58cml8cm18cm1kaXJ8cm5pfHJucHxycHxydnxydnBhfHJ3bWl8c2FsfHNhcHN8c2FzdnxzYnB8c2N8c2VsZWN0fHNldHxzaGNtfHNpfHNsfHNsZWVwfHNsc3xzb3J0fHNwfHNwcHN8c3BzdnxzdGFydHxzdnxzd21pfHRlZXx0cmNtfHR5cGV8d3JpdGUpXFxiL2lcbiAgICAgIF0sXG4gICAgICAvLyBwZXIgaHR0cDovL3RlY2huZXQubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L2hoODQ3NzQ0LmFzcHhcbiAgICAgIGtleXdvcmQ6XG4gICAgICAgIC9cXGIoPzpCZWdpbnxCcmVha3xDYXRjaHxDbGFzc3xDb250aW51ZXxEYXRhfERlZmluZXxEb3xEeW5hbWljUGFyYW18RWxzZXxFbHNlSWZ8RW5kfEV4aXR8RmlsdGVyfEZpbmFsbHl8Rm9yfEZvckVhY2h8RnJvbXxGdW5jdGlvbnxJZnxJbmxpbmVTY3JpcHR8UGFyYWxsZWx8UGFyYW18UHJvY2Vzc3xSZXR1cm58U2VxdWVuY2V8U3dpdGNofFRocm93fFRyYXB8VHJ5fFVudGlsfFVzaW5nfFZhcnxXaGlsZXxXb3JrZmxvdylcXGIvaSxcbiAgICAgIG9wZXJhdG9yOiB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhefFxcVykoPzohfC0oPzpiPyg/OmFuZHx4P29yKXxhc3woPzpOb3QpPyg/OkNvbnRhaW5zfElufExpa2V8TWF0Y2gpfGVxfGdlfGd0fGlzKD86Tm90KT98Sm9pbnxsZXxsdHxuZXxub3R8UmVwbGFjZXxzaFtscl0pXFxifC1bLT1dP3xcXCtbKz1dP3xbKlxcLyVdPT8pL2ksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBwdW5jdHVhdGlvbjogL1t8e31bXFxdOygpLC5dL1xuICAgIH0pIC8vIFZhcmlhYmxlIGludGVycG9sYXRpb24gaW5zaWRlIHN0cmluZ3MsIGFuZCBuZXN0ZWQgZXhwcmVzc2lvbnNcbiAgICBwb3dlcnNoZWxsLnN0cmluZ1swXS5pbnNpZGUgPSB7XG4gICAgICBmdW5jdGlvbjoge1xuICAgICAgICAvLyBBbGxvdyBmb3Igb25lIGxldmVsIG9mIG5lc3RpbmdcbiAgICAgICAgcGF0dGVybjogLyhefFteYF0pXFwkXFwoKD86XFwkXFwoW15cXHJcXG4oKV0qXFwpfCg/IVxcJFxcKClbXlxcclxcbildKSpcXCkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHBvd2Vyc2hlbGxcbiAgICAgIH0sXG4gICAgICBib29sZWFuOiBwb3dlcnNoZWxsLmJvb2xlYW4sXG4gICAgICB2YXJpYWJsZTogcG93ZXJzaGVsbC52YXJpYWJsZVxuICAgIH1cbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInBvd2Vyc2hlbGwiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsInN0cmluZyIsImdyZWVkeSIsImluc2lkZSIsIm5hbWVzcGFjZSIsImJvb2xlYW4iLCJ2YXJpYWJsZSIsImZ1bmN0aW9uIiwia2V5d29yZCIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/powershell.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/processing.js":
/*!***************************************************!*\
  !*** ./node_modules/refractor/lang/processing.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = processing;\nprocessing.displayName = \"processing\";\nprocessing.aliases = [];\nfunction processing(Prism) {\n    Prism.languages.processing = Prism.languages.extend(\"clike\", {\n        keyword: /\\b(?:break|case|catch|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n        // Spaces are allowed between function name and parenthesis\n        function: /\\b\\w+(?=\\s*\\()/,\n        operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n    });\n    Prism.languages.insertBefore(\"processing\", \"number\", {\n        // Special case: XML is a type\n        constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n        type: {\n            pattern: /\\b(?:boolean|byte|char|color|double|float|int|[A-Z]\\w*)\\b/,\n            alias: \"class-name\"\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcHJvY2Vzc2luZy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxXQUFXQyxXQUFXLEdBQUc7QUFDekJELFdBQVdFLE9BQU8sR0FBRyxFQUFFO0FBQ3ZCLFNBQVNGLFdBQVdHLEtBQUs7SUFDdkJBLE1BQU1DLFNBQVMsQ0FBQ0osVUFBVSxHQUFHRyxNQUFNQyxTQUFTLENBQUNDLE1BQU0sQ0FBQyxTQUFTO1FBQzNEQyxTQUNFO1FBQ0YsMkRBQTJEO1FBQzNEQyxVQUFVO1FBQ1ZDLFVBQVU7SUFDWjtJQUNBTCxNQUFNQyxTQUFTLENBQUNLLFlBQVksQ0FBQyxjQUFjLFVBQVU7UUFDbkQsOEJBQThCO1FBQzlCQyxVQUFVO1FBQ1ZDLE1BQU07WUFDSkMsU0FBUztZQUNUQyxPQUFPO1FBQ1Q7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3Byb2Nlc3NpbmcuanM/MWRkOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBwcm9jZXNzaW5nXG5wcm9jZXNzaW5nLmRpc3BsYXlOYW1lID0gJ3Byb2Nlc3NpbmcnXG5wcm9jZXNzaW5nLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gcHJvY2Vzc2luZyhQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMucHJvY2Vzc2luZyA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2NsaWtlJywge1xuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YnJlYWt8Y2FzZXxjYXRjaHxjbGFzc3xjb250aW51ZXxkZWZhdWx0fGVsc2V8ZXh0ZW5kc3xmaW5hbHxmb3J8aWZ8aW1wbGVtZW50c3xpbXBvcnR8bmV3fG51bGx8cHJpdmF0ZXxwdWJsaWN8cmV0dXJufHN0YXRpY3xzdXBlcnxzd2l0Y2h8dGhpc3x0cnl8dm9pZHx3aGlsZSlcXGIvLFxuICAgIC8vIFNwYWNlcyBhcmUgYWxsb3dlZCBiZXR3ZWVuIGZ1bmN0aW9uIG5hbWUgYW5kIHBhcmVudGhlc2lzXG4gICAgZnVuY3Rpb246IC9cXGJcXHcrKD89XFxzKlxcKCkvLFxuICAgIG9wZXJhdG9yOiAvPFs8PV0/fD5bPj1dP3wmJj98XFx8XFx8P3xbJT9dfFshPStcXC0qXFwvXT0/L1xuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdwcm9jZXNzaW5nJywgJ251bWJlcicsIHtcbiAgICAvLyBTcGVjaWFsIGNhc2U6IFhNTCBpcyBhIHR5cGVcbiAgICBjb25zdGFudDogL1xcYig/IVhNTFxcYilbQS1aXVtBLVpcXGRfXStcXGIvLFxuICAgIHR5cGU6IHtcbiAgICAgIHBhdHRlcm46IC9cXGIoPzpib29sZWFufGJ5dGV8Y2hhcnxjb2xvcnxkb3VibGV8ZmxvYXR8aW50fFtBLVpdXFx3KilcXGIvLFxuICAgICAgYWxpYXM6ICdjbGFzcy1uYW1lJ1xuICAgIH1cbiAgfSlcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicHJvY2Vzc2luZyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwia2V5d29yZCIsImZ1bmN0aW9uIiwib3BlcmF0b3IiLCJpbnNlcnRCZWZvcmUiLCJjb25zdGFudCIsInR5cGUiLCJwYXR0ZXJuIiwiYWxpYXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/processing.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/prolog.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/prolog.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = prolog;\nprolog.displayName = \"prolog\";\nprolog.aliases = [];\nfunction prolog(Prism) {\n    Prism.languages.prolog = {\n        // Syntax depends on the implementation\n        comment: {\n            pattern: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n            greedy: true\n        },\n        // Depending on the implementation, strings may allow escaped newlines and quote-escape\n        string: {\n            pattern: /([\"'])(?:\\1\\1|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1(?!\\1)/,\n            greedy: true\n        },\n        builtin: /\\b(?:fx|fy|xf[xy]?|yfx?)\\b/,\n        // FIXME: Should we list all null-ary predicates (not followed by a parenthesis) like halt, trace, etc.?\n        function: /\\b[a-z]\\w*(?:(?=\\()|\\/\\d+)/,\n        number: /\\b\\d+(?:\\.\\d*)?/,\n        // Custom operators are allowed\n        operator: /[:\\\\=><\\-?*@\\/;+^|!$.]+|\\b(?:is|mod|not|xor)\\b/,\n        punctuation: /[(){}\\[\\],]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcHJvbG9nLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLE9BQU9DLFdBQVcsR0FBRztBQUNyQkQsT0FBT0UsT0FBTyxHQUFHLEVBQUU7QUFDbkIsU0FBU0YsT0FBT0csS0FBSztJQUNuQkEsTUFBTUMsU0FBUyxDQUFDSixNQUFNLEdBQUc7UUFDdkIsdUNBQXVDO1FBQ3ZDSyxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0EsdUZBQXVGO1FBQ3ZGQyxRQUFRO1lBQ05GLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FFLFNBQVM7UUFDVCx3R0FBd0c7UUFDeEdDLFVBQVU7UUFDVkMsUUFBUTtRQUNSLCtCQUErQjtRQUMvQkMsVUFBVTtRQUNWQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wcm9sb2cuanM/YmVjNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBwcm9sb2dcbnByb2xvZy5kaXNwbGF5TmFtZSA9ICdwcm9sb2cnXG5wcm9sb2cuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBwcm9sb2coUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLnByb2xvZyA9IHtcbiAgICAvLyBTeW50YXggZGVwZW5kcyBvbiB0aGUgaW1wbGVtZW50YXRpb25cbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvXFwvXFwqW1xcc1xcU10qP1xcKlxcL3wlLiovLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICAvLyBEZXBlbmRpbmcgb24gdGhlIGltcGxlbWVudGF0aW9uLCBzdHJpbmdzIG1heSBhbGxvdyBlc2NhcGVkIG5ld2xpbmVzIGFuZCBxdW90ZS1lc2NhcGVcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC8oW1wiJ10pKD86XFwxXFwxfFxcXFwoPzpcXHJcXG58W1xcc1xcU10pfCg/IVxcMSlbXlxcXFxcXHJcXG5dKSpcXDEoPyFcXDEpLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgYnVpbHRpbjogL1xcYig/OmZ4fGZ5fHhmW3h5XT98eWZ4PylcXGIvLFxuICAgIC8vIEZJWE1FOiBTaG91bGQgd2UgbGlzdCBhbGwgbnVsbC1hcnkgcHJlZGljYXRlcyAobm90IGZvbGxvd2VkIGJ5IGEgcGFyZW50aGVzaXMpIGxpa2UgaGFsdCwgdHJhY2UsIGV0Yy4/XG4gICAgZnVuY3Rpb246IC9cXGJbYS16XVxcdyooPzooPz1cXCgpfFxcL1xcZCspLyxcbiAgICBudW1iZXI6IC9cXGJcXGQrKD86XFwuXFxkKik/LyxcbiAgICAvLyBDdXN0b20gb3BlcmF0b3JzIGFyZSBhbGxvd2VkXG4gICAgb3BlcmF0b3I6IC9bOlxcXFw9PjxcXC0/KkBcXC87K158ISQuXSt8XFxiKD86aXN8bW9kfG5vdHx4b3IpXFxiLyxcbiAgICBwdW5jdHVhdGlvbjogL1soKXt9XFxbXFxdLF0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicHJvbG9nIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImdyZWVkeSIsInN0cmluZyIsImJ1aWx0aW4iLCJmdW5jdGlvbiIsIm51bWJlciIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/prolog.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/promql.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/promql.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = promql;\npromql.displayName = \"promql\";\npromql.aliases = [];\nfunction promql(Prism) {\n    // Thanks to: https://github.com/prometheus-community/monaco-promql/blob/master/src/promql/promql.ts\n    // As well as: https://kausal.co/blog/slate-prism-add-new-syntax-promql/\n    ;\n    (function(Prism) {\n        // PromQL Aggregation Operators\n        // (https://prometheus.io/docs/prometheus/latest/querying/operators/#aggregation-operators)\n        var aggregations = [\n            \"sum\",\n            \"min\",\n            \"max\",\n            \"avg\",\n            \"group\",\n            \"stddev\",\n            \"stdvar\",\n            \"count\",\n            \"count_values\",\n            \"bottomk\",\n            \"topk\",\n            \"quantile\"\n        ] // PromQL vector matching + the by and without clauses\n        ;\n        // (https://prometheus.io/docs/prometheus/latest/querying/operators/#vector-matching)\n        var vectorMatching = [\n            \"on\",\n            \"ignoring\",\n            \"group_right\",\n            \"group_left\",\n            \"by\",\n            \"without\"\n        ] // PromQL offset modifier\n        ;\n        // (https://prometheus.io/docs/prometheus/latest/querying/basics/#offset-modifier)\n        var offsetModifier = [\n            \"offset\"\n        ];\n        var keywords = aggregations.concat(vectorMatching, offsetModifier);\n        Prism.languages.promql = {\n            comment: {\n                pattern: /(^[ \\t]*)#.*/m,\n                lookbehind: true\n            },\n            \"vector-match\": {\n                // Match the comma-separated label lists inside vector matching:\n                pattern: new RegExp(\"((?:\" + vectorMatching.join(\"|\") + \")\\\\s*)\\\\([^)]*\\\\)\"),\n                lookbehind: true,\n                inside: {\n                    \"label-key\": {\n                        pattern: /\\b[^,]+\\b/,\n                        alias: \"attr-name\"\n                    },\n                    punctuation: /[(),]/\n                }\n            },\n            \"context-labels\": {\n                pattern: /\\{[^{}]*\\}/,\n                inside: {\n                    \"label-key\": {\n                        pattern: /\\b[a-z_]\\w*(?=\\s*(?:=|![=~]))/,\n                        alias: \"attr-name\"\n                    },\n                    \"label-value\": {\n                        pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n                        greedy: true,\n                        alias: \"attr-value\"\n                    },\n                    punctuation: /\\{|\\}|=~?|![=~]|,/\n                }\n            },\n            \"context-range\": [\n                {\n                    pattern: /\\[[\\w\\s:]+\\]/,\n                    // [1m]\n                    inside: {\n                        punctuation: /\\[|\\]|:/,\n                        \"range-duration\": {\n                            pattern: /\\b(?:\\d+(?:[smhdwy]|ms))+\\b/i,\n                            alias: \"number\"\n                        }\n                    }\n                },\n                {\n                    pattern: /(\\boffset\\s+)\\w+/,\n                    // offset 1m\n                    lookbehind: true,\n                    inside: {\n                        \"range-duration\": {\n                            pattern: /\\b(?:\\d+(?:[smhdwy]|ms))+\\b/i,\n                            alias: \"number\"\n                        }\n                    }\n                }\n            ],\n            keyword: new RegExp(\"\\\\b(?:\" + keywords.join(\"|\") + \")\\\\b\", \"i\"),\n            function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n            number: /[-+]?(?:(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[-+]?\\d+)?\\b|\\b(?:0x[0-9a-f]+|nan|inf)\\b)/i,\n            operator: /[\\^*/%+-]|==|!=|<=|<|>=|>|\\b(?:and|or|unless)\\b/i,\n            punctuation: /[{};()`,.[\\]]/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcHJvbXFsLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLE9BQU9DLFdBQVcsR0FBRztBQUNyQkQsT0FBT0UsT0FBTyxHQUFHLEVBQUU7QUFDbkIsU0FBU0YsT0FBT0csS0FBSztJQUNuQixvR0FBb0c7SUFDcEcsd0VBQXdFOztJQUN0RSxVQUFVQSxLQUFLO1FBQ2YsK0JBQStCO1FBQy9CLDJGQUEyRjtRQUMzRixJQUFJQyxlQUFlO1lBQ2pCO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtTQUNELENBQUMsc0RBQXNEOztRQUN4RCxxRkFBcUY7UUFDckYsSUFBSUMsaUJBQWlCO1lBQ25CO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtTQUNELENBQUMseUJBQXlCOztRQUMzQixrRkFBa0Y7UUFDbEYsSUFBSUMsaUJBQWlCO1lBQUM7U0FBUztRQUMvQixJQUFJQyxXQUFXSCxhQUFhSSxNQUFNLENBQUNILGdCQUFnQkM7UUFDbkRILE1BQU1NLFNBQVMsQ0FBQ1QsTUFBTSxHQUFHO1lBQ3ZCVSxTQUFTO2dCQUNQQyxTQUFTO2dCQUNUQyxZQUFZO1lBQ2Q7WUFDQSxnQkFBZ0I7Z0JBQ2QsZ0VBQWdFO2dCQUNoRUQsU0FBUyxJQUFJRSxPQUNYLFNBQVNSLGVBQWVTLElBQUksQ0FBQyxPQUFPO2dCQUV0Q0YsWUFBWTtnQkFDWkcsUUFBUTtvQkFDTixhQUFhO3dCQUNYSixTQUFTO3dCQUNUSyxPQUFPO29CQUNUO29CQUNBQyxhQUFhO2dCQUNmO1lBQ0Y7WUFDQSxrQkFBa0I7Z0JBQ2hCTixTQUFTO2dCQUNUSSxRQUFRO29CQUNOLGFBQWE7d0JBQ1hKLFNBQVM7d0JBQ1RLLE9BQU87b0JBQ1Q7b0JBQ0EsZUFBZTt3QkFDYkwsU0FBUzt3QkFDVE8sUUFBUTt3QkFDUkYsT0FBTztvQkFDVDtvQkFDQUMsYUFBYTtnQkFDZjtZQUNGO1lBQ0EsaUJBQWlCO2dCQUNmO29CQUNFTixTQUFTO29CQUNULE9BQU87b0JBQ1BJLFFBQVE7d0JBQ05FLGFBQWE7d0JBQ2Isa0JBQWtCOzRCQUNoQk4sU0FBUzs0QkFDVEssT0FBTzt3QkFDVDtvQkFDRjtnQkFDRjtnQkFDQTtvQkFDRUwsU0FBUztvQkFDVCxZQUFZO29CQUNaQyxZQUFZO29CQUNaRyxRQUFRO3dCQUNOLGtCQUFrQjs0QkFDaEJKLFNBQVM7NEJBQ1RLLE9BQU87d0JBQ1Q7b0JBQ0Y7Z0JBQ0Y7YUFDRDtZQUNERyxTQUFTLElBQUlOLE9BQU8sV0FBV04sU0FBU08sSUFBSSxDQUFDLE9BQU8sUUFBUTtZQUM1RE0sVUFBVTtZQUNWQyxRQUNFO1lBQ0ZDLFVBQVU7WUFDVkwsYUFBYTtRQUNmO0lBQ0YsR0FBR2Q7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wcm9tcWwuanM/NzY4MSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBwcm9tcWxcbnByb21xbC5kaXNwbGF5TmFtZSA9ICdwcm9tcWwnXG5wcm9tcWwuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBwcm9tcWwoUHJpc20pIHtcbiAgLy8gVGhhbmtzIHRvOiBodHRwczovL2dpdGh1Yi5jb20vcHJvbWV0aGV1cy1jb21tdW5pdHkvbW9uYWNvLXByb21xbC9ibG9iL21hc3Rlci9zcmMvcHJvbXFsL3Byb21xbC50c1xuICAvLyBBcyB3ZWxsIGFzOiBodHRwczovL2thdXNhbC5jby9ibG9nL3NsYXRlLXByaXNtLWFkZC1uZXctc3ludGF4LXByb21xbC9cbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICAvLyBQcm9tUUwgQWdncmVnYXRpb24gT3BlcmF0b3JzXG4gICAgLy8gKGh0dHBzOi8vcHJvbWV0aGV1cy5pby9kb2NzL3Byb21ldGhldXMvbGF0ZXN0L3F1ZXJ5aW5nL29wZXJhdG9ycy8jYWdncmVnYXRpb24tb3BlcmF0b3JzKVxuICAgIHZhciBhZ2dyZWdhdGlvbnMgPSBbXG4gICAgICAnc3VtJyxcbiAgICAgICdtaW4nLFxuICAgICAgJ21heCcsXG4gICAgICAnYXZnJyxcbiAgICAgICdncm91cCcsXG4gICAgICAnc3RkZGV2JyxcbiAgICAgICdzdGR2YXInLFxuICAgICAgJ2NvdW50JyxcbiAgICAgICdjb3VudF92YWx1ZXMnLFxuICAgICAgJ2JvdHRvbWsnLFxuICAgICAgJ3RvcGsnLFxuICAgICAgJ3F1YW50aWxlJ1xuICAgIF0gLy8gUHJvbVFMIHZlY3RvciBtYXRjaGluZyArIHRoZSBieSBhbmQgd2l0aG91dCBjbGF1c2VzXG4gICAgLy8gKGh0dHBzOi8vcHJvbWV0aGV1cy5pby9kb2NzL3Byb21ldGhldXMvbGF0ZXN0L3F1ZXJ5aW5nL29wZXJhdG9ycy8jdmVjdG9yLW1hdGNoaW5nKVxuICAgIHZhciB2ZWN0b3JNYXRjaGluZyA9IFtcbiAgICAgICdvbicsXG4gICAgICAnaWdub3JpbmcnLFxuICAgICAgJ2dyb3VwX3JpZ2h0JyxcbiAgICAgICdncm91cF9sZWZ0JyxcbiAgICAgICdieScsXG4gICAgICAnd2l0aG91dCdcbiAgICBdIC8vIFByb21RTCBvZmZzZXQgbW9kaWZpZXJcbiAgICAvLyAoaHR0cHM6Ly9wcm9tZXRoZXVzLmlvL2RvY3MvcHJvbWV0aGV1cy9sYXRlc3QvcXVlcnlpbmcvYmFzaWNzLyNvZmZzZXQtbW9kaWZpZXIpXG4gICAgdmFyIG9mZnNldE1vZGlmaWVyID0gWydvZmZzZXQnXVxuICAgIHZhciBrZXl3b3JkcyA9IGFnZ3JlZ2F0aW9ucy5jb25jYXQodmVjdG9yTWF0Y2hpbmcsIG9mZnNldE1vZGlmaWVyKVxuICAgIFByaXNtLmxhbmd1YWdlcy5wcm9tcWwgPSB7XG4gICAgICBjb21tZW50OiB7XG4gICAgICAgIHBhdHRlcm46IC8oXlsgXFx0XSopIy4qL20sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICAndmVjdG9yLW1hdGNoJzoge1xuICAgICAgICAvLyBNYXRjaCB0aGUgY29tbWEtc2VwYXJhdGVkIGxhYmVsIGxpc3RzIGluc2lkZSB2ZWN0b3IgbWF0Y2hpbmc6XG4gICAgICAgIHBhdHRlcm46IG5ldyBSZWdFeHAoXG4gICAgICAgICAgJygoPzonICsgdmVjdG9yTWF0Y2hpbmcuam9pbignfCcpICsgJylcXFxccyopXFxcXChbXildKlxcXFwpJ1xuICAgICAgICApLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAnbGFiZWwta2V5Jzoge1xuICAgICAgICAgICAgcGF0dGVybjogL1xcYlteLF0rXFxiLyxcbiAgICAgICAgICAgIGFsaWFzOiAnYXR0ci1uYW1lJ1xuICAgICAgICAgIH0sXG4gICAgICAgICAgcHVuY3R1YXRpb246IC9bKCksXS9cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgICdjb250ZXh0LWxhYmVscyc6IHtcbiAgICAgICAgcGF0dGVybjogL1xce1tee31dKlxcfS8sXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgICdsYWJlbC1rZXknOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvXFxiW2Etel9dXFx3Kig/PVxccyooPzo9fCFbPX5dKSkvLFxuICAgICAgICAgICAgYWxpYXM6ICdhdHRyLW5hbWUnXG4gICAgICAgICAgfSxcbiAgICAgICAgICAnbGFiZWwtdmFsdWUnOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvKFtcIidgXSkoPzpcXFxcW1xcc1xcU118KD8hXFwxKVteXFxcXF0pKlxcMS8sXG4gICAgICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgICAgICBhbGlhczogJ2F0dHItdmFsdWUnXG4gICAgICAgICAgfSxcbiAgICAgICAgICBwdW5jdHVhdGlvbjogL1xce3xcXH18PX4/fCFbPX5dfCwvXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICAnY29udGV4dC1yYW5nZSc6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IC9cXFtbXFx3XFxzOl0rXFxdLyxcbiAgICAgICAgICAvLyBbMW1dXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICBwdW5jdHVhdGlvbjogL1xcW3xcXF18Oi8sXG4gICAgICAgICAgICAncmFuZ2UtZHVyYXRpb24nOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC9cXGIoPzpcXGQrKD86W3NtaGR3eV18bXMpKStcXGIvaSxcbiAgICAgICAgICAgICAgYWxpYXM6ICdudW1iZXInXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogLyhcXGJvZmZzZXRcXHMrKVxcdysvLFxuICAgICAgICAgIC8vIG9mZnNldCAxbVxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICAncmFuZ2UtZHVyYXRpb24nOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC9cXGIoPzpcXGQrKD86W3NtaGR3eV18bXMpKStcXGIvaSxcbiAgICAgICAgICAgICAgYWxpYXM6ICdudW1iZXInXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAga2V5d29yZDogbmV3IFJlZ0V4cCgnXFxcXGIoPzonICsga2V5d29yZHMuam9pbignfCcpICsgJylcXFxcYicsICdpJyksXG4gICAgICBmdW5jdGlvbjogL1xcYlthLXpfXVxcdyooPz1cXHMqXFwoKS9pLFxuICAgICAgbnVtYmVyOlxuICAgICAgICAvWy0rXT8oPzooPzpcXGJcXGQrKD86XFwuXFxkKyk/fFxcQlxcLlxcZCspKD86ZVstK10/XFxkKyk/XFxifFxcYig/OjB4WzAtOWEtZl0rfG5hbnxpbmYpXFxiKS9pLFxuICAgICAgb3BlcmF0b3I6IC9bXFxeKi8lKy1dfD09fCE9fDw9fDx8Pj18PnxcXGIoPzphbmR8b3J8dW5sZXNzKVxcYi9pLFxuICAgICAgcHVuY3R1YXRpb246IC9be307KClgLC5bXFxdXS9cbiAgICB9XG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJwcm9tcWwiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImFnZ3JlZ2F0aW9ucyIsInZlY3Rvck1hdGNoaW5nIiwib2Zmc2V0TW9kaWZpZXIiLCJrZXl3b3JkcyIsImNvbmNhdCIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsIlJlZ0V4cCIsImpvaW4iLCJpbnNpZGUiLCJhbGlhcyIsInB1bmN0dWF0aW9uIiwiZ3JlZWR5Iiwia2V5d29yZCIsImZ1bmN0aW9uIiwibnVtYmVyIiwib3BlcmF0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/promql.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/properties.js":
/*!***************************************************!*\
  !*** ./node_modules/refractor/lang/properties.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = properties;\nproperties.displayName = \"properties\";\nproperties.aliases = [];\nfunction properties(Prism) {\n    Prism.languages.properties = {\n        comment: /^[ \\t]*[#!].*$/m,\n        \"attr-value\": {\n            pattern: /(^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+(?: *[=:] *(?! )| ))(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])+/m,\n            lookbehind: true\n        },\n        \"attr-name\": /^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+(?= *[=:]| )/m,\n        punctuation: /[=:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcHJvcGVydGllcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxXQUFXQyxXQUFXLEdBQUc7QUFDekJELFdBQVdFLE9BQU8sR0FBRyxFQUFFO0FBQ3ZCLFNBQVNGLFdBQVdHLEtBQUs7SUFDdkJBLE1BQU1DLFNBQVMsQ0FBQ0osVUFBVSxHQUFHO1FBQzNCSyxTQUFTO1FBQ1QsY0FBYztZQUNaQyxTQUNFO1lBQ0ZDLFlBQVk7UUFDZDtRQUNBLGFBQWE7UUFDYkMsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcHJvcGVydGllcy5qcz83Njk2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHByb3BlcnRpZXNcbnByb3BlcnRpZXMuZGlzcGxheU5hbWUgPSAncHJvcGVydGllcydcbnByb3BlcnRpZXMuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBwcm9wZXJ0aWVzKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5wcm9wZXJ0aWVzID0ge1xuICAgIGNvbW1lbnQ6IC9eWyBcXHRdKlsjIV0uKiQvbSxcbiAgICAnYXR0ci12YWx1ZSc6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXlsgXFx0XSooPzpcXFxcKD86XFxyXFxufFtcXHNcXFNdKXxbXlxcXFxcXHM6PV0pKyg/OiAqWz06XSAqKD8hICl8ICkpKD86XFxcXCg/OlxcclxcbnxbXFxzXFxTXSl8W15cXFxcXFxyXFxuXSkrL20sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICAnYXR0ci1uYW1lJzogL15bIFxcdF0qKD86XFxcXCg/OlxcclxcbnxbXFxzXFxTXSl8W15cXFxcXFxzOj1dKSsoPz0gKls9Ol18ICkvbSxcbiAgICBwdW5jdHVhdGlvbjogL1s9Ol0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicHJvcGVydGllcyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/properties.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/protobuf.js":
/*!*************************************************!*\
  !*** ./node_modules/refractor/lang/protobuf.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = protobuf;\nprotobuf.displayName = \"protobuf\";\nprotobuf.aliases = [];\nfunction protobuf(Prism) {\n    ;\n    (function(Prism) {\n        var builtinTypes = /\\b(?:bool|bytes|double|s?fixed(?:32|64)|float|[su]?int(?:32|64)|string)\\b/;\n        Prism.languages.protobuf = Prism.languages.extend(\"clike\", {\n            \"class-name\": [\n                {\n                    pattern: /(\\b(?:enum|extend|message|service)\\s+)[A-Za-z_]\\w*(?=\\s*\\{)/,\n                    lookbehind: true\n                },\n                {\n                    pattern: /(\\b(?:rpc\\s+\\w+|returns)\\s*\\(\\s*(?:stream\\s+)?)\\.?[A-Za-z_]\\w*(?:\\.[A-Za-z_]\\w*)*(?=\\s*\\))/,\n                    lookbehind: true\n                }\n            ],\n            keyword: /\\b(?:enum|extend|extensions|import|message|oneof|option|optional|package|public|repeated|required|reserved|returns|rpc(?=\\s+\\w)|service|stream|syntax|to)\\b(?!\\s*=\\s*\\d)/,\n            function: /\\b[a-z_]\\w*(?=\\s*\\()/i\n        });\n        Prism.languages.insertBefore(\"protobuf\", \"operator\", {\n            map: {\n                pattern: /\\bmap<\\s*[\\w.]+\\s*,\\s*[\\w.]+\\s*>(?=\\s+[a-z_]\\w*\\s*[=;])/i,\n                alias: \"class-name\",\n                inside: {\n                    punctuation: /[<>.,]/,\n                    builtin: builtinTypes\n                }\n            },\n            builtin: builtinTypes,\n            \"positional-class-name\": {\n                pattern: /(?:\\b|\\B\\.)[a-z_]\\w*(?:\\.[a-z_]\\w*)*(?=\\s+[a-z_]\\w*\\s*[=;])/i,\n                alias: \"class-name\",\n                inside: {\n                    punctuation: /\\./\n                }\n            },\n            annotation: {\n                pattern: /(\\[\\s*)[a-z_]\\w*(?=\\s*=)/i,\n                lookbehind: true\n            }\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcHJvdG9idWYuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsU0FBU0MsV0FBVyxHQUFHO0FBQ3ZCRCxTQUFTRSxPQUFPLEdBQUcsRUFBRTtBQUNyQixTQUFTRixTQUFTRyxLQUFLOztJQUNuQixVQUFVQSxLQUFLO1FBQ2YsSUFBSUMsZUFDRjtRQUNGRCxNQUFNRSxTQUFTLENBQUNMLFFBQVEsR0FBR0csTUFBTUUsU0FBUyxDQUFDQyxNQUFNLENBQUMsU0FBUztZQUN6RCxjQUFjO2dCQUNaO29CQUNFQyxTQUNFO29CQUNGQyxZQUFZO2dCQUNkO2dCQUNBO29CQUNFRCxTQUNFO29CQUNGQyxZQUFZO2dCQUNkO2FBQ0Q7WUFDREMsU0FDRTtZQUNGQyxVQUFVO1FBQ1o7UUFDQVAsTUFBTUUsU0FBUyxDQUFDTSxZQUFZLENBQUMsWUFBWSxZQUFZO1lBQ25EQyxLQUFLO2dCQUNITCxTQUFTO2dCQUNUTSxPQUFPO2dCQUNQQyxRQUFRO29CQUNOQyxhQUFhO29CQUNiQyxTQUFTWjtnQkFDWDtZQUNGO1lBQ0FZLFNBQVNaO1lBQ1QseUJBQXlCO2dCQUN2QkcsU0FBUztnQkFDVE0sT0FBTztnQkFDUEMsUUFBUTtvQkFDTkMsYUFBYTtnQkFDZjtZQUNGO1lBQ0FFLFlBQVk7Z0JBQ1ZWLFNBQVM7Z0JBQ1RDLFlBQVk7WUFDZDtRQUNGO0lBQ0YsR0FBR0w7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wcm90b2J1Zi5qcz8wYmFkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHByb3RvYnVmXG5wcm90b2J1Zi5kaXNwbGF5TmFtZSA9ICdwcm90b2J1ZidcbnByb3RvYnVmLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gcHJvdG9idWYoUHJpc20pIHtcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIgYnVpbHRpblR5cGVzID1cbiAgICAgIC9cXGIoPzpib29sfGJ5dGVzfGRvdWJsZXxzP2ZpeGVkKD86MzJ8NjQpfGZsb2F0fFtzdV0/aW50KD86MzJ8NjQpfHN0cmluZylcXGIvXG4gICAgUHJpc20ubGFuZ3VhZ2VzLnByb3RvYnVmID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnY2xpa2UnLCB7XG4gICAgICAnY2xhc3MtbmFtZSc6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAvKFxcYig/OmVudW18ZXh0ZW5kfG1lc3NhZ2V8c2VydmljZSlcXHMrKVtBLVphLXpfXVxcdyooPz1cXHMqXFx7KS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAgIC8oXFxiKD86cnBjXFxzK1xcdyt8cmV0dXJucylcXHMqXFwoXFxzKig/OnN0cmVhbVxccyspPylcXC4/W0EtWmEtel9dXFx3Kig/OlxcLltBLVphLXpfXVxcdyopKig/PVxccypcXCkpLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBrZXl3b3JkOlxuICAgICAgICAvXFxiKD86ZW51bXxleHRlbmR8ZXh0ZW5zaW9uc3xpbXBvcnR8bWVzc2FnZXxvbmVvZnxvcHRpb258b3B0aW9uYWx8cGFja2FnZXxwdWJsaWN8cmVwZWF0ZWR8cmVxdWlyZWR8cmVzZXJ2ZWR8cmV0dXJuc3xycGMoPz1cXHMrXFx3KXxzZXJ2aWNlfHN0cmVhbXxzeW50YXh8dG8pXFxiKD8hXFxzKj1cXHMqXFxkKS8sXG4gICAgICBmdW5jdGlvbjogL1xcYlthLXpfXVxcdyooPz1cXHMqXFwoKS9pXG4gICAgfSlcbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdwcm90b2J1ZicsICdvcGVyYXRvcicsIHtcbiAgICAgIG1hcDoge1xuICAgICAgICBwYXR0ZXJuOiAvXFxibWFwPFxccypbXFx3Ll0rXFxzKixcXHMqW1xcdy5dK1xccyo+KD89XFxzK1thLXpfXVxcdypcXHMqWz07XSkvaSxcbiAgICAgICAgYWxpYXM6ICdjbGFzcy1uYW1lJyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgcHVuY3R1YXRpb246IC9bPD4uLF0vLFxuICAgICAgICAgIGJ1aWx0aW46IGJ1aWx0aW5UeXBlc1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgYnVpbHRpbjogYnVpbHRpblR5cGVzLFxuICAgICAgJ3Bvc2l0aW9uYWwtY2xhc3MtbmFtZSc6IHtcbiAgICAgICAgcGF0dGVybjogLyg/OlxcYnxcXEJcXC4pW2Etel9dXFx3Kig/OlxcLlthLXpfXVxcdyopKig/PVxccytbYS16X11cXHcqXFxzKls9O10pL2ksXG4gICAgICAgIGFsaWFzOiAnY2xhc3MtbmFtZScsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXFwuL1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgYW5ub3RhdGlvbjoge1xuICAgICAgICBwYXR0ZXJuOiAvKFxcW1xccyopW2Etel9dXFx3Kig/PVxccyo9KS9pLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9XG4gICAgfSlcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInByb3RvYnVmIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJidWlsdGluVHlwZXMiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImtleXdvcmQiLCJmdW5jdGlvbiIsImluc2VydEJlZm9yZSIsIm1hcCIsImFsaWFzIiwiaW5zaWRlIiwicHVuY3R1YXRpb24iLCJidWlsdGluIiwiYW5ub3RhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/protobuf.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/psl.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/psl.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = psl;\npsl.displayName = \"psl\";\npsl.aliases = [];\nfunction psl(Prism) {\n    Prism.languages.psl = {\n        comment: {\n            pattern: /#.*/,\n            greedy: true\n        },\n        string: {\n            pattern: /\"(?:\\\\.|[^\\\\\"])*\"/,\n            greedy: true,\n            inside: {\n                symbol: /\\\\[ntrbA-Z\"\\\\]/\n            }\n        },\n        \"heredoc-string\": {\n            pattern: /<<<([a-zA-Z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\1\\b/,\n            alias: \"string\",\n            greedy: true\n        },\n        keyword: /\\b(?:__multi|__single|case|default|do|else|elsif|exit|export|for|foreach|function|if|last|line|local|next|requires|return|switch|until|while|word)\\b/,\n        constant: /\\b(?:ALARM|CHART_ADD_GRAPH|CHART_DELETE_GRAPH|CHART_DESTROY|CHART_LOAD|CHART_PRINT|EOF|OFFLINE|OK|PSL_PROF_LOG|R_CHECK_HORIZ|R_CHECK_VERT|R_CLICKER|R_COLUMN|R_FRAME|R_ICON|R_LABEL|R_LABEL_CENTER|R_LIST_MULTIPLE|R_LIST_MULTIPLE_ND|R_LIST_SINGLE|R_LIST_SINGLE_ND|R_MENU|R_POPUP|R_POPUP_SCROLLED|R_RADIO_HORIZ|R_RADIO_VERT|R_ROW|R_SCALE_HORIZ|R_SCALE_VERT|R_SEP_HORIZ|R_SEP_VERT|R_SPINNER|R_TEXT_FIELD|R_TEXT_FIELD_LABEL|R_TOGGLE|TRIM_LEADING|TRIM_LEADING_AND_TRAILING|TRIM_REDUNDANT|TRIM_TRAILING|VOID|WARN)\\b/,\n        boolean: /\\b(?:FALSE|False|NO|No|TRUE|True|YES|Yes|false|no|true|yes)\\b/,\n        variable: /\\b(?:PslDebug|errno|exit_status)\\b/,\n        builtin: {\n            pattern: /\\b(?:PslExecute|PslFunctionCall|PslFunctionExists|PslSetOptions|_snmp_debug|acos|add_diary|annotate|annotate_get|ascii_to_ebcdic|asctime|asin|atan|atexit|batch_set|blackout|cat|ceil|chan_exists|change_state|close|code_cvt|cond_signal|cond_wait|console_type|convert_base|convert_date|convert_locale_date|cos|cosh|create|date|dcget_text|destroy|destroy_lock|dget_text|difference|dump_hist|ebcdic_to_ascii|encrypt|event_archive|event_catalog_get|event_check|event_query|event_range_manage|event_range_query|event_report|event_schedule|event_trigger|event_trigger2|execute|exists|exp|fabs|file|floor|fmod|fopen|fseek|ftell|full_discovery|get|get_chan_info|get_ranges|get_text|get_vars|getenv|gethostinfo|getpid|getpname|grep|history|history_get_retention|in_transition|index|int|internal|intersection|is_var|isnumber|join|kill|length|lines|lock|lock_info|log|log10|loge|matchline|msg_check|msg_get_format|msg_get_severity|msg_printf|msg_sprintf|ntharg|nthargf|nthline|nthlinef|num_bytes|num_consoles|pconfig|popen|poplines|pow|print|printf|proc_exists|process|random|read|readln|refresh_parameters|remote_check|remote_close|remote_event_query|remote_event_trigger|remote_file_send|remote_open|remove|replace|rindex|sec_check_priv|sec_store_get|sec_store_set|set|set_alarm_ranges|set_locale|share|sin|sinh|sleep|snmp_agent_config|snmp_agent_start|snmp_agent_stop|snmp_close|snmp_config|snmp_get|snmp_get_next|snmp_h_get|snmp_h_get_next|snmp_h_set|snmp_open|snmp_set|snmp_trap_ignore|snmp_trap_listen|snmp_trap_raise_std_trap|snmp_trap_receive|snmp_trap_register_im|snmp_trap_send|snmp_walk|sopen|sort|splitline|sprintf|sqrt|srandom|str_repeat|strcasecmp|subset|substr|system|tail|tan|tanh|text_domain|time|tmpnam|tolower|toupper|trace_psl_process|trim|union|unique|unlock|unset|va_arg|va_start|write)\\b/,\n            alias: \"builtin-function\"\n        },\n        \"foreach-variable\": {\n            pattern: /(\\bforeach\\s+(?:(?:\\w+\\b|\"(?:\\\\.|[^\\\\\"])*\")\\s+){0,2})[_a-zA-Z]\\w*(?=\\s*\\()/,\n            lookbehind: true,\n            greedy: true\n        },\n        function: /\\b[_a-z]\\w*\\b(?=\\s*\\()/i,\n        number: /\\b(?:0x[0-9a-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n        operator: /--|\\+\\+|&&=?|\\|\\|=?|<<=?|>>=?|[=!]~|[-+*/%&|^!=<>]=?|\\.|[:?]/,\n        punctuation: /[(){}\\[\\];,]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcHNsLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLElBQUlDLFdBQVcsR0FBRztBQUNsQkQsSUFBSUUsT0FBTyxHQUFHLEVBQUU7QUFDaEIsU0FBU0YsSUFBSUcsS0FBSztJQUNoQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsUUFBUTtZQUNORixTQUFTO1lBQ1RDLFFBQVE7WUFDUkUsUUFBUTtnQkFDTkMsUUFBUTtZQUNWO1FBQ0Y7UUFDQSxrQkFBa0I7WUFDaEJKLFNBQVM7WUFDVEssT0FBTztZQUNQSixRQUFRO1FBQ1Y7UUFDQUssU0FDRTtRQUNGQyxVQUNFO1FBQ0ZDLFNBQVM7UUFDVEMsVUFBVTtRQUNWQyxTQUFTO1lBQ1BWLFNBQ0U7WUFDRkssT0FBTztRQUNUO1FBQ0Esb0JBQW9CO1lBQ2xCTCxTQUNFO1lBQ0ZXLFlBQVk7WUFDWlYsUUFBUTtRQUNWO1FBQ0FXLFVBQVU7UUFDVkMsUUFBUTtRQUNSQyxVQUFVO1FBQ1ZDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3BzbC5qcz81OWQ4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHBzbFxucHNsLmRpc3BsYXlOYW1lID0gJ3BzbCdcbnBzbC5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIHBzbChQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMucHNsID0ge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC8jLiovLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIig/OlxcXFwufFteXFxcXFwiXSkqXCIvLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHN5bWJvbDogL1xcXFxbbnRyYkEtWlwiXFxcXF0vXG4gICAgICB9XG4gICAgfSxcbiAgICAnaGVyZWRvYy1zdHJpbmcnOiB7XG4gICAgICBwYXR0ZXJuOiAvPDw8KFthLXpBLVpfXVxcdyopW1xcclxcbl0oPzouKltcXHJcXG5dKSo/XFwxXFxiLyxcbiAgICAgIGFsaWFzOiAnc3RyaW5nJyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzpfX211bHRpfF9fc2luZ2xlfGNhc2V8ZGVmYXVsdHxkb3xlbHNlfGVsc2lmfGV4aXR8ZXhwb3J0fGZvcnxmb3JlYWNofGZ1bmN0aW9ufGlmfGxhc3R8bGluZXxsb2NhbHxuZXh0fHJlcXVpcmVzfHJldHVybnxzd2l0Y2h8dW50aWx8d2hpbGV8d29yZClcXGIvLFxuICAgIGNvbnN0YW50OlxuICAgICAgL1xcYig/OkFMQVJNfENIQVJUX0FERF9HUkFQSHxDSEFSVF9ERUxFVEVfR1JBUEh8Q0hBUlRfREVTVFJPWXxDSEFSVF9MT0FEfENIQVJUX1BSSU5UfEVPRnxPRkZMSU5FfE9LfFBTTF9QUk9GX0xPR3xSX0NIRUNLX0hPUklafFJfQ0hFQ0tfVkVSVHxSX0NMSUNLRVJ8Ul9DT0xVTU58Ul9GUkFNRXxSX0lDT058Ul9MQUJFTHxSX0xBQkVMX0NFTlRFUnxSX0xJU1RfTVVMVElQTEV8Ul9MSVNUX01VTFRJUExFX05EfFJfTElTVF9TSU5HTEV8Ul9MSVNUX1NJTkdMRV9ORHxSX01FTlV8Ul9QT1BVUHxSX1BPUFVQX1NDUk9MTEVEfFJfUkFESU9fSE9SSVp8Ul9SQURJT19WRVJUfFJfUk9XfFJfU0NBTEVfSE9SSVp8Ul9TQ0FMRV9WRVJUfFJfU0VQX0hPUklafFJfU0VQX1ZFUlR8Ul9TUElOTkVSfFJfVEVYVF9GSUVMRHxSX1RFWFRfRklFTERfTEFCRUx8Ul9UT0dHTEV8VFJJTV9MRUFESU5HfFRSSU1fTEVBRElOR19BTkRfVFJBSUxJTkd8VFJJTV9SRURVTkRBTlR8VFJJTV9UUkFJTElOR3xWT0lEfFdBUk4pXFxiLyxcbiAgICBib29sZWFuOiAvXFxiKD86RkFMU0V8RmFsc2V8Tk98Tm98VFJVRXxUcnVlfFlFU3xZZXN8ZmFsc2V8bm98dHJ1ZXx5ZXMpXFxiLyxcbiAgICB2YXJpYWJsZTogL1xcYig/OlBzbERlYnVnfGVycm5vfGV4aXRfc3RhdHVzKVxcYi8sXG4gICAgYnVpbHRpbjoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL1xcYig/OlBzbEV4ZWN1dGV8UHNsRnVuY3Rpb25DYWxsfFBzbEZ1bmN0aW9uRXhpc3RzfFBzbFNldE9wdGlvbnN8X3NubXBfZGVidWd8YWNvc3xhZGRfZGlhcnl8YW5ub3RhdGV8YW5ub3RhdGVfZ2V0fGFzY2lpX3RvX2ViY2RpY3xhc2N0aW1lfGFzaW58YXRhbnxhdGV4aXR8YmF0Y2hfc2V0fGJsYWNrb3V0fGNhdHxjZWlsfGNoYW5fZXhpc3RzfGNoYW5nZV9zdGF0ZXxjbG9zZXxjb2RlX2N2dHxjb25kX3NpZ25hbHxjb25kX3dhaXR8Y29uc29sZV90eXBlfGNvbnZlcnRfYmFzZXxjb252ZXJ0X2RhdGV8Y29udmVydF9sb2NhbGVfZGF0ZXxjb3N8Y29zaHxjcmVhdGV8ZGF0ZXxkY2dldF90ZXh0fGRlc3Ryb3l8ZGVzdHJveV9sb2NrfGRnZXRfdGV4dHxkaWZmZXJlbmNlfGR1bXBfaGlzdHxlYmNkaWNfdG9fYXNjaWl8ZW5jcnlwdHxldmVudF9hcmNoaXZlfGV2ZW50X2NhdGFsb2dfZ2V0fGV2ZW50X2NoZWNrfGV2ZW50X3F1ZXJ5fGV2ZW50X3JhbmdlX21hbmFnZXxldmVudF9yYW5nZV9xdWVyeXxldmVudF9yZXBvcnR8ZXZlbnRfc2NoZWR1bGV8ZXZlbnRfdHJpZ2dlcnxldmVudF90cmlnZ2VyMnxleGVjdXRlfGV4aXN0c3xleHB8ZmFic3xmaWxlfGZsb29yfGZtb2R8Zm9wZW58ZnNlZWt8ZnRlbGx8ZnVsbF9kaXNjb3Zlcnl8Z2V0fGdldF9jaGFuX2luZm98Z2V0X3Jhbmdlc3xnZXRfdGV4dHxnZXRfdmFyc3xnZXRlbnZ8Z2V0aG9zdGluZm98Z2V0cGlkfGdldHBuYW1lfGdyZXB8aGlzdG9yeXxoaXN0b3J5X2dldF9yZXRlbnRpb258aW5fdHJhbnNpdGlvbnxpbmRleHxpbnR8aW50ZXJuYWx8aW50ZXJzZWN0aW9ufGlzX3Zhcnxpc251bWJlcnxqb2lufGtpbGx8bGVuZ3RofGxpbmVzfGxvY2t8bG9ja19pbmZvfGxvZ3xsb2cxMHxsb2dlfG1hdGNobGluZXxtc2dfY2hlY2t8bXNnX2dldF9mb3JtYXR8bXNnX2dldF9zZXZlcml0eXxtc2dfcHJpbnRmfG1zZ19zcHJpbnRmfG50aGFyZ3xudGhhcmdmfG50aGxpbmV8bnRobGluZWZ8bnVtX2J5dGVzfG51bV9jb25zb2xlc3xwY29uZmlnfHBvcGVufHBvcGxpbmVzfHBvd3xwcmludHxwcmludGZ8cHJvY19leGlzdHN8cHJvY2Vzc3xyYW5kb218cmVhZHxyZWFkbG58cmVmcmVzaF9wYXJhbWV0ZXJzfHJlbW90ZV9jaGVja3xyZW1vdGVfY2xvc2V8cmVtb3RlX2V2ZW50X3F1ZXJ5fHJlbW90ZV9ldmVudF90cmlnZ2VyfHJlbW90ZV9maWxlX3NlbmR8cmVtb3RlX29wZW58cmVtb3ZlfHJlcGxhY2V8cmluZGV4fHNlY19jaGVja19wcml2fHNlY19zdG9yZV9nZXR8c2VjX3N0b3JlX3NldHxzZXR8c2V0X2FsYXJtX3Jhbmdlc3xzZXRfbG9jYWxlfHNoYXJlfHNpbnxzaW5ofHNsZWVwfHNubXBfYWdlbnRfY29uZmlnfHNubXBfYWdlbnRfc3RhcnR8c25tcF9hZ2VudF9zdG9wfHNubXBfY2xvc2V8c25tcF9jb25maWd8c25tcF9nZXR8c25tcF9nZXRfbmV4dHxzbm1wX2hfZ2V0fHNubXBfaF9nZXRfbmV4dHxzbm1wX2hfc2V0fHNubXBfb3Blbnxzbm1wX3NldHxzbm1wX3RyYXBfaWdub3JlfHNubXBfdHJhcF9saXN0ZW58c25tcF90cmFwX3JhaXNlX3N0ZF90cmFwfHNubXBfdHJhcF9yZWNlaXZlfHNubXBfdHJhcF9yZWdpc3Rlcl9pbXxzbm1wX3RyYXBfc2VuZHxzbm1wX3dhbGt8c29wZW58c29ydHxzcGxpdGxpbmV8c3ByaW50ZnxzcXJ0fHNyYW5kb218c3RyX3JlcGVhdHxzdHJjYXNlY21wfHN1YnNldHxzdWJzdHJ8c3lzdGVtfHRhaWx8dGFufHRhbmh8dGV4dF9kb21haW58dGltZXx0bXBuYW18dG9sb3dlcnx0b3VwcGVyfHRyYWNlX3BzbF9wcm9jZXNzfHRyaW18dW5pb258dW5pcXVlfHVubG9ja3x1bnNldHx2YV9hcmd8dmFfc3RhcnR8d3JpdGUpXFxiLyxcbiAgICAgIGFsaWFzOiAnYnVpbHRpbi1mdW5jdGlvbidcbiAgICB9LFxuICAgICdmb3JlYWNoLXZhcmlhYmxlJzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhcXGJmb3JlYWNoXFxzKyg/Oig/OlxcdytcXGJ8XCIoPzpcXFxcLnxbXlxcXFxcIl0pKlwiKVxccyspezAsMn0pW19hLXpBLVpdXFx3Kig/PVxccypcXCgpLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGZ1bmN0aW9uOiAvXFxiW19hLXpdXFx3KlxcYig/PVxccypcXCgpL2ksXG4gICAgbnVtYmVyOiAvXFxiKD86MHhbMC05YS1mXSt8XFxkKyg/OlxcLlxcZCspPylcXGIvaSxcbiAgICBvcGVyYXRvcjogLy0tfFxcK1xcK3wmJj0/fFxcfFxcfD0/fDw8PT98Pj49P3xbPSFdfnxbLSsqLyUmfF4hPTw+XT0/fFxcLnxbOj9dLyxcbiAgICBwdW5jdHVhdGlvbjogL1soKXt9XFxbXFxdOyxdL1xuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInBzbCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJncmVlZHkiLCJzdHJpbmciLCJpbnNpZGUiLCJzeW1ib2wiLCJhbGlhcyIsImtleXdvcmQiLCJjb25zdGFudCIsImJvb2xlYW4iLCJ2YXJpYWJsZSIsImJ1aWx0aW4iLCJsb29rYmVoaW5kIiwiZnVuY3Rpb24iLCJudW1iZXIiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/psl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/pug.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/pug.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = pug;\npug.displayName = \"pug\";\npug.aliases = [];\nfunction pug(Prism) {\n    ;\n    (function(Prism) {\n        // TODO:\n        // - Add CSS highlighting inside <style> tags\n        // - Add support for multi-line code blocks\n        // - Add support for interpolation #{} and !{}\n        // - Add support for tag interpolation #[]\n        // - Add explicit support for plain text using |\n        // - Add support for markup embedded in plain text\n        Prism.languages.pug = {\n            // Multiline stuff should appear before the rest\n            // This handles both single-line and multi-line comments\n            comment: {\n                pattern: /(^([\\t ]*))\\/\\/.*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)*/m,\n                lookbehind: true\n            },\n            // All the tag-related part is in lookbehind\n            // so that it can be highlighted by the \"tag\" pattern\n            \"multiline-script\": {\n                pattern: /(^([\\t ]*)script\\b.*\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n                lookbehind: true,\n                inside: Prism.languages.javascript\n            },\n            // See at the end of the file for known filters\n            filter: {\n                pattern: /(^([\\t ]*)):.+(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n                lookbehind: true,\n                inside: {\n                    \"filter-name\": {\n                        pattern: /^:[\\w-]+/,\n                        alias: \"variable\"\n                    },\n                    text: /\\S[\\s\\S]*/\n                }\n            },\n            \"multiline-plain-text\": {\n                pattern: /(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n                lookbehind: true\n            },\n            markup: {\n                pattern: /(^[\\t ]*)<.+/m,\n                lookbehind: true,\n                inside: Prism.languages.markup\n            },\n            doctype: {\n                pattern: /((?:^|\\n)[\\t ]*)doctype(?: .+)?/,\n                lookbehind: true\n            },\n            // This handle all conditional and loop keywords\n            \"flow-control\": {\n                pattern: /(^[\\t ]*)(?:case|default|each|else|if|unless|when|while)\\b(?: .+)?/m,\n                lookbehind: true,\n                inside: {\n                    each: {\n                        pattern: /^each .+? in\\b/,\n                        inside: {\n                            keyword: /\\b(?:each|in)\\b/,\n                            punctuation: /,/\n                        }\n                    },\n                    branch: {\n                        pattern: /^(?:case|default|else|if|unless|when|while)\\b/,\n                        alias: \"keyword\"\n                    },\n                    rest: Prism.languages.javascript\n                }\n            },\n            keyword: {\n                pattern: /(^[\\t ]*)(?:append|block|extends|include|prepend)\\b.+/m,\n                lookbehind: true\n            },\n            mixin: [\n                // Declaration\n                {\n                    pattern: /(^[\\t ]*)mixin .+/m,\n                    lookbehind: true,\n                    inside: {\n                        keyword: /^mixin/,\n                        function: /\\w+(?=\\s*\\(|\\s*$)/,\n                        punctuation: /[(),.]/\n                    }\n                },\n                {\n                    pattern: /(^[\\t ]*)\\+.+/m,\n                    lookbehind: true,\n                    inside: {\n                        name: {\n                            pattern: /^\\+\\w+/,\n                            alias: \"function\"\n                        },\n                        rest: Prism.languages.javascript\n                    }\n                }\n            ],\n            script: {\n                pattern: /(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]).+/m,\n                lookbehind: true,\n                inside: Prism.languages.javascript\n            },\n            \"plain-text\": {\n                pattern: /(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]).+/m,\n                lookbehind: true\n            },\n            tag: {\n                pattern: /(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\n                lookbehind: true,\n                inside: {\n                    attributes: [\n                        {\n                            pattern: /&[^(]+\\([^)]+\\)/,\n                            inside: Prism.languages.javascript\n                        },\n                        {\n                            pattern: /\\([^)]+\\)/,\n                            inside: {\n                                \"attr-value\": {\n                                    pattern: /(=\\s*(?!\\s))(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,\n                                    lookbehind: true,\n                                    inside: Prism.languages.javascript\n                                },\n                                \"attr-name\": /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\n                                punctuation: /[!=(),]+/\n                            }\n                        }\n                    ],\n                    punctuation: /:/,\n                    \"attr-id\": /#[\\w\\-]+/,\n                    \"attr-class\": /\\.[\\w\\-]+/\n                }\n            },\n            code: [\n                {\n                    pattern: /(^[\\t ]*(?:-|!?=)).+/m,\n                    lookbehind: true,\n                    inside: Prism.languages.javascript\n                }\n            ],\n            punctuation: /[.\\-!=|]+/\n        };\n        var filter_pattern = /(^([\\t ]*)):<filter_name>(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/.source // Non exhaustive list of available filters and associated languages\n        ;\n        var filters = [\n            {\n                filter: \"atpl\",\n                language: \"twig\"\n            },\n            {\n                filter: \"coffee\",\n                language: \"coffeescript\"\n            },\n            \"ejs\",\n            \"handlebars\",\n            \"less\",\n            \"livescript\",\n            \"markdown\",\n            {\n                filter: \"sass\",\n                language: \"scss\"\n            },\n            \"stylus\"\n        ];\n        var all_filters = {};\n        for(var i = 0, l = filters.length; i < l; i++){\n            var filter = filters[i];\n            filter = typeof filter === \"string\" ? {\n                filter: filter,\n                language: filter\n            } : filter;\n            if (Prism.languages[filter.language]) {\n                all_filters[\"filter-\" + filter.filter] = {\n                    pattern: RegExp(filter_pattern.replace(\"<filter_name>\", function() {\n                        return filter.filter;\n                    }), \"m\"),\n                    lookbehind: true,\n                    inside: {\n                        \"filter-name\": {\n                            pattern: /^:[\\w-]+/,\n                            alias: \"variable\"\n                        },\n                        text: {\n                            pattern: /\\S[\\s\\S]*/,\n                            alias: [\n                                filter.language,\n                                \"language-\" + filter.language\n                            ],\n                            inside: Prism.languages[filter.language]\n                        }\n                    }\n                };\n            }\n        }\n        Prism.languages.insertBefore(\"pug\", \"filter\", all_filters);\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/pug.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/puppet.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/puppet.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = puppet;\npuppet.displayName = \"puppet\";\npuppet.aliases = [];\nfunction puppet(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.puppet = {\n            heredoc: [\n                // Matches the content of a quoted heredoc string (subject to interpolation)\n                {\n                    pattern: /(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\n                    lookbehind: true,\n                    alias: \"string\",\n                    inside: {\n                        // Matches the end tag\n                        punctuation: /(?=\\S).*\\S(?= *$)/ // See interpolation below\n                    }\n                },\n                {\n                    pattern: /(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\n                    lookbehind: true,\n                    greedy: true,\n                    alias: \"string\",\n                    inside: {\n                        // Matches the end tag\n                        punctuation: /(?=\\S).*\\S(?= *$)/\n                    }\n                },\n                {\n                    pattern: /@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,\n                    alias: \"string\",\n                    inside: {\n                        punctuation: {\n                            pattern: /(\\().+?(?=\\))/,\n                            lookbehind: true\n                        }\n                    }\n                }\n            ],\n            \"multiline-comment\": {\n                pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n                lookbehind: true,\n                greedy: true,\n                alias: \"comment\"\n            },\n            regex: {\n                // Must be prefixed with the keyword \"node\" or a non-word char\n                pattern: /((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    // Extended regexes must have the x flag. They can contain single-line comments.\n                    \"extended-regex\": {\n                        pattern: /^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,\n                        inside: {\n                            comment: /#.*/\n                        }\n                    }\n                }\n            },\n            comment: {\n                pattern: /(^|[^\\\\])#.*/,\n                lookbehind: true,\n                greedy: true\n            },\n            string: {\n                // Allow for one nested level of double quotes inside interpolation\n                pattern: /([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|\\$(?!\\{)|(?!\\1)[^\\\\$]|\\\\[\\s\\S])*\\1/,\n                greedy: true,\n                inside: {\n                    \"double-quoted\": {\n                        pattern: /^\"[\\s\\S]*\"$/,\n                        inside: {\n                        }\n                    }\n                }\n            },\n            variable: {\n                pattern: /\\$(?:::)?\\w+(?:::\\w+)*/,\n                inside: {\n                    punctuation: /::/\n                }\n            },\n            \"attr-name\": /(?:\\b\\w+|\\*)(?=\\s*=>)/,\n            function: [\n                {\n                    pattern: /(\\.)(?!\\d)\\w+/,\n                    lookbehind: true\n                },\n                /\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/\n            ],\n            number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,\n            boolean: /\\b(?:false|true)\\b/,\n            // Includes words reserved for future use\n            keyword: /\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,\n            datatype: {\n                pattern: /\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,\n                alias: \"symbol\"\n            },\n            operator: /=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,\n            punctuation: /[\\[\\]{}().,;]|:+/\n        };\n        var interpolation = [\n            {\n                // Allow for one nested level of braces inside interpolation\n                pattern: /(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,\n                lookbehind: true,\n                inside: {\n                    \"short-variable\": {\n                        // Negative look-ahead prevent wrong highlighting of functions\n                        pattern: /(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,\n                        lookbehind: true,\n                        alias: \"variable\",\n                        inside: {\n                            punctuation: /::/\n                        }\n                    },\n                    delimiter: {\n                        pattern: /^\\$/,\n                        alias: \"variable\"\n                    },\n                    rest: Prism.languages.puppet\n                }\n            },\n            {\n                pattern: /(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,\n                lookbehind: true,\n                alias: \"variable\",\n                inside: {\n                    punctuation: /::/\n                }\n            }\n        ];\n        Prism.languages.puppet[\"heredoc\"][0].inside.interpolation = interpolation;\n        Prism.languages.puppet[\"string\"].inside[\"double-quoted\"].inside.interpolation = interpolation;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/puppet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/pure.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/pure.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = pure;\npure.displayName = \"pure\";\npure.aliases = [];\nfunction pure(Prism) {\n    ;\n    (function(Prism) {\n        // https://agraef.github.io/pure-docs/pure.html#lexical-matters\n        Prism.languages.pure = {\n            comment: [\n                {\n                    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n                    lookbehind: true\n                },\n                {\n                    pattern: /(^|[^\\\\:])\\/\\/.*/,\n                    lookbehind: true\n                },\n                /#!.+/\n            ],\n            \"inline-lang\": {\n                pattern: /%<[\\s\\S]+?%>/,\n                greedy: true,\n                inside: {\n                    lang: {\n                        pattern: /(^%< *)-\\*-.+?-\\*-/,\n                        lookbehind: true,\n                        alias: \"comment\"\n                    },\n                    delimiter: {\n                        pattern: /^%<.*|%>$/,\n                        alias: \"punctuation\"\n                    }\n                }\n            },\n            string: {\n                pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n                greedy: true\n            },\n            number: {\n                // The look-behind prevents wrong highlighting of the .. operator\n                pattern: /((?:\\.\\.)?)(?:\\b(?:inf|nan)\\b|\\b0x[\\da-f]+|(?:\\b(?:0b)?\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?L?)/i,\n                lookbehind: true\n            },\n            keyword: /\\b(?:NULL|ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\\b/,\n            function: /\\b(?:abs|add_(?:addr|constdef|(?:fundef|interface|macdef|typedef)(?:_at)?|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_c?string(?:_pointer)?|byte_(?:matrix|pointer)|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|sentry|short|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\\b/,\n            special: {\n                pattern: /\\b__[a-z]+__\\b/i,\n                alias: \"builtin\"\n            },\n            // Any combination of operator chars can be an operator\n            // eslint-disable-next-line no-misleading-character-class\n            operator: /(?:[!\"#$%&'*+,\\-.\\/:<=>?@\\\\^`|~\\u00a1-\\u00bf\\u00d7-\\u00f7\\u20d0-\\u2bff]|\\b_+\\b)+|\\b(?:and|div|mod|not|or)\\b/,\n            // FIXME: How can we prevent | and , to be highlighted as operator when they are used alone?\n            punctuation: /[(){}\\[\\];,|]/\n        };\n        var inlineLanguages = [\n            \"c\",\n            {\n                lang: \"c++\",\n                alias: \"cpp\"\n            },\n            \"fortran\"\n        ];\n        var inlineLanguageRe = /%< *-\\*- *<lang>\\d* *-\\*-[\\s\\S]+?%>/.source;\n        inlineLanguages.forEach(function(lang) {\n            var alias = lang;\n            if (typeof lang !== \"string\") {\n                alias = lang.alias;\n                lang = lang.lang;\n            }\n            if (Prism.languages[alias]) {\n                var o = {};\n                o[\"inline-lang-\" + alias] = {\n                    pattern: RegExp(inlineLanguageRe.replace(\"<lang>\", lang.replace(/([.+*?\\/\\\\(){}\\[\\]])/g, \"\\\\$1\")), \"i\"),\n                    inside: Prism.util.clone(Prism.languages.pure[\"inline-lang\"].inside)\n                };\n                o[\"inline-lang-\" + alias].inside.rest = Prism.util.clone(Prism.languages[alias]);\n                Prism.languages.insertBefore(\"pure\", \"inline-lang\", o);\n            }\n        }) // C is the default inline language\n        ;\n        if (Prism.languages.c) {\n            Prism.languages.pure[\"inline-lang\"].inside.rest = Prism.util.clone(Prism.languages.c);\n        }\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/pure.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/purebasic.js":
/*!**************************************************!*\
  !*** ./node_modules/refractor/lang/purebasic.js ***!
  \**************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = purebasic;\npurebasic.displayName = \"purebasic\";\npurebasic.aliases = [];\nfunction purebasic(Prism) {\n    /*\nOriginal Code by Bas Groothedde\n!!MANY THANKS!! I never would have made this, regex and me will never be best friends ;)\n==> https://codepen.io/ImagineProgramming/details/JYydBy/\nslightly changed to pass all tests\n*/ // PureBasic support, steal stuff from ansi-c\n    Prism.languages.purebasic = Prism.languages.extend(\"clike\", {\n        comment: /;.*/,\n        keyword: /\\b(?:align|and|as|break|calldebugger|case|compilercase|compilerdefault|compilerelse|compilerelseif|compilerendif|compilerendselect|compilererror|compilerif|compilerselect|continue|data|datasection|debug|debuglevel|declare|declarec|declarecdll|declaredll|declaremodule|default|define|dim|disableasm|disabledebugger|disableexplicit|else|elseif|enableasm|enabledebugger|enableexplicit|end|enddatasection|enddeclaremodule|endenumeration|endif|endimport|endinterface|endmacro|endmodule|endprocedure|endselect|endstructure|endstructureunion|endwith|enumeration|extends|fakereturn|for|foreach|forever|global|gosub|goto|if|import|importc|includebinary|includefile|includepath|interface|macro|module|newlist|newmap|next|not|or|procedure|procedurec|procedurecdll|proceduredll|procedurereturn|protected|prototype|prototypec|read|redim|repeat|restore|return|runtime|select|shared|static|step|structure|structureunion|swap|threaded|to|until|wend|while|with|xincludefile|xor)\\b/i,\n        function: /\\b\\w+(?:\\.\\w+)?\\s*(?=\\()/,\n        number: /(?:\\$[\\da-f]+|\\b-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+-]?\\d+)?)\\b/i,\n        operator: /(?:@\\*?|\\?|\\*)\\w+|-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|?\\||[~^%?*/@]/\n    });\n    Prism.languages.insertBefore(\"purebasic\", \"keyword\", {\n        tag: /#\\w+\\$?/,\n        asm: {\n            pattern: /(^[\\t ]*)!.*/m,\n            lookbehind: true,\n            alias: \"tag\",\n            inside: {\n                comment: /;.*/,\n                string: {\n                    pattern: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n                    greedy: true\n                },\n                // Anonymous label references, i.e.: jmp @b\n                \"label-reference-anonymous\": {\n                    pattern: /(!\\s*j[a-z]+\\s+)@[fb]/i,\n                    lookbehind: true,\n                    alias: \"fasm-label\"\n                },\n                // Named label reference, i.e.: jne label1\n                \"label-reference-addressed\": {\n                    pattern: /(!\\s*j[a-z]+\\s+)[A-Z._?$@][\\w.?$@~#]*/i,\n                    lookbehind: true,\n                    alias: \"fasm-label\"\n                },\n                keyword: [\n                    /\\b(?:extern|global)\\b[^;\\r\\n]*/i,\n                    /\\b(?:CPU|DEFAULT|FLOAT)\\b.*/\n                ],\n                function: {\n                    pattern: /^([\\t ]*!\\s*)[\\da-z]+(?=\\s|$)/im,\n                    lookbehind: true\n                },\n                \"function-inline\": {\n                    pattern: /(:\\s*)[\\da-z]+(?=\\s)/i,\n                    lookbehind: true,\n                    alias: \"function\"\n                },\n                label: {\n                    pattern: /^([\\t ]*!\\s*)[A-Za-z._?$@][\\w.?$@~#]*(?=:)/m,\n                    lookbehind: true,\n                    alias: \"fasm-label\"\n                },\n                register: /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s|mm\\d+)\\b/i,\n                number: /(?:\\b|-|(?=\\$))(?:0[hx](?:[\\da-f]*\\.)?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n                operator: /[\\[\\]*+\\-/%<>=&|$!,.:]/\n            }\n        }\n    });\n    delete Prism.languages.purebasic[\"class-name\"];\n    delete Prism.languages.purebasic[\"boolean\"];\n    Prism.languages.pbfasm = Prism.languages[\"purebasic\"];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcHVyZWJhc2ljLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLFVBQVVDLFdBQVcsR0FBRztBQUN4QkQsVUFBVUUsT0FBTyxHQUFHLEVBQUU7QUFDdEIsU0FBU0YsVUFBVUcsS0FBSztJQUN0Qjs7Ozs7QUFLRixHQUNFLDZDQUE2QztJQUM3Q0EsTUFBTUMsU0FBUyxDQUFDSixTQUFTLEdBQUdHLE1BQU1DLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLFNBQVM7UUFDMURDLFNBQVM7UUFDVEMsU0FDRTtRQUNGQyxVQUFVO1FBQ1ZDLFFBQVE7UUFDUkMsVUFDRTtJQUNKO0lBQ0FQLE1BQU1DLFNBQVMsQ0FBQ08sWUFBWSxDQUFDLGFBQWEsV0FBVztRQUNuREMsS0FBSztRQUNMQyxLQUFLO1lBQ0hDLFNBQVM7WUFDVEMsWUFBWTtZQUNaQyxPQUFPO1lBQ1BDLFFBQVE7Z0JBQ05YLFNBQVM7Z0JBQ1RZLFFBQVE7b0JBQ05KLFNBQVM7b0JBQ1RLLFFBQVE7Z0JBQ1Y7Z0JBQ0EsMkNBQTJDO2dCQUMzQyw2QkFBNkI7b0JBQzNCTCxTQUFTO29CQUNUQyxZQUFZO29CQUNaQyxPQUFPO2dCQUNUO2dCQUNBLDBDQUEwQztnQkFDMUMsNkJBQTZCO29CQUMzQkYsU0FBUztvQkFDVEMsWUFBWTtvQkFDWkMsT0FBTztnQkFDVDtnQkFDQVQsU0FBUztvQkFDUDtvQkFDQTtpQkFDRDtnQkFDREMsVUFBVTtvQkFDUk0sU0FBUztvQkFDVEMsWUFBWTtnQkFDZDtnQkFDQSxtQkFBbUI7b0JBQ2pCRCxTQUFTO29CQUNUQyxZQUFZO29CQUNaQyxPQUFPO2dCQUNUO2dCQUNBSSxPQUFPO29CQUNMTixTQUFTO29CQUNUQyxZQUFZO29CQUNaQyxPQUFPO2dCQUNUO2dCQUNBSyxVQUNFO2dCQUNGWixRQUNFO2dCQUNGQyxVQUFVO1lBQ1o7UUFDRjtJQUNGO0lBQ0EsT0FBT1AsTUFBTUMsU0FBUyxDQUFDSixTQUFTLENBQUMsYUFBYTtJQUM5QyxPQUFPRyxNQUFNQyxTQUFTLENBQUNKLFNBQVMsQ0FBQyxVQUFVO0lBQzNDRyxNQUFNQyxTQUFTLENBQUNrQixNQUFNLEdBQUduQixNQUFNQyxTQUFTLENBQUMsWUFBWTtBQUN2RCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wdXJlYmFzaWMuanM/MjdkNCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBwdXJlYmFzaWNcbnB1cmViYXNpYy5kaXNwbGF5TmFtZSA9ICdwdXJlYmFzaWMnXG5wdXJlYmFzaWMuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBwdXJlYmFzaWMoUHJpc20pIHtcbiAgLypcbk9yaWdpbmFsIENvZGUgYnkgQmFzIEdyb290aGVkZGVcbiEhTUFOWSBUSEFOS1MhISBJIG5ldmVyIHdvdWxkIGhhdmUgbWFkZSB0aGlzLCByZWdleCBhbmQgbWUgd2lsbCBuZXZlciBiZSBiZXN0IGZyaWVuZHMgOylcbj09PiBodHRwczovL2NvZGVwZW4uaW8vSW1hZ2luZVByb2dyYW1taW5nL2RldGFpbHMvSll5ZEJ5L1xuc2xpZ2h0bHkgY2hhbmdlZCB0byBwYXNzIGFsbCB0ZXN0c1xuKi9cbiAgLy8gUHVyZUJhc2ljIHN1cHBvcnQsIHN0ZWFsIHN0dWZmIGZyb20gYW5zaS1jXG4gIFByaXNtLmxhbmd1YWdlcy5wdXJlYmFzaWMgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdjbGlrZScsIHtcbiAgICBjb21tZW50OiAvOy4qLyxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OmFsaWdufGFuZHxhc3xicmVha3xjYWxsZGVidWdnZXJ8Y2FzZXxjb21waWxlcmNhc2V8Y29tcGlsZXJkZWZhdWx0fGNvbXBpbGVyZWxzZXxjb21waWxlcmVsc2VpZnxjb21waWxlcmVuZGlmfGNvbXBpbGVyZW5kc2VsZWN0fGNvbXBpbGVyZXJyb3J8Y29tcGlsZXJpZnxjb21waWxlcnNlbGVjdHxjb250aW51ZXxkYXRhfGRhdGFzZWN0aW9ufGRlYnVnfGRlYnVnbGV2ZWx8ZGVjbGFyZXxkZWNsYXJlY3xkZWNsYXJlY2RsbHxkZWNsYXJlZGxsfGRlY2xhcmVtb2R1bGV8ZGVmYXVsdHxkZWZpbmV8ZGltfGRpc2FibGVhc218ZGlzYWJsZWRlYnVnZ2VyfGRpc2FibGVleHBsaWNpdHxlbHNlfGVsc2VpZnxlbmFibGVhc218ZW5hYmxlZGVidWdnZXJ8ZW5hYmxlZXhwbGljaXR8ZW5kfGVuZGRhdGFzZWN0aW9ufGVuZGRlY2xhcmVtb2R1bGV8ZW5kZW51bWVyYXRpb258ZW5kaWZ8ZW5kaW1wb3J0fGVuZGludGVyZmFjZXxlbmRtYWNyb3xlbmRtb2R1bGV8ZW5kcHJvY2VkdXJlfGVuZHNlbGVjdHxlbmRzdHJ1Y3R1cmV8ZW5kc3RydWN0dXJldW5pb258ZW5kd2l0aHxlbnVtZXJhdGlvbnxleHRlbmRzfGZha2VyZXR1cm58Zm9yfGZvcmVhY2h8Zm9yZXZlcnxnbG9iYWx8Z29zdWJ8Z290b3xpZnxpbXBvcnR8aW1wb3J0Y3xpbmNsdWRlYmluYXJ5fGluY2x1ZGVmaWxlfGluY2x1ZGVwYXRofGludGVyZmFjZXxtYWNyb3xtb2R1bGV8bmV3bGlzdHxuZXdtYXB8bmV4dHxub3R8b3J8cHJvY2VkdXJlfHByb2NlZHVyZWN8cHJvY2VkdXJlY2RsbHxwcm9jZWR1cmVkbGx8cHJvY2VkdXJlcmV0dXJufHByb3RlY3RlZHxwcm90b3R5cGV8cHJvdG90eXBlY3xyZWFkfHJlZGltfHJlcGVhdHxyZXN0b3JlfHJldHVybnxydW50aW1lfHNlbGVjdHxzaGFyZWR8c3RhdGljfHN0ZXB8c3RydWN0dXJlfHN0cnVjdHVyZXVuaW9ufHN3YXB8dGhyZWFkZWR8dG98dW50aWx8d2VuZHx3aGlsZXx3aXRofHhpbmNsdWRlZmlsZXx4b3IpXFxiL2ksXG4gICAgZnVuY3Rpb246IC9cXGJcXHcrKD86XFwuXFx3Kyk/XFxzKig/PVxcKCkvLFxuICAgIG51bWJlcjogLyg/OlxcJFtcXGRhLWZdK3xcXGItPyg/OlxcZCsoPzpcXC5cXGQrKT98XFwuXFxkKykoPzplWystXT9cXGQrKT8pXFxiL2ksXG4gICAgb3BlcmF0b3I6XG4gICAgICAvKD86QFxcKj98XFw/fFxcKilcXHcrfC1bPi1dP3xcXCtcXCs/fCE9P3w8PD89P3w+Pj89P3w9PT98JiY/fFxcfD9cXHx8W35eJT8qL0BdL1xuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdwdXJlYmFzaWMnLCAna2V5d29yZCcsIHtcbiAgICB0YWc6IC8jXFx3K1xcJD8vLFxuICAgIGFzbToge1xuICAgICAgcGF0dGVybjogLyheW1xcdCBdKikhLiovbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ3RhZycsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgY29tbWVudDogLzsuKi8sXG4gICAgICAgIHN0cmluZzoge1xuICAgICAgICAgIHBhdHRlcm46IC8oW1wiJ2BdKSg/OlxcXFwufCg/IVxcMSlbXlxcXFxcXHJcXG5dKSpcXDEvLFxuICAgICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICAvLyBBbm9ueW1vdXMgbGFiZWwgcmVmZXJlbmNlcywgaS5lLjogam1wIEBiXG4gICAgICAgICdsYWJlbC1yZWZlcmVuY2UtYW5vbnltb3VzJzoge1xuICAgICAgICAgIHBhdHRlcm46IC8oIVxccypqW2Etel0rXFxzKylAW2ZiXS9pLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgYWxpYXM6ICdmYXNtLWxhYmVsJ1xuICAgICAgICB9LFxuICAgICAgICAvLyBOYW1lZCBsYWJlbCByZWZlcmVuY2UsIGkuZS46IGpuZSBsYWJlbDFcbiAgICAgICAgJ2xhYmVsLXJlZmVyZW5jZS1hZGRyZXNzZWQnOiB7XG4gICAgICAgICAgcGF0dGVybjogLyghXFxzKmpbYS16XStcXHMrKVtBLVouXz8kQF1bXFx3Lj8kQH4jXSovaSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGFsaWFzOiAnZmFzbS1sYWJlbCdcbiAgICAgICAgfSxcbiAgICAgICAga2V5d29yZDogW1xuICAgICAgICAgIC9cXGIoPzpleHRlcm58Z2xvYmFsKVxcYlteO1xcclxcbl0qL2ksXG4gICAgICAgICAgL1xcYig/OkNQVXxERUZBVUxUfEZMT0FUKVxcYi4qL1xuICAgICAgICBdLFxuICAgICAgICBmdW5jdGlvbjoge1xuICAgICAgICAgIHBhdHRlcm46IC9eKFtcXHQgXSohXFxzKilbXFxkYS16XSsoPz1cXHN8JCkvaW0sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICAnZnVuY3Rpb24taW5saW5lJzoge1xuICAgICAgICAgIHBhdHRlcm46IC8oOlxccyopW1xcZGEtel0rKD89XFxzKS9pLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgYWxpYXM6ICdmdW5jdGlvbidcbiAgICAgICAgfSxcbiAgICAgICAgbGFiZWw6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXihbXFx0IF0qIVxccyopW0EtWmEtei5fPyRAXVtcXHcuPyRAfiNdKig/PTopL20sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBhbGlhczogJ2Zhc20tbGFiZWwnXG4gICAgICAgIH0sXG4gICAgICAgIHJlZ2lzdGVyOlxuICAgICAgICAgIC9cXGIoPzpzdFxcZHxbeHl6XW1tXFxkXFxkP3xbY2R0XXJcXGR8clxcZFxcZD9bYndkXT98W2VyXT9bYWJjZF14fFthYmNkXVtobF18W2VyXT8oPzpicHxkaXxzaXxzcCl8W2NkZWZnc11zfG1tXFxkKylcXGIvaSxcbiAgICAgICAgbnVtYmVyOlxuICAgICAgICAgIC8oPzpcXGJ8LXwoPz1cXCQpKSg/OjBbaHhdKD86W1xcZGEtZl0qXFwuKT9bXFxkYS1mXSsoPzpwWystXT9cXGQrKT98XFxkW1xcZGEtZl0rW2h4XXxcXCRcXGRbXFxkYS1mXSp8MFtvcV1bMC03XSt8WzAtN10rW29xXXwwW2J5XVswMV0rfFswMV0rW2J5XXwwW2R0XVxcZCt8KD86XFxkKyg/OlxcLlxcZCspP3xcXC5cXGQrKSg/OlxcLj9lWystXT9cXGQrKT9bZHRdPylcXGIvaSxcbiAgICAgICAgb3BlcmF0b3I6IC9bXFxbXFxdKitcXC0vJTw+PSZ8JCEsLjpdL1xuICAgICAgfVxuICAgIH1cbiAgfSlcbiAgZGVsZXRlIFByaXNtLmxhbmd1YWdlcy5wdXJlYmFzaWNbJ2NsYXNzLW5hbWUnXVxuICBkZWxldGUgUHJpc20ubGFuZ3VhZ2VzLnB1cmViYXNpY1snYm9vbGVhbiddXG4gIFByaXNtLmxhbmd1YWdlcy5wYmZhc20gPSBQcmlzbS5sYW5ndWFnZXNbJ3B1cmViYXNpYyddXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInB1cmViYXNpYyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwiY29tbWVudCIsImtleXdvcmQiLCJmdW5jdGlvbiIsIm51bWJlciIsIm9wZXJhdG9yIiwiaW5zZXJ0QmVmb3JlIiwidGFnIiwiYXNtIiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJhbGlhcyIsImluc2lkZSIsInN0cmluZyIsImdyZWVkeSIsImxhYmVsIiwicmVnaXN0ZXIiLCJwYmZhc20iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/purebasic.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/purescript.js":
/*!***************************************************!*\
  !*** ./node_modules/refractor/lang/purescript.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorHaskell = __webpack_require__(/*! ./haskell.js */ \"(ssr)/./node_modules/refractor/lang/haskell.js\");\nmodule.exports = purescript;\npurescript.displayName = \"purescript\";\npurescript.aliases = [\n    \"purs\"\n];\nfunction purescript(Prism) {\n    Prism.register(refractorHaskell);\n    Prism.languages.purescript = Prism.languages.extend(\"haskell\", {\n        keyword: /\\b(?:ado|case|class|data|derive|do|else|forall|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b|∀/,\n        \"import-statement\": {\n            // The imported or hidden names are not included in this import\n            // statement. This is because we want to highlight those exactly like\n            // we do for the names in the program.\n            pattern: /(^[\\t ]*)import\\s+[A-Z][\\w']*(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+[A-Z][\\w']*(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n            lookbehind: true,\n            inside: {\n                keyword: /\\b(?:as|hiding|import)\\b/,\n                punctuation: /\\./\n            }\n        },\n        // These are builtin functions only. Constructors are highlighted later as a constant.\n        builtin: /\\b(?:absurd|add|ap|append|apply|between|bind|bottom|clamp|compare|comparing|compose|conj|const|degree|discard|disj|div|eq|flap|flip|gcd|identity|ifM|join|lcm|liftA1|liftM1|map|max|mempty|min|mod|mul|negate|not|notEq|one|otherwise|recip|show|sub|top|unit|unless|unlessM|void|when|whenM|zero)\\b/,\n        operator: [\n            // Infix operators\n            Prism.languages.haskell.operator[0],\n            Prism.languages.haskell.operator[2],\n            // This regex is equivalent to /(?=[\\x80-\\uFFFF])[\\p{gc=Math_Symbol}\\p{gc=Currency_Symbol}\\p{Modifier_Symbol}\\p{Other_Symbol}]/u\n            // See https://github.com/PrismJS/prism/issues/3006 for more details.\n            /[\\xa2-\\xa6\\xa8\\xa9\\xac\\xae-\\xb1\\xb4\\xb8\\xd7\\xf7\\u02c2-\\u02c5\\u02d2-\\u02df\\u02e5-\\u02eb\\u02ed\\u02ef-\\u02ff\\u0375\\u0384\\u0385\\u03f6\\u0482\\u058d-\\u058f\\u0606-\\u0608\\u060b\\u060e\\u060f\\u06de\\u06e9\\u06fd\\u06fe\\u07f6\\u07fe\\u07ff\\u09f2\\u09f3\\u09fa\\u09fb\\u0af1\\u0b70\\u0bf3-\\u0bfa\\u0c7f\\u0d4f\\u0d79\\u0e3f\\u0f01-\\u0f03\\u0f13\\u0f15-\\u0f17\\u0f1a-\\u0f1f\\u0f34\\u0f36\\u0f38\\u0fbe-\\u0fc5\\u0fc7-\\u0fcc\\u0fce\\u0fcf\\u0fd5-\\u0fd8\\u109e\\u109f\\u1390-\\u1399\\u166d\\u17db\\u1940\\u19de-\\u19ff\\u1b61-\\u1b6a\\u1b74-\\u1b7c\\u1fbd\\u1fbf-\\u1fc1\\u1fcd-\\u1fcf\\u1fdd-\\u1fdf\\u1fed-\\u1fef\\u1ffd\\u1ffe\\u2044\\u2052\\u207a-\\u207c\\u208a-\\u208c\\u20a0-\\u20bf\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211e-\\u2123\\u2125\\u2127\\u2129\\u212e\\u213a\\u213b\\u2140-\\u2144\\u214a-\\u214d\\u214f\\u218a\\u218b\\u2190-\\u2307\\u230c-\\u2328\\u232b-\\u2426\\u2440-\\u244a\\u249c-\\u24e9\\u2500-\\u2767\\u2794-\\u27c4\\u27c7-\\u27e5\\u27f0-\\u2982\\u2999-\\u29d7\\u29dc-\\u29fb\\u29fe-\\u2b73\\u2b76-\\u2b95\\u2b97-\\u2bff\\u2ce5-\\u2cea\\u2e50\\u2e51\\u2e80-\\u2e99\\u2e9b-\\u2ef3\\u2f00-\\u2fd5\\u2ff0-\\u2ffb\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303e\\u303f\\u309b\\u309c\\u3190\\u3191\\u3196-\\u319f\\u31c0-\\u31e3\\u3200-\\u321e\\u322a-\\u3247\\u3250\\u3260-\\u327f\\u328a-\\u32b0\\u32c0-\\u33ff\\u4dc0-\\u4dff\\ua490-\\ua4c6\\ua700-\\ua716\\ua720\\ua721\\ua789\\ua78a\\ua828-\\ua82b\\ua836-\\ua839\\uaa77-\\uaa79\\uab5b\\uab6a\\uab6b\\ufb29\\ufbb2-\\ufbc1\\ufdfc\\ufdfd\\ufe62\\ufe64-\\ufe66\\ufe69\\uff04\\uff0b\\uff1c-\\uff1e\\uff3e\\uff40\\uff5c\\uff5e\\uffe0-\\uffe6\\uffe8-\\uffee\\ufffc\\ufffd]/\n        ]\n    });\n    Prism.languages.purs = Prism.languages.purescript;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcHVyZXNjcmlwdC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLElBQUlBLG1CQUFtQkMsbUJBQU9BLENBQUM7QUFDL0JDLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLFdBQVdDLFdBQVcsR0FBRztBQUN6QkQsV0FBV0UsT0FBTyxHQUFHO0lBQUM7Q0FBTztBQUM3QixTQUFTRixXQUFXRyxLQUFLO0lBQ3ZCQSxNQUFNQyxRQUFRLENBQUNSO0lBQ2ZPLE1BQU1FLFNBQVMsQ0FBQ0wsVUFBVSxHQUFHRyxNQUFNRSxTQUFTLENBQUNDLE1BQU0sQ0FBQyxXQUFXO1FBQzdEQyxTQUNFO1FBQ0Ysb0JBQW9CO1lBQ2xCLCtEQUErRDtZQUMvRCxxRUFBcUU7WUFDckUsc0NBQXNDO1lBQ3RDQyxTQUNFO1lBQ0ZDLFlBQVk7WUFDWkMsUUFBUTtnQkFDTkgsU0FBUztnQkFDVEksYUFBYTtZQUNmO1FBQ0Y7UUFDQSxzRkFBc0Y7UUFDdEZDLFNBQ0U7UUFDRkMsVUFBVTtZQUNSLGtCQUFrQjtZQUNsQlYsTUFBTUUsU0FBUyxDQUFDUyxPQUFPLENBQUNELFFBQVEsQ0FBQyxFQUFFO1lBQ25DVixNQUFNRSxTQUFTLENBQUNTLE9BQU8sQ0FBQ0QsUUFBUSxDQUFDLEVBQUU7WUFDbkMsZ0lBQWdJO1lBQ2hJLHFFQUFxRTtZQUNyRTtTQUNEO0lBQ0g7SUFDQVYsTUFBTUUsU0FBUyxDQUFDVSxJQUFJLEdBQUdaLE1BQU1FLFNBQVMsQ0FBQ0wsVUFBVTtBQUNuRCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wdXJlc2NyaXB0LmpzPzA2YzkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG52YXIgcmVmcmFjdG9ySGFza2VsbCA9IHJlcXVpcmUoJy4vaGFza2VsbC5qcycpXG5tb2R1bGUuZXhwb3J0cyA9IHB1cmVzY3JpcHRcbnB1cmVzY3JpcHQuZGlzcGxheU5hbWUgPSAncHVyZXNjcmlwdCdcbnB1cmVzY3JpcHQuYWxpYXNlcyA9IFsncHVycyddXG5mdW5jdGlvbiBwdXJlc2NyaXB0KFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3Rvckhhc2tlbGwpXG4gIFByaXNtLmxhbmd1YWdlcy5wdXJlc2NyaXB0ID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnaGFza2VsbCcsIHtcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OmFkb3xjYXNlfGNsYXNzfGRhdGF8ZGVyaXZlfGRvfGVsc2V8Zm9yYWxsfGlmfGlufGluZml4bHxpbmZpeHJ8aW5zdGFuY2V8bGV0fG1vZHVsZXxuZXd0eXBlfG9mfHByaW1pdGl2ZXx0aGVufHR5cGV8d2hlcmUpXFxifOKIgC8sXG4gICAgJ2ltcG9ydC1zdGF0ZW1lbnQnOiB7XG4gICAgICAvLyBUaGUgaW1wb3J0ZWQgb3IgaGlkZGVuIG5hbWVzIGFyZSBub3QgaW5jbHVkZWQgaW4gdGhpcyBpbXBvcnRcbiAgICAgIC8vIHN0YXRlbWVudC4gVGhpcyBpcyBiZWNhdXNlIHdlIHdhbnQgdG8gaGlnaGxpZ2h0IHRob3NlIGV4YWN0bHkgbGlrZVxuICAgICAgLy8gd2UgZG8gZm9yIHRoZSBuYW1lcyBpbiB0aGUgcHJvZ3JhbS5cbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXltcXHQgXSopaW1wb3J0XFxzK1tBLVpdW1xcdyddKig/OlxcLltBLVpdW1xcdyddKikqKD86XFxzK2FzXFxzK1tBLVpdW1xcdyddKig/OlxcLltBLVpdW1xcdyddKikqKT8oPzpcXHMraGlkaW5nXFxiKT8vbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAga2V5d29yZDogL1xcYig/OmFzfGhpZGluZ3xpbXBvcnQpXFxiLyxcbiAgICAgICAgcHVuY3R1YXRpb246IC9cXC4vXG4gICAgICB9XG4gICAgfSxcbiAgICAvLyBUaGVzZSBhcmUgYnVpbHRpbiBmdW5jdGlvbnMgb25seS4gQ29uc3RydWN0b3JzIGFyZSBoaWdobGlnaHRlZCBsYXRlciBhcyBhIGNvbnN0YW50LlxuICAgIGJ1aWx0aW46XG4gICAgICAvXFxiKD86YWJzdXJkfGFkZHxhcHxhcHBlbmR8YXBwbHl8YmV0d2VlbnxiaW5kfGJvdHRvbXxjbGFtcHxjb21wYXJlfGNvbXBhcmluZ3xjb21wb3NlfGNvbmp8Y29uc3R8ZGVncmVlfGRpc2NhcmR8ZGlzanxkaXZ8ZXF8ZmxhcHxmbGlwfGdjZHxpZGVudGl0eXxpZk18am9pbnxsY218bGlmdEExfGxpZnRNMXxtYXB8bWF4fG1lbXB0eXxtaW58bW9kfG11bHxuZWdhdGV8bm90fG5vdEVxfG9uZXxvdGhlcndpc2V8cmVjaXB8c2hvd3xzdWJ8dG9wfHVuaXR8dW5sZXNzfHVubGVzc018dm9pZHx3aGVufHdoZW5NfHplcm8pXFxiLyxcbiAgICBvcGVyYXRvcjogW1xuICAgICAgLy8gSW5maXggb3BlcmF0b3JzXG4gICAgICBQcmlzbS5sYW5ndWFnZXMuaGFza2VsbC5vcGVyYXRvclswXSwgLy8gQVNDSUkgb3BlcmF0b3JzXG4gICAgICBQcmlzbS5sYW5ndWFnZXMuaGFza2VsbC5vcGVyYXRvclsyXSwgLy8gQWxsIFVURjE2IFVuaWNvZGUgb3BlcmF0b3Igc3ltYm9sc1xuICAgICAgLy8gVGhpcyByZWdleCBpcyBlcXVpdmFsZW50IHRvIC8oPz1bXFx4ODAtXFx1RkZGRl0pW1xccHtnYz1NYXRoX1N5bWJvbH1cXHB7Z2M9Q3VycmVuY3lfU3ltYm9sfVxccHtNb2RpZmllcl9TeW1ib2x9XFxwe090aGVyX1N5bWJvbH1dL3VcbiAgICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vUHJpc21KUy9wcmlzbS9pc3N1ZXMvMzAwNiBmb3IgbW9yZSBkZXRhaWxzLlxuICAgICAgL1tcXHhhMi1cXHhhNlxceGE4XFx4YTlcXHhhY1xceGFlLVxceGIxXFx4YjRcXHhiOFxceGQ3XFx4ZjdcXHUwMmMyLVxcdTAyYzVcXHUwMmQyLVxcdTAyZGZcXHUwMmU1LVxcdTAyZWJcXHUwMmVkXFx1MDJlZi1cXHUwMmZmXFx1MDM3NVxcdTAzODRcXHUwMzg1XFx1MDNmNlxcdTA0ODJcXHUwNThkLVxcdTA1OGZcXHUwNjA2LVxcdTA2MDhcXHUwNjBiXFx1MDYwZVxcdTA2MGZcXHUwNmRlXFx1MDZlOVxcdTA2ZmRcXHUwNmZlXFx1MDdmNlxcdTA3ZmVcXHUwN2ZmXFx1MDlmMlxcdTA5ZjNcXHUwOWZhXFx1MDlmYlxcdTBhZjFcXHUwYjcwXFx1MGJmMy1cXHUwYmZhXFx1MGM3ZlxcdTBkNGZcXHUwZDc5XFx1MGUzZlxcdTBmMDEtXFx1MGYwM1xcdTBmMTNcXHUwZjE1LVxcdTBmMTdcXHUwZjFhLVxcdTBmMWZcXHUwZjM0XFx1MGYzNlxcdTBmMzhcXHUwZmJlLVxcdTBmYzVcXHUwZmM3LVxcdTBmY2NcXHUwZmNlXFx1MGZjZlxcdTBmZDUtXFx1MGZkOFxcdTEwOWVcXHUxMDlmXFx1MTM5MC1cXHUxMzk5XFx1MTY2ZFxcdTE3ZGJcXHUxOTQwXFx1MTlkZS1cXHUxOWZmXFx1MWI2MS1cXHUxYjZhXFx1MWI3NC1cXHUxYjdjXFx1MWZiZFxcdTFmYmYtXFx1MWZjMVxcdTFmY2QtXFx1MWZjZlxcdTFmZGQtXFx1MWZkZlxcdTFmZWQtXFx1MWZlZlxcdTFmZmRcXHUxZmZlXFx1MjA0NFxcdTIwNTJcXHUyMDdhLVxcdTIwN2NcXHUyMDhhLVxcdTIwOGNcXHUyMGEwLVxcdTIwYmZcXHUyMTAwXFx1MjEwMVxcdTIxMDMtXFx1MjEwNlxcdTIxMDhcXHUyMTA5XFx1MjExNFxcdTIxMTYtXFx1MjExOFxcdTIxMWUtXFx1MjEyM1xcdTIxMjVcXHUyMTI3XFx1MjEyOVxcdTIxMmVcXHUyMTNhXFx1MjEzYlxcdTIxNDAtXFx1MjE0NFxcdTIxNGEtXFx1MjE0ZFxcdTIxNGZcXHUyMThhXFx1MjE4YlxcdTIxOTAtXFx1MjMwN1xcdTIzMGMtXFx1MjMyOFxcdTIzMmItXFx1MjQyNlxcdTI0NDAtXFx1MjQ0YVxcdTI0OWMtXFx1MjRlOVxcdTI1MDAtXFx1Mjc2N1xcdTI3OTQtXFx1MjdjNFxcdTI3YzctXFx1MjdlNVxcdTI3ZjAtXFx1Mjk4MlxcdTI5OTktXFx1MjlkN1xcdTI5ZGMtXFx1MjlmYlxcdTI5ZmUtXFx1MmI3M1xcdTJiNzYtXFx1MmI5NVxcdTJiOTctXFx1MmJmZlxcdTJjZTUtXFx1MmNlYVxcdTJlNTBcXHUyZTUxXFx1MmU4MC1cXHUyZTk5XFx1MmU5Yi1cXHUyZWYzXFx1MmYwMC1cXHUyZmQ1XFx1MmZmMC1cXHUyZmZiXFx1MzAwNFxcdTMwMTJcXHUzMDEzXFx1MzAyMFxcdTMwMzZcXHUzMDM3XFx1MzAzZVxcdTMwM2ZcXHUzMDliXFx1MzA5Y1xcdTMxOTBcXHUzMTkxXFx1MzE5Ni1cXHUzMTlmXFx1MzFjMC1cXHUzMWUzXFx1MzIwMC1cXHUzMjFlXFx1MzIyYS1cXHUzMjQ3XFx1MzI1MFxcdTMyNjAtXFx1MzI3ZlxcdTMyOGEtXFx1MzJiMFxcdTMyYzAtXFx1MzNmZlxcdTRkYzAtXFx1NGRmZlxcdWE0OTAtXFx1YTRjNlxcdWE3MDAtXFx1YTcxNlxcdWE3MjBcXHVhNzIxXFx1YTc4OVxcdWE3OGFcXHVhODI4LVxcdWE4MmJcXHVhODM2LVxcdWE4MzlcXHVhYTc3LVxcdWFhNzlcXHVhYjViXFx1YWI2YVxcdWFiNmJcXHVmYjI5XFx1ZmJiMi1cXHVmYmMxXFx1ZmRmY1xcdWZkZmRcXHVmZTYyXFx1ZmU2NC1cXHVmZTY2XFx1ZmU2OVxcdWZmMDRcXHVmZjBiXFx1ZmYxYy1cXHVmZjFlXFx1ZmYzZVxcdWZmNDBcXHVmZjVjXFx1ZmY1ZVxcdWZmZTAtXFx1ZmZlNlxcdWZmZTgtXFx1ZmZlZVxcdWZmZmNcXHVmZmZkXS9cbiAgICBdXG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5wdXJzID0gUHJpc20ubGFuZ3VhZ2VzLnB1cmVzY3JpcHRcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JIYXNrZWxsIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJwdXJlc2NyaXB0IiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImV4dGVuZCIsImtleXdvcmQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImluc2lkZSIsInB1bmN0dWF0aW9uIiwiYnVpbHRpbiIsIm9wZXJhdG9yIiwiaGFza2VsbCIsInB1cnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/purescript.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/python.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/python.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = python;\npython.displayName = \"python\";\npython.aliases = [\n    \"py\"\n];\nfunction python(Prism) {\n    Prism.languages.python = {\n        comment: {\n            pattern: /(^|[^\\\\])#.*/,\n            lookbehind: true,\n            greedy: true\n        },\n        \"string-interpolation\": {\n            pattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n            greedy: true,\n            inside: {\n                interpolation: {\n                    // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n                    pattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n                    lookbehind: true,\n                    inside: {\n                        \"format-spec\": {\n                            pattern: /(:)[^:(){}]+(?=\\}$)/,\n                            lookbehind: true\n                        },\n                        \"conversion-option\": {\n                            pattern: /![sra](?=[:}]$)/,\n                            alias: \"punctuation\"\n                        },\n                        rest: null\n                    }\n                },\n                string: /[\\s\\S]+/\n            }\n        },\n        \"triple-quoted-string\": {\n            pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n            greedy: true,\n            alias: \"string\"\n        },\n        string: {\n            pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n            greedy: true\n        },\n        function: {\n            pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n            lookbehind: true\n        },\n        \"class-name\": {\n            pattern: /(\\bclass\\s+)\\w+/i,\n            lookbehind: true\n        },\n        decorator: {\n            pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n            lookbehind: true,\n            alias: [\n                \"annotation\",\n                \"punctuation\"\n            ],\n            inside: {\n                punctuation: /\\./\n            }\n        },\n        keyword: /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n        builtin: /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n        boolean: /\\b(?:False|None|True)\\b/,\n        number: /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n        operator: /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n        punctuation: /[{}[\\];(),.:]/\n    };\n    Prism.languages.python[\"string-interpolation\"].inside[\"interpolation\"].inside.rest = Prism.languages.python;\n    Prism.languages.py = Prism.languages.python;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcHl0aG9uLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLE9BQU9DLFdBQVcsR0FBRztBQUNyQkQsT0FBT0UsT0FBTyxHQUFHO0lBQUM7Q0FBSztBQUN2QixTQUFTRixPQUFPRyxLQUFLO0lBQ25CQSxNQUFNQyxTQUFTLENBQUNKLE1BQU0sR0FBRztRQUN2QkssU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsUUFBUTtRQUNWO1FBQ0Esd0JBQXdCO1lBQ3RCRixTQUNFO1lBQ0ZFLFFBQVE7WUFDUkMsUUFBUTtnQkFDTkMsZUFBZTtvQkFDYixzRkFBc0Y7b0JBQ3RGSixTQUNFO29CQUNGQyxZQUFZO29CQUNaRSxRQUFRO3dCQUNOLGVBQWU7NEJBQ2JILFNBQVM7NEJBQ1RDLFlBQVk7d0JBQ2Q7d0JBQ0EscUJBQXFCOzRCQUNuQkQsU0FBUzs0QkFDVEssT0FBTzt3QkFDVDt3QkFDQUMsTUFBTTtvQkFDUjtnQkFDRjtnQkFDQUMsUUFBUTtZQUNWO1FBQ0Y7UUFDQSx3QkFBd0I7WUFDdEJQLFNBQVM7WUFDVEUsUUFBUTtZQUNSRyxPQUFPO1FBQ1Q7UUFDQUUsUUFBUTtZQUNOUCxTQUFTO1lBQ1RFLFFBQVE7UUFDVjtRQUNBTSxVQUFVO1lBQ1JSLFNBQVM7WUFDVEMsWUFBWTtRQUNkO1FBQ0EsY0FBYztZQUNaRCxTQUFTO1lBQ1RDLFlBQVk7UUFDZDtRQUNBUSxXQUFXO1lBQ1RULFNBQVM7WUFDVEMsWUFBWTtZQUNaSSxPQUFPO2dCQUFDO2dCQUFjO2FBQWM7WUFDcENGLFFBQVE7Z0JBQ05PLGFBQWE7WUFDZjtRQUNGO1FBQ0FDLFNBQ0U7UUFDRkMsU0FDRTtRQUNGQyxTQUFTO1FBQ1RDLFFBQ0U7UUFDRkMsVUFBVTtRQUNWTCxhQUFhO0lBQ2Y7SUFDQWIsTUFBTUMsU0FBUyxDQUFDSixNQUFNLENBQUMsdUJBQXVCLENBQUNTLE1BQU0sQ0FDbkQsZ0JBQ0QsQ0FBQ0EsTUFBTSxDQUFDRyxJQUFJLEdBQUdULE1BQU1DLFNBQVMsQ0FBQ0osTUFBTTtJQUN0Q0csTUFBTUMsU0FBUyxDQUFDa0IsRUFBRSxHQUFHbkIsTUFBTUMsU0FBUyxDQUFDSixNQUFNO0FBQzdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3B5dGhvbi5qcz80YTMzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHB5dGhvblxucHl0aG9uLmRpc3BsYXlOYW1lID0gJ3B5dGhvbidcbnB5dGhvbi5hbGlhc2VzID0gWydweSddXG5mdW5jdGlvbiBweXRob24oUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLnB5dGhvbiA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvKF58W15cXFxcXSkjLiovLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgJ3N0cmluZy1pbnRlcnBvbGF0aW9uJzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyg/OmZ8ZnJ8cmYpKD86KFwiXCJcInwnJycpW1xcc1xcU10qP1xcMXwoXCJ8JykoPzpcXFxcLnwoPyFcXDIpW15cXFxcXFxyXFxuXSkqXFwyKS9pLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIGludGVycG9sYXRpb246IHtcbiAgICAgICAgICAvLyBcIntcIiA8ZXhwcmVzc2lvbj4gPG9wdGlvbmFsIFwiIXNcIiwgXCIhclwiLCBvciBcIiFhXCI+IDxvcHRpb25hbCBcIjpcIiBmb3JtYXQgc3BlY2lmaWVyPiBcIn1cIlxuICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAvKCg/Ol58W157XSkoPzpcXHtcXHspKilcXHsoPyFcXHspKD86W157fV18XFx7KD8hXFx7KSg/Oltee31dfFxceyg/IVxceykoPzpbXnt9XSkrXFx9KStcXH0pK1xcfS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICdmb3JtYXQtc3BlYyc6IHtcbiAgICAgICAgICAgICAgcGF0dGVybjogLyg6KVteOigpe31dKyg/PVxcfSQpLyxcbiAgICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICdjb252ZXJzaW9uLW9wdGlvbic6IHtcbiAgICAgICAgICAgICAgcGF0dGVybjogLyFbc3JhXSg/PVs6fV0kKS8sXG4gICAgICAgICAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcmVzdDogbnVsbFxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgc3RyaW5nOiAvW1xcc1xcU10rL1xuICAgICAgfVxuICAgIH0sXG4gICAgJ3RyaXBsZS1xdW90ZWQtc3RyaW5nJzoge1xuICAgICAgcGF0dGVybjogLyg/OltydWJdfGJyfHJiKT8oXCJcIlwifCcnJylbXFxzXFxTXSo/XFwxL2ksXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBhbGlhczogJ3N0cmluZydcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyg/OltydWJdfGJyfHJiKT8oXCJ8JykoPzpcXFxcLnwoPyFcXDEpW15cXFxcXFxyXFxuXSkqXFwxL2ksXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGZ1bmN0aW9uOiB7XG4gICAgICBwYXR0ZXJuOiAvKCg/Ol58XFxzKWRlZlsgXFx0XSspW2EtekEtWl9dXFx3Kig/PVxccypcXCgpL2csXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICAnY2xhc3MtbmFtZSc6IHtcbiAgICAgIHBhdHRlcm46IC8oXFxiY2xhc3NcXHMrKVxcdysvaSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIGRlY29yYXRvcjoge1xuICAgICAgcGF0dGVybjogLyheW1xcdCBdKilAXFx3Kyg/OlxcLlxcdyspKi9tLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiBbJ2Fubm90YXRpb24nLCAncHVuY3R1YXRpb24nXSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBwdW5jdHVhdGlvbjogL1xcLi9cbiAgICAgIH1cbiAgICB9LFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86Xyg/PVxccyo6KXxhbmR8YXN8YXNzZXJ0fGFzeW5jfGF3YWl0fGJyZWFrfGNhc2V8Y2xhc3N8Y29udGludWV8ZGVmfGRlbHxlbGlmfGVsc2V8ZXhjZXB0fGV4ZWN8ZmluYWxseXxmb3J8ZnJvbXxnbG9iYWx8aWZ8aW1wb3J0fGlufGlzfGxhbWJkYXxtYXRjaHxub25sb2NhbHxub3R8b3J8cGFzc3xwcmludHxyYWlzZXxyZXR1cm58dHJ5fHdoaWxlfHdpdGh8eWllbGQpXFxiLyxcbiAgICBidWlsdGluOlxuICAgICAgL1xcYig/Ol9faW1wb3J0X198YWJzfGFsbHxhbnl8YXBwbHl8YXNjaWl8YmFzZXN0cmluZ3xiaW58Ym9vbHxidWZmZXJ8Ynl0ZWFycmF5fGJ5dGVzfGNhbGxhYmxlfGNocnxjbGFzc21ldGhvZHxjbXB8Y29lcmNlfGNvbXBpbGV8Y29tcGxleHxkZWxhdHRyfGRpY3R8ZGlyfGRpdm1vZHxlbnVtZXJhdGV8ZXZhbHxleGVjZmlsZXxmaWxlfGZpbHRlcnxmbG9hdHxmb3JtYXR8ZnJvemVuc2V0fGdldGF0dHJ8Z2xvYmFsc3xoYXNhdHRyfGhhc2h8aGVscHxoZXh8aWR8aW5wdXR8aW50fGludGVybnxpc2luc3RhbmNlfGlzc3ViY2xhc3N8aXRlcnxsZW58bGlzdHxsb2NhbHN8bG9uZ3xtYXB8bWF4fG1lbW9yeXZpZXd8bWlufG5leHR8b2JqZWN0fG9jdHxvcGVufG9yZHxwb3d8cHJvcGVydHl8cmFuZ2V8cmF3X2lucHV0fHJlZHVjZXxyZWxvYWR8cmVwcnxyZXZlcnNlZHxyb3VuZHxzZXR8c2V0YXR0cnxzbGljZXxzb3J0ZWR8c3RhdGljbWV0aG9kfHN0cnxzdW18c3VwZXJ8dHVwbGV8dHlwZXx1bmljaHJ8dW5pY29kZXx2YXJzfHhyYW5nZXx6aXApXFxiLyxcbiAgICBib29sZWFuOiAvXFxiKD86RmFsc2V8Tm9uZXxUcnVlKVxcYi8sXG4gICAgbnVtYmVyOlxuICAgICAgL1xcYjAoPzpiKD86Xz9bMDFdKSt8byg/Ol8/WzAtN10pK3x4KD86Xz9bYS1mMC05XSkrKVxcYnwoPzpcXGJcXGQrKD86X1xcZCspKig/OlxcLig/OlxcZCsoPzpfXFxkKykqKT8pP3xcXEJcXC5cXGQrKD86X1xcZCspKikoPzplWystXT9cXGQrKD86X1xcZCspKik/aj8oPyFcXHcpL2ksXG4gICAgb3BlcmF0b3I6IC9bLSslPV09P3whPXw6PXxcXCpcXCo/PT98XFwvXFwvPz0/fDxbPD0+XT98Pls9Pl0/fFsmfF5+XS8sXG4gICAgcHVuY3R1YXRpb246IC9be31bXFxdOygpLC46XS9cbiAgfVxuICBQcmlzbS5sYW5ndWFnZXMucHl0aG9uWydzdHJpbmctaW50ZXJwb2xhdGlvbiddLmluc2lkZVtcbiAgICAnaW50ZXJwb2xhdGlvbidcbiAgXS5pbnNpZGUucmVzdCA9IFByaXNtLmxhbmd1YWdlcy5weXRob25cbiAgUHJpc20ubGFuZ3VhZ2VzLnB5ID0gUHJpc20ubGFuZ3VhZ2VzLnB5dGhvblxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJweXRob24iLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImdyZWVkeSIsImluc2lkZSIsImludGVycG9sYXRpb24iLCJhbGlhcyIsInJlc3QiLCJzdHJpbmciLCJmdW5jdGlvbiIsImRlY29yYXRvciIsInB1bmN0dWF0aW9uIiwia2V5d29yZCIsImJ1aWx0aW4iLCJib29sZWFuIiwibnVtYmVyIiwib3BlcmF0b3IiLCJweSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/python.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/q.js":
/*!******************************************!*\
  !*** ./node_modules/refractor/lang/q.js ***!
  \******************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = q;\nq.displayName = \"q\";\nq.aliases = [];\nfunction q(Prism) {\n    Prism.languages.q = {\n        string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n        comment: [\n            // From http://code.kx.com/wiki/Reference/Slash:\n            // When / is following a space (or a right parenthesis, bracket, or brace), it is ignored with the rest of the line.\n            {\n                pattern: /([\\t )\\]}])\\/.*/,\n                lookbehind: true,\n                greedy: true\n            },\n            // A line which has / as its first character and contains at least one other non-whitespace character is a whole-line comment and is ignored entirely.\n            // A / on a line by itself begins a multiline comment which is terminated by the next \\ on a line by itself.\n            // If a / is not matched by a \\, the multiline comment is unterminated and continues to end of file.\n            // The / and \\ must be the first char on the line, but may be followed by any amount of whitespace.\n            {\n                pattern: /(^|\\r?\\n|\\r)\\/[\\t ]*(?:(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r(?!\\n)))*?(?:\\\\(?=[\\t ]*(?:\\r?\\n|\\r))|$)|\\S.*)/,\n                lookbehind: true,\n                greedy: true\n            },\n            // A \\ on a line by itself with no preceding matching / will comment to end of file.\n            {\n                pattern: /^\\\\[\\t ]*(?:\\r?\\n|\\r)[\\s\\S]+/m,\n                greedy: true\n            },\n            {\n                pattern: /^#!.+/m,\n                greedy: true\n            }\n        ],\n        symbol: /`(?::\\S+|[\\w.]*)/,\n        datetime: {\n            pattern: /0N[mdzuvt]|0W[dtz]|\\d{4}\\.\\d\\d(?:m|\\.\\d\\d(?:T(?:\\d\\d(?::\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?)?)?)?[dz]?)|\\d\\d:\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?[uvt]?/,\n            alias: \"number\"\n        },\n        // The negative look-ahead prevents bad highlighting\n        // of verbs 0: and 1:\n        number: /\\b(?![01]:)(?:0N[hje]?|0W[hj]?|0[wn]|0x[\\da-fA-F]+|\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?[hjfeb]?)/,\n        keyword: /\\\\\\w+\\b|\\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\\b/,\n        adverb: {\n            pattern: /['\\/\\\\]:?|\\beach\\b/,\n            alias: \"function\"\n        },\n        verb: {\n            pattern: /(?:\\B\\.\\B|\\b[01]:|<[=>]?|>=?|[:+\\-*%,!?~=|$&#@^]):?|\\b_\\b:?/,\n            alias: \"operator\"\n        },\n        punctuation: /[(){}\\[\\];.]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxFQUFFQyxXQUFXLEdBQUc7QUFDaEJELEVBQUVFLE9BQU8sR0FBRyxFQUFFO0FBQ2QsU0FBU0YsRUFBRUcsS0FBSztJQUNkQSxNQUFNQyxTQUFTLENBQUNKLENBQUMsR0FBRztRQUNsQkssUUFBUTtRQUNSQyxTQUFTO1lBQ1AsZ0RBQWdEO1lBQ2hELG9IQUFvSDtZQUNwSDtnQkFDRUMsU0FBUztnQkFDVEMsWUFBWTtnQkFDWkMsUUFBUTtZQUNWO1lBQ0Esc0pBQXNKO1lBQ3RKLDRHQUE0RztZQUM1RyxvR0FBb0c7WUFDcEcsbUdBQW1HO1lBQ25HO2dCQUNFRixTQUNFO2dCQUNGQyxZQUFZO2dCQUNaQyxRQUFRO1lBQ1Y7WUFDQSxvRkFBb0Y7WUFDcEY7Z0JBQ0VGLFNBQVM7Z0JBQ1RFLFFBQVE7WUFDVjtZQUNBO2dCQUNFRixTQUFTO2dCQUNURSxRQUFRO1lBQ1Y7U0FDRDtRQUNEQyxRQUFRO1FBQ1JDLFVBQVU7WUFDUkosU0FDRTtZQUNGSyxPQUFPO1FBQ1Q7UUFDQSxvREFBb0Q7UUFDcEQscUJBQXFCO1FBQ3JCQyxRQUNFO1FBQ0ZDLFNBQ0U7UUFDRkMsUUFBUTtZQUNOUixTQUFTO1lBQ1RLLE9BQU87UUFDVDtRQUNBSSxNQUFNO1lBQ0pULFNBQVM7WUFDVEssT0FBTztRQUNUO1FBQ0FLLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3EuanM/Y2ZlMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBxXG5xLmRpc3BsYXlOYW1lID0gJ3EnXG5xLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gcShQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMucSA9IHtcbiAgICBzdHJpbmc6IC9cIig/OlxcXFwufFteXCJcXFxcXFxyXFxuXSkqXCIvLFxuICAgIGNvbW1lbnQ6IFtcbiAgICAgIC8vIEZyb20gaHR0cDovL2NvZGUua3guY29tL3dpa2kvUmVmZXJlbmNlL1NsYXNoOlxuICAgICAgLy8gV2hlbiAvIGlzIGZvbGxvd2luZyBhIHNwYWNlIChvciBhIHJpZ2h0IHBhcmVudGhlc2lzLCBicmFja2V0LCBvciBicmFjZSksIGl0IGlzIGlnbm9yZWQgd2l0aCB0aGUgcmVzdCBvZiB0aGUgbGluZS5cbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyhbXFx0IClcXF19XSlcXC8uKi8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSwgLy8gRnJvbSBodHRwOi8vY29kZS5reC5jb20vd2lraS9SZWZlcmVuY2UvU2xhc2g6XG4gICAgICAvLyBBIGxpbmUgd2hpY2ggaGFzIC8gYXMgaXRzIGZpcnN0IGNoYXJhY3RlciBhbmQgY29udGFpbnMgYXQgbGVhc3Qgb25lIG90aGVyIG5vbi13aGl0ZXNwYWNlIGNoYXJhY3RlciBpcyBhIHdob2xlLWxpbmUgY29tbWVudCBhbmQgaXMgaWdub3JlZCBlbnRpcmVseS5cbiAgICAgIC8vIEEgLyBvbiBhIGxpbmUgYnkgaXRzZWxmIGJlZ2lucyBhIG11bHRpbGluZSBjb21tZW50IHdoaWNoIGlzIHRlcm1pbmF0ZWQgYnkgdGhlIG5leHQgXFwgb24gYSBsaW5lIGJ5IGl0c2VsZi5cbiAgICAgIC8vIElmIGEgLyBpcyBub3QgbWF0Y2hlZCBieSBhIFxcLCB0aGUgbXVsdGlsaW5lIGNvbW1lbnQgaXMgdW50ZXJtaW5hdGVkIGFuZCBjb250aW51ZXMgdG8gZW5kIG9mIGZpbGUuXG4gICAgICAvLyBUaGUgLyBhbmQgXFwgbXVzdCBiZSB0aGUgZmlyc3QgY2hhciBvbiB0aGUgbGluZSwgYnV0IG1heSBiZSBmb2xsb3dlZCBieSBhbnkgYW1vdW50IG9mIHdoaXRlc3BhY2UuXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhefFxccj9cXG58XFxyKVxcL1tcXHQgXSooPzooPzpcXHI/XFxufFxccikoPzouKig/Olxccj9cXG58XFxyKD8hXFxuKSkpKj8oPzpcXFxcKD89W1xcdCBdKig/Olxccj9cXG58XFxyKSl8JCl8XFxTLiopLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LCAvLyBGcm9tIGh0dHA6Ly9jb2RlLmt4LmNvbS93aWtpL1JlZmVyZW5jZS9TbGFzaDpcbiAgICAgIC8vIEEgXFwgb24gYSBsaW5lIGJ5IGl0c2VsZiB3aXRoIG5vIHByZWNlZGluZyBtYXRjaGluZyAvIHdpbGwgY29tbWVudCB0byBlbmQgb2YgZmlsZS5cbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogL15cXFxcW1xcdCBdKig/Olxccj9cXG58XFxyKVtcXHNcXFNdKy9tLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC9eIyEuKy9tLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH1cbiAgICBdLFxuICAgIHN5bWJvbDogL2AoPzo6XFxTK3xbXFx3Ll0qKS8sXG4gICAgZGF0ZXRpbWU6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8wTlttZHp1dnRdfDBXW2R0el18XFxkezR9XFwuXFxkXFxkKD86bXxcXC5cXGRcXGQoPzpUKD86XFxkXFxkKD86OlxcZFxcZCg/OjpcXGRcXGQoPzpbLjpdXFxkXFxkXFxkKT8pPyk/KT8pP1tkel0/KXxcXGRcXGQ6XFxkXFxkKD86OlxcZFxcZCg/OlsuOl1cXGRcXGRcXGQpPyk/W3V2dF0/LyxcbiAgICAgIGFsaWFzOiAnbnVtYmVyJ1xuICAgIH0sXG4gICAgLy8gVGhlIG5lZ2F0aXZlIGxvb2stYWhlYWQgcHJldmVudHMgYmFkIGhpZ2hsaWdodGluZ1xuICAgIC8vIG9mIHZlcmJzIDA6IGFuZCAxOlxuICAgIG51bWJlcjpcbiAgICAgIC9cXGIoPyFbMDFdOikoPzowTltoamVdP3wwV1toal0/fDBbd25dfDB4W1xcZGEtZkEtRl0rfFxcZCsoPzpcXC5cXGQqKT8oPzplWystXT9cXGQrKT9baGpmZWJdPykvLFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxcXFxcdytcXGJ8XFxiKD86YWJzfGFjb3N8YWowP3xhbGx8YW5kfGFueXxhc2N8YXNpbnxhc29mfGF0YW58YXR0cnxhdmdzP3xiaW5yP3xieXxjZWlsaW5nfGNvbHN8Y29yfGNvc3xjb3VudHxjb3Z8Y3Jvc3N8Y3N2fGN1dHxkZWxldGV8ZGVsdGFzfGRlc2N8ZGV2fGRpZmZlcnxkaXN0aW5jdHxkaXZ8ZG98ZHNhdmV8ZWp8ZW5saXN0fGV2YWx8ZXhjZXB0fGV4ZWN8ZXhpdHxleHB8ZmJ5fGZpbGxzfGZpcnN0fGZrZXlzfGZsaXB8Zmxvb3J8ZnJvbXxnZXR8Z2V0ZW52fGdyb3VwfGd0aW1lfGhjbG9zZXxoY291bnR8aGRlbHxob3Blbnxoc3ltfGlhc2N8aWRlbnRpdHl8aWRlc2N8aWZ8aWp8aW58aW5zZXJ0fGludGVyfGludnxrZXlzP3xsYXN0fGxpa2V8bGlzdHxsamY/fGxvYWR8bG9nfGxvd2VyfGxzcXxsdGltZXxsdHJpbXxtYXZnfG1heHM/fG1jb3VudHxtZDV8bWRldnxtZWR8bWV0YXxtaW5zP3xtbWF4fG1taW58bW11fG1vZHxtc3VtfG5lZ3xuZXh0fG5vdHxudWxsfG9yfG92ZXJ8cGFyc2V8cGVhY2h8cGp8cGxpc3R8cHJkcz98cHJldnxwcmlvcnxyYW5kfHJhbmt8cmF0aW9zfHJhemV8cmVhZDB8cmVhZDF8cmVjaXByb2NhbHxyZXZhbHxyZXZlcnNlfHJsb2FkfHJvdGF0ZXxyc2F2ZXxydHJpbXxzYXZlfHNjYW58c2NvdnxzZGV2fHNlbGVjdHxzZXR8c2V0ZW52fHNob3d8c2lnbnVtfHNpbnxzcXJ0fHNzcj98c3RyaW5nfHN1Ymxpc3R8c3Vtcz98c3Z8c3ZhcnxzeXN0ZW18dGFibGVzfHRhbnx0aWx8dHJpbXx0eGZ8dHlwZXx1anx1bmdyb3VwfHVuaW9ufHVwZGF0ZXx1cHBlcnx1cHNlcnR8dmFsdWV8dmFyfHZpZXdzP3x2c3x3YXZnfHdoZXJlfHdoaWxlfHdpdGhpbnx3ajE/fHdzdW18d3d8eGFzY3x4YmFyfHhjb2xzP3x4ZGVzY3x4ZXhwfHhncm91cHx4a2V5fHhsb2d8eHByZXZ8eHJhbmspXFxiLyxcbiAgICBhZHZlcmI6IHtcbiAgICAgIHBhdHRlcm46IC9bJ1xcL1xcXFxdOj98XFxiZWFjaFxcYi8sXG4gICAgICBhbGlhczogJ2Z1bmN0aW9uJ1xuICAgIH0sXG4gICAgdmVyYjoge1xuICAgICAgcGF0dGVybjogLyg/OlxcQlxcLlxcQnxcXGJbMDFdOnw8Wz0+XT98Pj0/fFs6K1xcLSolLCE/fj18JCYjQF5dKTo/fFxcYl9cXGI6Py8sXG4gICAgICBhbGlhczogJ29wZXJhdG9yJ1xuICAgIH0sXG4gICAgcHVuY3R1YXRpb246IC9bKCl7fVxcW1xcXTsuXS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJxIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJzdHJpbmciLCJjb21tZW50IiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJncmVlZHkiLCJzeW1ib2wiLCJkYXRldGltZSIsImFsaWFzIiwibnVtYmVyIiwia2V5d29yZCIsImFkdmVyYiIsInZlcmIiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/q.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/qml.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/qml.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = qml;\nqml.displayName = \"qml\";\nqml.aliases = [];\nfunction qml(Prism) {\n    ;\n    (function(Prism) {\n        var jsString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|'(?:\\\\.|[^\\\\'\\r\\n])*'/.source;\n        var jsComment = /\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\//.source;\n        var jsExpr = /(?:[^\\\\()[\\]{}\"'/]|<string>|\\/(?![*/])|<comment>|\\(<expr>*\\)|\\[<expr>*\\]|\\{<expr>*\\}|\\\\[\\s\\S])/.source.replace(/<string>/g, function() {\n            return jsString;\n        }).replace(/<comment>/g, function() {\n            return jsComment;\n        }) // the pattern will blow up, so only a few iterations\n        ;\n        for(var i = 0; i < 2; i++){\n            jsExpr = jsExpr.replace(/<expr>/g, function() {\n                return jsExpr;\n            });\n        }\n        jsExpr = jsExpr.replace(/<expr>/g, \"[^\\\\s\\\\S]\");\n        Prism.languages.qml = {\n            comment: {\n                pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n                greedy: true\n            },\n            \"javascript-function\": {\n                pattern: RegExp(/((?:^|;)[ \\t]*)function\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*\\(<js>*\\)\\s*\\{<js>*\\}/.source.replace(/<js>/g, function() {\n                    return jsExpr;\n                }), \"m\"),\n                lookbehind: true,\n                greedy: true,\n                alias: \"language-javascript\",\n                inside: Prism.languages.javascript\n            },\n            \"class-name\": {\n                pattern: /((?:^|[:;])[ \\t]*)(?!\\d)\\w+(?=[ \\t]*\\{|[ \\t]+on\\b)/m,\n                lookbehind: true\n            },\n            property: [\n                {\n                    pattern: /((?:^|[;{])[ \\t]*)(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n                    lookbehind: true\n                },\n                {\n                    pattern: /((?:^|[;{])[ \\t]*)property[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n                    lookbehind: true,\n                    inside: {\n                        keyword: /^property/,\n                        property: /\\w+(?:\\.\\w+)*/\n                    }\n                }\n            ],\n            \"javascript-expression\": {\n                pattern: RegExp(/(:[ \\t]*)(?![\\s;}[])(?:(?!$|[;}])<js>)+/.source.replace(/<js>/g, function() {\n                    return jsExpr;\n                }), \"m\"),\n                lookbehind: true,\n                greedy: true,\n                alias: \"language-javascript\",\n                inside: Prism.languages.javascript\n            },\n            string: {\n                pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n                greedy: true\n            },\n            keyword: /\\b(?:as|import|on)\\b/,\n            punctuation: /[{}[\\]:;,]/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcW1sLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLElBQUlDLFdBQVcsR0FBRztBQUNsQkQsSUFBSUUsT0FBTyxHQUFHLEVBQUU7QUFDaEIsU0FBU0YsSUFBSUcsS0FBSzs7SUFDZCxVQUFVQSxLQUFLO1FBQ2YsSUFBSUMsV0FBVyw4Q0FBOENDLE1BQU07UUFDbkUsSUFBSUMsWUFBWSx5Q0FBeUNELE1BQU07UUFDL0QsSUFBSUUsU0FDRixpR0FBaUdGLE1BQU0sQ0FDcEdHLE9BQU8sQ0FBQyxhQUFhO1lBQ3BCLE9BQU9KO1FBQ1QsR0FDQ0ksT0FBTyxDQUFDLGNBQWM7WUFDckIsT0FBT0Y7UUFDVCxHQUFHLHFEQUFxRDs7UUFDNUQsSUFBSyxJQUFJRyxJQUFJLEdBQUdBLElBQUksR0FBR0EsSUFBSztZQUMxQkYsU0FBU0EsT0FBT0MsT0FBTyxDQUFDLFdBQVc7Z0JBQ2pDLE9BQU9EO1lBQ1Q7UUFDRjtRQUNBQSxTQUFTQSxPQUFPQyxPQUFPLENBQUMsV0FBVztRQUNuQ0wsTUFBTU8sU0FBUyxDQUFDVixHQUFHLEdBQUc7WUFDcEJXLFNBQVM7Z0JBQ1BDLFNBQVM7Z0JBQ1RDLFFBQVE7WUFDVjtZQUNBLHVCQUF1QjtnQkFDckJELFNBQVNFLE9BQ1AsMkdBQTJHVCxNQUFNLENBQUNHLE9BQU8sQ0FDdkgsU0FDQTtvQkFDRSxPQUFPRDtnQkFDVCxJQUVGO2dCQUVGUSxZQUFZO2dCQUNaRixRQUFRO2dCQUNSRyxPQUFPO2dCQUNQQyxRQUFRZCxNQUFNTyxTQUFTLENBQUNRLFVBQVU7WUFDcEM7WUFDQSxjQUFjO2dCQUNaTixTQUFTO2dCQUNURyxZQUFZO1lBQ2Q7WUFDQUksVUFBVTtnQkFDUjtvQkFDRVAsU0FBUztvQkFDVEcsWUFBWTtnQkFDZDtnQkFDQTtvQkFDRUgsU0FDRTtvQkFDRkcsWUFBWTtvQkFDWkUsUUFBUTt3QkFDTkcsU0FBUzt3QkFDVEQsVUFBVTtvQkFDWjtnQkFDRjthQUNEO1lBQ0QseUJBQXlCO2dCQUN2QlAsU0FBU0UsT0FDUCwwQ0FBMENULE1BQU0sQ0FBQ0csT0FBTyxDQUN0RCxTQUNBO29CQUNFLE9BQU9EO2dCQUNULElBRUY7Z0JBRUZRLFlBQVk7Z0JBQ1pGLFFBQVE7Z0JBQ1JHLE9BQU87Z0JBQ1BDLFFBQVFkLE1BQU1PLFNBQVMsQ0FBQ1EsVUFBVTtZQUNwQztZQUNBRyxRQUFRO2dCQUNOVCxTQUFTO2dCQUNUQyxRQUFRO1lBQ1Y7WUFDQU8sU0FBUztZQUNURSxhQUFhO1FBQ2Y7SUFDRixHQUFHbkI7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9xbWwuanM/YzAzMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBxbWxcbnFtbC5kaXNwbGF5TmFtZSA9ICdxbWwnXG5xbWwuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBxbWwoUHJpc20pIHtcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIganNTdHJpbmcgPSAvXCIoPzpcXFxcLnxbXlxcXFxcIlxcclxcbl0pKlwifCcoPzpcXFxcLnxbXlxcXFwnXFxyXFxuXSkqJy8uc291cmNlXG4gICAgdmFyIGpzQ29tbWVudCA9IC9cXC9cXC8uKig/IS4pfFxcL1xcKig/OlteKl18XFwqKD8hXFwvKSkqXFwqXFwvLy5zb3VyY2VcbiAgICB2YXIganNFeHByID1cbiAgICAgIC8oPzpbXlxcXFwoKVtcXF17fVwiJy9dfDxzdHJpbmc+fFxcLyg/IVsqL10pfDxjb21tZW50PnxcXCg8ZXhwcj4qXFwpfFxcWzxleHByPipcXF18XFx7PGV4cHI+KlxcfXxcXFxcW1xcc1xcU10pLy5zb3VyY2VcbiAgICAgICAgLnJlcGxhY2UoLzxzdHJpbmc+L2csIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4ganNTdHJpbmdcbiAgICAgICAgfSlcbiAgICAgICAgLnJlcGxhY2UoLzxjb21tZW50Pi9nLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIGpzQ29tbWVudFxuICAgICAgICB9KSAvLyB0aGUgcGF0dGVybiB3aWxsIGJsb3cgdXAsIHNvIG9ubHkgYSBmZXcgaXRlcmF0aW9uc1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMjsgaSsrKSB7XG4gICAgICBqc0V4cHIgPSBqc0V4cHIucmVwbGFjZSgvPGV4cHI+L2csIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIGpzRXhwclxuICAgICAgfSlcbiAgICB9XG4gICAganNFeHByID0ganNFeHByLnJlcGxhY2UoLzxleHByPi9nLCAnW15cXFxcc1xcXFxTXScpXG4gICAgUHJpc20ubGFuZ3VhZ2VzLnFtbCA9IHtcbiAgICAgIGNvbW1lbnQ6IHtcbiAgICAgICAgcGF0dGVybjogL1xcL1xcLy4qfFxcL1xcKltcXHNcXFNdKj9cXCpcXC8vLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICAnamF2YXNjcmlwdC1mdW5jdGlvbic6IHtcbiAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgIC8oKD86Xnw7KVsgXFx0XSopZnVuY3Rpb25cXHMrKD8hXFxzKVtfJGEtekEtWlxceEEwLVxcdUZGRkZdKD86KD8hXFxzKVskXFx3XFx4QTAtXFx1RkZGRl0pKlxccypcXCg8anM+KlxcKVxccypcXHs8anM+KlxcfS8uc291cmNlLnJlcGxhY2UoXG4gICAgICAgICAgICAvPGpzPi9nLFxuICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICByZXR1cm4ganNFeHByXG4gICAgICAgICAgICB9XG4gICAgICAgICAgKSxcbiAgICAgICAgICAnbSdcbiAgICAgICAgKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBhbGlhczogJ2xhbmd1YWdlLWphdmFzY3JpcHQnLFxuICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy5qYXZhc2NyaXB0XG4gICAgICB9LFxuICAgICAgJ2NsYXNzLW5hbWUnOiB7XG4gICAgICAgIHBhdHRlcm46IC8oKD86XnxbOjtdKVsgXFx0XSopKD8hXFxkKVxcdysoPz1bIFxcdF0qXFx7fFsgXFx0XStvblxcYikvbSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHByb3BlcnR5OiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKCg/Ol58Wzt7XSlbIFxcdF0qKSg/IVxcZClcXHcrKD86XFwuXFx3KykqKD89WyBcXHRdKjopL20sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAgIC8oKD86XnxbO3tdKVsgXFx0XSopcHJvcGVydHlbIFxcdF0rKD8hXFxkKVxcdysoPzpcXC5cXHcrKSpbIFxcdF0rKD8hXFxkKVxcdysoPzpcXC5cXHcrKSooPz1bIFxcdF0qOikvbSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAga2V5d29yZDogL15wcm9wZXJ0eS8sXG4gICAgICAgICAgICBwcm9wZXJ0eTogL1xcdysoPzpcXC5cXHcrKSovXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgJ2phdmFzY3JpcHQtZXhwcmVzc2lvbic6IHtcbiAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgIC8oOlsgXFx0XSopKD8hW1xcczt9W10pKD86KD8hJHxbO31dKTxqcz4pKy8uc291cmNlLnJlcGxhY2UoXG4gICAgICAgICAgICAvPGpzPi9nLFxuICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICByZXR1cm4ganNFeHByXG4gICAgICAgICAgICB9XG4gICAgICAgICAgKSxcbiAgICAgICAgICAnbSdcbiAgICAgICAgKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBhbGlhczogJ2xhbmd1YWdlLWphdmFzY3JpcHQnLFxuICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy5qYXZhc2NyaXB0XG4gICAgICB9LFxuICAgICAgc3RyaW5nOiB7XG4gICAgICAgIHBhdHRlcm46IC9cIig/OlxcXFwufFteXFxcXFwiXFxyXFxuXSkqXCIvLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICBrZXl3b3JkOiAvXFxiKD86YXN8aW1wb3J0fG9uKVxcYi8sXG4gICAgICBwdW5jdHVhdGlvbjogL1t7fVtcXF06OyxdL1xuICAgIH1cbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInFtbCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwianNTdHJpbmciLCJzb3VyY2UiLCJqc0NvbW1lbnQiLCJqc0V4cHIiLCJyZXBsYWNlIiwiaSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwiZ3JlZWR5IiwiUmVnRXhwIiwibG9va2JlaGluZCIsImFsaWFzIiwiaW5zaWRlIiwiamF2YXNjcmlwdCIsInByb3BlcnR5Iiwia2V5d29yZCIsInN0cmluZyIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/qml.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/qore.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/qore.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = qore;\nqore.displayName = \"qore\";\nqore.aliases = [];\nfunction qore(Prism) {\n    Prism.languages.qore = Prism.languages.extend(\"clike\", {\n        comment: {\n            pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:\\/\\/|#).*)/,\n            lookbehind: true\n        },\n        // Overridden to allow unescaped multi-line strings\n        string: {\n            pattern: /(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n            greedy: true\n        },\n        keyword: /\\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:bool|date|float|int|list|number|string)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\\b/,\n        boolean: /\\b(?:false|true)\\b/i,\n        function: /\\$?\\b(?!\\d)\\w+(?=\\()/,\n        number: /\\b(?:0b[01]+|0x(?:[\\da-f]*\\.)?[\\da-fp\\-]+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e\\d+)?[df]|(?:\\d+(?:\\.\\d+)?|\\.\\d+))\\b/i,\n        operator: {\n            pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\\|[|=]?|[*\\/%^]=?|[~?])/,\n            lookbehind: true\n        },\n        variable: /\\$(?!\\d)\\w+\\b/\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcW9yZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDakJBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHRyxNQUFNQyxTQUFTLENBQUNDLE1BQU0sQ0FBQyxTQUFTO1FBQ3JEQyxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsWUFBWTtRQUNkO1FBQ0EsbURBQW1EO1FBQ25EQyxRQUFRO1lBQ05GLFNBQVM7WUFDVEcsUUFBUTtRQUNWO1FBQ0FDLFNBQ0U7UUFDRkMsU0FBUztRQUNUQyxVQUFVO1FBQ1ZDLFFBQ0U7UUFDRkMsVUFBVTtZQUNSUixTQUNFO1lBQ0ZDLFlBQVk7UUFDZDtRQUNBUSxVQUFVO0lBQ1o7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9xb3JlLmpzPzBhY2IiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gcW9yZVxucW9yZS5kaXNwbGF5TmFtZSA9ICdxb3JlJ1xucW9yZS5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIHFvcmUoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLnFvcmUgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdjbGlrZScsIHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvKF58W15cXFxcXSkoPzpcXC9cXCpbXFxzXFxTXSo/XFwqXFwvfCg/OlxcL1xcL3wjKS4qKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICAvLyBPdmVycmlkZGVuIHRvIGFsbG93IHVuZXNjYXBlZCBtdWx0aS1saW5lIHN0cmluZ3NcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC8oXCJ8JykoPzpcXFxcW1xcc1xcU118KD8hXFwxKVteXFxcXF0pKlxcMS8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YWJzdHJhY3R8YW55fGFzc2VydHxiaW5hcnl8Ym9vbHxib29sZWFufGJyZWFrfGJ5dGV8Y2FzZXxjYXRjaHxjaGFyfGNsYXNzfGNvZGV8Y29uc3R8Y29udGludWV8ZGF0YXxkZWZhdWx0fGRvfGRvdWJsZXxlbHNlfGVudW18ZXh0ZW5kc3xmaW5hbHxmaW5hbGx5fGZsb2F0fGZvcnxnb3RvfGhhc2h8aWZ8aW1wbGVtZW50c3xpbXBvcnR8aW5oZXJpdHN8aW5zdGFuY2VvZnxpbnR8aW50ZXJmYWNlfGxvbmd8bXl8bmF0aXZlfG5ld3xub3RoaW5nfG51bGx8b2JqZWN0fG91cnxvd258cHJpdmF0ZXxyZWZlcmVuY2V8cmV0aHJvd3xyZXR1cm58c2hvcnR8c29mdCg/OmJvb2x8ZGF0ZXxmbG9hdHxpbnR8bGlzdHxudW1iZXJ8c3RyaW5nKXxzdGF0aWN8c3RyaWN0ZnB8c3RyaW5nfHN1YnxzdXBlcnxzd2l0Y2h8c3luY2hyb25pemVkfHRoaXN8dGhyb3d8dGhyb3dzfHRyYW5zaWVudHx0cnl8dm9pZHx2b2xhdGlsZXx3aGlsZSlcXGIvLFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi9pLFxuICAgIGZ1bmN0aW9uOiAvXFwkP1xcYig/IVxcZClcXHcrKD89XFwoKS8sXG4gICAgbnVtYmVyOlxuICAgICAgL1xcYig/OjBiWzAxXSt8MHgoPzpbXFxkYS1mXSpcXC4pP1tcXGRhLWZwXFwtXSt8KD86XFxkKyg/OlxcLlxcZCspP3xcXC5cXGQrKSg/OmVcXGQrKT9bZGZdfCg/OlxcZCsoPzpcXC5cXGQrKT98XFwuXFxkKykpXFxiL2ksXG4gICAgb3BlcmF0b3I6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXnxbXi5dKSg/OlxcK1srPV0/fC1bLT1dP3xbIT1dKD86PT0/fH4pP3w+Pj89P3w8KD86PT4/fDw9Pyk/fCZbJj1dP3xcXHxbfD1dP3xbKlxcLyVeXT0/fFt+P10pLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIHZhcmlhYmxlOiAvXFwkKD8hXFxkKVxcdytcXGIvXG4gIH0pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInFvcmUiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImV4dGVuZCIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsInN0cmluZyIsImdyZWVkeSIsImtleXdvcmQiLCJib29sZWFuIiwiZnVuY3Rpb24iLCJudW1iZXIiLCJvcGVyYXRvciIsInZhcmlhYmxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/qore.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/qsharp.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/qsharp.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = qsharp;\nqsharp.displayName = \"qsharp\";\nqsharp.aliases = [\n    \"qs\"\n];\nfunction qsharp(Prism) {\n    ;\n    (function(Prism) {\n        /**\n     * Replaces all placeholders \"<<n>>\" of given pattern with the n-th replacement (zero based).\n     *\n     * Note: This is a simple text based replacement. Be careful when using backreferences!\n     *\n     * @param {string} pattern the given pattern.\n     * @param {string[]} replacements a list of replacement which can be inserted into the given pattern.\n     * @returns {string} the pattern with all placeholders replaced with their corresponding replacements.\n     * @example replace(/a<<0>>a/.source, [/b+/.source]) === /a(?:b+)a/.source\n     */ function replace(pattern, replacements) {\n            return pattern.replace(/<<(\\d+)>>/g, function(m, index) {\n                return \"(?:\" + replacements[+index] + \")\";\n            });\n        }\n        /**\n     * @param {string} pattern\n     * @param {string[]} replacements\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */ function re(pattern, replacements, flags) {\n            return RegExp(replace(pattern, replacements), flags || \"\");\n        }\n        /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */ function nested(pattern, depthLog2) {\n            for(var i = 0; i < depthLog2; i++){\n                pattern = pattern.replace(/<<self>>/g, function() {\n                    return \"(?:\" + pattern + \")\";\n                });\n            }\n            return pattern.replace(/<<self>>/g, \"[^\\\\s\\\\S]\");\n        } // https://docs.microsoft.com/en-us/azure/quantum/user-guide/language/typesystem/\n        // https://github.com/microsoft/qsharp-language/tree/main/Specifications/Language/5_Grammar\n        var keywordKinds = {\n            // keywords which represent a return or variable type\n            type: \"Adj BigInt Bool Ctl Double false Int One Pauli PauliI PauliX PauliY PauliZ Qubit Range Result String true Unit Zero\",\n            // all other keywords\n            other: \"Adjoint adjoint apply as auto body borrow borrowing Controlled controlled distribute elif else fail fixup for function if in internal intrinsic invert is let mutable namespace new newtype open operation repeat return self set until use using while within\"\n        } // keywords\n        ;\n        function keywordsToPattern(words) {\n            return \"\\\\b(?:\" + words.trim().replace(/ /g, \"|\") + \")\\\\b\";\n        }\n        var keywords = RegExp(keywordsToPattern(keywordKinds.type + \" \" + keywordKinds.other)) // types\n        ;\n        var identifier = /\\b[A-Za-z_]\\w*\\b/.source;\n        var qualifiedName = replace(/<<0>>(?:\\s*\\.\\s*<<0>>)*/.source, [\n            identifier\n        ]);\n        var typeInside = {\n            keyword: keywords,\n            punctuation: /[<>()?,.:[\\]]/\n        } // strings\n        ;\n        var regularString = /\"(?:\\\\.|[^\\\\\"])*\"/.source;\n        Prism.languages.qsharp = Prism.languages.extend(\"clike\", {\n            comment: /\\/\\/.*/,\n            string: [\n                {\n                    pattern: re(/(^|[^$\\\\])<<0>>/.source, [\n                        regularString\n                    ]),\n                    lookbehind: true,\n                    greedy: true\n                }\n            ],\n            \"class-name\": [\n                {\n                    // open Microsoft.Quantum.Canon;\n                    // open Microsoft.Quantum.Canon as CN;\n                    pattern: re(/(\\b(?:as|open)\\s+)<<0>>(?=\\s*(?:;|as\\b))/.source, [\n                        qualifiedName\n                    ]),\n                    lookbehind: true,\n                    inside: typeInside\n                },\n                {\n                    // namespace Quantum.App1;\n                    pattern: re(/(\\bnamespace\\s+)<<0>>(?=\\s*\\{)/.source, [\n                        qualifiedName\n                    ]),\n                    lookbehind: true,\n                    inside: typeInside\n                }\n            ],\n            keyword: keywords,\n            number: /(?:\\b0(?:x[\\da-f]+|b[01]+|o[0-7]+)|(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d*)?)(?:e[-+]?\\d+)?)l?\\b/i,\n            operator: /\\band=|\\bor=|\\band\\b|\\bnot\\b|\\bor\\b|<[-=]|[-=]>|>>>=?|<<<=?|\\^\\^\\^=?|\\|\\|\\|=?|&&&=?|w\\/=?|~~~|[*\\/+\\-^=!%]=?/,\n            punctuation: /::|[{}[\\];(),.:]/\n        });\n        Prism.languages.insertBefore(\"qsharp\", \"number\", {\n            range: {\n                pattern: /\\.\\./,\n                alias: \"operator\"\n            }\n        }) // single line\n        ;\n        var interpolationExpr = nested(replace(/\\{(?:[^\"{}]|<<0>>|<<self>>)*\\}/.source, [\n            regularString\n        ]), 2);\n        Prism.languages.insertBefore(\"qsharp\", \"string\", {\n            \"interpolation-string\": {\n                pattern: re(/\\$\"(?:\\\\.|<<0>>|[^\\\\\"{])*\"/.source, [\n                    interpolationExpr\n                ]),\n                greedy: true,\n                inside: {\n                    interpolation: {\n                        pattern: re(/((?:^|[^\\\\])(?:\\\\\\\\)*)<<0>>/.source, [\n                            interpolationExpr\n                        ]),\n                        lookbehind: true,\n                        inside: {\n                            punctuation: /^\\{|\\}$/,\n                            expression: {\n                                pattern: /[\\s\\S]+/,\n                                alias: \"language-qsharp\",\n                                inside: Prism.languages.qsharp\n                            }\n                        }\n                    },\n                    string: /[\\s\\S]+/\n                }\n            }\n        });\n    })(Prism);\n    Prism.languages.qs = Prism.languages.qsharp;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/qsharp.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/r.js":
/*!******************************************!*\
  !*** ./node_modules/refractor/lang/r.js ***!
  \******************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = r;\nr.displayName = \"r\";\nr.aliases = [];\nfunction r(Prism) {\n    Prism.languages.r = {\n        comment: /#.*/,\n        string: {\n            pattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true\n        },\n        \"percent-operator\": {\n            // Includes user-defined operators\n            // and %%, %*%, %/%, %in%, %o%, %x%\n            pattern: /%[^%\\s]*%/,\n            alias: \"operator\"\n        },\n        boolean: /\\b(?:FALSE|TRUE)\\b/,\n        ellipsis: /\\.\\.(?:\\.|\\d+)/,\n        number: [\n            /\\b(?:Inf|NaN)\\b/,\n            /(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/\n        ],\n        keyword: /\\b(?:NA|NA_character_|NA_complex_|NA_integer_|NA_real_|NULL|break|else|for|function|if|in|next|repeat|while)\\b/,\n        operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\n        punctuation: /[(){}\\[\\],;]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvci5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxFQUFFQyxXQUFXLEdBQUc7QUFDaEJELEVBQUVFLE9BQU8sR0FBRyxFQUFFO0FBQ2QsU0FBU0YsRUFBRUcsS0FBSztJQUNkQSxNQUFNQyxTQUFTLENBQUNKLENBQUMsR0FBRztRQUNsQkssU0FBUztRQUNUQyxRQUFRO1lBQ05DLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0Esb0JBQW9CO1lBQ2xCLGtDQUFrQztZQUNsQyxtQ0FBbUM7WUFDbkNELFNBQVM7WUFDVEUsT0FBTztRQUNUO1FBQ0FDLFNBQVM7UUFDVEMsVUFBVTtRQUNWQyxRQUFRO1lBQ047WUFDQTtTQUNEO1FBQ0RDLFNBQ0U7UUFDRkMsVUFBVTtRQUNWQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9yLmpzPzRlNWQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gclxuci5kaXNwbGF5TmFtZSA9ICdyJ1xuci5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIHIoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLnIgPSB7XG4gICAgY29tbWVudDogLyMuKi8sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvKFsnXCJdKSg/OlxcXFwufCg/IVxcMSlbXlxcXFxcXHJcXG5dKSpcXDEvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICAncGVyY2VudC1vcGVyYXRvcic6IHtcbiAgICAgIC8vIEluY2x1ZGVzIHVzZXItZGVmaW5lZCBvcGVyYXRvcnNcbiAgICAgIC8vIGFuZCAlJSwgJSolLCAlLyUsICVpbiUsICVvJSwgJXglXG4gICAgICBwYXR0ZXJuOiAvJVteJVxcc10qJS8sXG4gICAgICBhbGlhczogJ29wZXJhdG9yJ1xuICAgIH0sXG4gICAgYm9vbGVhbjogL1xcYig/OkZBTFNFfFRSVUUpXFxiLyxcbiAgICBlbGxpcHNpczogL1xcLlxcLig/OlxcLnxcXGQrKS8sXG4gICAgbnVtYmVyOiBbXG4gICAgICAvXFxiKD86SW5mfE5hTilcXGIvLFxuICAgICAgLyg/OlxcYjB4W1xcZEEtRmEtZl0rKD86XFwuXFxkKik/fFxcYlxcZCsoPzpcXC5cXGQqKT98XFxCXFwuXFxkKykoPzpbRWVQcF1bKy1dP1xcZCspP1tpTF0/L1xuICAgIF0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzpOQXxOQV9jaGFyYWN0ZXJffE5BX2NvbXBsZXhffE5BX2ludGVnZXJffE5BX3JlYWxffE5VTEx8YnJlYWt8ZWxzZXxmb3J8ZnVuY3Rpb258aWZ8aW58bmV4dHxyZXBlYXR8d2hpbGUpXFxiLyxcbiAgICBvcGVyYXRvcjogLy0+Pz4/fDwoPzo9fDw/LSk/fFs+PSFdPT98Ojo/fCYmP3xcXHxcXHw/fFsrKlxcL14kQH5dLyxcbiAgICBwdW5jdHVhdGlvbjogL1soKXt9XFxbXFxdLDtdL1xuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInIiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZ3JlZWR5IiwiYWxpYXMiLCJib29sZWFuIiwiZWxsaXBzaXMiLCJudW1iZXIiLCJrZXl3b3JkIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/r.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/racket.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/racket.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorScheme = __webpack_require__(/*! ./scheme.js */ \"(ssr)/./node_modules/refractor/lang/scheme.js\");\nmodule.exports = racket;\nracket.displayName = \"racket\";\nracket.aliases = [\n    \"rkt\"\n];\nfunction racket(Prism) {\n    Prism.register(refractorScheme);\n    Prism.languages.racket = Prism.languages.extend(\"scheme\", {\n        \"lambda-parameter\": {\n            // the racket lambda syntax is a lot more complex, so we won't even attempt to capture it.\n            // this will just prevent false positives of the `function` pattern\n            pattern: /([(\\[]lambda\\s+[(\\[])[^()\\[\\]'\\s]+/,\n            lookbehind: true\n        }\n    });\n    Prism.languages.insertBefore(\"racket\", \"string\", {\n        lang: {\n            pattern: /^#lang.+/m,\n            greedy: true,\n            alias: \"keyword\"\n        }\n    });\n    Prism.languages.rkt = Prism.languages.racket;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcmFja2V0LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsSUFBSUEsa0JBQWtCQyxtQkFBT0EsQ0FBQztBQUM5QkMsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUc7SUFBQztDQUFNO0FBQ3hCLFNBQVNGLE9BQU9HLEtBQUs7SUFDbkJBLE1BQU1DLFFBQVEsQ0FBQ1I7SUFDZk8sTUFBTUUsU0FBUyxDQUFDTCxNQUFNLEdBQUdHLE1BQU1FLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLFVBQVU7UUFDeEQsb0JBQW9CO1lBQ2xCLDBGQUEwRjtZQUMxRixtRUFBbUU7WUFDbkVDLFNBQVM7WUFDVEMsWUFBWTtRQUNkO0lBQ0Y7SUFDQUwsTUFBTUUsU0FBUyxDQUFDSSxZQUFZLENBQUMsVUFBVSxVQUFVO1FBQy9DQyxNQUFNO1lBQ0pILFNBQVM7WUFDVEksUUFBUTtZQUNSQyxPQUFPO1FBQ1Q7SUFDRjtJQUNBVCxNQUFNRSxTQUFTLENBQUNRLEdBQUcsR0FBR1YsTUFBTUUsU0FBUyxDQUFDTCxNQUFNO0FBQzlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3JhY2tldC5qcz8zMWRkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xudmFyIHJlZnJhY3RvclNjaGVtZSA9IHJlcXVpcmUoJy4vc2NoZW1lLmpzJylcbm1vZHVsZS5leHBvcnRzID0gcmFja2V0XG5yYWNrZXQuZGlzcGxheU5hbWUgPSAncmFja2V0J1xucmFja2V0LmFsaWFzZXMgPSBbJ3JrdCddXG5mdW5jdGlvbiByYWNrZXQoUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yU2NoZW1lKVxuICBQcmlzbS5sYW5ndWFnZXMucmFja2V0ID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnc2NoZW1lJywge1xuICAgICdsYW1iZGEtcGFyYW1ldGVyJzoge1xuICAgICAgLy8gdGhlIHJhY2tldCBsYW1iZGEgc3ludGF4IGlzIGEgbG90IG1vcmUgY29tcGxleCwgc28gd2Ugd29uJ3QgZXZlbiBhdHRlbXB0IHRvIGNhcHR1cmUgaXQuXG4gICAgICAvLyB0aGlzIHdpbGwganVzdCBwcmV2ZW50IGZhbHNlIHBvc2l0aXZlcyBvZiB0aGUgYGZ1bmN0aW9uYCBwYXR0ZXJuXG4gICAgICBwYXR0ZXJuOiAvKFsoXFxbXWxhbWJkYVxccytbKFxcW10pW14oKVxcW1xcXSdcXHNdKy8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfVxuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdyYWNrZXQnLCAnc3RyaW5nJywge1xuICAgIGxhbmc6IHtcbiAgICAgIHBhdHRlcm46IC9eI2xhbmcuKy9tLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgIH1cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLnJrdCA9IFByaXNtLmxhbmd1YWdlcy5yYWNrZXRcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JTY2hlbWUiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsInJhY2tldCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImluc2VydEJlZm9yZSIsImxhbmciLCJncmVlZHkiLCJhbGlhcyIsInJrdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/racket.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/reason.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/reason.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = reason;\nreason.displayName = \"reason\";\nreason.aliases = [];\nfunction reason(Prism) {\n    Prism.languages.reason = Prism.languages.extend(\"clike\", {\n        string: {\n            pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n            greedy: true\n        },\n        // 'class-name' must be matched *after* 'constructor' defined below\n        \"class-name\": /\\b[A-Z]\\w*/,\n        keyword: /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n        operator: /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/\n    });\n    Prism.languages.insertBefore(\"reason\", \"class-name\", {\n        char: {\n            pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n            greedy: true\n        },\n        // Negative look-ahead prevents from matching things like String.capitalize\n        constructor: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n        label: {\n            pattern: /\\b[a-z]\\w*(?=::)/,\n            alias: \"symbol\"\n        }\n    }) // We can't match functions property, so let's not even try.\n    ;\n    delete Prism.languages.reason.function;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcmVhc29uLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLE9BQU9DLFdBQVcsR0FBRztBQUNyQkQsT0FBT0UsT0FBTyxHQUFHLEVBQUU7QUFDbkIsU0FBU0YsT0FBT0csS0FBSztJQUNuQkEsTUFBTUMsU0FBUyxDQUFDSixNQUFNLEdBQUdHLE1BQU1DLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLFNBQVM7UUFDdkRDLFFBQVE7WUFDTkMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQSxtRUFBbUU7UUFDbkUsY0FBYztRQUNkQyxTQUNFO1FBQ0ZDLFVBQ0U7SUFDSjtJQUNBUCxNQUFNQyxTQUFTLENBQUNPLFlBQVksQ0FBQyxVQUFVLGNBQWM7UUFDbkRDLE1BQU07WUFDSkwsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQSwyRUFBMkU7UUFDM0VLLGFBQWE7UUFDYkMsT0FBTztZQUNMUCxTQUFTO1lBQ1RRLE9BQU87UUFDVDtJQUNGLEdBQUcsNERBQTREOztJQUMvRCxPQUFPWixNQUFNQyxTQUFTLENBQUNKLE1BQU0sQ0FBQ2dCLFFBQVE7QUFDeEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcmVhc29uLmpzPzUyNzUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gcmVhc29uXG5yZWFzb24uZGlzcGxheU5hbWUgPSAncmVhc29uJ1xucmVhc29uLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gcmVhc29uKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5yZWFzb24gPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdjbGlrZScsIHtcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIig/OlxcXFwoPzpcXHJcXG58W1xcc1xcU10pfFteXFxcXFxcclxcblwiXSkqXCIvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICAvLyAnY2xhc3MtbmFtZScgbXVzdCBiZSBtYXRjaGVkICphZnRlciogJ2NvbnN0cnVjdG9yJyBkZWZpbmVkIGJlbG93XG4gICAgJ2NsYXNzLW5hbWUnOiAvXFxiW0EtWl1cXHcqLyxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OmFuZHxhc3xhc3NlcnR8YmVnaW58Y2xhc3N8Y29uc3RyYWludHxkb3xkb25lfGRvd250b3xlbHNlfGVuZHxleGNlcHRpb258ZXh0ZXJuYWx8Zm9yfGZ1bnxmdW5jdGlvbnxmdW5jdG9yfGlmfGlufGluY2x1ZGV8aW5oZXJpdHxpbml0aWFsaXplcnxsYXp5fGxldHxtZXRob2R8bW9kdWxlfG11dGFibGV8bmV3fG5vbnJlY3xvYmplY3R8b2Z8b3Blbnxvcnxwcml2YXRlfHJlY3xzaWd8c3RydWN0fHN3aXRjaHx0aGVufHRvfHRyeXx0eXBlfHZhbHx2aXJ0dWFsfHdoZW58d2hpbGV8d2l0aClcXGIvLFxuICAgIG9wZXJhdG9yOlxuICAgICAgL1xcLnszfXw6Wzo9XXxcXHw+fC0+fD0oPzo9PT98Pik/fDw9P3w+PT98W3xePycjIX5gXXxbK1xcLSpcXC9dXFwuP3xcXGIoPzphc3J8bGFuZHxsb3J8bHNsfGxzcnxseG9yfG1vZClcXGIvXG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ3JlYXNvbicsICdjbGFzcy1uYW1lJywge1xuICAgIGNoYXI6IHtcbiAgICAgIHBhdHRlcm46IC8nKD86XFxcXHhbXFxkYS1mXXsyfXxcXFxcb1swLTNdWzAtN11bMC03XXxcXFxcXFxkezN9fFxcXFwufFteJ1xcXFxcXHJcXG5dKScvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICAvLyBOZWdhdGl2ZSBsb29rLWFoZWFkIHByZXZlbnRzIGZyb20gbWF0Y2hpbmcgdGhpbmdzIGxpa2UgU3RyaW5nLmNhcGl0YWxpemVcbiAgICBjb25zdHJ1Y3RvcjogL1xcYltBLVpdXFx3KlxcYig/IVxccypcXC4pLyxcbiAgICBsYWJlbDoge1xuICAgICAgcGF0dGVybjogL1xcYlthLXpdXFx3Kig/PTo6KS8sXG4gICAgICBhbGlhczogJ3N5bWJvbCdcbiAgICB9XG4gIH0pIC8vIFdlIGNhbid0IG1hdGNoIGZ1bmN0aW9ucyBwcm9wZXJ0eSwgc28gbGV0J3Mgbm90IGV2ZW4gdHJ5LlxuICBkZWxldGUgUHJpc20ubGFuZ3VhZ2VzLnJlYXNvbi5mdW5jdGlvblxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJyZWFzb24iLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImV4dGVuZCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJrZXl3b3JkIiwib3BlcmF0b3IiLCJpbnNlcnRCZWZvcmUiLCJjaGFyIiwiY29uc3RydWN0b3IiLCJsYWJlbCIsImFsaWFzIiwiZnVuY3Rpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/reason.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/regex.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/regex.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = regex;\nregex.displayName = \"regex\";\nregex.aliases = [];\nfunction regex(Prism) {\n    ;\n    (function(Prism) {\n        var specialEscape = {\n            pattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\n            alias: \"escape\"\n        };\n        var escape = /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/;\n        var charSet = {\n            pattern: /\\.|\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n            alias: \"class-name\"\n        };\n        var charSetWithoutDot = {\n            pattern: /\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n            alias: \"class-name\"\n        };\n        var rangeChar = \"(?:[^\\\\\\\\-]|\" + escape.source + \")\";\n        var range = RegExp(rangeChar + \"-\" + rangeChar) // the name of a capturing group\n        ;\n        var groupName = {\n            pattern: /(<|')[^<>']+(?=[>']$)/,\n            lookbehind: true,\n            alias: \"variable\"\n        };\n        Prism.languages.regex = {\n            \"char-class\": {\n                pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\n                lookbehind: true,\n                inside: {\n                    \"char-class-negation\": {\n                        pattern: /(^\\[)\\^/,\n                        lookbehind: true,\n                        alias: \"operator\"\n                    },\n                    \"char-class-punctuation\": {\n                        pattern: /^\\[|\\]$/,\n                        alias: \"punctuation\"\n                    },\n                    range: {\n                        pattern: range,\n                        inside: {\n                            escape: escape,\n                            \"range-punctuation\": {\n                                pattern: /-/,\n                                alias: \"operator\"\n                            }\n                        }\n                    },\n                    \"special-escape\": specialEscape,\n                    \"char-set\": charSetWithoutDot,\n                    escape: escape\n                }\n            },\n            \"special-escape\": specialEscape,\n            \"char-set\": charSet,\n            backreference: [\n                {\n                    // a backreference which is not an octal escape\n                    pattern: /\\\\(?![123][0-7]{2})[1-9]/,\n                    alias: \"keyword\"\n                },\n                {\n                    pattern: /\\\\k<[^<>']+>/,\n                    alias: \"keyword\",\n                    inside: {\n                        \"group-name\": groupName\n                    }\n                }\n            ],\n            anchor: {\n                pattern: /[$^]|\\\\[ABbGZz]/,\n                alias: \"function\"\n            },\n            escape: escape,\n            group: [\n                {\n                    // https://docs.oracle.com/javase/10/docs/api/java/util/regex/Pattern.html\n                    // https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference?view=netframework-4.7.2#grouping-constructs\n                    // (), (?<name>), (?'name'), (?>), (?:), (?=), (?!), (?<=), (?<!), (?is-m), (?i-m:)\n                    pattern: /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\n                    alias: \"punctuation\",\n                    inside: {\n                        \"group-name\": groupName\n                    }\n                },\n                {\n                    pattern: /\\)/,\n                    alias: \"punctuation\"\n                }\n            ],\n            quantifier: {\n                pattern: /(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/,\n                alias: \"number\"\n            },\n            alternation: {\n                pattern: /\\|/,\n                alias: \"keyword\"\n            }\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcmVnZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsTUFBTUMsV0FBVyxHQUFHO0FBQ3BCRCxNQUFNRSxPQUFPLEdBQUcsRUFBRTtBQUNsQixTQUFTRixNQUFNRyxLQUFLOztJQUNoQixVQUFVQSxLQUFLO1FBQ2YsSUFBSUMsZ0JBQWdCO1lBQ2xCQyxTQUFTO1lBQ1RDLE9BQU87UUFDVDtRQUNBLElBQUlDLFNBQ0Y7UUFDRixJQUFJQyxVQUFVO1lBQ1pILFNBQVM7WUFDVEMsT0FBTztRQUNUO1FBQ0EsSUFBSUcsb0JBQW9CO1lBQ3RCSixTQUFTO1lBQ1RDLE9BQU87UUFDVDtRQUNBLElBQUlJLFlBQVksaUJBQWlCSCxPQUFPSSxNQUFNLEdBQUc7UUFDakQsSUFBSUMsUUFBUUMsT0FBT0gsWUFBWSxNQUFNQSxXQUFXLGdDQUFnQzs7UUFDaEYsSUFBSUksWUFBWTtZQUNkVCxTQUFTO1lBQ1RVLFlBQVk7WUFDWlQsT0FBTztRQUNUO1FBQ0FILE1BQU1hLFNBQVMsQ0FBQ2hCLEtBQUssR0FBRztZQUN0QixjQUFjO2dCQUNaSyxTQUFTO2dCQUNUVSxZQUFZO2dCQUNaRSxRQUFRO29CQUNOLHVCQUF1Qjt3QkFDckJaLFNBQVM7d0JBQ1RVLFlBQVk7d0JBQ1pULE9BQU87b0JBQ1Q7b0JBQ0EsMEJBQTBCO3dCQUN4QkQsU0FBUzt3QkFDVEMsT0FBTztvQkFDVDtvQkFDQU0sT0FBTzt3QkFDTFAsU0FBU087d0JBQ1RLLFFBQVE7NEJBQ05WLFFBQVFBOzRCQUNSLHFCQUFxQjtnQ0FDbkJGLFNBQVM7Z0NBQ1RDLE9BQU87NEJBQ1Q7d0JBQ0Y7b0JBQ0Y7b0JBQ0Esa0JBQWtCRjtvQkFDbEIsWUFBWUs7b0JBQ1pGLFFBQVFBO2dCQUNWO1lBQ0Y7WUFDQSxrQkFBa0JIO1lBQ2xCLFlBQVlJO1lBQ1pVLGVBQWU7Z0JBQ2I7b0JBQ0UsK0NBQStDO29CQUMvQ2IsU0FBUztvQkFDVEMsT0FBTztnQkFDVDtnQkFDQTtvQkFDRUQsU0FBUztvQkFDVEMsT0FBTztvQkFDUFcsUUFBUTt3QkFDTixjQUFjSDtvQkFDaEI7Z0JBQ0Y7YUFDRDtZQUNESyxRQUFRO2dCQUNOZCxTQUFTO2dCQUNUQyxPQUFPO1lBQ1Q7WUFDQUMsUUFBUUE7WUFDUmEsT0FBTztnQkFDTDtvQkFDRSwwRUFBMEU7b0JBQzFFLHNKQUFzSjtvQkFDdEosbUZBQW1GO29CQUNuRmYsU0FDRTtvQkFDRkMsT0FBTztvQkFDUFcsUUFBUTt3QkFDTixjQUFjSDtvQkFDaEI7Z0JBQ0Y7Z0JBQ0E7b0JBQ0VULFNBQVM7b0JBQ1RDLE9BQU87Z0JBQ1Q7YUFDRDtZQUNEZSxZQUFZO2dCQUNWaEIsU0FBUztnQkFDVEMsT0FBTztZQUNUO1lBQ0FnQixhQUFhO2dCQUNYakIsU0FBUztnQkFDVEMsT0FBTztZQUNUO1FBQ0Y7SUFDRixHQUFHSDtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3JlZ2V4LmpzPzJlY2EiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gcmVnZXhcbnJlZ2V4LmRpc3BsYXlOYW1lID0gJ3JlZ2V4J1xucmVnZXguYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiByZWdleChQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIHZhciBzcGVjaWFsRXNjYXBlID0ge1xuICAgICAgcGF0dGVybjogL1xcXFxbXFxcXCgpe31bXFxdXiQrKj98Ll0vLFxuICAgICAgYWxpYXM6ICdlc2NhcGUnXG4gICAgfVxuICAgIHZhciBlc2NhcGUgPVxuICAgICAgL1xcXFwoPzp4W1xcZGEtZkEtRl17Mn18dVtcXGRhLWZBLUZdezR9fHVcXHtbXFxkYS1mQS1GXStcXH18MFswLTddezAsMn18WzEyM11bMC03XXsyfXxjW2EtekEtWl18LikvXG4gICAgdmFyIGNoYXJTZXQgPSB7XG4gICAgICBwYXR0ZXJuOiAvXFwufFxcXFxbd3NkXXxcXFxccFxce1tee31dK1xcfS9pLFxuICAgICAgYWxpYXM6ICdjbGFzcy1uYW1lJ1xuICAgIH1cbiAgICB2YXIgY2hhclNldFdpdGhvdXREb3QgPSB7XG4gICAgICBwYXR0ZXJuOiAvXFxcXFt3c2RdfFxcXFxwXFx7W157fV0rXFx9L2ksXG4gICAgICBhbGlhczogJ2NsYXNzLW5hbWUnXG4gICAgfVxuICAgIHZhciByYW5nZUNoYXIgPSAnKD86W15cXFxcXFxcXC1dfCcgKyBlc2NhcGUuc291cmNlICsgJyknXG4gICAgdmFyIHJhbmdlID0gUmVnRXhwKHJhbmdlQ2hhciArICctJyArIHJhbmdlQ2hhcikgLy8gdGhlIG5hbWUgb2YgYSBjYXB0dXJpbmcgZ3JvdXBcbiAgICB2YXIgZ3JvdXBOYW1lID0ge1xuICAgICAgcGF0dGVybjogLyg8fCcpW148PiddKyg/PVs+J10kKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICd2YXJpYWJsZSdcbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzLnJlZ2V4ID0ge1xuICAgICAgJ2NoYXItY2xhc3MnOiB7XG4gICAgICAgIHBhdHRlcm46IC8oKD86XnxbXlxcXFxdKSg/OlxcXFxcXFxcKSopXFxbKD86W15cXFxcXFxdXXxcXFxcW1xcc1xcU10pKlxcXS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgICdjaGFyLWNsYXNzLW5lZ2F0aW9uJzoge1xuICAgICAgICAgICAgcGF0dGVybjogLyheXFxbKVxcXi8sXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgICAgYWxpYXM6ICdvcGVyYXRvcidcbiAgICAgICAgICB9LFxuICAgICAgICAgICdjaGFyLWNsYXNzLXB1bmN0dWF0aW9uJzoge1xuICAgICAgICAgICAgcGF0dGVybjogL15cXFt8XFxdJC8sXG4gICAgICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgICAgIH0sXG4gICAgICAgICAgcmFuZ2U6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IHJhbmdlLFxuICAgICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICAgIGVzY2FwZTogZXNjYXBlLFxuICAgICAgICAgICAgICAncmFuZ2UtcHVuY3R1YXRpb24nOiB7XG4gICAgICAgICAgICAgICAgcGF0dGVybjogLy0vLFxuICAgICAgICAgICAgICAgIGFsaWFzOiAnb3BlcmF0b3InXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgICdzcGVjaWFsLWVzY2FwZSc6IHNwZWNpYWxFc2NhcGUsXG4gICAgICAgICAgJ2NoYXItc2V0JzogY2hhclNldFdpdGhvdXREb3QsXG4gICAgICAgICAgZXNjYXBlOiBlc2NhcGVcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgICdzcGVjaWFsLWVzY2FwZSc6IHNwZWNpYWxFc2NhcGUsXG4gICAgICAnY2hhci1zZXQnOiBjaGFyU2V0LFxuICAgICAgYmFja3JlZmVyZW5jZTogW1xuICAgICAgICB7XG4gICAgICAgICAgLy8gYSBiYWNrcmVmZXJlbmNlIHdoaWNoIGlzIG5vdCBhbiBvY3RhbCBlc2NhcGVcbiAgICAgICAgICBwYXR0ZXJuOiAvXFxcXCg/IVsxMjNdWzAtN117Mn0pWzEtOV0vLFxuICAgICAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IC9cXFxcazxbXjw+J10rPi8sXG4gICAgICAgICAgYWxpYXM6ICdrZXl3b3JkJyxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICdncm91cC1uYW1lJzogZ3JvdXBOYW1lXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgYW5jaG9yOiB7XG4gICAgICAgIHBhdHRlcm46IC9bJF5dfFxcXFxbQUJiR1p6XS8sXG4gICAgICAgIGFsaWFzOiAnZnVuY3Rpb24nXG4gICAgICB9LFxuICAgICAgZXNjYXBlOiBlc2NhcGUsXG4gICAgICBncm91cDogW1xuICAgICAgICB7XG4gICAgICAgICAgLy8gaHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vamF2YXNlLzEwL2RvY3MvYXBpL2phdmEvdXRpbC9yZWdleC9QYXR0ZXJuLmh0bWxcbiAgICAgICAgICAvLyBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi11cy9kb3RuZXQvc3RhbmRhcmQvYmFzZS10eXBlcy9yZWd1bGFyLWV4cHJlc3Npb24tbGFuZ3VhZ2UtcXVpY2stcmVmZXJlbmNlP3ZpZXc9bmV0ZnJhbWV3b3JrLTQuNy4yI2dyb3VwaW5nLWNvbnN0cnVjdHNcbiAgICAgICAgICAvLyAoKSwgKD88bmFtZT4pLCAoPyduYW1lJyksICg/PiksICg/OiksICg/PSksICg/ISksICg/PD0pLCAoPzwhKSwgKD9pcy1tKSwgKD9pLW06KVxuICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAvXFwoKD86XFw/KD86PFtePD4nXSs+fCdbXjw+J10rJ3xbPjpdfDw/Wz0hXXxbaWRtbnN1eFVdKyg/Oi1baWRtbnN1eFVdKyk/Oj8pKT8vLFxuICAgICAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgJ2dyb3VwLW5hbWUnOiBncm91cE5hbWVcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXFwpLyxcbiAgICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgcXVhbnRpZmllcjoge1xuICAgICAgICBwYXR0ZXJuOiAvKD86WysqP118XFx7XFxkKyg/OixcXGQqKT9cXH0pWz8rXT8vLFxuICAgICAgICBhbGlhczogJ251bWJlcidcbiAgICAgIH0sXG4gICAgICBhbHRlcm5hdGlvbjoge1xuICAgICAgICBwYXR0ZXJuOiAvXFx8LyxcbiAgICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgICAgfVxuICAgIH1cbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInJlZ2V4IiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJzcGVjaWFsRXNjYXBlIiwicGF0dGVybiIsImFsaWFzIiwiZXNjYXBlIiwiY2hhclNldCIsImNoYXJTZXRXaXRob3V0RG90IiwicmFuZ2VDaGFyIiwic291cmNlIiwicmFuZ2UiLCJSZWdFeHAiLCJncm91cE5hbWUiLCJsb29rYmVoaW5kIiwibGFuZ3VhZ2VzIiwiaW5zaWRlIiwiYmFja3JlZmVyZW5jZSIsImFuY2hvciIsImdyb3VwIiwicXVhbnRpZmllciIsImFsdGVybmF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/regex.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/rego.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/rego.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = rego;\nrego.displayName = \"rego\";\nrego.aliases = [];\nfunction rego(Prism) {\n    // https://www.openpolicyagent.org/docs/latest/policy-reference/\n    Prism.languages.rego = {\n        comment: /#.*/,\n        property: {\n            pattern: /(^|[^\\\\.])(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|`[^`]*`|\\b[a-z_]\\w*\\b)(?=\\s*:(?!=))/i,\n            lookbehind: true,\n            greedy: true\n        },\n        string: {\n            pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|`[^`]*`/,\n            lookbehind: true,\n            greedy: true\n        },\n        keyword: /\\b(?:as|default|else|import|not|null|package|set(?=\\s*\\()|some|with)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        function: {\n            pattern: /\\b[a-z_]\\w*\\b(?:\\s*\\.\\s*\\b[a-z_]\\w*\\b)*(?=\\s*\\()/i,\n            inside: {\n                namespace: /\\b\\w+\\b(?=\\s*\\.)/,\n                punctuation: /\\./\n            }\n        },\n        number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n        operator: /[-+*/%|&]|[<>:=]=?|!=|\\b_\\b/,\n        punctuation: /[,;.\\[\\]{}()]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcmVnby5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDakIsZ0VBQWdFO0lBQ2hFQSxNQUFNQyxTQUFTLENBQUNKLElBQUksR0FBRztRQUNyQkssU0FBUztRQUNUQyxVQUFVO1lBQ1JDLFNBQ0U7WUFDRkMsWUFBWTtZQUNaQyxRQUFRO1FBQ1Y7UUFDQUMsUUFBUTtZQUNOSCxTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsUUFBUTtRQUNWO1FBQ0FFLFNBQ0U7UUFDRkMsU0FBUztRQUNUQyxVQUFVO1lBQ1JOLFNBQVM7WUFDVE8sUUFBUTtnQkFDTkMsV0FBVztnQkFDWEMsYUFBYTtZQUNmO1FBQ0Y7UUFDQUMsUUFBUTtRQUNSQyxVQUFVO1FBQ1ZGLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3JlZ28uanM/ZGIyYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSByZWdvXG5yZWdvLmRpc3BsYXlOYW1lID0gJ3JlZ28nXG5yZWdvLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gcmVnbyhQcmlzbSkge1xuICAvLyBodHRwczovL3d3dy5vcGVucG9saWN5YWdlbnQub3JnL2RvY3MvbGF0ZXN0L3BvbGljeS1yZWZlcmVuY2UvXG4gIFByaXNtLmxhbmd1YWdlcy5yZWdvID0ge1xuICAgIGNvbW1lbnQ6IC8jLiovLFxuICAgIHByb3BlcnR5OiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKF58W15cXFxcLl0pKD86XCIoPzpcXFxcLnxbXlxcXFxcIlxcclxcbl0pKlwifGBbXmBdKmB8XFxiW2Etel9dXFx3KlxcYikoPz1cXHMqOig/IT0pKS9pLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvKF58W15cXFxcXSlcIig/OlxcXFwufFteXFxcXFwiXFxyXFxuXSkqXCJ8YFteYF0qYC8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OmFzfGRlZmF1bHR8ZWxzZXxpbXBvcnR8bm90fG51bGx8cGFja2FnZXxzZXQoPz1cXHMqXFwoKXxzb21lfHdpdGgpXFxiLyxcbiAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvLFxuICAgIGZ1bmN0aW9uOiB7XG4gICAgICBwYXR0ZXJuOiAvXFxiW2Etel9dXFx3KlxcYig/OlxccypcXC5cXHMqXFxiW2Etel9dXFx3KlxcYikqKD89XFxzKlxcKCkvaSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBuYW1lc3BhY2U6IC9cXGJcXHcrXFxiKD89XFxzKlxcLikvLFxuICAgICAgICBwdW5jdHVhdGlvbjogL1xcLi9cbiAgICAgIH1cbiAgICB9LFxuICAgIG51bWJlcjogLy0/XFxiXFxkKyg/OlxcLlxcZCspPyg/OmVbKy1dP1xcZCspP1xcYi9pLFxuICAgIG9wZXJhdG9yOiAvWy0rKi8lfCZdfFs8Pjo9XT0/fCE9fFxcYl9cXGIvLFxuICAgIHB1bmN0dWF0aW9uOiAvWyw7LlxcW1xcXXt9KCldL1xuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInJlZ28iLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwcm9wZXJ0eSIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiZ3JlZWR5Iiwic3RyaW5nIiwia2V5d29yZCIsImJvb2xlYW4iLCJmdW5jdGlvbiIsImluc2lkZSIsIm5hbWVzcGFjZSIsInB1bmN0dWF0aW9uIiwibnVtYmVyIiwib3BlcmF0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/rego.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/renpy.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/renpy.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = renpy;\nrenpy.displayName = \"renpy\";\nrenpy.aliases = [\n    \"rpy\"\n];\nfunction renpy(Prism) {\n    Prism.languages.renpy = {\n        comment: {\n            pattern: /(^|[^\\\\])#.+/,\n            lookbehind: true\n        },\n        string: {\n            pattern: /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\])*\\2|(?:^#?(?:(?:[0-9a-fA-F]){3}|[0-9a-fA-F]{6})$)/m,\n            greedy: true\n        },\n        function: /\\b[a-z_]\\w*(?=\\()/i,\n        property: /\\b(?:Update|UpdateVersion|action|activate_sound|adv_nvl_transition|after_load_transition|align|alpha|alt|anchor|antialias|area|auto|background|bar_invert|bar_resizing|bar_vertical|black_color|bold|bottom_bar|bottom_gutter|bottom_margin|bottom_padding|box_reverse|box_wrap|can_update|caret|child|color|crop|default_afm_enable|default_afm_time|default_fullscreen|default_text_cps|developer|directory_name|drag_handle|drag_joined|drag_name|drag_raise|draggable|dragged|drop_shadow|drop_shadow_color|droppable|dropped|easein|easeout|edgescroll|end_game_transition|end_splash_transition|enter_replay_transition|enter_sound|enter_transition|enter_yesno_transition|executable_name|exit_replay_transition|exit_sound|exit_transition|exit_yesno_transition|fadein|fadeout|first_indent|first_spacing|fit_first|focus|focus_mask|font|foreground|game_main_transition|get_installed_packages|google_play_key|google_play_salt|ground|has_music|has_sound|has_voice|height|help|hinting|hover|hover_background|hover_color|hover_sound|hovered|hyperlink_functions|idle|idle_color|image_style|include_update|insensitive|insensitive_background|insensitive_color|inside|intra_transition|italic|justify|kerning|keyboard_focus|language|layer_clipping|layers|layout|left_bar|left_gutter|left_margin|left_padding|length|line_leading|line_overlap_split|line_spacing|linear|main_game_transition|main_menu_music|maximum|min_width|minimum|minwidth|modal|mouse|mousewheel|name|narrator_menu|newline_indent|nvl_adv_transition|offset|order_reverse|outlines|overlay_functions|pos|position|prefix|radius|range|rest_indent|right_bar|right_gutter|right_margin|right_padding|rotate|rotate_pad|ruby_style|sample_sound|save_directory|say_attribute_transition|screen_height|screen_width|scrollbars|selected_hover|selected_hover_color|selected_idle|selected_idle_color|selected_insensitive|show_side_image|show_two_window|side_spacing|side_xpos|side_ypos|size|size_group|slow_cps|slow_cps_multiplier|spacing|strikethrough|subpixel|text_align|text_style|text_xpos|text_y_fudge|text_ypos|thumb|thumb_offset|thumb_shadow|thumbnail_height|thumbnail_width|time|top_bar|top_gutter|top_margin|top_padding|translations|underline|unscrollable|update|value|version|version_name|version_tuple|vertical|width|window_hide_transition|window_icon|window_left_padding|window_show_transition|window_title|windows_icon|xadjustment|xalign|xanchor|xanchoraround|xaround|xcenter|xfill|xinitial|xmargin|xmaximum|xminimum|xoffset|xofsset|xpadding|xpos|xsize|xzoom|yadjustment|yalign|yanchor|yanchoraround|yaround|ycenter|yfill|yinitial|ymargin|ymaximum|yminimum|yoffset|ypadding|ypos|ysize|ysizexysize|yzoom|zoom|zorder)\\b/,\n        tag: /\\b(?:bar|block|button|buttoscreenn|drag|draggroup|fixed|frame|grid|[hv]box|hotbar|hotspot|image|imagebutton|imagemap|input|key|label|menu|mm_menu_frame|mousearea|nvl|parallel|screen|self|side|tag|text|textbutton|timer|vbar|viewport|window)\\b|\\$/,\n        keyword: /\\b(?:None|add|adjustment|alignaround|allow|angle|animation|around|as|assert|behind|box_layout|break|build|cache|call|center|changed|child_size|choice|circles|class|clear|clicked|clipping|clockwise|config|contains|continue|corner1|corner2|counterclockwise|def|default|define|del|delay|disabled|disabled_text|dissolve|elif|else|event|except|exclude|exec|expression|fade|finally|for|from|function|global|gm_root|has|hide|id|if|import|in|init|is|jump|knot|lambda|left|less_rounded|mm_root|movie|music|null|on|onlayer|pass|pause|persistent|play|print|python|queue|raise|random|renpy|repeat|return|right|rounded_window|scene|scope|set|show|slow|slow_abortable|slow_done|sound|stop|store|style|style_group|substitute|suffix|theme|transform|transform_anchor|transpose|try|ui|unhovered|updater|use|voice|while|widget|widget_hover|widget_selected|widget_text|yield)\\b/,\n        boolean: /\\b(?:[Ff]alse|[Tt]rue)\\b/,\n        number: /(?:\\b(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*(?:\\.\\d*)?)|\\B\\.\\d+)(?:e[+-]?\\d+)?j?/i,\n        operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:and|at|not|or|with)\\b/,\n        punctuation: /[{}[\\];(),.:]/\n    };\n    Prism.languages.rpy = Prism.languages.renpy;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcmVucHkuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsTUFBTUMsV0FBVyxHQUFHO0FBQ3BCRCxNQUFNRSxPQUFPLEdBQUc7SUFBQztDQUFNO0FBQ3ZCLFNBQVNGLE1BQU1HLEtBQUs7SUFDbEJBLE1BQU1DLFNBQVMsQ0FBQ0osS0FBSyxHQUFHO1FBQ3RCSyxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsWUFBWTtRQUNkO1FBQ0FDLFFBQVE7WUFDTkYsU0FDRTtZQUNGRyxRQUFRO1FBQ1Y7UUFDQUMsVUFBVTtRQUNWQyxVQUNFO1FBQ0ZDLEtBQUs7UUFDTEMsU0FDRTtRQUNGQyxTQUFTO1FBQ1RDLFFBQ0U7UUFDRkMsVUFDRTtRQUNGQyxhQUFhO0lBQ2Y7SUFDQWQsTUFBTUMsU0FBUyxDQUFDYyxHQUFHLEdBQUdmLE1BQU1DLFNBQVMsQ0FBQ0osS0FBSztBQUM3QyIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9yZW5weS5qcz9mYTIwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlbnB5XG5yZW5weS5kaXNwbGF5TmFtZSA9ICdyZW5weSdcbnJlbnB5LmFsaWFzZXMgPSBbJ3JweSddXG5mdW5jdGlvbiByZW5weShQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMucmVucHkgPSB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogLyhefFteXFxcXF0pIy4rLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhcIlwiXCJ8JycnKVtcXHNcXFNdKz9cXDF8KFwifCcpKD86XFxcXC58KD8hXFwyKVteXFxcXF0pKlxcMnwoPzpeIz8oPzooPzpbMC05YS1mQS1GXSl7M318WzAtOWEtZkEtRl17Nn0pJCkvbSxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgZnVuY3Rpb246IC9cXGJbYS16X11cXHcqKD89XFwoKS9pLFxuICAgIHByb3BlcnR5OlxuICAgICAgL1xcYig/OlVwZGF0ZXxVcGRhdGVWZXJzaW9ufGFjdGlvbnxhY3RpdmF0ZV9zb3VuZHxhZHZfbnZsX3RyYW5zaXRpb258YWZ0ZXJfbG9hZF90cmFuc2l0aW9ufGFsaWdufGFscGhhfGFsdHxhbmNob3J8YW50aWFsaWFzfGFyZWF8YXV0b3xiYWNrZ3JvdW5kfGJhcl9pbnZlcnR8YmFyX3Jlc2l6aW5nfGJhcl92ZXJ0aWNhbHxibGFja19jb2xvcnxib2xkfGJvdHRvbV9iYXJ8Ym90dG9tX2d1dHRlcnxib3R0b21fbWFyZ2lufGJvdHRvbV9wYWRkaW5nfGJveF9yZXZlcnNlfGJveF93cmFwfGNhbl91cGRhdGV8Y2FyZXR8Y2hpbGR8Y29sb3J8Y3JvcHxkZWZhdWx0X2FmbV9lbmFibGV8ZGVmYXVsdF9hZm1fdGltZXxkZWZhdWx0X2Z1bGxzY3JlZW58ZGVmYXVsdF90ZXh0X2Nwc3xkZXZlbG9wZXJ8ZGlyZWN0b3J5X25hbWV8ZHJhZ19oYW5kbGV8ZHJhZ19qb2luZWR8ZHJhZ19uYW1lfGRyYWdfcmFpc2V8ZHJhZ2dhYmxlfGRyYWdnZWR8ZHJvcF9zaGFkb3d8ZHJvcF9zaGFkb3dfY29sb3J8ZHJvcHBhYmxlfGRyb3BwZWR8ZWFzZWlufGVhc2VvdXR8ZWRnZXNjcm9sbHxlbmRfZ2FtZV90cmFuc2l0aW9ufGVuZF9zcGxhc2hfdHJhbnNpdGlvbnxlbnRlcl9yZXBsYXlfdHJhbnNpdGlvbnxlbnRlcl9zb3VuZHxlbnRlcl90cmFuc2l0aW9ufGVudGVyX3llc25vX3RyYW5zaXRpb258ZXhlY3V0YWJsZV9uYW1lfGV4aXRfcmVwbGF5X3RyYW5zaXRpb258ZXhpdF9zb3VuZHxleGl0X3RyYW5zaXRpb258ZXhpdF95ZXNub190cmFuc2l0aW9ufGZhZGVpbnxmYWRlb3V0fGZpcnN0X2luZGVudHxmaXJzdF9zcGFjaW5nfGZpdF9maXJzdHxmb2N1c3xmb2N1c19tYXNrfGZvbnR8Zm9yZWdyb3VuZHxnYW1lX21haW5fdHJhbnNpdGlvbnxnZXRfaW5zdGFsbGVkX3BhY2thZ2VzfGdvb2dsZV9wbGF5X2tleXxnb29nbGVfcGxheV9zYWx0fGdyb3VuZHxoYXNfbXVzaWN8aGFzX3NvdW5kfGhhc192b2ljZXxoZWlnaHR8aGVscHxoaW50aW5nfGhvdmVyfGhvdmVyX2JhY2tncm91bmR8aG92ZXJfY29sb3J8aG92ZXJfc291bmR8aG92ZXJlZHxoeXBlcmxpbmtfZnVuY3Rpb25zfGlkbGV8aWRsZV9jb2xvcnxpbWFnZV9zdHlsZXxpbmNsdWRlX3VwZGF0ZXxpbnNlbnNpdGl2ZXxpbnNlbnNpdGl2ZV9iYWNrZ3JvdW5kfGluc2Vuc2l0aXZlX2NvbG9yfGluc2lkZXxpbnRyYV90cmFuc2l0aW9ufGl0YWxpY3xqdXN0aWZ5fGtlcm5pbmd8a2V5Ym9hcmRfZm9jdXN8bGFuZ3VhZ2V8bGF5ZXJfY2xpcHBpbmd8bGF5ZXJzfGxheW91dHxsZWZ0X2JhcnxsZWZ0X2d1dHRlcnxsZWZ0X21hcmdpbnxsZWZ0X3BhZGRpbmd8bGVuZ3RofGxpbmVfbGVhZGluZ3xsaW5lX292ZXJsYXBfc3BsaXR8bGluZV9zcGFjaW5nfGxpbmVhcnxtYWluX2dhbWVfdHJhbnNpdGlvbnxtYWluX21lbnVfbXVzaWN8bWF4aW11bXxtaW5fd2lkdGh8bWluaW11bXxtaW53aWR0aHxtb2RhbHxtb3VzZXxtb3VzZXdoZWVsfG5hbWV8bmFycmF0b3JfbWVudXxuZXdsaW5lX2luZGVudHxudmxfYWR2X3RyYW5zaXRpb258b2Zmc2V0fG9yZGVyX3JldmVyc2V8b3V0bGluZXN8b3ZlcmxheV9mdW5jdGlvbnN8cG9zfHBvc2l0aW9ufHByZWZpeHxyYWRpdXN8cmFuZ2V8cmVzdF9pbmRlbnR8cmlnaHRfYmFyfHJpZ2h0X2d1dHRlcnxyaWdodF9tYXJnaW58cmlnaHRfcGFkZGluZ3xyb3RhdGV8cm90YXRlX3BhZHxydWJ5X3N0eWxlfHNhbXBsZV9zb3VuZHxzYXZlX2RpcmVjdG9yeXxzYXlfYXR0cmlidXRlX3RyYW5zaXRpb258c2NyZWVuX2hlaWdodHxzY3JlZW5fd2lkdGh8c2Nyb2xsYmFyc3xzZWxlY3RlZF9ob3ZlcnxzZWxlY3RlZF9ob3Zlcl9jb2xvcnxzZWxlY3RlZF9pZGxlfHNlbGVjdGVkX2lkbGVfY29sb3J8c2VsZWN0ZWRfaW5zZW5zaXRpdmV8c2hvd19zaWRlX2ltYWdlfHNob3dfdHdvX3dpbmRvd3xzaWRlX3NwYWNpbmd8c2lkZV94cG9zfHNpZGVfeXBvc3xzaXplfHNpemVfZ3JvdXB8c2xvd19jcHN8c2xvd19jcHNfbXVsdGlwbGllcnxzcGFjaW5nfHN0cmlrZXRocm91Z2h8c3VicGl4ZWx8dGV4dF9hbGlnbnx0ZXh0X3N0eWxlfHRleHRfeHBvc3x0ZXh0X3lfZnVkZ2V8dGV4dF95cG9zfHRodW1ifHRodW1iX29mZnNldHx0aHVtYl9zaGFkb3d8dGh1bWJuYWlsX2hlaWdodHx0aHVtYm5haWxfd2lkdGh8dGltZXx0b3BfYmFyfHRvcF9ndXR0ZXJ8dG9wX21hcmdpbnx0b3BfcGFkZGluZ3x0cmFuc2xhdGlvbnN8dW5kZXJsaW5lfHVuc2Nyb2xsYWJsZXx1cGRhdGV8dmFsdWV8dmVyc2lvbnx2ZXJzaW9uX25hbWV8dmVyc2lvbl90dXBsZXx2ZXJ0aWNhbHx3aWR0aHx3aW5kb3dfaGlkZV90cmFuc2l0aW9ufHdpbmRvd19pY29ufHdpbmRvd19sZWZ0X3BhZGRpbmd8d2luZG93X3Nob3dfdHJhbnNpdGlvbnx3aW5kb3dfdGl0bGV8d2luZG93c19pY29ufHhhZGp1c3RtZW50fHhhbGlnbnx4YW5jaG9yfHhhbmNob3Jhcm91bmR8eGFyb3VuZHx4Y2VudGVyfHhmaWxsfHhpbml0aWFsfHhtYXJnaW58eG1heGltdW18eG1pbmltdW18eG9mZnNldHx4b2Zzc2V0fHhwYWRkaW5nfHhwb3N8eHNpemV8eHpvb218eWFkanVzdG1lbnR8eWFsaWdufHlhbmNob3J8eWFuY2hvcmFyb3VuZHx5YXJvdW5kfHljZW50ZXJ8eWZpbGx8eWluaXRpYWx8eW1hcmdpbnx5bWF4aW11bXx5bWluaW11bXx5b2Zmc2V0fHlwYWRkaW5nfHlwb3N8eXNpemV8eXNpemV4eXNpemV8eXpvb218em9vbXx6b3JkZXIpXFxiLyxcbiAgICB0YWc6IC9cXGIoPzpiYXJ8YmxvY2t8YnV0dG9ufGJ1dHRvc2NyZWVubnxkcmFnfGRyYWdncm91cHxmaXhlZHxmcmFtZXxncmlkfFtodl1ib3h8aG90YmFyfGhvdHNwb3R8aW1hZ2V8aW1hZ2VidXR0b258aW1hZ2VtYXB8aW5wdXR8a2V5fGxhYmVsfG1lbnV8bW1fbWVudV9mcmFtZXxtb3VzZWFyZWF8bnZsfHBhcmFsbGVsfHNjcmVlbnxzZWxmfHNpZGV8dGFnfHRleHR8dGV4dGJ1dHRvbnx0aW1lcnx2YmFyfHZpZXdwb3J0fHdpbmRvdylcXGJ8XFwkLyxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/Ok5vbmV8YWRkfGFkanVzdG1lbnR8YWxpZ25hcm91bmR8YWxsb3d8YW5nbGV8YW5pbWF0aW9ufGFyb3VuZHxhc3xhc3NlcnR8YmVoaW5kfGJveF9sYXlvdXR8YnJlYWt8YnVpbGR8Y2FjaGV8Y2FsbHxjZW50ZXJ8Y2hhbmdlZHxjaGlsZF9zaXplfGNob2ljZXxjaXJjbGVzfGNsYXNzfGNsZWFyfGNsaWNrZWR8Y2xpcHBpbmd8Y2xvY2t3aXNlfGNvbmZpZ3xjb250YWluc3xjb250aW51ZXxjb3JuZXIxfGNvcm5lcjJ8Y291bnRlcmNsb2Nrd2lzZXxkZWZ8ZGVmYXVsdHxkZWZpbmV8ZGVsfGRlbGF5fGRpc2FibGVkfGRpc2FibGVkX3RleHR8ZGlzc29sdmV8ZWxpZnxlbHNlfGV2ZW50fGV4Y2VwdHxleGNsdWRlfGV4ZWN8ZXhwcmVzc2lvbnxmYWRlfGZpbmFsbHl8Zm9yfGZyb218ZnVuY3Rpb258Z2xvYmFsfGdtX3Jvb3R8aGFzfGhpZGV8aWR8aWZ8aW1wb3J0fGlufGluaXR8aXN8anVtcHxrbm90fGxhbWJkYXxsZWZ0fGxlc3Nfcm91bmRlZHxtbV9yb290fG1vdmllfG11c2ljfG51bGx8b258b25sYXllcnxwYXNzfHBhdXNlfHBlcnNpc3RlbnR8cGxheXxwcmludHxweXRob258cXVldWV8cmFpc2V8cmFuZG9tfHJlbnB5fHJlcGVhdHxyZXR1cm58cmlnaHR8cm91bmRlZF93aW5kb3d8c2NlbmV8c2NvcGV8c2V0fHNob3d8c2xvd3xzbG93X2Fib3J0YWJsZXxzbG93X2RvbmV8c291bmR8c3RvcHxzdG9yZXxzdHlsZXxzdHlsZV9ncm91cHxzdWJzdGl0dXRlfHN1ZmZpeHx0aGVtZXx0cmFuc2Zvcm18dHJhbnNmb3JtX2FuY2hvcnx0cmFuc3Bvc2V8dHJ5fHVpfHVuaG92ZXJlZHx1cGRhdGVyfHVzZXx2b2ljZXx3aGlsZXx3aWRnZXR8d2lkZ2V0X2hvdmVyfHdpZGdldF9zZWxlY3RlZHx3aWRnZXRfdGV4dHx5aWVsZClcXGIvLFxuICAgIGJvb2xlYW46IC9cXGIoPzpbRmZdYWxzZXxbVHRdcnVlKVxcYi8sXG4gICAgbnVtYmVyOlxuICAgICAgLyg/OlxcYig/OjBbYm9dKT8oPzooPzpcXGR8MHhbXFxkYS1mXSlbXFxkYS1mXSooPzpcXC5cXGQqKT8pfFxcQlxcLlxcZCspKD86ZVsrLV0/XFxkKyk/aj8vaSxcbiAgICBvcGVyYXRvcjpcbiAgICAgIC9bLSslPV09P3whPXxcXCpcXCo/PT98XFwvXFwvPz0/fDxbPD0+XT98Pls9Pl0/fFsmfF5+XXxcXGIoPzphbmR8YXR8bm90fG9yfHdpdGgpXFxiLyxcbiAgICBwdW5jdHVhdGlvbjogL1t7fVtcXF07KCksLjpdL1xuICB9XG4gIFByaXNtLmxhbmd1YWdlcy5ycHkgPSBQcmlzbS5sYW5ndWFnZXMucmVucHlcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicmVucHkiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsInN0cmluZyIsImdyZWVkeSIsImZ1bmN0aW9uIiwicHJvcGVydHkiLCJ0YWciLCJrZXl3b3JkIiwiYm9vbGVhbiIsIm51bWJlciIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iLCJycHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/renpy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/rest.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/rest.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = rest;\nrest.displayName = \"rest\";\nrest.aliases = [];\nfunction rest(Prism) {\n    Prism.languages.rest = {\n        table: [\n            {\n                pattern: /(^[\\t ]*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1[+|].+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/m,\n                lookbehind: true,\n                inside: {\n                    punctuation: /\\||(?:\\+[=-]+)+\\+/\n                }\n            },\n            {\n                pattern: /(^[\\t ]*)=+ [ =]*=(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1=+ [ =]*=(?=(?:\\r?\\n|\\r){2}|\\s*$)/m,\n                lookbehind: true,\n                inside: {\n                    punctuation: /[=-]+/\n                }\n            }\n        ],\n        // Directive-like patterns\n        \"substitution-def\": {\n            pattern: /(^[\\t ]*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,\n            lookbehind: true,\n            inside: {\n                substitution: {\n                    pattern: /^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,\n                    alias: \"attr-value\",\n                    inside: {\n                        punctuation: /^\\||\\|$/\n                    }\n                },\n                directive: {\n                    pattern: /( )(?! )[^:]+::/,\n                    lookbehind: true,\n                    alias: \"function\",\n                    inside: {\n                        punctuation: /::$/\n                    }\n                }\n            }\n        },\n        \"link-target\": [\n            {\n                pattern: /(^[\\t ]*\\.\\. )\\[[^\\]]+\\]/m,\n                lookbehind: true,\n                alias: \"string\",\n                inside: {\n                    punctuation: /^\\[|\\]$/\n                }\n            },\n            {\n                pattern: /(^[\\t ]*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,\n                lookbehind: true,\n                alias: \"string\",\n                inside: {\n                    punctuation: /^_|:$/\n                }\n            }\n        ],\n        directive: {\n            pattern: /(^[\\t ]*\\.\\. )[^:]+::/m,\n            lookbehind: true,\n            alias: \"function\",\n            inside: {\n                punctuation: /::$/\n            }\n        },\n        comment: {\n            // The two alternatives try to prevent highlighting of blank comments\n            pattern: /(^[\\t ]*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,\n            lookbehind: true\n        },\n        title: [\n            // Overlined and underlined\n            {\n                pattern: /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,\n                inside: {\n                    punctuation: /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n                    important: /.+/\n                }\n            },\n            {\n                pattern: /(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,\n                lookbehind: true,\n                inside: {\n                    punctuation: /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n                    important: /.+/\n                }\n            }\n        ],\n        hr: {\n            pattern: /((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,\n            lookbehind: true,\n            alias: \"punctuation\"\n        },\n        field: {\n            pattern: /(^[\\t ]*):[^:\\r\\n]+:(?= )/m,\n            lookbehind: true,\n            alias: \"attr-name\"\n        },\n        \"command-line-option\": {\n            pattern: /(^[\\t ]*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,\n            lookbehind: true,\n            alias: \"symbol\"\n        },\n        \"literal-block\": {\n            pattern: /::(?:\\r?\\n|\\r){2}([ \\t]+)(?![ \\t]).+(?:(?:\\r?\\n|\\r)\\1.+)*/,\n            inside: {\n                \"literal-block-punctuation\": {\n                    pattern: /^::/,\n                    alias: \"punctuation\"\n                }\n            }\n        },\n        \"quoted-literal-block\": {\n            pattern: /::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,\n            inside: {\n                \"literal-block-punctuation\": {\n                    pattern: /^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,\n                    alias: \"punctuation\"\n                }\n            }\n        },\n        \"list-bullet\": {\n            pattern: /(^[\\t ]*)(?:[*+\\-•‣⁃]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,\n            lookbehind: true,\n            alias: \"punctuation\"\n        },\n        \"doctest-block\": {\n            pattern: /(^[\\t ]*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,\n            lookbehind: true,\n            inside: {\n                punctuation: /^>>>/\n            }\n        },\n        inline: [\n            {\n                pattern: /(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s)(?:(?!\\2).)*\\S\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,\n                lookbehind: true,\n                inside: {\n                    bold: {\n                        pattern: /(^\\*\\*).+(?=\\*\\*$)/,\n                        lookbehind: true\n                    },\n                    italic: {\n                        pattern: /(^\\*).+(?=\\*$)/,\n                        lookbehind: true\n                    },\n                    \"inline-literal\": {\n                        pattern: /(^``).+(?=``$)/,\n                        lookbehind: true,\n                        alias: \"symbol\"\n                    },\n                    role: {\n                        pattern: /^:[^:]+:|:[^:]+:$/,\n                        alias: \"function\",\n                        inside: {\n                            punctuation: /^:|:$/\n                        }\n                    },\n                    \"interpreted-text\": {\n                        pattern: /(^`).+(?=`$)/,\n                        lookbehind: true,\n                        alias: \"attr-value\"\n                    },\n                    substitution: {\n                        pattern: /(^\\|).+(?=\\|$)/,\n                        lookbehind: true,\n                        alias: \"attr-value\"\n                    },\n                    punctuation: /\\*\\*?|``?|\\|/\n                }\n            }\n        ],\n        link: [\n            {\n                pattern: /\\[[^\\[\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,\n                alias: \"string\",\n                inside: {\n                    punctuation: /^\\[|\\]_$/\n                }\n            },\n            {\n                pattern: /(?:\\b[a-z\\d]+(?:[_.:+][a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,\n                alias: \"string\",\n                inside: {\n                    punctuation: /^_?`|`$|`?_?_$/\n                }\n            }\n        ],\n        // Line block start,\n        // quote attribution,\n        // explicit markup start,\n        // and anonymous hyperlink target shortcut (__)\n        punctuation: {\n            pattern: /(^[\\t ]*)(?:\\|(?= |$)|(?:---?|—|\\.\\.|__)(?= )|\\.\\.$)/m,\n            lookbehind: true\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/rest.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/rip.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/rip.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = rip;\nrip.displayName = \"rip\";\nrip.aliases = [];\nfunction rip(Prism) {\n    Prism.languages.rip = {\n        comment: {\n            pattern: /#.*/,\n            greedy: true\n        },\n        char: {\n            pattern: /\\B`[^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]\\b/,\n            greedy: true\n        },\n        string: {\n            pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true\n        },\n        regex: {\n            pattern: /(^|[^/])\\/(?!\\/)(?:\\[[^\\n\\r\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/(?=\\s*(?:$|[\\r\\n,.;})]))/,\n            lookbehind: true,\n            greedy: true\n        },\n        keyword: /(?:=>|->)|\\b(?:case|catch|class|else|exit|finally|if|raise|return|switch|try)\\b/,\n        builtin: /@|\\bSystem\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        date: /\\b\\d{4}-\\d{2}-\\d{2}\\b/,\n        time: /\\b\\d{2}:\\d{2}:\\d{2}\\b/,\n        datetime: /\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\b/,\n        symbol: /:[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/,\n        number: /[+-]?\\b(?:\\d+\\.\\d+|\\d+)\\b/,\n        punctuation: /(?:\\.{2,3})|[`,.:;=\\/\\\\()<>\\[\\]{}]/,\n        reference: /[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcmlwLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLElBQUlDLFdBQVcsR0FBRztBQUNsQkQsSUFBSUUsT0FBTyxHQUFHLEVBQUU7QUFDaEIsU0FBU0YsSUFBSUcsS0FBSztJQUNoQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsTUFBTTtZQUNKRixTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBRSxRQUFRO1lBQ05ILFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FHLE9BQU87WUFDTEosU0FDRTtZQUNGSyxZQUFZO1lBQ1pKLFFBQVE7UUFDVjtRQUNBSyxTQUNFO1FBQ0ZDLFNBQVM7UUFDVEMsU0FBUztRQUNUQyxNQUFNO1FBQ05DLE1BQU07UUFDTkMsVUFBVTtRQUNWQyxRQUFRO1FBQ1JDLFFBQVE7UUFDUkMsYUFBYTtRQUNiQyxXQUFXO0lBQ2I7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9yaXAuanM/ZmYyYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSByaXBcbnJpcC5kaXNwbGF5TmFtZSA9ICdyaXAnXG5yaXAuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiByaXAoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLnJpcCA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvIy4qLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgY2hhcjoge1xuICAgICAgcGF0dGVybjogL1xcQmBbXlxcc2AnXCIsLjo7I1xcL1xcXFwoKTw+XFxbXFxde31dXFxiLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvKFwifCcpKD86XFxcXC58KD8hXFwxKVteXFxcXFxcclxcbl0pKlxcMS8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHJlZ2V4OiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKF58W14vXSlcXC8oPyFcXC8pKD86XFxbW15cXG5cXHJcXF1dKlxcXXxcXFxcLnxbXi9cXFxcXFxyXFxuXFxbXSkrXFwvKD89XFxzKig/OiR8W1xcclxcbiwuO30pXSkpLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGtleXdvcmQ6XG4gICAgICAvKD86PT58LT4pfFxcYig/OmNhc2V8Y2F0Y2h8Y2xhc3N8ZWxzZXxleGl0fGZpbmFsbHl8aWZ8cmFpc2V8cmV0dXJufHN3aXRjaHx0cnkpXFxiLyxcbiAgICBidWlsdGluOiAvQHxcXGJTeXN0ZW1cXGIvLFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAgZGF0ZTogL1xcYlxcZHs0fS1cXGR7Mn0tXFxkezJ9XFxiLyxcbiAgICB0aW1lOiAvXFxiXFxkezJ9OlxcZHsyfTpcXGR7Mn1cXGIvLFxuICAgIGRhdGV0aW1lOiAvXFxiXFxkezR9LVxcZHsyfS1cXGR7Mn1UXFxkezJ9OlxcZHsyfTpcXGR7Mn1cXGIvLFxuICAgIHN5bWJvbDogLzpbXlxcZFxcc2AnXCIsLjo7I1xcL1xcXFwoKTw+XFxbXFxde31dW15cXHNgJ1wiLC46OyNcXC9cXFxcKCk8PlxcW1xcXXt9XSovLFxuICAgIG51bWJlcjogL1srLV0/XFxiKD86XFxkK1xcLlxcZCt8XFxkKylcXGIvLFxuICAgIHB1bmN0dWF0aW9uOiAvKD86XFwuezIsM30pfFtgLC46Oz1cXC9cXFxcKCk8PlxcW1xcXXt9XS8sXG4gICAgcmVmZXJlbmNlOiAvW15cXGRcXHNgJ1wiLC46OyNcXC9cXFxcKCk8PlxcW1xcXXt9XVteXFxzYCdcIiwuOjsjXFwvXFxcXCgpPD5cXFtcXF17fV0qL1xuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInJpcCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJncmVlZHkiLCJjaGFyIiwic3RyaW5nIiwicmVnZXgiLCJsb29rYmVoaW5kIiwia2V5d29yZCIsImJ1aWx0aW4iLCJib29sZWFuIiwiZGF0ZSIsInRpbWUiLCJkYXRldGltZSIsInN5bWJvbCIsIm51bWJlciIsInB1bmN0dWF0aW9uIiwicmVmZXJlbmNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/rip.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/roboconf.js":
/*!*************************************************!*\
  !*** ./node_modules/refractor/lang/roboconf.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = roboconf;\nroboconf.displayName = \"roboconf\";\nroboconf.aliases = [];\nfunction roboconf(Prism) {\n    Prism.languages.roboconf = {\n        comment: /#.*/,\n        keyword: {\n            pattern: /(^|\\s)(?:(?:external|import)\\b|(?:facet|instance of)(?=[ \\t]+[\\w-]+[ \\t]*\\{))/,\n            lookbehind: true\n        },\n        component: {\n            pattern: /[\\w-]+(?=[ \\t]*\\{)/,\n            alias: \"variable\"\n        },\n        property: /[\\w.-]+(?=[ \\t]*:)/,\n        value: {\n            pattern: /(=[ \\t]*(?![ \\t]))[^,;]+/,\n            lookbehind: true,\n            alias: \"attr-value\"\n        },\n        optional: {\n            pattern: /\\(optional\\)/,\n            alias: \"builtin\"\n        },\n        wildcard: {\n            pattern: /(\\.)\\*/,\n            lookbehind: true,\n            alias: \"operator\"\n        },\n        punctuation: /[{},.;:=]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcm9ib2NvbmYuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsU0FBU0MsV0FBVyxHQUFHO0FBQ3ZCRCxTQUFTRSxPQUFPLEdBQUcsRUFBRTtBQUNyQixTQUFTRixTQUFTRyxLQUFLO0lBQ3JCQSxNQUFNQyxTQUFTLENBQUNKLFFBQVEsR0FBRztRQUN6QkssU0FBUztRQUNUQyxTQUFTO1lBQ1BDLFNBQ0U7WUFDRkMsWUFBWTtRQUNkO1FBQ0FDLFdBQVc7WUFDVEYsU0FBUztZQUNURyxPQUFPO1FBQ1Q7UUFDQUMsVUFBVTtRQUNWQyxPQUFPO1lBQ0xMLFNBQVM7WUFDVEMsWUFBWTtZQUNaRSxPQUFPO1FBQ1Q7UUFDQUcsVUFBVTtZQUNSTixTQUFTO1lBQ1RHLE9BQU87UUFDVDtRQUNBSSxVQUFVO1lBQ1JQLFNBQVM7WUFDVEMsWUFBWTtZQUNaRSxPQUFPO1FBQ1Q7UUFDQUssYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcm9ib2NvbmYuanM/ZmEyOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSByb2JvY29uZlxucm9ib2NvbmYuZGlzcGxheU5hbWUgPSAncm9ib2NvbmYnXG5yb2JvY29uZi5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIHJvYm9jb25mKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5yb2JvY29uZiA9IHtcbiAgICBjb21tZW50OiAvIy4qLyxcbiAgICBrZXl3b3JkOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKF58XFxzKSg/Oig/OmV4dGVybmFsfGltcG9ydClcXGJ8KD86ZmFjZXR8aW5zdGFuY2Ugb2YpKD89WyBcXHRdK1tcXHctXStbIFxcdF0qXFx7KSkvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgY29tcG9uZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvW1xcdy1dKyg/PVsgXFx0XSpcXHspLyxcbiAgICAgIGFsaWFzOiAndmFyaWFibGUnXG4gICAgfSxcbiAgICBwcm9wZXJ0eTogL1tcXHcuLV0rKD89WyBcXHRdKjopLyxcbiAgICB2YWx1ZToge1xuICAgICAgcGF0dGVybjogLyg9WyBcXHRdKig/IVsgXFx0XSkpW14sO10rLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ2F0dHItdmFsdWUnXG4gICAgfSxcbiAgICBvcHRpb25hbDoge1xuICAgICAgcGF0dGVybjogL1xcKG9wdGlvbmFsXFwpLyxcbiAgICAgIGFsaWFzOiAnYnVpbHRpbidcbiAgICB9LFxuICAgIHdpbGRjYXJkOiB7XG4gICAgICBwYXR0ZXJuOiAvKFxcLilcXCovLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAnb3BlcmF0b3InXG4gICAgfSxcbiAgICBwdW5jdHVhdGlvbjogL1t7fSwuOzo9XS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJyb2JvY29uZiIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsImtleXdvcmQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImNvbXBvbmVudCIsImFsaWFzIiwicHJvcGVydHkiLCJ2YWx1ZSIsIm9wdGlvbmFsIiwid2lsZGNhcmQiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/roboconf.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/robotframework.js":
/*!*******************************************************!*\
  !*** ./node_modules/refractor/lang/robotframework.js ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = robotframework;\nrobotframework.displayName = \"robotframework\";\nrobotframework.aliases = [];\nfunction robotframework(Prism) {\n    ;\n    (function(Prism) {\n        var comment = {\n            pattern: /(^[ \\t]*| {2}|\\t)#.*/m,\n            lookbehind: true,\n            greedy: true\n        };\n        var variable = {\n            pattern: /((?:^|[^\\\\])(?:\\\\{2})*)[$@&%]\\{(?:[^{}\\r\\n]|\\{[^{}\\r\\n]*\\})*\\}/,\n            lookbehind: true,\n            inside: {\n                punctuation: /^[$@&%]\\{|\\}$/\n            }\n        };\n        function createSection(name, inside) {\n            var extendecInside = {};\n            extendecInside[\"section-header\"] = {\n                pattern: /^ ?\\*{3}.+?\\*{3}/,\n                alias: \"keyword\"\n            } // copy inside tokens\n            ;\n            for(var token in inside){\n                extendecInside[token] = inside[token];\n            }\n            extendecInside[\"tag\"] = {\n                pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)\\[[-\\w]+\\]/,\n                lookbehind: true,\n                inside: {\n                    punctuation: /\\[|\\]/\n                }\n            };\n            extendecInside[\"variable\"] = variable;\n            extendecInside[\"comment\"] = comment;\n            return {\n                pattern: RegExp(/^ ?\\*{3}[ \\t]*<name>[ \\t]*\\*{3}(?:.|[\\r\\n](?!\\*{3}))*/.source.replace(/<name>/g, function() {\n                    return name;\n                }), \"im\"),\n                alias: \"section\",\n                inside: extendecInside\n            };\n        }\n        var docTag = {\n            pattern: /(\\[Documentation\\](?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n            lookbehind: true,\n            alias: \"string\"\n        };\n        var testNameLike = {\n            pattern: /([\\r\\n] ?)(?!#)(?:\\S(?:[ \\t]\\S)*)+/,\n            lookbehind: true,\n            alias: \"function\",\n            inside: {\n                variable: variable\n            }\n        };\n        var testPropertyLike = {\n            pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)(?!\\[|\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n            lookbehind: true,\n            inside: {\n                variable: variable\n            }\n        };\n        Prism.languages[\"robotframework\"] = {\n            settings: createSection(\"Settings\", {\n                documentation: {\n                    pattern: /([\\r\\n] ?Documentation(?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n                    lookbehind: true,\n                    alias: \"string\"\n                },\n                property: {\n                    pattern: /([\\r\\n] ?)(?!\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n                    lookbehind: true\n                }\n            }),\n            variables: createSection(\"Variables\"),\n            \"test-cases\": createSection(\"Test Cases\", {\n                \"test-name\": testNameLike,\n                documentation: docTag,\n                property: testPropertyLike\n            }),\n            keywords: createSection(\"Keywords\", {\n                \"keyword-name\": testNameLike,\n                documentation: docTag,\n                property: testPropertyLike\n            }),\n            tasks: createSection(\"Tasks\", {\n                \"task-name\": testNameLike,\n                documentation: docTag,\n                property: testPropertyLike\n            }),\n            comment: comment\n        };\n        Prism.languages.robot = Prism.languages[\"robotframework\"];\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcm9ib3RmcmFtZXdvcmsuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsZUFBZUMsV0FBVyxHQUFHO0FBQzdCRCxlQUFlRSxPQUFPLEdBQUcsRUFBRTtBQUMzQixTQUFTRixlQUFlRyxLQUFLOztJQUN6QixVQUFVQSxLQUFLO1FBQ2YsSUFBSUMsVUFBVTtZQUNaQyxTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsUUFBUTtRQUNWO1FBQ0EsSUFBSUMsV0FBVztZQUNiSCxTQUFTO1lBQ1RDLFlBQVk7WUFDWkcsUUFBUTtnQkFDTkMsYUFBYTtZQUNmO1FBQ0Y7UUFDQSxTQUFTQyxjQUFjQyxJQUFJLEVBQUVILE1BQU07WUFDakMsSUFBSUksaUJBQWlCLENBQUM7WUFDdEJBLGNBQWMsQ0FBQyxpQkFBaUIsR0FBRztnQkFDakNSLFNBQVM7Z0JBQ1RTLE9BQU87WUFDVCxFQUFFLHFCQUFxQjs7WUFDdkIsSUFBSyxJQUFJQyxTQUFTTixPQUFRO2dCQUN4QkksY0FBYyxDQUFDRSxNQUFNLEdBQUdOLE1BQU0sQ0FBQ00sTUFBTTtZQUN2QztZQUNBRixjQUFjLENBQUMsTUFBTSxHQUFHO2dCQUN0QlIsU0FBUztnQkFDVEMsWUFBWTtnQkFDWkcsUUFBUTtvQkFDTkMsYUFBYTtnQkFDZjtZQUNGO1lBQ0FHLGNBQWMsQ0FBQyxXQUFXLEdBQUdMO1lBQzdCSyxjQUFjLENBQUMsVUFBVSxHQUFHVDtZQUM1QixPQUFPO2dCQUNMQyxTQUFTVyxPQUNQLHdEQUF3REMsTUFBTSxDQUFDQyxPQUFPLENBQ3BFLFdBQ0E7b0JBQ0UsT0FBT047Z0JBQ1QsSUFFRjtnQkFFRkUsT0FBTztnQkFDUEwsUUFBUUk7WUFDVjtRQUNGO1FBQ0EsSUFBSU0sU0FBUztZQUNYZCxTQUNFO1lBQ0ZDLFlBQVk7WUFDWlEsT0FBTztRQUNUO1FBQ0EsSUFBSU0sZUFBZTtZQUNqQmYsU0FBUztZQUNUQyxZQUFZO1lBQ1pRLE9BQU87WUFDUEwsUUFBUTtnQkFDTkQsVUFBVUE7WUFDWjtRQUNGO1FBQ0EsSUFBSWEsbUJBQW1CO1lBQ3JCaEIsU0FBUztZQUNUQyxZQUFZO1lBQ1pHLFFBQVE7Z0JBQ05ELFVBQVVBO1lBQ1o7UUFDRjtRQUNBTCxNQUFNbUIsU0FBUyxDQUFDLGlCQUFpQixHQUFHO1lBQ2xDQyxVQUFVWixjQUFjLFlBQVk7Z0JBQ2xDYSxlQUFlO29CQUNibkIsU0FDRTtvQkFDRkMsWUFBWTtvQkFDWlEsT0FBTztnQkFDVDtnQkFDQVcsVUFBVTtvQkFDUnBCLFNBQVM7b0JBQ1RDLFlBQVk7Z0JBQ2Q7WUFDRjtZQUNBb0IsV0FBV2YsY0FBYztZQUN6QixjQUFjQSxjQUFjLGNBQWM7Z0JBQ3hDLGFBQWFTO2dCQUNiSSxlQUFlTDtnQkFDZk0sVUFBVUo7WUFDWjtZQUNBTSxVQUFVaEIsY0FBYyxZQUFZO2dCQUNsQyxnQkFBZ0JTO2dCQUNoQkksZUFBZUw7Z0JBQ2ZNLFVBQVVKO1lBQ1o7WUFDQU8sT0FBT2pCLGNBQWMsU0FBUztnQkFDNUIsYUFBYVM7Z0JBQ2JJLGVBQWVMO2dCQUNmTSxVQUFVSjtZQUNaO1lBQ0FqQixTQUFTQTtRQUNYO1FBQ0FELE1BQU1tQixTQUFTLENBQUNPLEtBQUssR0FBRzFCLE1BQU1tQixTQUFTLENBQUMsaUJBQWlCO0lBQzNELEdBQUduQjtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3JvYm90ZnJhbWV3b3JrLmpzP2NiZDAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gcm9ib3RmcmFtZXdvcmtcbnJvYm90ZnJhbWV3b3JrLmRpc3BsYXlOYW1lID0gJ3JvYm90ZnJhbWV3b3JrJ1xucm9ib3RmcmFtZXdvcmsuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiByb2JvdGZyYW1ld29yayhQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIHZhciBjb21tZW50ID0ge1xuICAgICAgcGF0dGVybjogLyheWyBcXHRdKnwgezJ9fFxcdCkjLiovbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9XG4gICAgdmFyIHZhcmlhYmxlID0ge1xuICAgICAgcGF0dGVybjogLygoPzpefFteXFxcXF0pKD86XFxcXHsyfSkqKVskQCYlXVxceyg/Oltee31cXHJcXG5dfFxce1tee31cXHJcXG5dKlxcfSkqXFx9LyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgcHVuY3R1YXRpb246IC9eWyRAJiVdXFx7fFxcfSQvXG4gICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNyZWF0ZVNlY3Rpb24obmFtZSwgaW5zaWRlKSB7XG4gICAgICB2YXIgZXh0ZW5kZWNJbnNpZGUgPSB7fVxuICAgICAgZXh0ZW5kZWNJbnNpZGVbJ3NlY3Rpb24taGVhZGVyJ10gPSB7XG4gICAgICAgIHBhdHRlcm46IC9eID9cXCp7M30uKz9cXCp7M30vLFxuICAgICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgICB9IC8vIGNvcHkgaW5zaWRlIHRva2Vuc1xuICAgICAgZm9yICh2YXIgdG9rZW4gaW4gaW5zaWRlKSB7XG4gICAgICAgIGV4dGVuZGVjSW5zaWRlW3Rva2VuXSA9IGluc2lkZVt0b2tlbl1cbiAgICAgIH1cbiAgICAgIGV4dGVuZGVjSW5zaWRlWyd0YWcnXSA9IHtcbiAgICAgICAgcGF0dGVybjogLyhbXFxyXFxuXSg/OiB7Mn18XFx0KVsgXFx0XSopXFxbWy1cXHddK1xcXS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXFxbfFxcXS9cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZXh0ZW5kZWNJbnNpZGVbJ3ZhcmlhYmxlJ10gPSB2YXJpYWJsZVxuICAgICAgZXh0ZW5kZWNJbnNpZGVbJ2NvbW1lbnQnXSA9IGNvbW1lbnRcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICAvXiA/XFwqezN9WyBcXHRdKjxuYW1lPlsgXFx0XSpcXCp7M30oPzoufFtcXHJcXG5dKD8hXFwqezN9KSkqLy5zb3VyY2UucmVwbGFjZShcbiAgICAgICAgICAgIC88bmFtZT4vZyxcbiAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIG5hbWVcbiAgICAgICAgICAgIH1cbiAgICAgICAgICApLFxuICAgICAgICAgICdpbSdcbiAgICAgICAgKSxcbiAgICAgICAgYWxpYXM6ICdzZWN0aW9uJyxcbiAgICAgICAgaW5zaWRlOiBleHRlbmRlY0luc2lkZVxuICAgICAgfVxuICAgIH1cbiAgICB2YXIgZG9jVGFnID0ge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhcXFtEb2N1bWVudGF0aW9uXFxdKD86IHsyfXxcXHQpWyBcXHRdKikoPyFbIFxcdF18IykoPzoufCg/Olxcclxcbj98XFxuKVsgXFx0XSpcXC57M30pKy8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdzdHJpbmcnXG4gICAgfVxuICAgIHZhciB0ZXN0TmFtZUxpa2UgPSB7XG4gICAgICBwYXR0ZXJuOiAvKFtcXHJcXG5dID8pKD8hIykoPzpcXFMoPzpbIFxcdF1cXFMpKikrLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ2Z1bmN0aW9uJyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICB2YXJpYWJsZTogdmFyaWFibGVcbiAgICAgIH1cbiAgICB9XG4gICAgdmFyIHRlc3RQcm9wZXJ0eUxpa2UgPSB7XG4gICAgICBwYXR0ZXJuOiAvKFtcXHJcXG5dKD86IHsyfXxcXHQpWyBcXHRdKikoPyFcXFt8XFwuezN9fCMpKD86XFxTKD86WyBcXHRdXFxTKSopKy8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHZhcmlhYmxlOiB2YXJpYWJsZVxuICAgICAgfVxuICAgIH1cbiAgICBQcmlzbS5sYW5ndWFnZXNbJ3JvYm90ZnJhbWV3b3JrJ10gPSB7XG4gICAgICBzZXR0aW5nczogY3JlYXRlU2VjdGlvbignU2V0dGluZ3MnLCB7XG4gICAgICAgIGRvY3VtZW50YXRpb246IHtcbiAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgLyhbXFxyXFxuXSA/RG9jdW1lbnRhdGlvbig/OiB7Mn18XFx0KVsgXFx0XSopKD8hWyBcXHRdfCMpKD86LnwoPzpcXHJcXG4/fFxcbilbIFxcdF0qXFwuezN9KSsvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgYWxpYXM6ICdzdHJpbmcnXG4gICAgICAgIH0sXG4gICAgICAgIHByb3BlcnR5OiB7XG4gICAgICAgICAgcGF0dGVybjogLyhbXFxyXFxuXSA/KSg/IVxcLnszfXwjKSg/OlxcUyg/OlsgXFx0XVxcUykqKSsvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgfVxuICAgICAgfSksXG4gICAgICB2YXJpYWJsZXM6IGNyZWF0ZVNlY3Rpb24oJ1ZhcmlhYmxlcycpLFxuICAgICAgJ3Rlc3QtY2FzZXMnOiBjcmVhdGVTZWN0aW9uKCdUZXN0IENhc2VzJywge1xuICAgICAgICAndGVzdC1uYW1lJzogdGVzdE5hbWVMaWtlLFxuICAgICAgICBkb2N1bWVudGF0aW9uOiBkb2NUYWcsXG4gICAgICAgIHByb3BlcnR5OiB0ZXN0UHJvcGVydHlMaWtlXG4gICAgICB9KSxcbiAgICAgIGtleXdvcmRzOiBjcmVhdGVTZWN0aW9uKCdLZXl3b3JkcycsIHtcbiAgICAgICAgJ2tleXdvcmQtbmFtZSc6IHRlc3ROYW1lTGlrZSxcbiAgICAgICAgZG9jdW1lbnRhdGlvbjogZG9jVGFnLFxuICAgICAgICBwcm9wZXJ0eTogdGVzdFByb3BlcnR5TGlrZVxuICAgICAgfSksXG4gICAgICB0YXNrczogY3JlYXRlU2VjdGlvbignVGFza3MnLCB7XG4gICAgICAgICd0YXNrLW5hbWUnOiB0ZXN0TmFtZUxpa2UsXG4gICAgICAgIGRvY3VtZW50YXRpb246IGRvY1RhZyxcbiAgICAgICAgcHJvcGVydHk6IHRlc3RQcm9wZXJ0eUxpa2VcbiAgICAgIH0pLFxuICAgICAgY29tbWVudDogY29tbWVudFxuICAgIH1cbiAgICBQcmlzbS5sYW5ndWFnZXMucm9ib3QgPSBQcmlzbS5sYW5ndWFnZXNbJ3JvYm90ZnJhbWV3b3JrJ11cbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInJvYm90ZnJhbWV3b3JrIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJjb21tZW50IiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJncmVlZHkiLCJ2YXJpYWJsZSIsImluc2lkZSIsInB1bmN0dWF0aW9uIiwiY3JlYXRlU2VjdGlvbiIsIm5hbWUiLCJleHRlbmRlY0luc2lkZSIsImFsaWFzIiwidG9rZW4iLCJSZWdFeHAiLCJzb3VyY2UiLCJyZXBsYWNlIiwiZG9jVGFnIiwidGVzdE5hbWVMaWtlIiwidGVzdFByb3BlcnR5TGlrZSIsImxhbmd1YWdlcyIsInNldHRpbmdzIiwiZG9jdW1lbnRhdGlvbiIsInByb3BlcnR5IiwidmFyaWFibGVzIiwia2V5d29yZHMiLCJ0YXNrcyIsInJvYm90Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/robotframework.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/ruby.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/ruby.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = ruby;\nruby.displayName = \"ruby\";\nruby.aliases = [\n    \"rb\"\n];\nfunction ruby(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.ruby = Prism.languages.extend(\"clike\", {\n            comment: {\n                pattern: /#.*|^=begin\\s[\\s\\S]*?^=end/m,\n                greedy: true\n            },\n            \"class-name\": {\n                pattern: /(\\b(?:class|module)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+|\\b[A-Z_]\\w*(?=\\s*\\.\\s*new\\b)/,\n                lookbehind: true,\n                inside: {\n                    punctuation: /[.\\\\]/\n                }\n            },\n            keyword: /\\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\\b/,\n            operator: /\\.{2,3}|&\\.|===|<?=>|[!=]?~|(?:&&|\\|\\||<<|>>|\\*\\*|[+\\-*/%<>!^&|=])=?|[?:]/,\n            punctuation: /[(){}[\\].,;]/\n        });\n        Prism.languages.insertBefore(\"ruby\", \"operator\", {\n            \"double-colon\": {\n                pattern: /::/,\n                alias: \"punctuation\"\n            }\n        });\n        var interpolation = {\n            pattern: /((?:^|[^\\\\])(?:\\\\{2})*)#\\{(?:[^{}]|\\{[^{}]*\\})*\\}/,\n            lookbehind: true,\n            inside: {\n                content: {\n                    pattern: /^(#\\{)[\\s\\S]+(?=\\}$)/,\n                    lookbehind: true,\n                    inside: Prism.languages.ruby\n                },\n                delimiter: {\n                    pattern: /^#\\{|\\}$/,\n                    alias: \"punctuation\"\n                }\n            }\n        };\n        delete Prism.languages.ruby.function;\n        var percentExpression = \"(?:\" + [\n            /([^a-zA-Z0-9\\s{(\\[<=])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n            /\\((?:[^()\\\\]|\\\\[\\s\\S]|\\((?:[^()\\\\]|\\\\[\\s\\S])*\\))*\\)/.source,\n            /\\{(?:[^{}\\\\]|\\\\[\\s\\S]|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\})*\\}/.source,\n            /\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S]|\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\])*\\]/.source,\n            /<(?:[^<>\\\\]|\\\\[\\s\\S]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)*>/.source\n        ].join(\"|\") + \")\";\n        var symbolName = /(?:\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|(?:\\b[a-zA-Z_]\\w*|[^\\s\\0-\\x7F]+)[?!]?|\\$.)/.source;\n        Prism.languages.insertBefore(\"ruby\", \"keyword\", {\n            \"regex-literal\": [\n                {\n                    pattern: RegExp(/%r/.source + percentExpression + /[egimnosux]{0,6}/.source),\n                    greedy: true,\n                    inside: {\n                        interpolation: interpolation,\n                        regex: /[\\s\\S]+/\n                    }\n                },\n                {\n                    pattern: /(^|[^/])\\/(?!\\/)(?:\\[[^\\r\\n\\]]+\\]|\\\\.|[^[/\\\\\\r\\n])+\\/[egimnosux]{0,6}(?=\\s*(?:$|[\\r\\n,.;})#]))/,\n                    lookbehind: true,\n                    greedy: true,\n                    inside: {\n                        interpolation: interpolation,\n                        regex: /[\\s\\S]+/\n                    }\n                }\n            ],\n            variable: /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n            symbol: [\n                {\n                    pattern: RegExp(/(^|[^:]):/.source + symbolName),\n                    lookbehind: true,\n                    greedy: true\n                },\n                {\n                    pattern: RegExp(/([\\r\\n{(,][ \\t]*)/.source + symbolName + /(?=:(?!:))/.source),\n                    lookbehind: true,\n                    greedy: true\n                }\n            ],\n            \"method-definition\": {\n                pattern: /(\\bdef\\s+)\\w+(?:\\s*\\.\\s*\\w+)?/,\n                lookbehind: true,\n                inside: {\n                    function: /\\b\\w+$/,\n                    keyword: /^self\\b/,\n                    \"class-name\": /^\\w+/,\n                    punctuation: /\\./\n                }\n            }\n        });\n        Prism.languages.insertBefore(\"ruby\", \"string\", {\n            \"string-literal\": [\n                {\n                    pattern: RegExp(/%[qQiIwWs]?/.source + percentExpression),\n                    greedy: true,\n                    inside: {\n                        interpolation: interpolation,\n                        string: /[\\s\\S]+/\n                    }\n                },\n                {\n                    pattern: /(\"|')(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\#\\r\\n])*\\1/,\n                    greedy: true,\n                    inside: {\n                        interpolation: interpolation,\n                        string: /[\\s\\S]+/\n                    }\n                },\n                {\n                    pattern: /<<[-~]?([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n                    alias: \"heredoc-string\",\n                    greedy: true,\n                    inside: {\n                        delimiter: {\n                            pattern: /^<<[-~]?[a-z_]\\w*|\\b[a-z_]\\w*$/i,\n                            inside: {\n                                symbol: /\\b\\w+/,\n                                punctuation: /^<<[-~]?/\n                            }\n                        },\n                        interpolation: interpolation,\n                        string: /[\\s\\S]+/\n                    }\n                },\n                {\n                    pattern: /<<[-~]?'([a-z_]\\w*)'[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n                    alias: \"heredoc-string\",\n                    greedy: true,\n                    inside: {\n                        delimiter: {\n                            pattern: /^<<[-~]?'[a-z_]\\w*'|\\b[a-z_]\\w*$/i,\n                            inside: {\n                                symbol: /\\b\\w+/,\n                                punctuation: /^<<[-~]?'|'$/\n                            }\n                        },\n                        string: /[\\s\\S]+/\n                    }\n                }\n            ],\n            \"command-literal\": [\n                {\n                    pattern: RegExp(/%x/.source + percentExpression),\n                    greedy: true,\n                    inside: {\n                        interpolation: interpolation,\n                        command: {\n                            pattern: /[\\s\\S]+/,\n                            alias: \"string\"\n                        }\n                    }\n                },\n                {\n                    pattern: /`(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|[^\\\\`#\\r\\n])*`/,\n                    greedy: true,\n                    inside: {\n                        interpolation: interpolation,\n                        command: {\n                            pattern: /[\\s\\S]+/,\n                            alias: \"string\"\n                        }\n                    }\n                }\n            ]\n        });\n        delete Prism.languages.ruby.string;\n        Prism.languages.insertBefore(\"ruby\", \"number\", {\n            builtin: /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\\b/,\n            constant: /\\b[A-Z][A-Z0-9_]*(?:[?!]|\\b)/\n        });\n        Prism.languages.rb = Prism.languages.ruby;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/ruby.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/rust.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/rust.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = rust;\nrust.displayName = \"rust\";\nrust.aliases = [];\nfunction rust(Prism) {\n    ;\n    (function(Prism) {\n        var multilineComment = /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\//.source;\n        for(var i = 0; i < 2; i++){\n            // support 4 levels of nested comments\n            multilineComment = multilineComment.replace(/<self>/g, function() {\n                return multilineComment;\n            });\n        }\n        multilineComment = multilineComment.replace(/<self>/g, function() {\n            return /[^\\s\\S]/.source;\n        });\n        Prism.languages.rust = {\n            comment: [\n                {\n                    pattern: RegExp(/(^|[^\\\\])/.source + multilineComment),\n                    lookbehind: true,\n                    greedy: true\n                },\n                {\n                    pattern: /(^|[^\\\\:])\\/\\/.*/,\n                    lookbehind: true,\n                    greedy: true\n                }\n            ],\n            string: {\n                pattern: /b?\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|b?r(#*)\"(?:[^\"]|\"(?!\\1))*\"\\1/,\n                greedy: true\n            },\n            char: {\n                pattern: /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u\\{(?:[\\da-fA-F]_*){1,6}\\}|.)|[^\\\\\\r\\n\\t'])'/,\n                greedy: true\n            },\n            attribute: {\n                pattern: /#!?\\[(?:[^\\[\\]\"]|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")*\\]/,\n                greedy: true,\n                alias: \"attr-name\",\n                inside: {\n                    string: null // see below\n                }\n            },\n            // Closure params should not be confused with bitwise OR |\n            \"closure-params\": {\n                pattern: /([=(,:]\\s*|\\bmove\\s*)\\|[^|]*\\||\\|[^|]*\\|(?=\\s*(?:\\{|->))/,\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    \"closure-punctuation\": {\n                        pattern: /^\\||\\|$/,\n                        alias: \"punctuation\"\n                    },\n                    rest: null // see below\n                }\n            },\n            \"lifetime-annotation\": {\n                pattern: /'\\w+/,\n                alias: \"symbol\"\n            },\n            \"fragment-specifier\": {\n                pattern: /(\\$\\w+:)[a-z]+/,\n                lookbehind: true,\n                alias: \"punctuation\"\n            },\n            variable: /\\$\\w+/,\n            \"function-definition\": {\n                pattern: /(\\bfn\\s+)\\w+/,\n                lookbehind: true,\n                alias: \"function\"\n            },\n            \"type-definition\": {\n                pattern: /(\\b(?:enum|struct|trait|type|union)\\s+)\\w+/,\n                lookbehind: true,\n                alias: \"class-name\"\n            },\n            \"module-declaration\": [\n                {\n                    pattern: /(\\b(?:crate|mod)\\s+)[a-z][a-z_\\d]*/,\n                    lookbehind: true,\n                    alias: \"namespace\"\n                },\n                {\n                    pattern: /(\\b(?:crate|self|super)\\s*)::\\s*[a-z][a-z_\\d]*\\b(?:\\s*::(?:\\s*[a-z][a-z_\\d]*\\s*::)*)?/,\n                    lookbehind: true,\n                    alias: \"namespace\",\n                    inside: {\n                        punctuation: /::/\n                    }\n                }\n            ],\n            keyword: [\n                // https://github.com/rust-lang/reference/blob/master/src/keywords.md\n                /\\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/,\n                // https://doc.rust-lang.org/stable/rust-by-example/primitives.html\n                /\\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\\b/\n            ],\n            // functions can technically start with an upper-case letter, but this will introduce a lot of false positives\n            // and Rust's naming conventions recommend snake_case anyway.\n            // https://doc.rust-lang.org/1.0.0/style/style/naming/README.html\n            function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())/,\n            macro: {\n                pattern: /\\b\\w+!/,\n                alias: \"property\"\n            },\n            constant: /\\b[A-Z_][A-Z_\\d]+\\b/,\n            \"class-name\": /\\b[A-Z]\\w*\\b/,\n            namespace: {\n                pattern: /(?:\\b[a-z][a-z_\\d]*\\s*::\\s*)*\\b[a-z][a-z_\\d]*\\s*::(?!\\s*<)/,\n                inside: {\n                    punctuation: /::/\n                }\n            },\n            // Hex, oct, bin, dec numbers with visual separators and type suffix\n            number: /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\\b/,\n            boolean: /\\b(?:false|true)\\b/,\n            punctuation: /->|\\.\\.=|\\.{1,3}|::|[{}[\\];(),:]/,\n            operator: /[-+*\\/%!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?=?|[@?]/\n        };\n        Prism.languages.rust[\"closure-params\"].inside.rest = Prism.languages.rust;\n        Prism.languages.rust[\"attribute\"].inside[\"string\"] = Prism.languages.rust[\"string\"];\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/rust.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/sas.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/sas.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = sas;\nsas.displayName = \"sas\";\nsas.aliases = [];\nfunction sas(Prism) {\n    ;\n    (function(Prism) {\n        var stringPattern = /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))/.source;\n        var number = /\\b(?:\\d[\\da-f]*x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i;\n        var numericConstant = {\n            pattern: RegExp(stringPattern + \"[bx]\"),\n            alias: \"number\"\n        };\n        var macroVariable = {\n            pattern: /&[a-z_]\\w*/i\n        };\n        var macroKeyword = {\n            pattern: /((?:^|\\s|=|\\())%(?:ABORT|BY|CMS|COPY|DISPLAY|DO|ELSE|END|EVAL|GLOBAL|GO|GOTO|IF|INC|INCLUDE|INDEX|INPUT|KTRIM|LENGTH|LET|LIST|LOCAL|PUT|QKTRIM|QSCAN|QSUBSTR|QSYSFUNC|QUPCASE|RETURN|RUN|SCAN|SUBSTR|SUPERQ|SYMDEL|SYMEXIST|SYMGLOBL|SYMLOCAL|SYSCALL|SYSEVALF|SYSEXEC|SYSFUNC|SYSGET|SYSRPUT|THEN|TO|TSO|UNQUOTE|UNTIL|UPCASE|WHILE|WINDOW)\\b/i,\n            lookbehind: true,\n            alias: \"keyword\"\n        };\n        var step = {\n            pattern: /(^|\\s)(?:proc\\s+\\w+|data(?!=)|quit|run)\\b/i,\n            alias: \"keyword\",\n            lookbehind: true\n        };\n        var comment = [\n            /\\/\\*[\\s\\S]*?\\*\\//,\n            {\n                pattern: /(^[ \\t]*|;\\s*)\\*[^;]*;/m,\n                lookbehind: true\n            }\n        ];\n        var string = {\n            pattern: RegExp(stringPattern),\n            greedy: true\n        };\n        var punctuation = /[$%@.(){}\\[\\];,\\\\]/;\n        var func = {\n            pattern: /%?\\b\\w+(?=\\()/,\n            alias: \"keyword\"\n        };\n        var args = {\n            function: func,\n            \"arg-value\": {\n                pattern: /(=\\s*)[A-Z\\.]+/i,\n                lookbehind: true\n            },\n            operator: /=/,\n            \"macro-variable\": macroVariable,\n            arg: {\n                pattern: /[A-Z]+/i,\n                alias: \"keyword\"\n            },\n            number: number,\n            \"numeric-constant\": numericConstant,\n            punctuation: punctuation,\n            string: string\n        };\n        var format = {\n            pattern: /\\b(?:format|put)\\b=?[\\w'$.]+/i,\n            inside: {\n                keyword: /^(?:format|put)(?==)/i,\n                equals: /=/,\n                format: {\n                    pattern: /(?:\\w|\\$\\d)+\\.\\d?/,\n                    alias: \"number\"\n                }\n            }\n        };\n        var altformat = {\n            pattern: /\\b(?:format|put)\\s+[\\w']+(?:\\s+[$.\\w]+)+(?=;)/i,\n            inside: {\n                keyword: /^(?:format|put)/i,\n                format: {\n                    pattern: /[\\w$]+\\.\\d?/,\n                    alias: \"number\"\n                }\n            }\n        };\n        var globalStatements = {\n            pattern: /((?:^|\\s)=?)(?:catname|checkpoint execute_always|dm|endsas|filename|footnote|%include|libname|%list|lock|missing|options|page|resetline|%run|sasfile|skip|sysecho|title\\d?)\\b/i,\n            lookbehind: true,\n            alias: \"keyword\"\n        };\n        var submitStatement = {\n            pattern: /(^|\\s)(?:submit(?:\\s+(?:load|norun|parseonly))?|endsubmit)\\b/i,\n            lookbehind: true,\n            alias: \"keyword\"\n        };\n        var actionSets = /aStore|accessControl|aggregation|audio|autotune|bayesianNetClassifier|bioMedImage|boolRule|builtins|cardinality|cdm|clustering|conditionalRandomFields|configuration|copula|countreg|dataDiscovery|dataPreprocess|dataSciencePilot|dataStep|decisionTree|deduplication|deepLearn|deepNeural|deepRnn|ds2|ecm|entityRes|espCluster|explainModel|factmac|fastKnn|fcmpact|fedSql|freqTab|gVarCluster|gam|gleam|graphSemiSupLearn|hiddenMarkovModel|hyperGroup|ica|image|iml|kernalPca|langModel|ldaTopic|loadStreams|mbc|mixed|mlTools|modelPublishing|network|neuralNet|nmf|nonParametricBayes|nonlinear|optNetwork|optimization|panel|pca|percentile|phreg|pls|qkb|qlim|quantreg|recommend|regression|reinforcementLearn|robustPca|ruleMining|sampling|sandwich|sccasl|search(?:Analytics)?|sentimentAnalysis|sequence|session(?:Prop)?|severity|simSystem|simple|smartData|sparkEmbeddedProcess|sparseML|spatialreg|spc|stabilityMonitoring|svDataDescription|svm|table|text(?:Filters|Frequency|Mining|Parse|Rule(?:Develop|Score)|Topic|Util)|timeData|transpose|tsInfo|tsReconcile|uniTimeSeries|varReduce/.source;\n        var casActions = {\n            pattern: RegExp(/(^|\\s)(?:action\\s+)?(?:<act>)\\.[a-z]+\\b[^;]+/.source.replace(/<act>/g, function() {\n                return actionSets;\n            }), \"i\"),\n            lookbehind: true,\n            inside: {\n                keyword: RegExp(/(?:<act>)\\.[a-z]+\\b/.source.replace(/<act>/g, function() {\n                    return actionSets;\n                }), \"i\"),\n                action: {\n                    pattern: /(?:action)/i,\n                    alias: \"keyword\"\n                },\n                comment: comment,\n                function: func,\n                \"arg-value\": args[\"arg-value\"],\n                operator: args.operator,\n                argument: args.arg,\n                number: number,\n                \"numeric-constant\": numericConstant,\n                punctuation: punctuation,\n                string: string\n            }\n        };\n        var keywords = {\n            pattern: /((?:^|\\s)=?)(?:after|analysis|and|array|barchart|barwidth|begingraph|by|call|cas|cbarline|cfill|class(?:lev)?|close|column|computed?|contains|continue|data(?==)|define|delete|describe|document|do\\s+over|do|dol|drop|dul|else|end(?:comp|source)?|entryTitle|eval(?:uate)?|exec(?:ute)?|exit|file(?:name)?|fill(?:attrs)?|flist|fnc|function(?:list)?|global|goto|group(?:by)?|headline|headskip|histogram|if|infile|keep|keylabel|keyword|label|layout|leave|legendlabel|length|libname|loadactionset|merge|midpoints|_?null_|name|noobs|nowd|ods|options|or|otherwise|out(?:put)?|over(?:lay)?|plot|print|put|raise|ranexp|rannor|rbreak|retain|return|select|session|sessref|set|source|statgraph|sum|summarize|table|temp|terminate|then\\s+do|then|title\\d?|to|var|when|where|xaxisopts|y2axisopts|yaxisopts)\\b/i,\n            lookbehind: true\n        };\n        Prism.languages.sas = {\n            datalines: {\n                pattern: /^([ \\t]*)(?:cards|(?:data)?lines);[\\s\\S]+?^[ \\t]*;/im,\n                lookbehind: true,\n                alias: \"string\",\n                inside: {\n                    keyword: {\n                        pattern: /^(?:cards|(?:data)?lines)/i\n                    },\n                    punctuation: /;/\n                }\n            },\n            \"proc-sql\": {\n                pattern: /(^proc\\s+(?:fed)?sql(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\n                lookbehind: true,\n                inside: {\n                    sql: {\n                        pattern: RegExp(/^[ \\t]*(?:select|alter\\s+table|(?:create|describe|drop)\\s+(?:index|table(?:\\s+constraints)?|view)|create\\s+unique\\s+index|insert\\s+into|update)(?:<str>|[^;\"'])+;/.source.replace(/<str>/g, function() {\n                            return stringPattern;\n                        }), \"im\"),\n                        alias: \"language-sql\",\n                        inside: Prism.languages.sql\n                    },\n                    \"global-statements\": globalStatements,\n                    \"sql-statements\": {\n                        pattern: /(^|\\s)(?:disconnect\\s+from|begin|commit|exec(?:ute)?|reset|rollback|validate)\\b/i,\n                        lookbehind: true,\n                        alias: \"keyword\"\n                    },\n                    number: number,\n                    \"numeric-constant\": numericConstant,\n                    punctuation: punctuation,\n                    string: string\n                }\n            },\n            \"proc-groovy\": {\n                pattern: /(^proc\\s+groovy(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\n                lookbehind: true,\n                inside: {\n                    comment: comment,\n                    groovy: {\n                        pattern: RegExp(/(^[ \\t]*submit(?:\\s+(?:load|norun|parseonly))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(/<str>/g, function() {\n                            return stringPattern;\n                        }), \"im\"),\n                        lookbehind: true,\n                        alias: \"language-groovy\",\n                        inside: Prism.languages.groovy\n                    },\n                    keyword: keywords,\n                    \"submit-statement\": submitStatement,\n                    \"global-statements\": globalStatements,\n                    number: number,\n                    \"numeric-constant\": numericConstant,\n                    punctuation: punctuation,\n                    string: string\n                }\n            },\n            \"proc-lua\": {\n                pattern: /(^proc\\s+lua(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\n                lookbehind: true,\n                inside: {\n                    comment: comment,\n                    lua: {\n                        pattern: RegExp(/(^[ \\t]*submit(?:\\s+(?:load|norun|parseonly))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(/<str>/g, function() {\n                            return stringPattern;\n                        }), \"im\"),\n                        lookbehind: true,\n                        alias: \"language-lua\",\n                        inside: Prism.languages.lua\n                    },\n                    keyword: keywords,\n                    \"submit-statement\": submitStatement,\n                    \"global-statements\": globalStatements,\n                    number: number,\n                    \"numeric-constant\": numericConstant,\n                    punctuation: punctuation,\n                    string: string\n                }\n            },\n            \"proc-cas\": {\n                pattern: /(^proc\\s+cas(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|data);|(?![\\s\\S]))/im,\n                lookbehind: true,\n                inside: {\n                    comment: comment,\n                    \"statement-var\": {\n                        pattern: /((?:^|\\s)=?)saveresult\\s[^;]+/im,\n                        lookbehind: true,\n                        inside: {\n                            statement: {\n                                pattern: /^saveresult\\s+\\S+/i,\n                                inside: {\n                                    keyword: /^(?:saveresult)/i\n                                }\n                            },\n                            rest: args\n                        }\n                    },\n                    \"cas-actions\": casActions,\n                    statement: {\n                        pattern: /((?:^|\\s)=?)(?:default|(?:un)?set|on|output|upload)[^;]+/im,\n                        lookbehind: true,\n                        inside: args\n                    },\n                    step: step,\n                    keyword: keywords,\n                    function: func,\n                    format: format,\n                    altformat: altformat,\n                    \"global-statements\": globalStatements,\n                    number: number,\n                    \"numeric-constant\": numericConstant,\n                    punctuation: punctuation,\n                    string: string\n                }\n            },\n            \"proc-args\": {\n                pattern: RegExp(/(^proc\\s+\\w+\\s+)(?!\\s)(?:[^;\"']|<str>)+;/.source.replace(/<str>/g, function() {\n                    return stringPattern;\n                }), \"im\"),\n                lookbehind: true,\n                inside: args\n            },\n            /*Special keywords within macros*/ \"macro-keyword\": macroKeyword,\n            \"macro-variable\": macroVariable,\n            \"macro-string-functions\": {\n                pattern: /((?:^|\\s|=))%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)\\(.*?(?:[^%]\\))/i,\n                lookbehind: true,\n                inside: {\n                    function: {\n                        pattern: /%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)/i,\n                        alias: \"keyword\"\n                    },\n                    \"macro-keyword\": macroKeyword,\n                    \"macro-variable\": macroVariable,\n                    \"escaped-char\": {\n                        pattern: /%['\"()<>=¬^~;,#]/\n                    },\n                    punctuation: punctuation\n                }\n            },\n            \"macro-declaration\": {\n                pattern: /^%macro[^;]+(?=;)/im,\n                inside: {\n                    keyword: /%macro/i\n                }\n            },\n            \"macro-end\": {\n                pattern: /^%mend[^;]+(?=;)/im,\n                inside: {\n                    keyword: /%mend/i\n                }\n            },\n            /*%_zscore(headcir, _lhc, _mhc, _shc, headcz, headcpct, _Fheadcz); */ macro: {\n                pattern: /%_\\w+(?=\\()/,\n                alias: \"keyword\"\n            },\n            input: {\n                pattern: /\\binput\\s[-\\w\\s/*.$&]+;/i,\n                inside: {\n                    input: {\n                        alias: \"keyword\",\n                        pattern: /^input/i\n                    },\n                    comment: comment,\n                    number: number,\n                    \"numeric-constant\": numericConstant\n                }\n            },\n            \"options-args\": {\n                pattern: /(^options)[-'\"|/\\\\<>*+=:()\\w\\s]*(?=;)/im,\n                lookbehind: true,\n                inside: args\n            },\n            \"cas-actions\": casActions,\n            comment: comment,\n            function: func,\n            format: format,\n            altformat: altformat,\n            \"numeric-constant\": numericConstant,\n            datetime: {\n                // '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt\n                pattern: RegExp(stringPattern + \"(?:dt?|t)\"),\n                alias: \"number\"\n            },\n            string: string,\n            step: step,\n            keyword: keywords,\n            // In SAS Studio syntax highlighting, these operators are styled like keywords\n            \"operator-keyword\": {\n                pattern: /\\b(?:eq|ge|gt|in|le|lt|ne|not)\\b/i,\n                alias: \"operator\"\n            },\n            // Decimal (1.2e23), hexadecimal (0c1x)\n            number: number,\n            operator: /\\*\\*?|\\|\\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\\/=&]|[~¬^]=?/,\n            punctuation: punctuation\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/sas.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/sass.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/sass.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = sass;\nsass.displayName = \"sass\";\nsass.aliases = [];\nfunction sass(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.sass = Prism.languages.extend(\"css\", {\n            // Sass comments don't need to be closed, only indented\n            comment: {\n                pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n                lookbehind: true,\n                greedy: true\n            }\n        });\n        Prism.languages.insertBefore(\"sass\", \"atrule\", {\n            // We want to consume the whole line\n            \"atrule-line\": {\n                // Includes support for = and + shortcuts\n                pattern: /^(?:[ \\t]*)[@+=].+/m,\n                greedy: true,\n                inside: {\n                    atrule: /(?:@[\\w-]+|[+=])/\n                }\n            }\n        });\n        delete Prism.languages.sass.atrule;\n        var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n        var operator = [\n            /[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/,\n            {\n                pattern: /(\\s)-(?=\\s)/,\n                lookbehind: true\n            }\n        ];\n        Prism.languages.insertBefore(\"sass\", \"property\", {\n            // We want to consume the whole line\n            \"variable-line\": {\n                pattern: /^[ \\t]*\\$.+/m,\n                greedy: true,\n                inside: {\n                    punctuation: /:/,\n                    variable: variable,\n                    operator: operator\n                }\n            },\n            // We want to consume the whole line\n            \"property-line\": {\n                pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n                greedy: true,\n                inside: {\n                    property: [\n                        /[^:\\s]+(?=\\s*:)/,\n                        {\n                            pattern: /(:)[^:\\s]+/,\n                            lookbehind: true\n                        }\n                    ],\n                    punctuation: /:/,\n                    variable: variable,\n                    operator: operator,\n                    important: Prism.languages.sass.important\n                }\n            }\n        });\n        delete Prism.languages.sass.property;\n        delete Prism.languages.sass.important // Now that whole lines for other patterns are consumed,\n        ;\n        // what's left should be selectors\n        Prism.languages.insertBefore(\"sass\", \"punctuation\", {\n            selector: {\n                pattern: /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\n                lookbehind: true,\n                greedy: true\n            }\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc2Fzcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7O0lBQ2YsVUFBVUEsS0FBSztRQUNmQSxNQUFNQyxTQUFTLENBQUNKLElBQUksR0FBR0csTUFBTUMsU0FBUyxDQUFDQyxNQUFNLENBQUMsT0FBTztZQUNuRCx1REFBdUQ7WUFDdkRDLFNBQVM7Z0JBQ1BDLFNBQVM7Z0JBQ1RDLFlBQVk7Z0JBQ1pDLFFBQVE7WUFDVjtRQUNGO1FBQ0FOLE1BQU1DLFNBQVMsQ0FBQ00sWUFBWSxDQUFDLFFBQVEsVUFBVTtZQUM3QyxvQ0FBb0M7WUFDcEMsZUFBZTtnQkFDYix5Q0FBeUM7Z0JBQ3pDSCxTQUFTO2dCQUNURSxRQUFRO2dCQUNSRSxRQUFRO29CQUNOQyxRQUFRO2dCQUNWO1lBQ0Y7UUFDRjtRQUNBLE9BQU9ULE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxDQUFDWSxNQUFNO1FBQ2xDLElBQUlDLFdBQVc7UUFDZixJQUFJQyxXQUFXO1lBQ2I7WUFDQTtnQkFDRVAsU0FBUztnQkFDVEMsWUFBWTtZQUNkO1NBQ0Q7UUFDREwsTUFBTUMsU0FBUyxDQUFDTSxZQUFZLENBQUMsUUFBUSxZQUFZO1lBQy9DLG9DQUFvQztZQUNwQyxpQkFBaUI7Z0JBQ2ZILFNBQVM7Z0JBQ1RFLFFBQVE7Z0JBQ1JFLFFBQVE7b0JBQ05JLGFBQWE7b0JBQ2JGLFVBQVVBO29CQUNWQyxVQUFVQTtnQkFDWjtZQUNGO1lBQ0Esb0NBQW9DO1lBQ3BDLGlCQUFpQjtnQkFDZlAsU0FBUztnQkFDVEUsUUFBUTtnQkFDUkUsUUFBUTtvQkFDTkssVUFBVTt3QkFDUjt3QkFDQTs0QkFDRVQsU0FBUzs0QkFDVEMsWUFBWTt3QkFDZDtxQkFDRDtvQkFDRE8sYUFBYTtvQkFDYkYsVUFBVUE7b0JBQ1ZDLFVBQVVBO29CQUNWRyxXQUFXZCxNQUFNQyxTQUFTLENBQUNKLElBQUksQ0FBQ2lCLFNBQVM7Z0JBQzNDO1lBQ0Y7UUFDRjtRQUNBLE9BQU9kLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxDQUFDZ0IsUUFBUTtRQUNwQyxPQUFPYixNQUFNQyxTQUFTLENBQUNKLElBQUksQ0FBQ2lCLFNBQVMsQ0FBQyx3REFBd0Q7O1FBQzlGLGtDQUFrQztRQUNsQ2QsTUFBTUMsU0FBUyxDQUFDTSxZQUFZLENBQUMsUUFBUSxlQUFlO1lBQ2xEUSxVQUFVO2dCQUNSWCxTQUNFO2dCQUNGQyxZQUFZO2dCQUNaQyxRQUFRO1lBQ1Y7UUFDRjtJQUNGLEdBQUdOO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc2Fzcy5qcz8yYmUzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHNhc3NcbnNhc3MuZGlzcGxheU5hbWUgPSAnc2FzcydcbnNhc3MuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBzYXNzKFByaXNtKSB7XG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgUHJpc20ubGFuZ3VhZ2VzLnNhc3MgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdjc3MnLCB7XG4gICAgICAvLyBTYXNzIGNvbW1lbnRzIGRvbid0IG5lZWQgdG8gYmUgY2xvc2VkLCBvbmx5IGluZGVudGVkXG4gICAgICBjb21tZW50OiB7XG4gICAgICAgIHBhdHRlcm46IC9eKFsgXFx0XSopXFwvW1xcLypdLiooPzooPzpcXHI/XFxufFxccilcXDFbIFxcdF0uKykqL20sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfVxuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnc2FzcycsICdhdHJ1bGUnLCB7XG4gICAgICAvLyBXZSB3YW50IHRvIGNvbnN1bWUgdGhlIHdob2xlIGxpbmVcbiAgICAgICdhdHJ1bGUtbGluZSc6IHtcbiAgICAgICAgLy8gSW5jbHVkZXMgc3VwcG9ydCBmb3IgPSBhbmQgKyBzaG9ydGN1dHNcbiAgICAgICAgcGF0dGVybjogL14oPzpbIFxcdF0qKVtAKz1dLisvbSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBhdHJ1bGU6IC8oPzpAW1xcdy1dK3xbKz1dKS9cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gICAgZGVsZXRlIFByaXNtLmxhbmd1YWdlcy5zYXNzLmF0cnVsZVxuICAgIHZhciB2YXJpYWJsZSA9IC9cXCRbLVxcd10rfCNcXHtcXCRbLVxcd10rXFx9L1xuICAgIHZhciBvcGVyYXRvciA9IFtcbiAgICAgIC9bKypcXC8lXXxbPSFdPXw8PT98Pj0/fFxcYig/OmFuZHxub3R8b3IpXFxiLyxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyhcXHMpLSg/PVxccykvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9XG4gICAgXVxuICAgIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ3Nhc3MnLCAncHJvcGVydHknLCB7XG4gICAgICAvLyBXZSB3YW50IHRvIGNvbnN1bWUgdGhlIHdob2xlIGxpbmVcbiAgICAgICd2YXJpYWJsZS1saW5lJzoge1xuICAgICAgICBwYXR0ZXJuOiAvXlsgXFx0XSpcXCQuKy9tLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIHB1bmN0dWF0aW9uOiAvOi8sXG4gICAgICAgICAgdmFyaWFibGU6IHZhcmlhYmxlLFxuICAgICAgICAgIG9wZXJhdG9yOiBvcGVyYXRvclxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgLy8gV2Ugd2FudCB0byBjb25zdW1lIHRoZSB3aG9sZSBsaW5lXG4gICAgICAncHJvcGVydHktbGluZSc6IHtcbiAgICAgICAgcGF0dGVybjogL15bIFxcdF0qKD86W146XFxzXSsgKjouKnw6W146XFxzXS4qKS9tLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIHByb3BlcnR5OiBbXG4gICAgICAgICAgICAvW146XFxzXSsoPz1cXHMqOikvLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBwYXR0ZXJuOiAvKDopW146XFxzXSsvLFxuICAgICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgXSxcbiAgICAgICAgICBwdW5jdHVhdGlvbjogLzovLFxuICAgICAgICAgIHZhcmlhYmxlOiB2YXJpYWJsZSxcbiAgICAgICAgICBvcGVyYXRvcjogb3BlcmF0b3IsXG4gICAgICAgICAgaW1wb3J0YW50OiBQcmlzbS5sYW5ndWFnZXMuc2Fzcy5pbXBvcnRhbnRcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gICAgZGVsZXRlIFByaXNtLmxhbmd1YWdlcy5zYXNzLnByb3BlcnR5XG4gICAgZGVsZXRlIFByaXNtLmxhbmd1YWdlcy5zYXNzLmltcG9ydGFudCAvLyBOb3cgdGhhdCB3aG9sZSBsaW5lcyBmb3Igb3RoZXIgcGF0dGVybnMgYXJlIGNvbnN1bWVkLFxuICAgIC8vIHdoYXQncyBsZWZ0IHNob3VsZCBiZSBzZWxlY3RvcnNcbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdzYXNzJywgJ3B1bmN0dWF0aW9uJywge1xuICAgICAgc2VsZWN0b3I6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvXihbIFxcdF0qKVxcUyg/OixbXixcXHJcXG5dK3xbXixcXHJcXG5dKikoPzosW14sXFxyXFxuXSspKig/OiwoPzpcXHI/XFxufFxccilcXDFbIFxcdF0rXFxTKD86LFteLFxcclxcbl0rfFteLFxcclxcbl0qKSg/OixbXixcXHJcXG5dKykqKSovbSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9XG4gICAgfSlcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNhc3MiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImV4dGVuZCIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImdyZWVkeSIsImluc2VydEJlZm9yZSIsImluc2lkZSIsImF0cnVsZSIsInZhcmlhYmxlIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiIsInByb3BlcnR5IiwiaW1wb3J0YW50Iiwic2VsZWN0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/sass.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/scala.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/scala.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorJava = __webpack_require__(/*! ./java.js */ \"(ssr)/./node_modules/refractor/lang/java.js\");\nmodule.exports = scala;\nscala.displayName = \"scala\";\nscala.aliases = [];\nfunction scala(Prism) {\n    Prism.register(refractorJava);\n    Prism.languages.scala = Prism.languages.extend(\"java\", {\n        \"triple-quoted-string\": {\n            pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n            greedy: true,\n            alias: \"string\"\n        },\n        string: {\n            pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true\n        },\n        keyword: /<-|=>|\\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\\b/,\n        number: /\\b0x(?:[\\da-f]*\\.)?[\\da-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e\\d+)?[dfl]?/i,\n        builtin: /\\b(?:Any|AnyRef|AnyVal|Boolean|Byte|Char|Double|Float|Int|Long|Nothing|Short|String|Unit)\\b/,\n        symbol: /'[^\\d\\s\\\\]\\w*/\n    });\n    Prism.languages.insertBefore(\"scala\", \"triple-quoted-string\", {\n        \"string-interpolation\": {\n            pattern: /\\b[a-z]\\w*(?:\"\"\"(?:[^$]|\\$(?:[^{]|\\{(?:[^{}]|\\{[^{}]*\\})*\\}))*?\"\"\"|\"(?:[^$\"\\r\\n]|\\$(?:[^{]|\\{(?:[^{}]|\\{[^{}]*\\})*\\}))*\")/i,\n            greedy: true,\n            inside: {\n                id: {\n                    pattern: /^\\w+/,\n                    greedy: true,\n                    alias: \"function\"\n                },\n                escape: {\n                    pattern: /\\\\\\$\"|\\$[$\"]/,\n                    greedy: true,\n                    alias: \"symbol\"\n                },\n                interpolation: {\n                    pattern: /\\$(?:\\w+|\\{(?:[^{}]|\\{[^{}]*\\})*\\})/,\n                    greedy: true,\n                    inside: {\n                        punctuation: /^\\$\\{?|\\}$/,\n                        expression: {\n                            pattern: /[\\s\\S]+/,\n                            inside: Prism.languages.scala\n                        }\n                    }\n                },\n                string: /[\\s\\S]+/\n            }\n        }\n    });\n    delete Prism.languages.scala[\"class-name\"];\n    delete Prism.languages.scala[\"function\"];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc2NhbGEuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxJQUFJQSxnQkFBZ0JDLG1CQUFPQSxDQUFDO0FBQzVCQyxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxNQUFNQyxXQUFXLEdBQUc7QUFDcEJELE1BQU1FLE9BQU8sR0FBRyxFQUFFO0FBQ2xCLFNBQVNGLE1BQU1HLEtBQUs7SUFDbEJBLE1BQU1DLFFBQVEsQ0FBQ1I7SUFDZk8sTUFBTUUsU0FBUyxDQUFDTCxLQUFLLEdBQUdHLE1BQU1FLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLFFBQVE7UUFDckQsd0JBQXdCO1lBQ3RCQyxTQUFTO1lBQ1RDLFFBQVE7WUFDUkMsT0FBTztRQUNUO1FBQ0FDLFFBQVE7WUFDTkgsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUcsU0FDRTtRQUNGQyxRQUNFO1FBQ0ZDLFNBQ0U7UUFDRkMsUUFBUTtJQUNWO0lBQ0FYLE1BQU1FLFNBQVMsQ0FBQ1UsWUFBWSxDQUFDLFNBQVMsd0JBQXdCO1FBQzVELHdCQUF3QjtZQUN0QlIsU0FDRTtZQUNGQyxRQUFRO1lBQ1JRLFFBQVE7Z0JBQ05DLElBQUk7b0JBQ0ZWLFNBQVM7b0JBQ1RDLFFBQVE7b0JBQ1JDLE9BQU87Z0JBQ1Q7Z0JBQ0FTLFFBQVE7b0JBQ05YLFNBQVM7b0JBQ1RDLFFBQVE7b0JBQ1JDLE9BQU87Z0JBQ1Q7Z0JBQ0FVLGVBQWU7b0JBQ2JaLFNBQVM7b0JBQ1RDLFFBQVE7b0JBQ1JRLFFBQVE7d0JBQ05JLGFBQWE7d0JBQ2JDLFlBQVk7NEJBQ1ZkLFNBQVM7NEJBQ1RTLFFBQVFiLE1BQU1FLFNBQVMsQ0FBQ0wsS0FBSzt3QkFDL0I7b0JBQ0Y7Z0JBQ0Y7Z0JBQ0FVLFFBQVE7WUFDVjtRQUNGO0lBQ0Y7SUFDQSxPQUFPUCxNQUFNRSxTQUFTLENBQUNMLEtBQUssQ0FBQyxhQUFhO0lBQzFDLE9BQU9HLE1BQU1FLFNBQVMsQ0FBQ0wsS0FBSyxDQUFDLFdBQVc7QUFDMUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc2NhbGEuanM/ZmY3NSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcbnZhciByZWZyYWN0b3JKYXZhID0gcmVxdWlyZSgnLi9qYXZhLmpzJylcbm1vZHVsZS5leHBvcnRzID0gc2NhbGFcbnNjYWxhLmRpc3BsYXlOYW1lID0gJ3NjYWxhJ1xuc2NhbGEuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBzY2FsYShQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JKYXZhKVxuICBQcmlzbS5sYW5ndWFnZXMuc2NhbGEgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdqYXZhJywge1xuICAgICd0cmlwbGUtcXVvdGVkLXN0cmluZyc6IHtcbiAgICAgIHBhdHRlcm46IC9cIlwiXCJbXFxzXFxTXSo/XCJcIlwiLyxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGFsaWFzOiAnc3RyaW5nJ1xuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvKFwifCcpKD86XFxcXC58KD8hXFwxKVteXFxcXFxcclxcbl0pKlxcMS8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGtleXdvcmQ6XG4gICAgICAvPC18PT58XFxiKD86YWJzdHJhY3R8Y2FzZXxjYXRjaHxjbGFzc3xkZWZ8ZG98ZWxzZXxleHRlbmRzfGZpbmFsfGZpbmFsbHl8Zm9yfGZvclNvbWV8aWZ8aW1wbGljaXR8aW1wb3J0fGxhenl8bWF0Y2h8bmV3fG51bGx8b2JqZWN0fG92ZXJyaWRlfHBhY2thZ2V8cHJpdmF0ZXxwcm90ZWN0ZWR8cmV0dXJufHNlYWxlZHxzZWxmfHN1cGVyfHRoaXN8dGhyb3d8dHJhaXR8dHJ5fHR5cGV8dmFsfHZhcnx3aGlsZXx3aXRofHlpZWxkKVxcYi8sXG4gICAgbnVtYmVyOlxuICAgICAgL1xcYjB4KD86W1xcZGEtZl0qXFwuKT9bXFxkYS1mXSt8KD86XFxiXFxkKyg/OlxcLlxcZCopP3xcXEJcXC5cXGQrKSg/OmVcXGQrKT9bZGZsXT8vaSxcbiAgICBidWlsdGluOlxuICAgICAgL1xcYig/OkFueXxBbnlSZWZ8QW55VmFsfEJvb2xlYW58Qnl0ZXxDaGFyfERvdWJsZXxGbG9hdHxJbnR8TG9uZ3xOb3RoaW5nfFNob3J0fFN0cmluZ3xVbml0KVxcYi8sXG4gICAgc3ltYm9sOiAvJ1teXFxkXFxzXFxcXF1cXHcqL1xuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdzY2FsYScsICd0cmlwbGUtcXVvdGVkLXN0cmluZycsIHtcbiAgICAnc3RyaW5nLWludGVycG9sYXRpb24nOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvXFxiW2Etel1cXHcqKD86XCJcIlwiKD86W14kXXxcXCQoPzpbXntdfFxceyg/Oltee31dfFxce1tee31dKlxcfSkqXFx9KSkqP1wiXCJcInxcIig/OlteJFwiXFxyXFxuXXxcXCQoPzpbXntdfFxceyg/Oltee31dfFxce1tee31dKlxcfSkqXFx9KSkqXCIpL2ksXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgaWQ6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXlxcdysvLFxuICAgICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgICBhbGlhczogJ2Z1bmN0aW9uJ1xuICAgICAgICB9LFxuICAgICAgICBlc2NhcGU6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXFxcXFxcJFwifFxcJFskXCJdLyxcbiAgICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgICAgYWxpYXM6ICdzeW1ib2wnXG4gICAgICAgIH0sXG4gICAgICAgIGludGVycG9sYXRpb246IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXFwkKD86XFx3K3xcXHsoPzpbXnt9XXxcXHtbXnt9XSpcXH0pKlxcfSkvLFxuICAgICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXlxcJFxcez98XFx9JC8sXG4gICAgICAgICAgICBleHByZXNzaW9uOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC9bXFxzXFxTXSsvLFxuICAgICAgICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy5zY2FsYVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgc3RyaW5nOiAvW1xcc1xcU10rL1xuICAgICAgfVxuICAgIH1cbiAgfSlcbiAgZGVsZXRlIFByaXNtLmxhbmd1YWdlcy5zY2FsYVsnY2xhc3MtbmFtZSddXG4gIGRlbGV0ZSBQcmlzbS5sYW5ndWFnZXMuc2NhbGFbJ2Z1bmN0aW9uJ11cbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JKYXZhIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzY2FsYSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJwYXR0ZXJuIiwiZ3JlZWR5IiwiYWxpYXMiLCJzdHJpbmciLCJrZXl3b3JkIiwibnVtYmVyIiwiYnVpbHRpbiIsInN5bWJvbCIsImluc2VydEJlZm9yZSIsImluc2lkZSIsImlkIiwiZXNjYXBlIiwiaW50ZXJwb2xhdGlvbiIsInB1bmN0dWF0aW9uIiwiZXhwcmVzc2lvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/scala.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/scheme.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/scheme.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = scheme;\nscheme.displayName = \"scheme\";\nscheme.aliases = [];\nfunction scheme(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.scheme = {\n            // this supports \"normal\" single-line comments:\n            //   ; comment\n            // and (potentially nested) multiline comments:\n            //   #| comment #| nested |# still comment |#\n            // (only 1 level of nesting is supported)\n            comment: /;.*|#;\\s*(?:\\((?:[^()]|\\([^()]*\\))*\\)|\\[(?:[^\\[\\]]|\\[[^\\[\\]]*\\])*\\])|#\\|(?:[^#|]|#(?!\\|)|\\|(?!#)|#\\|(?:[^#|]|#(?!\\|)|\\|(?!#))*\\|#)*\\|#/,\n            string: {\n                pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n                greedy: true\n            },\n            symbol: {\n                pattern: /'[^()\\[\\]#'\\s]+/,\n                greedy: true\n            },\n            char: {\n                pattern: /#\\\\(?:[ux][a-fA-F\\d]+\\b|[-a-zA-Z]+\\b|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|\\S)/,\n                greedy: true\n            },\n            \"lambda-parameter\": [\n                // https://www.cs.cmu.edu/Groups/AI/html/r4rs/r4rs_6.html#SEC30\n                {\n                    pattern: /((?:^|[^'`#])[(\\[]lambda\\s+)(?:[^|()\\[\\]'\\s]+|\\|(?:[^\\\\|]|\\\\.)*\\|)/,\n                    lookbehind: true\n                },\n                {\n                    pattern: /((?:^|[^'`#])[(\\[]lambda\\s+[(\\[])[^()\\[\\]']+/,\n                    lookbehind: true\n                }\n            ],\n            keyword: {\n                pattern: /((?:^|[^'`#])[(\\[])(?:begin|case(?:-lambda)?|cond(?:-expand)?|define(?:-library|-macro|-record-type|-syntax|-values)?|defmacro|delay(?:-force)?|do|else|except|export|guard|if|import|include(?:-ci|-library-declarations)?|lambda|let(?:rec)?(?:-syntax|-values|\\*)?|let\\*-values|only|parameterize|prefix|(?:quasi-?)?quote|rename|set!|syntax-(?:case|rules)|unless|unquote(?:-splicing)?|when)(?=[()\\[\\]\\s]|$)/,\n                lookbehind: true\n            },\n            builtin: {\n                // all functions of the base library of R7RS plus some of built-ins of R5Rs\n                pattern: /((?:^|[^'`#])[(\\[])(?:abs|and|append|apply|assoc|ass[qv]|binary-port\\?|boolean=?\\?|bytevector(?:-append|-copy|-copy!|-length|-u8-ref|-u8-set!|\\?)?|caar|cadr|call-with-(?:current-continuation|port|values)|call\\/cc|car|cdar|cddr|cdr|ceiling|char(?:->integer|-ready\\?|\\?|<\\?|<=\\?|=\\?|>\\?|>=\\?)|close-(?:input-port|output-port|port)|complex\\?|cons|current-(?:error|input|output)-port|denominator|dynamic-wind|eof-object\\??|eq\\?|equal\\?|eqv\\?|error|error-object(?:-irritants|-message|\\?)|eval|even\\?|exact(?:-integer-sqrt|-integer\\?|\\?)?|expt|features|file-error\\?|floor(?:-quotient|-remainder|\\/)?|flush-output-port|for-each|gcd|get-output-(?:bytevector|string)|inexact\\??|input-port(?:-open\\?|\\?)|integer(?:->char|\\?)|lcm|length|list(?:->string|->vector|-copy|-ref|-set!|-tail|\\?)?|make-(?:bytevector|list|parameter|string|vector)|map|max|member|memq|memv|min|modulo|negative\\?|newline|not|null\\?|number(?:->string|\\?)|numerator|odd\\?|open-(?:input|output)-(?:bytevector|string)|or|output-port(?:-open\\?|\\?)|pair\\?|peek-char|peek-u8|port\\?|positive\\?|procedure\\?|quotient|raise|raise-continuable|rational\\?|rationalize|read-(?:bytevector|bytevector!|char|error\\?|line|string|u8)|real\\?|remainder|reverse|round|set-c[ad]r!|square|string(?:->list|->number|->symbol|->utf8|->vector|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\\?|<\\?|<=\\?|=\\?|>\\?|>=\\?)?|substring|symbol(?:->string|\\?|=\\?)|syntax-error|textual-port\\?|truncate(?:-quotient|-remainder|\\/)?|u8-ready\\?|utf8->string|values|vector(?:->list|->string|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\\?)?|with-exception-handler|write-(?:bytevector|char|string|u8)|zero\\?)(?=[()\\[\\]\\s]|$)/,\n                lookbehind: true\n            },\n            operator: {\n                pattern: /((?:^|[^'`#])[(\\[])(?:[-+*%/]|[<>]=?|=>?)(?=[()\\[\\]\\s]|$)/,\n                lookbehind: true\n            },\n            number: {\n                // The number pattern from [the R7RS spec](https://small.r7rs.org/attachment/r7rs.pdf).\n                //\n                // <number>      := <num 2>|<num 8>|<num 10>|<num 16>\n                // <num R>       := <prefix R><complex R>\n                // <complex R>   := <real R>(?:@<real R>|<imaginary R>)?|<imaginary R>\n                // <imaginary R> := [+-](?:<ureal R>|(?:inf|nan)\\.0)?i\n                // <real R>      := [+-]?<ureal R>|[+-](?:inf|nan)\\.0\n                // <ureal R>     := <uint R>(?:\\/<uint R>)?\n                //                | <decimal R>\n                //\n                // <decimal 10>  := (?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?\n                // <uint R>      := <digit R>+\n                // <prefix R>    := <radix R>(?:#[ei])?|(?:#[ei])?<radix R>\n                // <radix 2>     := #b\n                // <radix 8>     := #o\n                // <radix 10>    := (?:#d)?\n                // <radix 16>    := #x\n                // <digit 2>     := [01]\n                // <digit 8>     := [0-7]\n                // <digit 10>    := \\d\n                // <digit 16>    := [0-9a-f]\n                //\n                // The problem with this grammar is that the resulting regex is way to complex, so we simplify by grouping all\n                // non-decimal bases together. This results in a decimal (dec) and combined binary, octal, and hexadecimal (box)\n                // pattern:\n                pattern: RegExp(SortedBNF({\n                    \"<ureal dec>\": /\\d+(?:\\/\\d+)|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[esfdl][+-]?\\d+)?/.source,\n                    \"<real dec>\": /[+-]?<ureal dec>|[+-](?:inf|nan)\\.0/.source,\n                    \"<imaginary dec>\": /[+-](?:<ureal dec>|(?:inf|nan)\\.0)?i/.source,\n                    \"<complex dec>\": /<real dec>(?:@<real dec>|<imaginary dec>)?|<imaginary dec>/.source,\n                    \"<num dec>\": /(?:#d(?:#[ei])?|#[ei](?:#d)?)?<complex dec>/.source,\n                    \"<ureal box>\": /[0-9a-f]+(?:\\/[0-9a-f]+)?/.source,\n                    \"<real box>\": /[+-]?<ureal box>|[+-](?:inf|nan)\\.0/.source,\n                    \"<imaginary box>\": /[+-](?:<ureal box>|(?:inf|nan)\\.0)?i/.source,\n                    \"<complex box>\": /<real box>(?:@<real box>|<imaginary box>)?|<imaginary box>/.source,\n                    \"<num box>\": /#[box](?:#[ei])?|(?:#[ei])?#[box]<complex box>/.source,\n                    \"<number>\": /(^|[()\\[\\]\\s])(?:<num dec>|<num box>)(?=[()\\[\\]\\s]|$)/.source\n                }), \"i\"),\n                lookbehind: true\n            },\n            boolean: {\n                pattern: /(^|[()\\[\\]\\s])#(?:[ft]|false|true)(?=[()\\[\\]\\s]|$)/,\n                lookbehind: true\n            },\n            function: {\n                pattern: /((?:^|[^'`#])[(\\[])(?:[^|()\\[\\]'\\s]+|\\|(?:[^\\\\|]|\\\\.)*\\|)(?=[()\\[\\]\\s]|$)/,\n                lookbehind: true\n            },\n            identifier: {\n                pattern: /(^|[()\\[\\]\\s])\\|(?:[^\\\\|]|\\\\.)*\\|(?=[()\\[\\]\\s]|$)/,\n                lookbehind: true,\n                greedy: true\n            },\n            punctuation: /[()\\[\\]']/\n        };\n        /**\n     * Given a topologically sorted BNF grammar, this will return the RegExp source of last rule of the grammar.\n     *\n     * @param {Record<string, string>} grammar\n     * @returns {string}\n     */ function SortedBNF(grammar) {\n            for(var key in grammar){\n                grammar[key] = grammar[key].replace(/<[\\w\\s]+>/g, function(key) {\n                    return \"(?:\" + grammar[key].trim() + \")\";\n                });\n            } // return the last item\n            return grammar[key];\n        }\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/scheme.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/scss.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/scss.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = scss;\nscss.displayName = \"scss\";\nscss.aliases = [];\nfunction scss(Prism) {\n    Prism.languages.scss = Prism.languages.extend(\"css\", {\n        comment: {\n            pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n            lookbehind: true\n        },\n        atrule: {\n            pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n            inside: {\n                rule: /@[\\w-]+/ // See rest below\n            }\n        },\n        // url, compassified\n        url: /(?:[-a-z]+-)?url(?=\\()/i,\n        // CSS selector regex is not appropriate for Sass\n        // since there can be lot more things (var, @ directive, nesting..)\n        // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n        // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n        // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n        // can \"pass\" as a selector- e.g: proper#{$erty})\n        // this one was hard to do, so please be careful if you edit this one :)\n        selector: {\n            // Initial look-ahead is used to prevent matching of blank selectors\n            pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\n            inside: {\n                parent: {\n                    pattern: /&/,\n                    alias: \"important\"\n                },\n                placeholder: /%[-\\w]+/,\n                variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n            }\n        },\n        property: {\n            pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n            inside: {\n                variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n            }\n        }\n    });\n    Prism.languages.insertBefore(\"scss\", \"atrule\", {\n        keyword: [\n            /@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i,\n            {\n                pattern: /( )(?:from|through)(?= )/,\n                lookbehind: true\n            }\n        ]\n    });\n    Prism.languages.insertBefore(\"scss\", \"important\", {\n        // var and interpolated vars\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    });\n    Prism.languages.insertBefore(\"scss\", \"function\", {\n        \"module-modifier\": {\n            pattern: /\\b(?:as|hide|show|with)\\b/i,\n            alias: \"keyword\"\n        },\n        placeholder: {\n            pattern: /%[-\\w]+/,\n            alias: \"selector\"\n        },\n        statement: {\n            pattern: /\\B!(?:default|optional)\\b/i,\n            alias: \"keyword\"\n        },\n        boolean: /\\b(?:false|true)\\b/,\n        null: {\n            pattern: /\\bnull\\b/,\n            alias: \"keyword\"\n        },\n        operator: {\n            pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\n            lookbehind: true\n        }\n    });\n    Prism.languages.scss[\"atrule\"].inside.rest = Prism.languages.scss;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc2Nzcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDakJBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHRyxNQUFNQyxTQUFTLENBQUNDLE1BQU0sQ0FBQyxPQUFPO1FBQ25EQyxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsWUFBWTtRQUNkO1FBQ0FDLFFBQVE7WUFDTkYsU0FBUztZQUNURyxRQUFRO2dCQUNOQyxNQUFNLFVBQVUsaUJBQWlCO1lBQ25DO1FBQ0Y7UUFDQSxvQkFBb0I7UUFDcEJDLEtBQUs7UUFDTCxpREFBaUQ7UUFDakQsbUVBQW1FO1FBQ25FLGtHQUFrRztRQUNsRyx1SUFBdUk7UUFDdkksbUlBQW1JO1FBQ25JLGlEQUFpRDtRQUNqRCx3RUFBd0U7UUFDeEVDLFVBQVU7WUFDUixvRUFBb0U7WUFDcEVOLFNBQ0U7WUFDRkcsUUFBUTtnQkFDTkksUUFBUTtvQkFDTlAsU0FBUztvQkFDVFEsT0FBTztnQkFDVDtnQkFDQUMsYUFBYTtnQkFDYkMsVUFBVTtZQUNaO1FBQ0Y7UUFDQUMsVUFBVTtZQUNSWCxTQUFTO1lBQ1RHLFFBQVE7Z0JBQ05PLFVBQVU7WUFDWjtRQUNGO0lBQ0Y7SUFDQWQsTUFBTUMsU0FBUyxDQUFDZSxZQUFZLENBQUMsUUFBUSxVQUFVO1FBQzdDQyxTQUFTO1lBQ1A7WUFDQTtnQkFDRWIsU0FBUztnQkFDVEMsWUFBWTtZQUNkO1NBQ0Q7SUFDSDtJQUNBTCxNQUFNQyxTQUFTLENBQUNlLFlBQVksQ0FBQyxRQUFRLGFBQWE7UUFDaEQsNEJBQTRCO1FBQzVCRixVQUFVO0lBQ1o7SUFDQWQsTUFBTUMsU0FBUyxDQUFDZSxZQUFZLENBQUMsUUFBUSxZQUFZO1FBQy9DLG1CQUFtQjtZQUNqQlosU0FBUztZQUNUUSxPQUFPO1FBQ1Q7UUFDQUMsYUFBYTtZQUNYVCxTQUFTO1lBQ1RRLE9BQU87UUFDVDtRQUNBTSxXQUFXO1lBQ1RkLFNBQVM7WUFDVFEsT0FBTztRQUNUO1FBQ0FPLFNBQVM7UUFDVEMsTUFBTTtZQUNKaEIsU0FBUztZQUNUUSxPQUFPO1FBQ1Q7UUFDQVMsVUFBVTtZQUNSakIsU0FBUztZQUNUQyxZQUFZO1FBQ2Q7SUFDRjtJQUNBTCxNQUFNQyxTQUFTLENBQUNKLElBQUksQ0FBQyxTQUFTLENBQUNVLE1BQU0sQ0FBQ2UsSUFBSSxHQUFHdEIsTUFBTUMsU0FBUyxDQUFDSixJQUFJO0FBQ25FIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3Njc3MuanM/Mzk0MSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBzY3NzXG5zY3NzLmRpc3BsYXlOYW1lID0gJ3Njc3MnXG5zY3NzLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gc2NzcyhQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuc2NzcyA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2NzcycsIHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvKF58W15cXFxcXSkoPzpcXC9cXCpbXFxzXFxTXSo/XFwqXFwvfFxcL1xcLy4qKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBhdHJ1bGU6IHtcbiAgICAgIHBhdHRlcm46IC9AW1xcdy1dKD86XFwoW14oKV0rXFwpfFteKClcXHNdfFxccysoPyFcXHMpKSo/KD89XFxzK1t7O10pLyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBydWxlOiAvQFtcXHctXSsvIC8vIFNlZSByZXN0IGJlbG93XG4gICAgICB9XG4gICAgfSxcbiAgICAvLyB1cmwsIGNvbXBhc3NpZmllZFxuICAgIHVybDogLyg/OlstYS16XSstKT91cmwoPz1cXCgpL2ksXG4gICAgLy8gQ1NTIHNlbGVjdG9yIHJlZ2V4IGlzIG5vdCBhcHByb3ByaWF0ZSBmb3IgU2Fzc1xuICAgIC8vIHNpbmNlIHRoZXJlIGNhbiBiZSBsb3QgbW9yZSB0aGluZ3MgKHZhciwgQCBkaXJlY3RpdmUsIG5lc3RpbmcuLilcbiAgICAvLyBhIHNlbGVjdG9yIG11c3Qgc3RhcnQgYXQgdGhlIGVuZCBvZiBhIHByb3BlcnR5IG9yIGFmdGVyIGEgYnJhY2UgKGVuZCBvZiBvdGhlciBydWxlcyBvciBuZXN0aW5nKVxuICAgIC8vIGl0IGNhbiBjb250YWluIHNvbWUgY2hhcmFjdGVycyB0aGF0IGFyZW4ndCB1c2VkIGZvciBkZWZpbmluZyBydWxlcyBvciBlbmQgb2Ygc2VsZWN0b3IsICYgKHBhcmVudCBzZWxlY3RvciksIG9yIGludGVycG9sYXRlZCB2YXJpYWJsZVxuICAgIC8vIHRoZSBlbmQgb2YgYSBzZWxlY3RvciBpcyBmb3VuZCB3aGVuIHRoZXJlIGlzIG5vIHJ1bGVzIGluIGl0ICgge30gb3Ige1xcc30pIG9yIGlmIHRoZXJlIGlzIGEgcHJvcGVydHkgKGJlY2F1c2UgYW4gaW50ZXJwb2xhdGVkIHZhclxuICAgIC8vIGNhbiBcInBhc3NcIiBhcyBhIHNlbGVjdG9yLSBlLmc6IHByb3BlciN7JGVydHl9KVxuICAgIC8vIHRoaXMgb25lIHdhcyBoYXJkIHRvIGRvLCBzbyBwbGVhc2UgYmUgY2FyZWZ1bCBpZiB5b3UgZWRpdCB0aGlzIG9uZSA6KVxuICAgIHNlbGVjdG9yOiB7XG4gICAgICAvLyBJbml0aWFsIGxvb2stYWhlYWQgaXMgdXNlZCB0byBwcmV2ZW50IG1hdGNoaW5nIG9mIGJsYW5rIHNlbGVjdG9yc1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyg/PVxcUylbXkA7e30oKV0/KD86W15AO3t9KClcXHNdfFxccysoPyFcXHMpfCNcXHtcXCRbLVxcd10rXFx9KSsoPz1cXHMqXFx7KD86XFx9fFxcc3xbXn1dW146e31dKls6e11bXn1dKSkvLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHBhcmVudDoge1xuICAgICAgICAgIHBhdHRlcm46IC8mLyxcbiAgICAgICAgICBhbGlhczogJ2ltcG9ydGFudCdcbiAgICAgICAgfSxcbiAgICAgICAgcGxhY2Vob2xkZXI6IC8lWy1cXHddKy8sXG4gICAgICAgIHZhcmlhYmxlOiAvXFwkWy1cXHddK3wjXFx7XFwkWy1cXHddK1xcfS9cbiAgICAgIH1cbiAgICB9LFxuICAgIHByb3BlcnR5OiB7XG4gICAgICBwYXR0ZXJuOiAvKD86Wy1cXHddfFxcJFstXFx3XXwjXFx7XFwkWy1cXHddK1xcfSkrKD89XFxzKjopLyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICB2YXJpYWJsZTogL1xcJFstXFx3XSt8I1xce1xcJFstXFx3XStcXH0vXG4gICAgICB9XG4gICAgfVxuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdzY3NzJywgJ2F0cnVsZScsIHtcbiAgICBrZXl3b3JkOiBbXG4gICAgICAvQCg/OmNvbnRlbnR8ZGVidWd8ZWFjaHxlbHNlKD86IGlmKT98ZXh0ZW5kfGZvcnxmb3J3YXJkfGZ1bmN0aW9ufGlmfGltcG9ydHxpbmNsdWRlfG1peGlufHJldHVybnx1c2V8d2Fybnx3aGlsZSlcXGIvaSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyggKSg/OmZyb218dGhyb3VnaCkoPz0gKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH1cbiAgICBdXG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ3Njc3MnLCAnaW1wb3J0YW50Jywge1xuICAgIC8vIHZhciBhbmQgaW50ZXJwb2xhdGVkIHZhcnNcbiAgICB2YXJpYWJsZTogL1xcJFstXFx3XSt8I1xce1xcJFstXFx3XStcXH0vXG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ3Njc3MnLCAnZnVuY3Rpb24nLCB7XG4gICAgJ21vZHVsZS1tb2RpZmllcic6IHtcbiAgICAgIHBhdHRlcm46IC9cXGIoPzphc3xoaWRlfHNob3d8d2l0aClcXGIvaSxcbiAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICB9LFxuICAgIHBsYWNlaG9sZGVyOiB7XG4gICAgICBwYXR0ZXJuOiAvJVstXFx3XSsvLFxuICAgICAgYWxpYXM6ICdzZWxlY3RvcidcbiAgICB9LFxuICAgIHN0YXRlbWVudDoge1xuICAgICAgcGF0dGVybjogL1xcQiEoPzpkZWZhdWx0fG9wdGlvbmFsKVxcYi9pLFxuICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgIH0sXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiLyxcbiAgICBudWxsOiB7XG4gICAgICBwYXR0ZXJuOiAvXFxibnVsbFxcYi8sXG4gICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgfSxcbiAgICBvcGVyYXRvcjoge1xuICAgICAgcGF0dGVybjogLyhcXHMpKD86Wy0rKlxcLyVdfFs9IV09fDw9P3w+PT98YW5kfG5vdHxvcikoPz1cXHMpLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9XG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5zY3NzWydhdHJ1bGUnXS5pbnNpZGUucmVzdCA9IFByaXNtLmxhbmd1YWdlcy5zY3NzXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNjc3MiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImV4dGVuZCIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImF0cnVsZSIsImluc2lkZSIsInJ1bGUiLCJ1cmwiLCJzZWxlY3RvciIsInBhcmVudCIsImFsaWFzIiwicGxhY2Vob2xkZXIiLCJ2YXJpYWJsZSIsInByb3BlcnR5IiwiaW5zZXJ0QmVmb3JlIiwia2V5d29yZCIsInN0YXRlbWVudCIsImJvb2xlYW4iLCJudWxsIiwib3BlcmF0b3IiLCJyZXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/scss.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/shell-session.js":
/*!******************************************************!*\
  !*** ./node_modules/refractor/lang/shell-session.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorBash = __webpack_require__(/*! ./bash.js */ \"(ssr)/./node_modules/refractor/lang/bash.js\");\nmodule.exports = shellSession;\nshellSession.displayName = \"shellSession\";\nshellSession.aliases = [];\nfunction shellSession(Prism) {\n    Prism.register(refractorBash);\n    (function(Prism) {\n        // CAREFUL!\n        // The following patterns are concatenated, so the group referenced by a back reference is non-obvious!\n        var strings = [\n            // normal string\n            /\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/.source,\n            /'[^']*'/.source,\n            /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/.source,\n            // 2 capturing groups\n            /<<-?\\s*([\"']?)(\\w+)\\1\\s[\\s\\S]*?[\\r\\n]\\2/.source\n        ].join(\"|\");\n        Prism.languages[\"shell-session\"] = {\n            command: {\n                pattern: RegExp(// user info\n                /^/.source + \"(?:\" + // <user> \":\" ( <path> )?\n                (/[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+(?::[^\\0-\\x1F$#%*?\"<>:;|]+)?/.source + \"|\" + // <path>\n                // Since the path pattern is quite general, we will require it to start with a special character to\n                // prevent false positives.\n                /[/~.][^\\0-\\x1F$#%*?\"<>@:;|]*/.source) + \")?\" + // shell symbol\n                /[$#%](?=\\s)/.source + // bash command\n                /(?:[^\\\\\\r\\n \\t'\"<$]|[ \\t](?:(?!#)|#.*$)|\\\\(?:[^\\r]|\\r\\n?)|\\$(?!')|<(?!<)|<<str>>)+/.source.replace(/<<str>>/g, function() {\n                    return strings;\n                }), \"m\"),\n                greedy: true,\n                inside: {\n                    info: {\n                        // foo@bar:~/files$ exit\n                        // foo@bar$ exit\n                        // ~/files$ exit\n                        pattern: /^[^#$%]+/,\n                        alias: \"punctuation\",\n                        inside: {\n                            user: /^[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+/,\n                            punctuation: /:/,\n                            path: /[\\s\\S]+/\n                        }\n                    },\n                    bash: {\n                        pattern: /(^[$#%]\\s*)\\S[\\s\\S]*/,\n                        lookbehind: true,\n                        alias: \"language-bash\",\n                        inside: Prism.languages.bash\n                    },\n                    \"shell-symbol\": {\n                        pattern: /^[$#%]/,\n                        alias: \"important\"\n                    }\n                }\n            },\n            output: /.(?:.*(?:[\\r\\n]|.$))*/\n        };\n        Prism.languages[\"sh-session\"] = Prism.languages[\"shellsession\"] = Prism.languages[\"shell-session\"];\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc2hlbGwtc2Vzc2lvbi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLElBQUlBLGdCQUFnQkMsbUJBQU9BLENBQUM7QUFDNUJDLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLGFBQWFDLFdBQVcsR0FBRztBQUMzQkQsYUFBYUUsT0FBTyxHQUFHLEVBQUU7QUFDekIsU0FBU0YsYUFBYUcsS0FBSztJQUN6QkEsTUFBTUMsUUFBUSxDQUFDUjtJQUNiLFVBQVVPLEtBQUs7UUFDZixXQUFXO1FBQ1gsdUdBQXVHO1FBQ3ZHLElBQUlFLFVBQVU7WUFDWixnQkFBZ0I7WUFDaEIsd0RBQXdEQyxNQUFNO1lBQzlELFVBQVVBLE1BQU07WUFDaEIsMkJBQTJCQSxNQUFNO1lBQ2pDLHFCQUFxQjtZQUNyQiwwQ0FBMENBLE1BQU07U0FDakQsQ0FBQ0MsSUFBSSxDQUFDO1FBQ1BKLE1BQU1LLFNBQVMsQ0FBQyxnQkFBZ0IsR0FBRztZQUNqQ0MsU0FBUztnQkFDUEMsU0FBU0MsT0FDUCxZQUFZO2dCQUNaLElBQUlMLE1BQU0sR0FDUixRQUFRLHlCQUF5QjtnQkFDaEMsbUVBQ0VBLE1BQU0sR0FDUCxNQUFNLFNBQVM7Z0JBQ2YsbUdBQW1HO2dCQUNuRywyQkFBMkI7Z0JBQzNCLCtCQUErQkEsTUFBTSxJQUN2QyxPQUFPLGVBQWU7Z0JBQ3RCLGNBQWNBLE1BQU0sR0FBRyxlQUFlO2dCQUN0QyxxRkFBcUZBLE1BQU0sQ0FBQ00sT0FBTyxDQUNqRyxZQUNBO29CQUNFLE9BQU9QO2dCQUNULElBRUo7Z0JBRUZRLFFBQVE7Z0JBQ1JDLFFBQVE7b0JBQ05DLE1BQU07d0JBQ0osd0JBQXdCO3dCQUN4QixnQkFBZ0I7d0JBQ2hCLGdCQUFnQjt3QkFDaEJMLFNBQVM7d0JBQ1RNLE9BQU87d0JBQ1BGLFFBQVE7NEJBQ05HLE1BQU07NEJBQ05DLGFBQWE7NEJBQ2JDLE1BQU07d0JBQ1I7b0JBQ0Y7b0JBQ0FDLE1BQU07d0JBQ0pWLFNBQVM7d0JBQ1RXLFlBQVk7d0JBQ1pMLE9BQU87d0JBQ1BGLFFBQVFYLE1BQU1LLFNBQVMsQ0FBQ1ksSUFBSTtvQkFDOUI7b0JBQ0EsZ0JBQWdCO3dCQUNkVixTQUFTO3dCQUNUTSxPQUFPO29CQUNUO2dCQUNGO1lBQ0Y7WUFDQU0sUUFBUTtRQUNWO1FBQ0FuQixNQUFNSyxTQUFTLENBQUMsYUFBYSxHQUFHTCxNQUFNSyxTQUFTLENBQUMsZUFBZSxHQUM3REwsTUFBTUssU0FBUyxDQUFDLGdCQUFnQjtJQUNwQyxHQUFHTDtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3NoZWxsLXNlc3Npb24uanM/NGY1YyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcbnZhciByZWZyYWN0b3JCYXNoID0gcmVxdWlyZSgnLi9iYXNoLmpzJylcbm1vZHVsZS5leHBvcnRzID0gc2hlbGxTZXNzaW9uXG5zaGVsbFNlc3Npb24uZGlzcGxheU5hbWUgPSAnc2hlbGxTZXNzaW9uJ1xuc2hlbGxTZXNzaW9uLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gc2hlbGxTZXNzaW9uKFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvckJhc2gpXG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgLy8gQ0FSRUZVTCFcbiAgICAvLyBUaGUgZm9sbG93aW5nIHBhdHRlcm5zIGFyZSBjb25jYXRlbmF0ZWQsIHNvIHRoZSBncm91cCByZWZlcmVuY2VkIGJ5IGEgYmFjayByZWZlcmVuY2UgaXMgbm9uLW9idmlvdXMhXG4gICAgdmFyIHN0cmluZ3MgPSBbXG4gICAgICAvLyBub3JtYWwgc3RyaW5nXG4gICAgICAvXCIoPzpcXFxcW1xcc1xcU118XFwkXFwoW14pXStcXCl8XFwkKD8hXFwoKXxgW15gXStgfFteXCJcXFxcYCRdKSpcIi8uc291cmNlLFxuICAgICAgLydbXiddKicvLnNvdXJjZSxcbiAgICAgIC9cXCQnKD86W14nXFxcXF18XFxcXFtcXHNcXFNdKSonLy5zb3VyY2UsIC8vIGhlcmUgZG9jXG4gICAgICAvLyAyIGNhcHR1cmluZyBncm91cHNcbiAgICAgIC88PC0/XFxzKihbXCInXT8pKFxcdyspXFwxXFxzW1xcc1xcU10qP1tcXHJcXG5dXFwyLy5zb3VyY2VcbiAgICBdLmpvaW4oJ3wnKVxuICAgIFByaXNtLmxhbmd1YWdlc1snc2hlbGwtc2Vzc2lvbiddID0ge1xuICAgICAgY29tbWFuZDoge1xuICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoXG4gICAgICAgICAgLy8gdXNlciBpbmZvXG4gICAgICAgICAgL14vLnNvdXJjZSArXG4gICAgICAgICAgICAnKD86JyArIC8vIDx1c2VyPiBcIjpcIiAoIDxwYXRoPiApP1xuICAgICAgICAgICAgKC9bXlxcc0A6JCMlKiEvXFxcXF0rQFteXFxyXFxuQDokIyUqIS9cXFxcXSsoPzo6W15cXDAtXFx4MUYkIyUqP1wiPD46O3xdKyk/L1xuICAgICAgICAgICAgICAuc291cmNlICtcbiAgICAgICAgICAgICAgJ3wnICsgLy8gPHBhdGg+XG4gICAgICAgICAgICAgIC8vIFNpbmNlIHRoZSBwYXRoIHBhdHRlcm4gaXMgcXVpdGUgZ2VuZXJhbCwgd2Ugd2lsbCByZXF1aXJlIGl0IHRvIHN0YXJ0IHdpdGggYSBzcGVjaWFsIGNoYXJhY3RlciB0b1xuICAgICAgICAgICAgICAvLyBwcmV2ZW50IGZhbHNlIHBvc2l0aXZlcy5cbiAgICAgICAgICAgICAgL1svfi5dW15cXDAtXFx4MUYkIyUqP1wiPD5AOjt8XSovLnNvdXJjZSkgK1xuICAgICAgICAgICAgJyk/JyArIC8vIHNoZWxsIHN5bWJvbFxuICAgICAgICAgICAgL1skIyVdKD89XFxzKS8uc291cmNlICsgLy8gYmFzaCBjb21tYW5kXG4gICAgICAgICAgICAvKD86W15cXFxcXFxyXFxuIFxcdCdcIjwkXXxbIFxcdF0oPzooPyEjKXwjLiokKXxcXFxcKD86W15cXHJdfFxcclxcbj8pfFxcJCg/IScpfDwoPyE8KXw8PHN0cj4+KSsvLnNvdXJjZS5yZXBsYWNlKFxuICAgICAgICAgICAgICAvPDxzdHI+Pi9nLFxuICAgICAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHN0cmluZ3NcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKSxcbiAgICAgICAgICAnbSdcbiAgICAgICAgKSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBpbmZvOiB7XG4gICAgICAgICAgICAvLyBmb29AYmFyOn4vZmlsZXMkIGV4aXRcbiAgICAgICAgICAgIC8vIGZvb0BiYXIkIGV4aXRcbiAgICAgICAgICAgIC8vIH4vZmlsZXMkIGV4aXRcbiAgICAgICAgICAgIHBhdHRlcm46IC9eW14jJCVdKy8sXG4gICAgICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJyxcbiAgICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgICB1c2VyOiAvXlteXFxzQDokIyUqIS9cXFxcXStAW15cXHJcXG5AOiQjJSohL1xcXFxdKy8sXG4gICAgICAgICAgICAgIHB1bmN0dWF0aW9uOiAvOi8sXG4gICAgICAgICAgICAgIHBhdGg6IC9bXFxzXFxTXSsvXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBiYXNoOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvKF5bJCMlXVxccyopXFxTW1xcc1xcU10qLyxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICBhbGlhczogJ2xhbmd1YWdlLWJhc2gnLFxuICAgICAgICAgICAgaW5zaWRlOiBQcmlzbS5sYW5ndWFnZXMuYmFzaFxuICAgICAgICAgIH0sXG4gICAgICAgICAgJ3NoZWxsLXN5bWJvbCc6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC9eWyQjJV0vLFxuICAgICAgICAgICAgYWxpYXM6ICdpbXBvcnRhbnQnXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgb3V0cHV0OiAvLig/Oi4qKD86W1xcclxcbl18LiQpKSovXG4gICAgfVxuICAgIFByaXNtLmxhbmd1YWdlc1snc2gtc2Vzc2lvbiddID0gUHJpc20ubGFuZ3VhZ2VzWydzaGVsbHNlc3Npb24nXSA9XG4gICAgICBQcmlzbS5sYW5ndWFnZXNbJ3NoZWxsLXNlc3Npb24nXVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JCYXNoIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzaGVsbFNlc3Npb24iLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwic3RyaW5ncyIsInNvdXJjZSIsImpvaW4iLCJsYW5ndWFnZXMiLCJjb21tYW5kIiwicGF0dGVybiIsIlJlZ0V4cCIsInJlcGxhY2UiLCJncmVlZHkiLCJpbnNpZGUiLCJpbmZvIiwiYWxpYXMiLCJ1c2VyIiwicHVuY3R1YXRpb24iLCJwYXRoIiwiYmFzaCIsImxvb2tiZWhpbmQiLCJvdXRwdXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/shell-session.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/smali.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/smali.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = smali;\nsmali.displayName = \"smali\";\nsmali.aliases = [];\nfunction smali(Prism) {\n    // Test files for the parser itself:\n    // https://github.com/JesusFreke/smali/tree/master/smali/src/test/resources/LexerTest\n    Prism.languages.smali = {\n        comment: /#.*/,\n        string: {\n            pattern: /\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\(?:.|u[\\da-fA-F]{4}))'/,\n            greedy: true\n        },\n        \"class-name\": {\n            pattern: /(^|[^L])L(?:(?:\\w+|`[^`\\r\\n]*`)\\/)*(?:[\\w$]+|`[^`\\r\\n]*`)(?=\\s*;)/,\n            lookbehind: true,\n            inside: {\n                \"class-name\": {\n                    pattern: /(^L|\\/)(?:[\\w$]+|`[^`\\r\\n]*`)$/,\n                    lookbehind: true\n                },\n                namespace: {\n                    pattern: /^(L)(?:(?:\\w+|`[^`\\r\\n]*`)\\/)+/,\n                    lookbehind: true,\n                    inside: {\n                        punctuation: /\\//\n                    }\n                },\n                builtin: /^L/\n            }\n        },\n        builtin: [\n            {\n                // Reference: https://github.com/JesusFreke/smali/wiki/TypesMethodsAndFields#types\n                pattern: /([();\\[])[BCDFIJSVZ]+/,\n                lookbehind: true\n            },\n            {\n                // e.g. .field mWifiOnUid:I\n                pattern: /([\\w$>]:)[BCDFIJSVZ]/,\n                lookbehind: true\n            }\n        ],\n        keyword: [\n            {\n                pattern: /(\\.end\\s+)[\\w-]+/,\n                lookbehind: true\n            },\n            {\n                pattern: /(^|[^\\w.-])\\.(?!\\d)[\\w-]+/,\n                lookbehind: true\n            },\n            {\n                pattern: /(^|[^\\w.-])(?:abstract|annotation|bridge|constructor|enum|final|interface|private|protected|public|runtime|static|synthetic|system|transient)(?![\\w.-])/,\n                lookbehind: true\n            }\n        ],\n        function: {\n            pattern: /(^|[^\\w.-])(?:\\w+|<[\\w$-]+>)(?=\\()/,\n            lookbehind: true\n        },\n        field: {\n            pattern: /[\\w$]+(?=:)/,\n            alias: \"variable\"\n        },\n        register: {\n            pattern: /(^|[^\\w.-])[vp]\\d(?![\\w.-])/,\n            lookbehind: true,\n            alias: \"variable\"\n        },\n        boolean: {\n            pattern: /(^|[^\\w.-])(?:false|true)(?![\\w.-])/,\n            lookbehind: true\n        },\n        number: {\n            pattern: /(^|[^/\\w.-])-?(?:NAN|INFINITY|0x(?:[\\dA-F]+(?:\\.[\\dA-F]*)?|\\.[\\dA-F]+)(?:p[+-]?[\\dA-F]+)?|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)[dflst]?(?![\\w.-])/i,\n            lookbehind: true\n        },\n        label: {\n            pattern: /(:)\\w+/,\n            lookbehind: true,\n            alias: \"property\"\n        },\n        operator: /->|\\.\\.|[\\[=]/,\n        punctuation: /[{}(),;:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc21hbGkuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsTUFBTUMsV0FBVyxHQUFHO0FBQ3BCRCxNQUFNRSxPQUFPLEdBQUcsRUFBRTtBQUNsQixTQUFTRixNQUFNRyxLQUFLO0lBQ2xCLG9DQUFvQztJQUNwQyxxRkFBcUY7SUFDckZBLE1BQU1DLFNBQVMsQ0FBQ0osS0FBSyxHQUFHO1FBQ3RCSyxTQUFTO1FBQ1RDLFFBQVE7WUFDTkMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQSxjQUFjO1lBQ1pELFNBQ0U7WUFDRkUsWUFBWTtZQUNaQyxRQUFRO2dCQUNOLGNBQWM7b0JBQ1pILFNBQVM7b0JBQ1RFLFlBQVk7Z0JBQ2Q7Z0JBQ0FFLFdBQVc7b0JBQ1RKLFNBQVM7b0JBQ1RFLFlBQVk7b0JBQ1pDLFFBQVE7d0JBQ05FLGFBQWE7b0JBQ2Y7Z0JBQ0Y7Z0JBQ0FDLFNBQVM7WUFDWDtRQUNGO1FBQ0FBLFNBQVM7WUFDUDtnQkFDRSxrRkFBa0Y7Z0JBQ2xGTixTQUFTO2dCQUNURSxZQUFZO1lBQ2Q7WUFDQTtnQkFDRSwyQkFBMkI7Z0JBQzNCRixTQUFTO2dCQUNURSxZQUFZO1lBQ2Q7U0FDRDtRQUNESyxTQUFTO1lBQ1A7Z0JBQ0VQLFNBQVM7Z0JBQ1RFLFlBQVk7WUFDZDtZQUNBO2dCQUNFRixTQUFTO2dCQUNURSxZQUFZO1lBQ2Q7WUFDQTtnQkFDRUYsU0FDRTtnQkFDRkUsWUFBWTtZQUNkO1NBQ0Q7UUFDRE0sVUFBVTtZQUNSUixTQUFTO1lBQ1RFLFlBQVk7UUFDZDtRQUNBTyxPQUFPO1lBQ0xULFNBQVM7WUFDVFUsT0FBTztRQUNUO1FBQ0FDLFVBQVU7WUFDUlgsU0FBUztZQUNURSxZQUFZO1lBQ1pRLE9BQU87UUFDVDtRQUNBRSxTQUFTO1lBQ1BaLFNBQVM7WUFDVEUsWUFBWTtRQUNkO1FBQ0FXLFFBQVE7WUFDTmIsU0FDRTtZQUNGRSxZQUFZO1FBQ2Q7UUFDQVksT0FBTztZQUNMZCxTQUFTO1lBQ1RFLFlBQVk7WUFDWlEsT0FBTztRQUNUO1FBQ0FLLFVBQVU7UUFDVlYsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc21hbGkuanM/NWIxMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBzbWFsaVxuc21hbGkuZGlzcGxheU5hbWUgPSAnc21hbGknXG5zbWFsaS5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIHNtYWxpKFByaXNtKSB7XG4gIC8vIFRlc3QgZmlsZXMgZm9yIHRoZSBwYXJzZXIgaXRzZWxmOlxuICAvLyBodHRwczovL2dpdGh1Yi5jb20vSmVzdXNGcmVrZS9zbWFsaS90cmVlL21hc3Rlci9zbWFsaS9zcmMvdGVzdC9yZXNvdXJjZXMvTGV4ZXJUZXN0XG4gIFByaXNtLmxhbmd1YWdlcy5zbWFsaSA9IHtcbiAgICBjb21tZW50OiAvIy4qLyxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIig/OlteXFxyXFxuXFxcXFwiXXxcXFxcLikqXCJ8Jyg/OlteXFxyXFxuXFxcXCddfFxcXFwoPzoufHVbXFxkYS1mQS1GXXs0fSkpJy8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgICdjbGFzcy1uYW1lJzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhefFteTF0pTCg/Oig/Olxcdyt8YFteYFxcclxcbl0qYClcXC8pKig/OltcXHckXSt8YFteYFxcclxcbl0qYCkoPz1cXHMqOykvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICAnY2xhc3MtbmFtZSc6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKF5MfFxcLykoPzpbXFx3JF0rfGBbXmBcXHJcXG5dKmApJC8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICBuYW1lc3BhY2U6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXihMKSg/Oig/Olxcdyt8YFteYFxcclxcbl0qYClcXC8pKy8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXFwvL1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgYnVpbHRpbjogL15ML1xuICAgICAgfVxuICAgIH0sXG4gICAgYnVpbHRpbjogW1xuICAgICAge1xuICAgICAgICAvLyBSZWZlcmVuY2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9KZXN1c0ZyZWtlL3NtYWxpL3dpa2kvVHlwZXNNZXRob2RzQW5kRmllbGRzI3R5cGVzXG4gICAgICAgIHBhdHRlcm46IC8oWygpO1xcW10pW0JDREZJSlNWWl0rLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgLy8gZS5nLiAuZmllbGQgbVdpZmlPblVpZDpJXG4gICAgICAgIHBhdHRlcm46IC8oW1xcdyQ+XTopW0JDREZJSlNWWl0vLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9XG4gICAgXSxcbiAgICBrZXl3b3JkOiBbXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC8oXFwuZW5kXFxzKylbXFx3LV0rLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyhefFteXFx3Li1dKVxcLig/IVxcZClbXFx3LV0rLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKF58W15cXHcuLV0pKD86YWJzdHJhY3R8YW5ub3RhdGlvbnxicmlkZ2V8Y29uc3RydWN0b3J8ZW51bXxmaW5hbHxpbnRlcmZhY2V8cHJpdmF0ZXxwcm90ZWN0ZWR8cHVibGljfHJ1bnRpbWV8c3RhdGljfHN5bnRoZXRpY3xzeXN0ZW18dHJhbnNpZW50KSg/IVtcXHcuLV0pLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfVxuICAgIF0sXG4gICAgZnVuY3Rpb246IHtcbiAgICAgIHBhdHRlcm46IC8oXnxbXlxcdy4tXSkoPzpcXHcrfDxbXFx3JC1dKz4pKD89XFwoKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBmaWVsZDoge1xuICAgICAgcGF0dGVybjogL1tcXHckXSsoPz06KS8sXG4gICAgICBhbGlhczogJ3ZhcmlhYmxlJ1xuICAgIH0sXG4gICAgcmVnaXN0ZXI6IHtcbiAgICAgIHBhdHRlcm46IC8oXnxbXlxcdy4tXSlbdnBdXFxkKD8hW1xcdy4tXSkvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAndmFyaWFibGUnXG4gICAgfSxcbiAgICBib29sZWFuOiB7XG4gICAgICBwYXR0ZXJuOiAvKF58W15cXHcuLV0pKD86ZmFsc2V8dHJ1ZSkoPyFbXFx3Li1dKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBudW1iZXI6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXnxbXi9cXHcuLV0pLT8oPzpOQU58SU5GSU5JVFl8MHgoPzpbXFxkQS1GXSsoPzpcXC5bXFxkQS1GXSopP3xcXC5bXFxkQS1GXSspKD86cFsrLV0/W1xcZEEtRl0rKT98KD86XFxkKyg/OlxcLlxcZCopP3xcXC5cXGQrKSg/OmVbKy1dP1xcZCspPylbZGZsc3RdPyg/IVtcXHcuLV0pL2ksXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBsYWJlbDoge1xuICAgICAgcGF0dGVybjogLyg6KVxcdysvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAncHJvcGVydHknXG4gICAgfSxcbiAgICBvcGVyYXRvcjogLy0+fFxcLlxcLnxbXFxbPV0vLFxuICAgIHB1bmN0dWF0aW9uOiAvW3t9KCksOzpdL1xuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNtYWxpIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50Iiwic3RyaW5nIiwicGF0dGVybiIsImdyZWVkeSIsImxvb2tiZWhpbmQiLCJpbnNpZGUiLCJuYW1lc3BhY2UiLCJwdW5jdHVhdGlvbiIsImJ1aWx0aW4iLCJrZXl3b3JkIiwiZnVuY3Rpb24iLCJmaWVsZCIsImFsaWFzIiwicmVnaXN0ZXIiLCJib29sZWFuIiwibnVtYmVyIiwibGFiZWwiLCJvcGVyYXRvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/smali.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/smalltalk.js":
/*!**************************************************!*\
  !*** ./node_modules/refractor/lang/smalltalk.js ***!
  \**************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = smalltalk;\nsmalltalk.displayName = \"smalltalk\";\nsmalltalk.aliases = [];\nfunction smalltalk(Prism) {\n    Prism.languages.smalltalk = {\n        comment: {\n            pattern: /\"(?:\"\"|[^\"])*\"/,\n            greedy: true\n        },\n        char: {\n            pattern: /\\$./,\n            greedy: true\n        },\n        string: {\n            pattern: /'(?:''|[^'])*'/,\n            greedy: true\n        },\n        symbol: /#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,\n        \"block-arguments\": {\n            pattern: /(\\[\\s*):[^\\[|]*\\|/,\n            lookbehind: true,\n            inside: {\n                variable: /:[\\da-z]+/i,\n                punctuation: /\\|/\n            }\n        },\n        \"temporary-variables\": {\n            pattern: /\\|[^|]+\\|/,\n            inside: {\n                variable: /[\\da-z]+/i,\n                punctuation: /\\|/\n            }\n        },\n        keyword: /\\b(?:new|nil|self|super)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        number: [\n            /\\d+r-?[\\dA-Z]+(?:\\.[\\dA-Z]+)?(?:e-?\\d+)?/,\n            /\\b\\d+(?:\\.\\d+)?(?:e-?\\d+)?/\n        ],\n        operator: /[<=]=?|:=|~[~=]|\\/\\/?|\\\\\\\\|>[>=]?|[!^+\\-*&|,@]/,\n        punctuation: /[.;:?\\[\\](){}]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc21hbGx0YWxrLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLFVBQVVDLFdBQVcsR0FBRztBQUN4QkQsVUFBVUUsT0FBTyxHQUFHLEVBQUU7QUFDdEIsU0FBU0YsVUFBVUcsS0FBSztJQUN0QkEsTUFBTUMsU0FBUyxDQUFDSixTQUFTLEdBQUc7UUFDMUJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsTUFBTTtZQUNKRixTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBRSxRQUFRO1lBQ05ILFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FHLFFBQVE7UUFDUixtQkFBbUI7WUFDakJKLFNBQVM7WUFDVEssWUFBWTtZQUNaQyxRQUFRO2dCQUNOQyxVQUFVO2dCQUNWQyxhQUFhO1lBQ2Y7UUFDRjtRQUNBLHVCQUF1QjtZQUNyQlIsU0FBUztZQUNUTSxRQUFRO2dCQUNOQyxVQUFVO2dCQUNWQyxhQUFhO1lBQ2Y7UUFDRjtRQUNBQyxTQUFTO1FBQ1RDLFNBQVM7UUFDVEMsUUFBUTtZQUNOO1lBQ0E7U0FDRDtRQUNEQyxVQUFVO1FBQ1ZKLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3NtYWxsdGFsay5qcz83YTYwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHNtYWxsdGFsa1xuc21hbGx0YWxrLmRpc3BsYXlOYW1lID0gJ3NtYWxsdGFsaydcbnNtYWxsdGFsay5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIHNtYWxsdGFsayhQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuc21hbGx0YWxrID0ge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC9cIig/OlwiXCJ8W15cIl0pKlwiLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgY2hhcjoge1xuICAgICAgcGF0dGVybjogL1xcJC4vLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC8nKD86Jyd8W14nXSkqJy8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHN5bWJvbDogLyNbXFxkYS16XSt8Iyg/Oi18KFsrXFwvXFxcXCp+PD49QCV8Jj8hXSlcXDE/KXwjKD89XFwoKS9pLFxuICAgICdibG9jay1hcmd1bWVudHMnOiB7XG4gICAgICBwYXR0ZXJuOiAvKFxcW1xccyopOlteXFxbfF0qXFx8LyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgdmFyaWFibGU6IC86W1xcZGEtel0rL2ksXG4gICAgICAgIHB1bmN0dWF0aW9uOiAvXFx8L1xuICAgICAgfVxuICAgIH0sXG4gICAgJ3RlbXBvcmFyeS12YXJpYWJsZXMnOiB7XG4gICAgICBwYXR0ZXJuOiAvXFx8W158XStcXHwvLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHZhcmlhYmxlOiAvW1xcZGEtel0rL2ksXG4gICAgICAgIHB1bmN0dWF0aW9uOiAvXFx8L1xuICAgICAgfVxuICAgIH0sXG4gICAga2V5d29yZDogL1xcYig/Om5ld3xuaWx8c2VsZnxzdXBlcilcXGIvLFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAgbnVtYmVyOiBbXG4gICAgICAvXFxkK3ItP1tcXGRBLVpdKyg/OlxcLltcXGRBLVpdKyk/KD86ZS0/XFxkKyk/LyxcbiAgICAgIC9cXGJcXGQrKD86XFwuXFxkKyk/KD86ZS0/XFxkKyk/L1xuICAgIF0sXG4gICAgb3BlcmF0b3I6IC9bPD1dPT98Oj18flt+PV18XFwvXFwvP3xcXFxcXFxcXHw+Wz49XT98WyFeK1xcLSomfCxAXS8sXG4gICAgcHVuY3R1YXRpb246IC9bLjs6P1xcW1xcXSgpe31dL1xuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNtYWxsdGFsayIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJncmVlZHkiLCJjaGFyIiwic3RyaW5nIiwic3ltYm9sIiwibG9va2JlaGluZCIsImluc2lkZSIsInZhcmlhYmxlIiwicHVuY3R1YXRpb24iLCJrZXl3b3JkIiwiYm9vbGVhbiIsIm51bWJlciIsIm9wZXJhdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/smalltalk.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/smarty.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/smarty.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorMarkupTemplating = __webpack_require__(/*! ./markup-templating.js */ \"(ssr)/./node_modules/refractor/lang/markup-templating.js\");\nmodule.exports = smarty;\nsmarty.displayName = \"smarty\";\nsmarty.aliases = [];\nfunction smarty(Prism) {\n    Prism.register(refractorMarkupTemplating);\n    (function(Prism) {\n        Prism.languages.smarty = {\n            comment: {\n                pattern: /^\\{\\*[\\s\\S]*?\\*\\}/,\n                greedy: true\n            },\n            \"embedded-php\": {\n                pattern: /^\\{php\\}[\\s\\S]*?\\{\\/php\\}/,\n                greedy: true,\n                inside: {\n                    smarty: {\n                        pattern: /^\\{php\\}|\\{\\/php\\}$/,\n                        inside: null // see below\n                    },\n                    php: {\n                        pattern: /[\\s\\S]+/,\n                        alias: \"language-php\",\n                        inside: Prism.languages.php\n                    }\n                }\n            },\n            string: [\n                {\n                    pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n                    greedy: true,\n                    inside: {\n                        interpolation: {\n                            pattern: /\\{[^{}]*\\}|`[^`]*`/,\n                            inside: {\n                                \"interpolation-punctuation\": {\n                                    pattern: /^[{`]|[`}]$/,\n                                    alias: \"punctuation\"\n                                },\n                                expression: {\n                                    pattern: /[\\s\\S]+/,\n                                    inside: null // see below\n                                }\n                            }\n                        },\n                        variable: /\\$\\w+/\n                    }\n                },\n                {\n                    pattern: /'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n                    greedy: true\n                }\n            ],\n            keyword: {\n                pattern: /(^\\{\\/?)[a-z_]\\w*\\b(?!\\()/i,\n                lookbehind: true,\n                greedy: true\n            },\n            delimiter: {\n                pattern: /^\\{\\/?|\\}$/,\n                greedy: true,\n                alias: \"punctuation\"\n            },\n            number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n            variable: [\n                /\\$(?!\\d)\\w+/,\n                /#(?!\\d)\\w+#/,\n                {\n                    pattern: /(\\.|->|\\w\\s*=)(?!\\d)\\w+\\b(?!\\()/,\n                    lookbehind: true\n                },\n                {\n                    pattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n                    lookbehind: true\n                }\n            ],\n            function: {\n                pattern: /(\\|\\s*)@?[a-z_]\\w*|\\b[a-z_]\\w*(?=\\()/i,\n                lookbehind: true\n            },\n            \"attr-name\": /\\b[a-z_]\\w*(?=\\s*=)/i,\n            boolean: /\\b(?:false|no|off|on|true|yes)\\b/,\n            punctuation: /[\\[\\](){}.,:`]|->/,\n            operator: [\n                /[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/,\n                /\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/,\n                /\\b(?:and|eq|gt?e|gt|lt?e|lt|mod|neq?|not|or)\\b/\n            ]\n        };\n        Prism.languages.smarty[\"embedded-php\"].inside.smarty.inside = Prism.languages.smarty;\n        Prism.languages.smarty.string[0].inside.interpolation.inside.expression.inside = Prism.languages.smarty;\n        var string = /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/;\n        var smartyPattern = RegExp(// comments\n        /\\{\\*[\\s\\S]*?\\*\\}/.source + \"|\" + // php tags\n        /\\{php\\}[\\s\\S]*?\\{\\/php\\}/.source + \"|\" + // smarty blocks\n        /\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>)*\\})*\\})*\\}/.source.replace(/<str>/g, function() {\n            return string.source;\n        }), \"g\") // Tokenize all inline Smarty expressions\n        ;\n        Prism.hooks.add(\"before-tokenize\", function(env) {\n            var smartyLiteralStart = \"{literal}\";\n            var smartyLiteralEnd = \"{/literal}\";\n            var smartyLiteralMode = false;\n            Prism.languages[\"markup-templating\"].buildPlaceholders(env, \"smarty\", smartyPattern, function(match) {\n                // Smarty tags inside {literal} block are ignored\n                if (match === smartyLiteralEnd) {\n                    smartyLiteralMode = false;\n                }\n                if (!smartyLiteralMode) {\n                    if (match === smartyLiteralStart) {\n                        smartyLiteralMode = true;\n                    }\n                    return true;\n                }\n                return false;\n            });\n        }) // Re-insert the tokens after tokenizing\n        ;\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            Prism.languages[\"markup-templating\"].tokenizePlaceholders(env, \"smarty\");\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/smarty.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/sml.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/sml.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = sml;\nsml.displayName = \"sml\";\nsml.aliases = [\n    \"smlnj\"\n];\nfunction sml(Prism) {\n    // https://smlfamily.github.io/sml97-defn.pdf\n    // https://people.mpi-sws.org/~rossberg/sml.html\n    ;\n    (function(Prism) {\n        var keywords = /\\b(?:abstype|and|andalso|as|case|datatype|do|else|end|eqtype|exception|fn|fun|functor|handle|if|in|include|infix|infixr|let|local|nonfix|of|op|open|orelse|raise|rec|sharing|sig|signature|struct|structure|then|type|val|where|while|with|withtype)\\b/i;\n        Prism.languages.sml = {\n            // allow one level of nesting\n            comment: /\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*)|\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*))*\\*\\))*\\*\\)/,\n            string: {\n                pattern: /#?\"(?:[^\"\\\\]|\\\\.)*\"/,\n                greedy: true\n            },\n            \"class-name\": [\n                {\n                    // This is only an approximation since the real grammar is context-free\n                    //\n                    // Why the main loop so complex?\n                    // The main loop is approximately the same as /(?:\\s*(?:[*,]|->)\\s*<TERMINAL>)*/ which is, obviously, a lot\n                    // simpler. The difference is that if a comma is the last iteration of the loop, then the terminal must be\n                    // followed by a long identifier.\n                    pattern: RegExp(/((?:^|[^:]):\\s*)<TERMINAL>(?:\\s*(?:(?:\\*|->)\\s*<TERMINAL>|,\\s*<TERMINAL>(?:(?=<NOT-LAST>)|(?!<NOT-LAST>)\\s+<LONG-ID>)))*/.source.replace(/<NOT-LAST>/g, function() {\n                        return /\\s*(?:[*,]|->)/.source;\n                    }).replace(/<TERMINAL>/g, function() {\n                        return /(?:'[\\w']*|<LONG-ID>|\\((?:[^()]|\\([^()]*\\))*\\)|\\{(?:[^{}]|\\{[^{}]*\\})*\\})(?:\\s+<LONG-ID>)*/.source;\n                    }).replace(/<LONG-ID>/g, function() {\n                        return /(?!<KEYWORD>)[a-z\\d_][\\w'.]*/.source;\n                    }).replace(/<KEYWORD>/g, function() {\n                        return keywords.source;\n                    }), \"i\"),\n                    lookbehind: true,\n                    greedy: true,\n                    inside: null // see below\n                },\n                {\n                    pattern: /((?:^|[^\\w'])(?:datatype|exception|functor|signature|structure|type)\\s+)[a-z_][\\w'.]*/i,\n                    lookbehind: true\n                }\n            ],\n            function: {\n                pattern: /((?:^|[^\\w'])fun\\s+)[a-z_][\\w'.]*/i,\n                lookbehind: true\n            },\n            keyword: keywords,\n            variable: {\n                pattern: /(^|[^\\w'])'[\\w']*/,\n                lookbehind: true\n            },\n            number: /~?\\b(?:\\d+(?:\\.\\d+)?(?:e~?\\d+)?|0x[\\da-f]+)\\b/i,\n            word: {\n                pattern: /\\b0w(?:\\d+|x[\\da-f]+)\\b/i,\n                alias: \"constant\"\n            },\n            boolean: /\\b(?:false|true)\\b/i,\n            operator: /\\.\\.\\.|:[>=:]|=>?|->|[<>]=?|[!+\\-*/^#|@~]/,\n            punctuation: /[(){}\\[\\].:,;]/\n        };\n        Prism.languages.sml[\"class-name\"][0].inside = Prism.languages.sml;\n        Prism.languages.smlnj = Prism.languages.sml;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc21sLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLElBQUlDLFdBQVcsR0FBRztBQUNsQkQsSUFBSUUsT0FBTyxHQUFHO0lBQUM7Q0FBUTtBQUN2QixTQUFTRixJQUFJRyxLQUFLO0lBQ2hCLDZDQUE2QztJQUM3QyxnREFBZ0Q7O0lBQzlDLFVBQVVBLEtBQUs7UUFDZixJQUFJQyxXQUNGO1FBQ0ZELE1BQU1FLFNBQVMsQ0FBQ0wsR0FBRyxHQUFHO1lBQ3BCLDZCQUE2QjtZQUM3Qk0sU0FDRTtZQUNGQyxRQUFRO2dCQUNOQyxTQUFTO2dCQUNUQyxRQUFRO1lBQ1Y7WUFDQSxjQUFjO2dCQUNaO29CQUNFLHVFQUF1RTtvQkFDdkUsRUFBRTtvQkFDRixnQ0FBZ0M7b0JBQ2hDLDJHQUEyRztvQkFDM0csMEdBQTBHO29CQUMxRyxpQ0FBaUM7b0JBQ2pDRCxTQUFTRSxPQUNQLDJIQUEySEMsTUFBTSxDQUM5SEMsT0FBTyxDQUFDLGVBQWU7d0JBQ3RCLE9BQU8saUJBQWlCRCxNQUFNO29CQUNoQyxHQUNDQyxPQUFPLENBQUMsZUFBZTt3QkFDdEIsT0FBTyw2RkFDSkQsTUFBTTtvQkFDWCxHQUNDQyxPQUFPLENBQUMsY0FBYzt3QkFDckIsT0FBTywrQkFBK0JELE1BQU07b0JBQzlDLEdBQ0NDLE9BQU8sQ0FBQyxjQUFjO3dCQUNyQixPQUFPUixTQUFTTyxNQUFNO29CQUN4QixJQUNGO29CQUVGRSxZQUFZO29CQUNaSixRQUFRO29CQUNSSyxRQUFRLEtBQUssWUFBWTtnQkFDM0I7Z0JBQ0E7b0JBQ0VOLFNBQ0U7b0JBQ0ZLLFlBQVk7Z0JBQ2Q7YUFDRDtZQUNERSxVQUFVO2dCQUNSUCxTQUFTO2dCQUNUSyxZQUFZO1lBQ2Q7WUFDQUcsU0FBU1o7WUFDVGEsVUFBVTtnQkFDUlQsU0FBUztnQkFDVEssWUFBWTtZQUNkO1lBQ0FLLFFBQVE7WUFDUkMsTUFBTTtnQkFDSlgsU0FBUztnQkFDVFksT0FBTztZQUNUO1lBQ0FDLFNBQVM7WUFDVEMsVUFBVTtZQUNWQyxhQUFhO1FBQ2Y7UUFDQXBCLE1BQU1FLFNBQVMsQ0FBQ0wsR0FBRyxDQUFDLGFBQWEsQ0FBQyxFQUFFLENBQUNjLE1BQU0sR0FBR1gsTUFBTUUsU0FBUyxDQUFDTCxHQUFHO1FBQ2pFRyxNQUFNRSxTQUFTLENBQUNtQixLQUFLLEdBQUdyQixNQUFNRSxTQUFTLENBQUNMLEdBQUc7SUFDN0MsR0FBR0c7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zbWwuanM/ZThhOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBzbWxcbnNtbC5kaXNwbGF5TmFtZSA9ICdzbWwnXG5zbWwuYWxpYXNlcyA9IFsnc21sbmonXVxuZnVuY3Rpb24gc21sKFByaXNtKSB7XG4gIC8vIGh0dHBzOi8vc21sZmFtaWx5LmdpdGh1Yi5pby9zbWw5Ny1kZWZuLnBkZlxuICAvLyBodHRwczovL3Blb3BsZS5tcGktc3dzLm9yZy9+cm9zc2Jlcmcvc21sLmh0bWxcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIga2V5d29yZHMgPVxuICAgICAgL1xcYig/OmFic3R5cGV8YW5kfGFuZGFsc298YXN8Y2FzZXxkYXRhdHlwZXxkb3xlbHNlfGVuZHxlcXR5cGV8ZXhjZXB0aW9ufGZufGZ1bnxmdW5jdG9yfGhhbmRsZXxpZnxpbnxpbmNsdWRlfGluZml4fGluZml4cnxsZXR8bG9jYWx8bm9uZml4fG9mfG9wfG9wZW58b3JlbHNlfHJhaXNlfHJlY3xzaGFyaW5nfHNpZ3xzaWduYXR1cmV8c3RydWN0fHN0cnVjdHVyZXx0aGVufHR5cGV8dmFsfHdoZXJlfHdoaWxlfHdpdGh8d2l0aHR5cGUpXFxiL2lcbiAgICBQcmlzbS5sYW5ndWFnZXMuc21sID0ge1xuICAgICAgLy8gYWxsb3cgb25lIGxldmVsIG9mIG5lc3RpbmdcbiAgICAgIGNvbW1lbnQ6XG4gICAgICAgIC9cXChcXCooPzpbXiooXXxcXCooPyFcXCkpfFxcKCg/IVxcKil8XFwoXFwqKD86W14qKF18XFwqKD8hXFwpKXxcXCgoPyFcXCopKSpcXCpcXCkpKlxcKlxcKS8sXG4gICAgICBzdHJpbmc6IHtcbiAgICAgICAgcGF0dGVybjogLyM/XCIoPzpbXlwiXFxcXF18XFxcXC4pKlwiLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAgJ2NsYXNzLW5hbWUnOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAvLyBUaGlzIGlzIG9ubHkgYW4gYXBwcm94aW1hdGlvbiBzaW5jZSB0aGUgcmVhbCBncmFtbWFyIGlzIGNvbnRleHQtZnJlZVxuICAgICAgICAgIC8vXG4gICAgICAgICAgLy8gV2h5IHRoZSBtYWluIGxvb3Agc28gY29tcGxleD9cbiAgICAgICAgICAvLyBUaGUgbWFpbiBsb29wIGlzIGFwcHJveGltYXRlbHkgdGhlIHNhbWUgYXMgLyg/OlxccyooPzpbKixdfC0+KVxccyo8VEVSTUlOQUw+KSovIHdoaWNoIGlzLCBvYnZpb3VzbHksIGEgbG90XG4gICAgICAgICAgLy8gc2ltcGxlci4gVGhlIGRpZmZlcmVuY2UgaXMgdGhhdCBpZiBhIGNvbW1hIGlzIHRoZSBsYXN0IGl0ZXJhdGlvbiBvZiB0aGUgbG9vcCwgdGhlbiB0aGUgdGVybWluYWwgbXVzdCBiZVxuICAgICAgICAgIC8vIGZvbGxvd2VkIGJ5IGEgbG9uZyBpZGVudGlmaWVyLlxuICAgICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICAgIC8oKD86XnxbXjpdKTpcXHMqKTxURVJNSU5BTD4oPzpcXHMqKD86KD86XFwqfC0+KVxccyo8VEVSTUlOQUw+fCxcXHMqPFRFUk1JTkFMPig/Oig/PTxOT1QtTEFTVD4pfCg/ITxOT1QtTEFTVD4pXFxzKzxMT05HLUlEPikpKSovLnNvdXJjZVxuICAgICAgICAgICAgICAucmVwbGFjZSgvPE5PVC1MQVNUPi9nLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIC9cXHMqKD86WyosXXwtPikvLnNvdXJjZVxuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAucmVwbGFjZSgvPFRFUk1JTkFMPi9nLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIC8oPzonW1xcdyddKnw8TE9ORy1JRD58XFwoKD86W14oKV18XFwoW14oKV0qXFwpKSpcXCl8XFx7KD86W157fV18XFx7W157fV0qXFx9KSpcXH0pKD86XFxzKzxMT05HLUlEPikqL1xuICAgICAgICAgICAgICAgICAgLnNvdXJjZVxuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAucmVwbGFjZSgvPExPTkctSUQ+L2csIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gLyg/ITxLRVlXT1JEPilbYS16XFxkX11bXFx3Jy5dKi8uc291cmNlXG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgIC5yZXBsYWNlKC88S0VZV09SRD4vZywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBrZXl3b3Jkcy5zb3VyY2VcbiAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAnaSdcbiAgICAgICAgICApLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICAgIGluc2lkZTogbnVsbCAvLyBzZWUgYmVsb3dcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAvKCg/Ol58W15cXHcnXSkoPzpkYXRhdHlwZXxleGNlcHRpb258ZnVuY3RvcnxzaWduYXR1cmV8c3RydWN0dXJlfHR5cGUpXFxzKylbYS16X11bXFx3Jy5dKi9pLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIGZ1bmN0aW9uOiB7XG4gICAgICAgIHBhdHRlcm46IC8oKD86XnxbXlxcdyddKWZ1blxccyspW2Etel9dW1xcdycuXSovaSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGtleXdvcmQ6IGtleXdvcmRzLFxuICAgICAgdmFyaWFibGU6IHtcbiAgICAgICAgcGF0dGVybjogLyhefFteXFx3J10pJ1tcXHcnXSovLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAgbnVtYmVyOiAvfj9cXGIoPzpcXGQrKD86XFwuXFxkKyk/KD86ZX4/XFxkKyk/fDB4W1xcZGEtZl0rKVxcYi9pLFxuICAgICAgd29yZDoge1xuICAgICAgICBwYXR0ZXJuOiAvXFxiMHcoPzpcXGQrfHhbXFxkYS1mXSspXFxiL2ksXG4gICAgICAgIGFsaWFzOiAnY29uc3RhbnQnXG4gICAgICB9LFxuICAgICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiL2ksXG4gICAgICBvcGVyYXRvcjogL1xcLlxcLlxcLnw6Wz49Ol18PT4/fC0+fFs8Pl09P3xbIStcXC0qL14jfEB+XS8sXG4gICAgICBwdW5jdHVhdGlvbjogL1soKXt9XFxbXFxdLjosO10vXG4gICAgfVxuICAgIFByaXNtLmxhbmd1YWdlcy5zbWxbJ2NsYXNzLW5hbWUnXVswXS5pbnNpZGUgPSBQcmlzbS5sYW5ndWFnZXMuc21sXG4gICAgUHJpc20ubGFuZ3VhZ2VzLnNtbG5qID0gUHJpc20ubGFuZ3VhZ2VzLnNtbFxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic21sIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJrZXl3b3JkcyIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZ3JlZWR5IiwiUmVnRXhwIiwic291cmNlIiwicmVwbGFjZSIsImxvb2tiZWhpbmQiLCJpbnNpZGUiLCJmdW5jdGlvbiIsImtleXdvcmQiLCJ2YXJpYWJsZSIsIm51bWJlciIsIndvcmQiLCJhbGlhcyIsImJvb2xlYW4iLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIiwic21sbmoiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/sml.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/solidity.js":
/*!*************************************************!*\
  !*** ./node_modules/refractor/lang/solidity.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = solidity;\nsolidity.displayName = \"solidity\";\nsolidity.aliases = [\n    \"sol\"\n];\nfunction solidity(Prism) {\n    Prism.languages.solidity = Prism.languages.extend(\"clike\", {\n        \"class-name\": {\n            pattern: /(\\b(?:contract|enum|interface|library|new|struct|using)\\s+)(?!\\d)[\\w$]+/,\n            lookbehind: true\n        },\n        keyword: /\\b(?:_|anonymous|as|assembly|assert|break|calldata|case|constant|constructor|continue|contract|default|delete|do|else|emit|enum|event|external|for|from|function|if|import|indexed|inherited|interface|internal|is|let|library|mapping|memory|modifier|new|payable|pragma|private|public|pure|require|returns?|revert|selfdestruct|solidity|storage|struct|suicide|switch|this|throw|using|var|view|while)\\b/,\n        operator: /=>|->|:=|=:|\\*\\*|\\+\\+|--|\\|\\||&&|<<=?|>>=?|[-+*/%^&|<>!=]=?|[~?]/\n    });\n    Prism.languages.insertBefore(\"solidity\", \"keyword\", {\n        builtin: /\\b(?:address|bool|byte|u?int(?:8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?|string|bytes(?:[1-9]|[12]\\d|3[0-2])?)\\b/\n    });\n    Prism.languages.insertBefore(\"solidity\", \"number\", {\n        version: {\n            pattern: /([<>]=?|\\^)\\d+\\.\\d+\\.\\d+\\b/,\n            lookbehind: true,\n            alias: \"number\"\n        }\n    });\n    Prism.languages.sol = Prism.languages.solidity;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc29saWRpdHkuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsU0FBU0MsV0FBVyxHQUFHO0FBQ3ZCRCxTQUFTRSxPQUFPLEdBQUc7SUFBQztDQUFNO0FBQzFCLFNBQVNGLFNBQVNHLEtBQUs7SUFDckJBLE1BQU1DLFNBQVMsQ0FBQ0osUUFBUSxHQUFHRyxNQUFNQyxTQUFTLENBQUNDLE1BQU0sQ0FBQyxTQUFTO1FBQ3pELGNBQWM7WUFDWkMsU0FDRTtZQUNGQyxZQUFZO1FBQ2Q7UUFDQUMsU0FDRTtRQUNGQyxVQUFVO0lBQ1o7SUFDQU4sTUFBTUMsU0FBUyxDQUFDTSxZQUFZLENBQUMsWUFBWSxXQUFXO1FBQ2xEQyxTQUNFO0lBQ0o7SUFDQVIsTUFBTUMsU0FBUyxDQUFDTSxZQUFZLENBQUMsWUFBWSxVQUFVO1FBQ2pERSxTQUFTO1lBQ1BOLFNBQVM7WUFDVEMsWUFBWTtZQUNaTSxPQUFPO1FBQ1Q7SUFDRjtJQUNBVixNQUFNQyxTQUFTLENBQUNVLEdBQUcsR0FBR1gsTUFBTUMsU0FBUyxDQUFDSixRQUFRO0FBQ2hEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3NvbGlkaXR5LmpzP2IwZjkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gc29saWRpdHlcbnNvbGlkaXR5LmRpc3BsYXlOYW1lID0gJ3NvbGlkaXR5J1xuc29saWRpdHkuYWxpYXNlcyA9IFsnc29sJ11cbmZ1bmN0aW9uIHNvbGlkaXR5KFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5zb2xpZGl0eSA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2NsaWtlJywge1xuICAgICdjbGFzcy1uYW1lJzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhcXGIoPzpjb250cmFjdHxlbnVtfGludGVyZmFjZXxsaWJyYXJ5fG5ld3xzdHJ1Y3R8dXNpbmcpXFxzKykoPyFcXGQpW1xcdyRdKy8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/Ol98YW5vbnltb3VzfGFzfGFzc2VtYmx5fGFzc2VydHxicmVha3xjYWxsZGF0YXxjYXNlfGNvbnN0YW50fGNvbnN0cnVjdG9yfGNvbnRpbnVlfGNvbnRyYWN0fGRlZmF1bHR8ZGVsZXRlfGRvfGVsc2V8ZW1pdHxlbnVtfGV2ZW50fGV4dGVybmFsfGZvcnxmcm9tfGZ1bmN0aW9ufGlmfGltcG9ydHxpbmRleGVkfGluaGVyaXRlZHxpbnRlcmZhY2V8aW50ZXJuYWx8aXN8bGV0fGxpYnJhcnl8bWFwcGluZ3xtZW1vcnl8bW9kaWZpZXJ8bmV3fHBheWFibGV8cHJhZ21hfHByaXZhdGV8cHVibGljfHB1cmV8cmVxdWlyZXxyZXR1cm5zP3xyZXZlcnR8c2VsZmRlc3RydWN0fHNvbGlkaXR5fHN0b3JhZ2V8c3RydWN0fHN1aWNpZGV8c3dpdGNofHRoaXN8dGhyb3d8dXNpbmd8dmFyfHZpZXd8d2hpbGUpXFxiLyxcbiAgICBvcGVyYXRvcjogLz0+fC0+fDo9fD06fFxcKlxcKnxcXCtcXCt8LS18XFx8XFx8fCYmfDw8PT98Pj49P3xbLSsqLyVeJnw8PiE9XT0/fFt+P10vXG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ3NvbGlkaXR5JywgJ2tleXdvcmQnLCB7XG4gICAgYnVpbHRpbjpcbiAgICAgIC9cXGIoPzphZGRyZXNzfGJvb2x8Ynl0ZXx1P2ludCg/Ojh8MTZ8MjR8MzJ8NDB8NDh8NTZ8NjR8NzJ8ODB8ODh8OTZ8MTA0fDExMnwxMjB8MTI4fDEzNnwxNDR8MTUyfDE2MHwxNjh8MTc2fDE4NHwxOTJ8MjAwfDIwOHwyMTZ8MjI0fDIzMnwyNDB8MjQ4fDI1Nik/fHN0cmluZ3xieXRlcyg/OlsxLTldfFsxMl1cXGR8M1swLTJdKT8pXFxiL1xuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdzb2xpZGl0eScsICdudW1iZXInLCB7XG4gICAgdmVyc2lvbjoge1xuICAgICAgcGF0dGVybjogLyhbPD5dPT98XFxeKVxcZCtcXC5cXGQrXFwuXFxkK1xcYi8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdudW1iZXInXG4gICAgfVxuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuc29sID0gUHJpc20ubGFuZ3VhZ2VzLnNvbGlkaXR5XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNvbGlkaXR5IiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImtleXdvcmQiLCJvcGVyYXRvciIsImluc2VydEJlZm9yZSIsImJ1aWx0aW4iLCJ2ZXJzaW9uIiwiYWxpYXMiLCJzb2wiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/solidity.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/solution-file.js":
/*!******************************************************!*\
  !*** ./node_modules/refractor/lang/solution-file.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = solutionFile;\nsolutionFile.displayName = \"solutionFile\";\nsolutionFile.aliases = [];\nfunction solutionFile(Prism) {\n    ;\n    (function(Prism) {\n        var guid = {\n            // https://en.wikipedia.org/wiki/Universally_unique_identifier#Format\n            pattern: /\\{[\\da-f]{8}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{12}\\}/i,\n            alias: \"constant\",\n            inside: {\n                punctuation: /[{}]/\n            }\n        };\n        Prism.languages[\"solution-file\"] = {\n            comment: {\n                pattern: /#.*/,\n                greedy: true\n            },\n            string: {\n                pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n                greedy: true,\n                inside: {\n                    guid: guid\n                }\n            },\n            object: {\n                // Foo\n                //   Bar(\"abs\") = 9\n                //   EndBar\n                //   Prop = TRUE\n                // EndFoo\n                pattern: /^([ \\t]*)(?:([A-Z]\\w*)\\b(?=.*(?:\\r\\n?|\\n)(?:\\1[ \\t].*(?:\\r\\n?|\\n))*\\1End\\2(?=[ \\t]*$))|End[A-Z]\\w*(?=[ \\t]*$))/m,\n                lookbehind: true,\n                greedy: true,\n                alias: \"keyword\"\n            },\n            property: {\n                pattern: /^([ \\t]*)(?!\\s)[^\\r\\n\"#=()]*[^\\s\"#=()](?=\\s*=)/m,\n                lookbehind: true,\n                inside: {\n                    guid: guid\n                }\n            },\n            guid: guid,\n            number: /\\b\\d+(?:\\.\\d+)*\\b/,\n            boolean: /\\b(?:FALSE|TRUE)\\b/,\n            operator: /=/,\n            punctuation: /[(),]/\n        };\n        Prism.languages[\"sln\"] = Prism.languages[\"solution-file\"];\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc29sdXRpb24tZmlsZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxhQUFhQyxXQUFXLEdBQUc7QUFDM0JELGFBQWFFLE9BQU8sR0FBRyxFQUFFO0FBQ3pCLFNBQVNGLGFBQWFHLEtBQUs7O0lBQ3ZCLFVBQVVBLEtBQUs7UUFDZixJQUFJQyxPQUFPO1lBQ1QscUVBQXFFO1lBQ3JFQyxTQUFTO1lBQ1RDLE9BQU87WUFDUEMsUUFBUTtnQkFDTkMsYUFBYTtZQUNmO1FBQ0Y7UUFDQUwsTUFBTU0sU0FBUyxDQUFDLGdCQUFnQixHQUFHO1lBQ2pDQyxTQUFTO2dCQUNQTCxTQUFTO2dCQUNUTSxRQUFRO1lBQ1Y7WUFDQUMsUUFBUTtnQkFDTlAsU0FBUztnQkFDVE0sUUFBUTtnQkFDUkosUUFBUTtvQkFDTkgsTUFBTUE7Z0JBQ1I7WUFDRjtZQUNBUyxRQUFRO2dCQUNOLE1BQU07Z0JBQ04sbUJBQW1CO2dCQUNuQixXQUFXO2dCQUNYLGdCQUFnQjtnQkFDaEIsU0FBUztnQkFDVFIsU0FDRTtnQkFDRlMsWUFBWTtnQkFDWkgsUUFBUTtnQkFDUkwsT0FBTztZQUNUO1lBQ0FTLFVBQVU7Z0JBQ1JWLFNBQVM7Z0JBQ1RTLFlBQVk7Z0JBQ1pQLFFBQVE7b0JBQ05ILE1BQU1BO2dCQUNSO1lBQ0Y7WUFDQUEsTUFBTUE7WUFDTlksUUFBUTtZQUNSQyxTQUFTO1lBQ1RDLFVBQVU7WUFDVlYsYUFBYTtRQUNmO1FBQ0FMLE1BQU1NLFNBQVMsQ0FBQyxNQUFNLEdBQUdOLE1BQU1NLFNBQVMsQ0FBQyxnQkFBZ0I7SUFDM0QsR0FBR047QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zb2x1dGlvbi1maWxlLmpzPzE5ODYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gc29sdXRpb25GaWxlXG5zb2x1dGlvbkZpbGUuZGlzcGxheU5hbWUgPSAnc29sdXRpb25GaWxlJ1xuc29sdXRpb25GaWxlLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gc29sdXRpb25GaWxlKFByaXNtKSB7XG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIGd1aWQgPSB7XG4gICAgICAvLyBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9Vbml2ZXJzYWxseV91bmlxdWVfaWRlbnRpZmllciNGb3JtYXRcbiAgICAgIHBhdHRlcm46IC9cXHtbXFxkYS1mXXs4fS1bXFxkYS1mXXs0fS1bXFxkYS1mXXs0fS1bXFxkYS1mXXs0fS1bXFxkYS1mXXsxMn1cXH0vaSxcbiAgICAgIGFsaWFzOiAnY29uc3RhbnQnLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHB1bmN0dWF0aW9uOiAvW3t9XS9cbiAgICAgIH1cbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzWydzb2x1dGlvbi1maWxlJ10gPSB7XG4gICAgICBjb21tZW50OiB7XG4gICAgICAgIHBhdHRlcm46IC8jLiovLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICBzdHJpbmc6IHtcbiAgICAgICAgcGF0dGVybjogL1wiW15cIlxcclxcbl0qXCJ8J1teJ1xcclxcbl0qJy8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgZ3VpZDogZ3VpZFxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgb2JqZWN0OiB7XG4gICAgICAgIC8vIEZvb1xuICAgICAgICAvLyAgIEJhcihcImFic1wiKSA9IDlcbiAgICAgICAgLy8gICBFbmRCYXJcbiAgICAgICAgLy8gICBQcm9wID0gVFJVRVxuICAgICAgICAvLyBFbmRGb29cbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvXihbIFxcdF0qKSg/OihbQS1aXVxcdyopXFxiKD89LiooPzpcXHJcXG4/fFxcbikoPzpcXDFbIFxcdF0uKig/Olxcclxcbj98XFxuKSkqXFwxRW5kXFwyKD89WyBcXHRdKiQpKXxFbmRbQS1aXVxcdyooPz1bIFxcdF0qJCkpL20sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgICAgfSxcbiAgICAgIHByb3BlcnR5OiB7XG4gICAgICAgIHBhdHRlcm46IC9eKFsgXFx0XSopKD8hXFxzKVteXFxyXFxuXCIjPSgpXSpbXlxcc1wiIz0oKV0oPz1cXHMqPSkvbSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgZ3VpZDogZ3VpZFxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgZ3VpZDogZ3VpZCxcbiAgICAgIG51bWJlcjogL1xcYlxcZCsoPzpcXC5cXGQrKSpcXGIvLFxuICAgICAgYm9vbGVhbjogL1xcYig/OkZBTFNFfFRSVUUpXFxiLyxcbiAgICAgIG9wZXJhdG9yOiAvPS8sXG4gICAgICBwdW5jdHVhdGlvbjogL1soKSxdL1xuICAgIH1cbiAgICBQcmlzbS5sYW5ndWFnZXNbJ3NsbiddID0gUHJpc20ubGFuZ3VhZ2VzWydzb2x1dGlvbi1maWxlJ11cbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNvbHV0aW9uRmlsZSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwiZ3VpZCIsInBhdHRlcm4iLCJhbGlhcyIsImluc2lkZSIsInB1bmN0dWF0aW9uIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsImdyZWVkeSIsInN0cmluZyIsIm9iamVjdCIsImxvb2tiZWhpbmQiLCJwcm9wZXJ0eSIsIm51bWJlciIsImJvb2xlYW4iLCJvcGVyYXRvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/solution-file.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/soy.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/soy.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorMarkupTemplating = __webpack_require__(/*! ./markup-templating.js */ \"(ssr)/./node_modules/refractor/lang/markup-templating.js\");\nmodule.exports = soy;\nsoy.displayName = \"soy\";\nsoy.aliases = [];\nfunction soy(Prism) {\n    Prism.register(refractorMarkupTemplating);\n    (function(Prism) {\n        var stringPattern = /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n        var numberPattern = /\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/;\n        Prism.languages.soy = {\n            comment: [\n                /\\/\\*[\\s\\S]*?\\*\\//,\n                {\n                    pattern: /(\\s)\\/\\/.*/,\n                    lookbehind: true,\n                    greedy: true\n                }\n            ],\n            \"command-arg\": {\n                pattern: /(\\{+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,\n                lookbehind: true,\n                alias: \"string\",\n                inside: {\n                    punctuation: /\\./\n                }\n            },\n            parameter: {\n                pattern: /(\\{+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,\n                lookbehind: true,\n                alias: \"variable\"\n            },\n            keyword: [\n                {\n                    pattern: /(\\{+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,\n                    lookbehind: true\n                },\n                /\\b(?:any|as|attributes|bool|css|float|html|in|int|js|list|map|null|number|string|uri)\\b/\n            ],\n            delimiter: {\n                pattern: /^\\{+\\/?|\\/?\\}+$/,\n                alias: \"punctuation\"\n            },\n            property: /\\w+(?==)/,\n            variable: {\n                pattern: /\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+\\]))*/,\n                inside: {\n                    string: {\n                        pattern: stringPattern,\n                        greedy: true\n                    },\n                    number: numberPattern,\n                    punctuation: /[\\[\\].?]/\n                }\n            },\n            string: {\n                pattern: stringPattern,\n                greedy: true\n            },\n            function: [\n                /\\w+(?=\\()/,\n                {\n                    pattern: /(\\|[^\\S\\r\\n]*)\\w+/,\n                    lookbehind: true\n                }\n            ],\n            boolean: /\\b(?:false|true)\\b/,\n            number: numberPattern,\n            operator: /\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,\n            punctuation: /[{}()\\[\\]|.,:]/\n        } // Tokenize all inline Soy expressions\n        ;\n        Prism.hooks.add(\"before-tokenize\", function(env) {\n            var soyPattern = /\\{\\{.+?\\}\\}|\\{.+?\\}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g;\n            var soyLitteralStart = \"{literal}\";\n            var soyLitteralEnd = \"{/literal}\";\n            var soyLitteralMode = false;\n            Prism.languages[\"markup-templating\"].buildPlaceholders(env, \"soy\", soyPattern, function(match) {\n                // Soy tags inside {literal} block are ignored\n                if (match === soyLitteralEnd) {\n                    soyLitteralMode = false;\n                }\n                if (!soyLitteralMode) {\n                    if (match === soyLitteralStart) {\n                        soyLitteralMode = true;\n                    }\n                    return true;\n                }\n                return false;\n            });\n        }) // Re-insert the tokens after tokenizing\n        ;\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            Prism.languages[\"markup-templating\"].tokenizePlaceholders(env, \"soy\");\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc295LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsSUFBSUEsNEJBQTRCQyxtQkFBT0EsQ0FBQztBQUN4Q0MsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUNoQixTQUFTRixJQUFJRyxLQUFLO0lBQ2hCQSxNQUFNQyxRQUFRLENBQUNSO0lBQ2IsVUFBVU8sS0FBSztRQUNmLElBQUlFLGdCQUFnQjtRQUNwQixJQUFJQyxnQkFBZ0I7UUFDcEJILE1BQU1JLFNBQVMsQ0FBQ1AsR0FBRyxHQUFHO1lBQ3BCUSxTQUFTO2dCQUNQO2dCQUNBO29CQUNFQyxTQUFTO29CQUNUQyxZQUFZO29CQUNaQyxRQUFRO2dCQUNWO2FBQ0Q7WUFDRCxlQUFlO2dCQUNiRixTQUNFO2dCQUNGQyxZQUFZO2dCQUNaRSxPQUFPO2dCQUNQQyxRQUFRO29CQUNOQyxhQUFhO2dCQUNmO1lBQ0Y7WUFDQUMsV0FBVztnQkFDVE4sU0FBUztnQkFDVEMsWUFBWTtnQkFDWkUsT0FBTztZQUNUO1lBQ0FJLFNBQVM7Z0JBQ1A7b0JBQ0VQLFNBQ0U7b0JBQ0ZDLFlBQVk7Z0JBQ2Q7Z0JBQ0E7YUFDRDtZQUNETyxXQUFXO2dCQUNUUixTQUFTO2dCQUNURyxPQUFPO1lBQ1Q7WUFDQU0sVUFBVTtZQUNWQyxVQUFVO2dCQUNSVixTQUFTO2dCQUNUSSxRQUFRO29CQUNOTyxRQUFRO3dCQUNOWCxTQUFTSjt3QkFDVE0sUUFBUTtvQkFDVjtvQkFDQVUsUUFBUWY7b0JBQ1JRLGFBQWE7Z0JBQ2Y7WUFDRjtZQUNBTSxRQUFRO2dCQUNOWCxTQUFTSjtnQkFDVE0sUUFBUTtZQUNWO1lBQ0FXLFVBQVU7Z0JBQ1I7Z0JBQ0E7b0JBQ0ViLFNBQVM7b0JBQ1RDLFlBQVk7Z0JBQ2Q7YUFDRDtZQUNEYSxTQUFTO1lBQ1RGLFFBQVFmO1lBQ1JrQixVQUFVO1lBQ1ZWLGFBQWE7UUFDZixFQUFFLHNDQUFzQzs7UUFDeENYLE1BQU1zQixLQUFLLENBQUNDLEdBQUcsQ0FBQyxtQkFBbUIsU0FBVUMsR0FBRztZQUM5QyxJQUFJQyxhQUFhO1lBQ2pCLElBQUlDLG1CQUFtQjtZQUN2QixJQUFJQyxpQkFBaUI7WUFDckIsSUFBSUMsa0JBQWtCO1lBQ3RCNUIsTUFBTUksU0FBUyxDQUFDLG9CQUFvQixDQUFDeUIsaUJBQWlCLENBQ3BETCxLQUNBLE9BQ0FDLFlBQ0EsU0FBVUssS0FBSztnQkFDYiw4Q0FBOEM7Z0JBQzlDLElBQUlBLFVBQVVILGdCQUFnQjtvQkFDNUJDLGtCQUFrQjtnQkFDcEI7Z0JBQ0EsSUFBSSxDQUFDQSxpQkFBaUI7b0JBQ3BCLElBQUlFLFVBQVVKLGtCQUFrQjt3QkFDOUJFLGtCQUFrQjtvQkFDcEI7b0JBQ0EsT0FBTztnQkFDVDtnQkFDQSxPQUFPO1lBQ1Q7UUFFSixHQUFHLHdDQUF3Qzs7UUFDM0M1QixNQUFNc0IsS0FBSyxDQUFDQyxHQUFHLENBQUMsa0JBQWtCLFNBQVVDLEdBQUc7WUFDN0N4QixNQUFNSSxTQUFTLENBQUMsb0JBQW9CLENBQUMyQixvQkFBb0IsQ0FBQ1AsS0FBSztRQUNqRTtJQUNGLEdBQUd4QjtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3NveS5qcz84ZDI1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xudmFyIHJlZnJhY3Rvck1hcmt1cFRlbXBsYXRpbmcgPSByZXF1aXJlKCcuL21hcmt1cC10ZW1wbGF0aW5nLmpzJylcbm1vZHVsZS5leHBvcnRzID0gc295XG5zb3kuZGlzcGxheU5hbWUgPSAnc295J1xuc295LmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gc295KFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3Rvck1hcmt1cFRlbXBsYXRpbmcpXG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIHN0cmluZ1BhdHRlcm4gPSAvKFtcIiddKSg/OlxcXFwoPzpcXHJcXG58W1xcc1xcU10pfCg/IVxcMSlbXlxcXFxcXHJcXG5dKSpcXDEvXG4gICAgdmFyIG51bWJlclBhdHRlcm4gPSAvXFxiXFxkKyg/OlxcLlxcZCspPyg/OltlRV1bKy1dP1xcZCspP1xcYnxcXGIweFtcXGRBLUZdK1xcYi9cbiAgICBQcmlzbS5sYW5ndWFnZXMuc295ID0ge1xuICAgICAgY29tbWVudDogW1xuICAgICAgICAvXFwvXFwqW1xcc1xcU10qP1xcKlxcLy8sXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKFxccylcXC9cXC8uKi8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgICdjb21tYW5kLWFyZyc6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKFxceytcXC8/XFxzKig/OmFsaWFzfGNhbGx8ZGVsY2FsbHxkZWxwYWNrYWdlfGRlbHRlbXBsYXRlfG5hbWVzcGFjZXx0ZW1wbGF0ZSlcXHMrKVxcLj9bXFx3Ll0rLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdzdHJpbmcnLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjogL1xcLi9cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHBhcmFtZXRlcjoge1xuICAgICAgICBwYXR0ZXJuOiAvKFxceytcXC8/XFxzKkA/cGFyYW1cXD8/XFxzKylcXC4/W1xcdy5dKy8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiAndmFyaWFibGUnXG4gICAgICB9LFxuICAgICAga2V5d29yZDogW1xuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAgIC8oXFx7K1xcLz9bXlxcU1xcclxcbl0qKSg/OlxcXFxbbnJ0XXxhbGlhc3xjYWxsfGNhc2V8Y3NzfGRlZmF1bHR8ZGVsY2FsbHxkZWxwYWNrYWdlfGRlbHRlbXBsYXRlfGVsc2UoPzppZik/fGZhbGxiYWNrbXNnfGZvcig/OmVhY2gpP3xpZig/OmVtcHR5KT98bGJ8bGV0fGxpdGVyYWx8bXNnfG5hbWVzcGFjZXxuaWx8QD9wYXJhbVxcPz98cmJ8c3B8c3dpdGNofHRlbXBsYXRlfHhpZCkvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgL1xcYig/OmFueXxhc3xhdHRyaWJ1dGVzfGJvb2x8Y3NzfGZsb2F0fGh0bWx8aW58aW50fGpzfGxpc3R8bWFwfG51bGx8bnVtYmVyfHN0cmluZ3x1cmkpXFxiL1xuICAgICAgXSxcbiAgICAgIGRlbGltaXRlcjoge1xuICAgICAgICBwYXR0ZXJuOiAvXlxceytcXC8/fFxcLz9cXH0rJC8sXG4gICAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgICB9LFxuICAgICAgcHJvcGVydHk6IC9cXHcrKD89PSkvLFxuICAgICAgdmFyaWFibGU6IHtcbiAgICAgICAgcGF0dGVybjogL1xcJFteXFxXXFxkXVxcdyooPzpcXD8/KD86XFwuXFx3K3xcXFtbXlxcXV0rXFxdKSkqLyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgc3RyaW5nOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiBzdHJpbmdQYXR0ZXJuLFxuICAgICAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICAgICAgfSxcbiAgICAgICAgICBudW1iZXI6IG51bWJlclBhdHRlcm4sXG4gICAgICAgICAgcHVuY3R1YXRpb246IC9bXFxbXFxdLj9dL1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgc3RyaW5nOiB7XG4gICAgICAgIHBhdHRlcm46IHN0cmluZ1BhdHRlcm4sXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGZ1bmN0aW9uOiBbXG4gICAgICAgIC9cXHcrKD89XFwoKS8sXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKFxcfFteXFxTXFxyXFxuXSopXFx3Ky8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiLyxcbiAgICAgIG51bWJlcjogbnVtYmVyUGF0dGVybixcbiAgICAgIG9wZXJhdG9yOiAvXFw/Oj98PD0/fD49P3w9PT98IT18WysqLyUtXXxcXGIoPzphbmR8bm90fG9yKVxcYi8sXG4gICAgICBwdW5jdHVhdGlvbjogL1t7fSgpXFxbXFxdfC4sOl0vXG4gICAgfSAvLyBUb2tlbml6ZSBhbGwgaW5saW5lIFNveSBleHByZXNzaW9uc1xuICAgIFByaXNtLmhvb2tzLmFkZCgnYmVmb3JlLXRva2VuaXplJywgZnVuY3Rpb24gKGVudikge1xuICAgICAgdmFyIHNveVBhdHRlcm4gPSAvXFx7XFx7Lis/XFx9XFx9fFxcey4rP1xcfXxcXHNcXC9cXC8uKnxcXC9cXCpbXFxzXFxTXSo/XFwqXFwvL2dcbiAgICAgIHZhciBzb3lMaXR0ZXJhbFN0YXJ0ID0gJ3tsaXRlcmFsfSdcbiAgICAgIHZhciBzb3lMaXR0ZXJhbEVuZCA9ICd7L2xpdGVyYWx9J1xuICAgICAgdmFyIHNveUxpdHRlcmFsTW9kZSA9IGZhbHNlXG4gICAgICBQcmlzbS5sYW5ndWFnZXNbJ21hcmt1cC10ZW1wbGF0aW5nJ10uYnVpbGRQbGFjZWhvbGRlcnMoXG4gICAgICAgIGVudixcbiAgICAgICAgJ3NveScsXG4gICAgICAgIHNveVBhdHRlcm4sXG4gICAgICAgIGZ1bmN0aW9uIChtYXRjaCkge1xuICAgICAgICAgIC8vIFNveSB0YWdzIGluc2lkZSB7bGl0ZXJhbH0gYmxvY2sgYXJlIGlnbm9yZWRcbiAgICAgICAgICBpZiAobWF0Y2ggPT09IHNveUxpdHRlcmFsRW5kKSB7XG4gICAgICAgICAgICBzb3lMaXR0ZXJhbE1vZGUgPSBmYWxzZVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoIXNveUxpdHRlcmFsTW9kZSkge1xuICAgICAgICAgICAgaWYgKG1hdGNoID09PSBzb3lMaXR0ZXJhbFN0YXJ0KSB7XG4gICAgICAgICAgICAgIHNveUxpdHRlcmFsTW9kZSA9IHRydWVcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0cnVlXG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgICB9XG4gICAgICApXG4gICAgfSkgLy8gUmUtaW5zZXJ0IHRoZSB0b2tlbnMgYWZ0ZXIgdG9rZW5pemluZ1xuICAgIFByaXNtLmhvb2tzLmFkZCgnYWZ0ZXItdG9rZW5pemUnLCBmdW5jdGlvbiAoZW52KSB7XG4gICAgICBQcmlzbS5sYW5ndWFnZXNbJ21hcmt1cC10ZW1wbGF0aW5nJ10udG9rZW5pemVQbGFjZWhvbGRlcnMoZW52LCAnc295JylcbiAgICB9KVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JNYXJrdXBUZW1wbGF0aW5nIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzb3kiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwic3RyaW5nUGF0dGVybiIsIm51bWJlclBhdHRlcm4iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJncmVlZHkiLCJhbGlhcyIsImluc2lkZSIsInB1bmN0dWF0aW9uIiwicGFyYW1ldGVyIiwia2V5d29yZCIsImRlbGltaXRlciIsInByb3BlcnR5IiwidmFyaWFibGUiLCJzdHJpbmciLCJudW1iZXIiLCJmdW5jdGlvbiIsImJvb2xlYW4iLCJvcGVyYXRvciIsImhvb2tzIiwiYWRkIiwiZW52Iiwic295UGF0dGVybiIsInNveUxpdHRlcmFsU3RhcnQiLCJzb3lMaXR0ZXJhbEVuZCIsInNveUxpdHRlcmFsTW9kZSIsImJ1aWxkUGxhY2Vob2xkZXJzIiwibWF0Y2giLCJ0b2tlbml6ZVBsYWNlaG9sZGVycyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/soy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/sparql.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/sparql.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorTurtle = __webpack_require__(/*! ./turtle.js */ \"(ssr)/./node_modules/refractor/lang/turtle.js\");\nmodule.exports = sparql;\nsparql.displayName = \"sparql\";\nsparql.aliases = [\n    \"rq\"\n];\nfunction sparql(Prism) {\n    Prism.register(refractorTurtle);\n    Prism.languages.sparql = Prism.languages.extend(\"turtle\", {\n        boolean: /\\b(?:false|true)\\b/i,\n        variable: {\n            pattern: /[?$]\\w+/,\n            greedy: true\n        }\n    });\n    Prism.languages.insertBefore(\"sparql\", \"punctuation\", {\n        keyword: [\n            /\\b(?:A|ADD|ALL|AS|ASC|ASK|BNODE|BY|CLEAR|CONSTRUCT|COPY|CREATE|DATA|DEFAULT|DELETE|DESC|DESCRIBE|DISTINCT|DROP|EXISTS|FILTER|FROM|GROUP|HAVING|INSERT|INTO|LIMIT|LOAD|MINUS|MOVE|NAMED|NOT|NOW|OFFSET|OPTIONAL|ORDER|RAND|REDUCED|SELECT|SEPARATOR|SERVICE|SILENT|STRUUID|UNION|USING|UUID|VALUES|WHERE)\\b/i,\n            /\\b(?:ABS|AVG|BIND|BOUND|CEIL|COALESCE|CONCAT|CONTAINS|COUNT|DATATYPE|DAY|ENCODE_FOR_URI|FLOOR|GROUP_CONCAT|HOURS|IF|IRI|isBLANK|isIRI|isLITERAL|isNUMERIC|isURI|LANG|LANGMATCHES|LCASE|MAX|MD5|MIN|MINUTES|MONTH|REGEX|REPLACE|ROUND|sameTerm|SAMPLE|SECONDS|SHA1|SHA256|SHA384|SHA512|STR|STRAFTER|STRBEFORE|STRDT|STRENDS|STRLANG|STRLEN|STRSTARTS|SUBSTR|SUM|TIMEZONE|TZ|UCASE|URI|YEAR)\\b(?=\\s*\\()/i,\n            /\\b(?:BASE|GRAPH|PREFIX)\\b/i\n        ]\n    });\n    Prism.languages.rq = Prism.languages.sparql;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc3BhcnFsLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsSUFBSUEsa0JBQWtCQyxtQkFBT0EsQ0FBQztBQUM5QkMsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUc7SUFBQztDQUFLO0FBQ3ZCLFNBQVNGLE9BQU9HLEtBQUs7SUFDbkJBLE1BQU1DLFFBQVEsQ0FBQ1I7SUFDZk8sTUFBTUUsU0FBUyxDQUFDTCxNQUFNLEdBQUdHLE1BQU1FLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLFVBQVU7UUFDeERDLFNBQVM7UUFDVEMsVUFBVTtZQUNSQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtJQUNGO0lBQ0FQLE1BQU1FLFNBQVMsQ0FBQ00sWUFBWSxDQUFDLFVBQVUsZUFBZTtRQUNwREMsU0FBUztZQUNQO1lBQ0E7WUFDQTtTQUNEO0lBQ0g7SUFDQVQsTUFBTUUsU0FBUyxDQUFDUSxFQUFFLEdBQUdWLE1BQU1FLFNBQVMsQ0FBQ0wsTUFBTTtBQUM3QyIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zcGFycWwuanM/MmY1NSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcbnZhciByZWZyYWN0b3JUdXJ0bGUgPSByZXF1aXJlKCcuL3R1cnRsZS5qcycpXG5tb2R1bGUuZXhwb3J0cyA9IHNwYXJxbFxuc3BhcnFsLmRpc3BsYXlOYW1lID0gJ3NwYXJxbCdcbnNwYXJxbC5hbGlhc2VzID0gWydycSddXG5mdW5jdGlvbiBzcGFycWwoUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yVHVydGxlKVxuICBQcmlzbS5sYW5ndWFnZXMuc3BhcnFsID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgndHVydGxlJywge1xuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi9pLFxuICAgIHZhcmlhYmxlOiB7XG4gICAgICBwYXR0ZXJuOiAvWz8kXVxcdysvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfVxuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdzcGFycWwnLCAncHVuY3R1YXRpb24nLCB7XG4gICAga2V5d29yZDogW1xuICAgICAgL1xcYig/OkF8QUREfEFMTHxBU3xBU0N8QVNLfEJOT0RFfEJZfENMRUFSfENPTlNUUlVDVHxDT1BZfENSRUFURXxEQVRBfERFRkFVTFR8REVMRVRFfERFU0N8REVTQ1JJQkV8RElTVElOQ1R8RFJPUHxFWElTVFN8RklMVEVSfEZST018R1JPVVB8SEFWSU5HfElOU0VSVHxJTlRPfExJTUlUfExPQUR8TUlOVVN8TU9WRXxOQU1FRHxOT1R8Tk9XfE9GRlNFVHxPUFRJT05BTHxPUkRFUnxSQU5EfFJFRFVDRUR8U0VMRUNUfFNFUEFSQVRPUnxTRVJWSUNFfFNJTEVOVHxTVFJVVUlEfFVOSU9OfFVTSU5HfFVVSUR8VkFMVUVTfFdIRVJFKVxcYi9pLFxuICAgICAgL1xcYig/OkFCU3xBVkd8QklORHxCT1VORHxDRUlMfENPQUxFU0NFfENPTkNBVHxDT05UQUlOU3xDT1VOVHxEQVRBVFlQRXxEQVl8RU5DT0RFX0ZPUl9VUkl8RkxPT1J8R1JPVVBfQ09OQ0FUfEhPVVJTfElGfElSSXxpc0JMQU5LfGlzSVJJfGlzTElURVJBTHxpc05VTUVSSUN8aXNVUkl8TEFOR3xMQU5HTUFUQ0hFU3xMQ0FTRXxNQVh8TUQ1fE1JTnxNSU5VVEVTfE1PTlRIfFJFR0VYfFJFUExBQ0V8Uk9VTkR8c2FtZVRlcm18U0FNUExFfFNFQ09ORFN8U0hBMXxTSEEyNTZ8U0hBMzg0fFNIQTUxMnxTVFJ8U1RSQUZURVJ8U1RSQkVGT1JFfFNUUkRUfFNUUkVORFN8U1RSTEFOR3xTVFJMRU58U1RSU1RBUlRTfFNVQlNUUnxTVU18VElNRVpPTkV8VFp8VUNBU0V8VVJJfFlFQVIpXFxiKD89XFxzKlxcKCkvaSxcbiAgICAgIC9cXGIoPzpCQVNFfEdSQVBIfFBSRUZJWClcXGIvaVxuICAgIF1cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLnJxID0gUHJpc20ubGFuZ3VhZ2VzLnNwYXJxbFxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3RvclR1cnRsZSIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwic3BhcnFsIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImV4dGVuZCIsImJvb2xlYW4iLCJ2YXJpYWJsZSIsInBhdHRlcm4iLCJncmVlZHkiLCJpbnNlcnRCZWZvcmUiLCJrZXl3b3JkIiwicnEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/sparql.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/splunk-spl.js":
/*!***************************************************!*\
  !*** ./node_modules/refractor/lang/splunk-spl.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = splunkSpl;\nsplunkSpl.displayName = \"splunkSpl\";\nsplunkSpl.aliases = [];\nfunction splunkSpl(Prism) {\n    Prism.languages[\"splunk-spl\"] = {\n        comment: /`comment\\(\"(?:\\\\.|[^\\\\\"])*\"\\)`/,\n        string: {\n            pattern: /\"(?:\\\\.|[^\\\\\"])*\"/,\n            greedy: true\n        },\n        // https://docs.splunk.com/Documentation/Splunk/7.3.0/SearchReference/ListOfSearchCommands\n        keyword: /\\b(?:abstract|accum|addcoltotals|addinfo|addtotals|analyzefields|anomalies|anomalousvalue|anomalydetection|append|appendcols|appendcsv|appendlookup|appendpipe|arules|associate|audit|autoregress|bin|bucket|bucketdir|chart|cluster|cofilter|collect|concurrency|contingency|convert|correlate|datamodel|dbinspect|dedup|delete|delta|diff|erex|eval|eventcount|eventstats|extract|fieldformat|fields|fieldsummary|filldown|fillnull|findtypes|folderize|foreach|format|from|gauge|gentimes|geom|geomfilter|geostats|head|highlight|history|iconify|input|inputcsv|inputlookup|iplocation|join|kmeans|kv|kvform|loadjob|localize|localop|lookup|makecontinuous|makemv|makeresults|map|mcollect|metadata|metasearch|meventcollect|mstats|multikv|multisearch|mvcombine|mvexpand|nomv|outlier|outputcsv|outputlookup|outputtext|overlap|pivot|predict|rangemap|rare|regex|relevancy|reltime|rename|replace|rest|return|reverse|rex|rtorder|run|savedsearch|script|scrub|search|searchtxn|selfjoin|sendemail|set|setfields|sichart|sirare|sistats|sitimechart|sitop|sort|spath|stats|strcat|streamstats|table|tags|tail|timechart|timewrap|top|transaction|transpose|trendline|tscollect|tstats|typeahead|typelearner|typer|union|uniq|untable|where|x11|xmlkv|xmlunescape|xpath|xyseries)\\b/i,\n        \"operator-word\": {\n            pattern: /\\b(?:and|as|by|not|or|xor)\\b/i,\n            alias: \"operator\"\n        },\n        function: /\\b\\w+(?=\\s*\\()/,\n        property: /\\b\\w+(?=\\s*=(?!=))/,\n        date: {\n            // MM/DD/YYYY(:HH:MM:SS)?\n            pattern: /\\b\\d{1,2}\\/\\d{1,2}\\/\\d{1,4}(?:(?::\\d{1,2}){3})?\\b/,\n            alias: \"number\"\n        },\n        number: /\\b\\d+(?:\\.\\d+)?\\b/,\n        boolean: /\\b(?:f|false|t|true)\\b/i,\n        operator: /[<>=]=?|[-+*/%|]/,\n        punctuation: /[()[\\],]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc3BsdW5rLXNwbC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxVQUFVQyxXQUFXLEdBQUc7QUFDeEJELFVBQVVFLE9BQU8sR0FBRyxFQUFFO0FBQ3RCLFNBQVNGLFVBQVVHLEtBQUs7SUFDdEJBLE1BQU1DLFNBQVMsQ0FBQyxhQUFhLEdBQUc7UUFDOUJDLFNBQVM7UUFDVEMsUUFBUTtZQUNOQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBLDBGQUEwRjtRQUMxRkMsU0FDRTtRQUNGLGlCQUFpQjtZQUNmRixTQUFTO1lBQ1RHLE9BQU87UUFDVDtRQUNBQyxVQUFVO1FBQ1ZDLFVBQVU7UUFDVkMsTUFBTTtZQUNKLHlCQUF5QjtZQUN6Qk4sU0FBUztZQUNURyxPQUFPO1FBQ1Q7UUFDQUksUUFBUTtRQUNSQyxTQUFTO1FBQ1RDLFVBQVU7UUFDVkMsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc3BsdW5rLXNwbC5qcz8zY2NlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHNwbHVua1NwbFxuc3BsdW5rU3BsLmRpc3BsYXlOYW1lID0gJ3NwbHVua1NwbCdcbnNwbHVua1NwbC5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIHNwbHVua1NwbChQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXNbJ3NwbHVuay1zcGwnXSA9IHtcbiAgICBjb21tZW50OiAvYGNvbW1lbnRcXChcIig/OlxcXFwufFteXFxcXFwiXSkqXCJcXClgLyxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIig/OlxcXFwufFteXFxcXFwiXSkqXCIvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICAvLyBodHRwczovL2RvY3Muc3BsdW5rLmNvbS9Eb2N1bWVudGF0aW9uL1NwbHVuay83LjMuMC9TZWFyY2hSZWZlcmVuY2UvTGlzdE9mU2VhcmNoQ29tbWFuZHNcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OmFic3RyYWN0fGFjY3VtfGFkZGNvbHRvdGFsc3xhZGRpbmZvfGFkZHRvdGFsc3xhbmFseXplZmllbGRzfGFub21hbGllc3xhbm9tYWxvdXN2YWx1ZXxhbm9tYWx5ZGV0ZWN0aW9ufGFwcGVuZHxhcHBlbmRjb2xzfGFwcGVuZGNzdnxhcHBlbmRsb29rdXB8YXBwZW5kcGlwZXxhcnVsZXN8YXNzb2NpYXRlfGF1ZGl0fGF1dG9yZWdyZXNzfGJpbnxidWNrZXR8YnVja2V0ZGlyfGNoYXJ0fGNsdXN0ZXJ8Y29maWx0ZXJ8Y29sbGVjdHxjb25jdXJyZW5jeXxjb250aW5nZW5jeXxjb252ZXJ0fGNvcnJlbGF0ZXxkYXRhbW9kZWx8ZGJpbnNwZWN0fGRlZHVwfGRlbGV0ZXxkZWx0YXxkaWZmfGVyZXh8ZXZhbHxldmVudGNvdW50fGV2ZW50c3RhdHN8ZXh0cmFjdHxmaWVsZGZvcm1hdHxmaWVsZHN8ZmllbGRzdW1tYXJ5fGZpbGxkb3dufGZpbGxudWxsfGZpbmR0eXBlc3xmb2xkZXJpemV8Zm9yZWFjaHxmb3JtYXR8ZnJvbXxnYXVnZXxnZW50aW1lc3xnZW9tfGdlb21maWx0ZXJ8Z2Vvc3RhdHN8aGVhZHxoaWdobGlnaHR8aGlzdG9yeXxpY29uaWZ5fGlucHV0fGlucHV0Y3N2fGlucHV0bG9va3VwfGlwbG9jYXRpb258am9pbnxrbWVhbnN8a3Z8a3Zmb3JtfGxvYWRqb2J8bG9jYWxpemV8bG9jYWxvcHxsb29rdXB8bWFrZWNvbnRpbnVvdXN8bWFrZW12fG1ha2VyZXN1bHRzfG1hcHxtY29sbGVjdHxtZXRhZGF0YXxtZXRhc2VhcmNofG1ldmVudGNvbGxlY3R8bXN0YXRzfG11bHRpa3Z8bXVsdGlzZWFyY2h8bXZjb21iaW5lfG12ZXhwYW5kfG5vbXZ8b3V0bGllcnxvdXRwdXRjc3Z8b3V0cHV0bG9va3VwfG91dHB1dHRleHR8b3ZlcmxhcHxwaXZvdHxwcmVkaWN0fHJhbmdlbWFwfHJhcmV8cmVnZXh8cmVsZXZhbmN5fHJlbHRpbWV8cmVuYW1lfHJlcGxhY2V8cmVzdHxyZXR1cm58cmV2ZXJzZXxyZXh8cnRvcmRlcnxydW58c2F2ZWRzZWFyY2h8c2NyaXB0fHNjcnVifHNlYXJjaHxzZWFyY2h0eG58c2VsZmpvaW58c2VuZGVtYWlsfHNldHxzZXRmaWVsZHN8c2ljaGFydHxzaXJhcmV8c2lzdGF0c3xzaXRpbWVjaGFydHxzaXRvcHxzb3J0fHNwYXRofHN0YXRzfHN0cmNhdHxzdHJlYW1zdGF0c3x0YWJsZXx0YWdzfHRhaWx8dGltZWNoYXJ0fHRpbWV3cmFwfHRvcHx0cmFuc2FjdGlvbnx0cmFuc3Bvc2V8dHJlbmRsaW5lfHRzY29sbGVjdHx0c3RhdHN8dHlwZWFoZWFkfHR5cGVsZWFybmVyfHR5cGVyfHVuaW9ufHVuaXF8dW50YWJsZXx3aGVyZXx4MTF8eG1sa3Z8eG1sdW5lc2NhcGV8eHBhdGh8eHlzZXJpZXMpXFxiL2ksXG4gICAgJ29wZXJhdG9yLXdvcmQnOiB7XG4gICAgICBwYXR0ZXJuOiAvXFxiKD86YW5kfGFzfGJ5fG5vdHxvcnx4b3IpXFxiL2ksXG4gICAgICBhbGlhczogJ29wZXJhdG9yJ1xuICAgIH0sXG4gICAgZnVuY3Rpb246IC9cXGJcXHcrKD89XFxzKlxcKCkvLFxuICAgIHByb3BlcnR5OiAvXFxiXFx3Kyg/PVxccyo9KD8hPSkpLyxcbiAgICBkYXRlOiB7XG4gICAgICAvLyBNTS9ERC9ZWVlZKDpISDpNTTpTUyk/XG4gICAgICBwYXR0ZXJuOiAvXFxiXFxkezEsMn1cXC9cXGR7MSwyfVxcL1xcZHsxLDR9KD86KD86OlxcZHsxLDJ9KXszfSk/XFxiLyxcbiAgICAgIGFsaWFzOiAnbnVtYmVyJ1xuICAgIH0sXG4gICAgbnVtYmVyOiAvXFxiXFxkKyg/OlxcLlxcZCspP1xcYi8sXG4gICAgYm9vbGVhbjogL1xcYig/OmZ8ZmFsc2V8dHx0cnVlKVxcYi9pLFxuICAgIG9wZXJhdG9yOiAvWzw+PV09P3xbLSsqLyV8XS8sXG4gICAgcHVuY3R1YXRpb246IC9bKClbXFxdLF0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic3BsdW5rU3BsIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50Iiwic3RyaW5nIiwicGF0dGVybiIsImdyZWVkeSIsImtleXdvcmQiLCJhbGlhcyIsImZ1bmN0aW9uIiwicHJvcGVydHkiLCJkYXRlIiwibnVtYmVyIiwiYm9vbGVhbiIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/splunk-spl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/sqf.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/sqf.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = sqf;\nsqf.displayName = \"sqf\";\nsqf.aliases = [];\nfunction sqf(Prism) {\n    Prism.languages.sqf = Prism.languages.extend(\"clike\", {\n        string: {\n            pattern: /\"(?:(?:\"\")?[^\"])*\"(?!\")|'(?:[^'])*'/,\n            greedy: true\n        },\n        keyword: /\\b(?:breakOut|breakTo|call|case|catch|default|do|echo|else|execFSM|execVM|exitWith|for|forEach|forEachMember|forEachMemberAgent|forEachMemberTeam|from|goto|if|nil|preprocessFile|preprocessFileLineNumbers|private|scopeName|spawn|step|switch|then|throw|to|try|while|with)\\b/i,\n        boolean: /\\b(?:false|true)\\b/i,\n        function: /\\b(?:abs|accTime|acos|action|actionIDs|actionKeys|actionKeysImages|actionKeysNames|actionKeysNamesArray|actionName|actionParams|activateAddons|activatedAddons|activateKey|add3DENConnection|add3DENEventHandler|add3DENLayer|addAction|addBackpack|addBackpackCargo|addBackpackCargoGlobal|addBackpackGlobal|addCamShake|addCuratorAddons|addCuratorCameraArea|addCuratorEditableObjects|addCuratorEditingArea|addCuratorPoints|addEditorObject|addEventHandler|addForce|addForceGeneratorRTD|addGoggles|addGroupIcon|addHandgunItem|addHeadgear|addItem|addItemCargo|addItemCargoGlobal|addItemPool|addItemToBackpack|addItemToUniform|addItemToVest|addLiveStats|addMagazine|addMagazineAmmoCargo|addMagazineCargo|addMagazineCargoGlobal|addMagazineGlobal|addMagazinePool|addMagazines|addMagazineTurret|addMenu|addMenuItem|addMissionEventHandler|addMPEventHandler|addMusicEventHandler|addOwnedMine|addPlayerScores|addPrimaryWeaponItem|addPublicVariableEventHandler|addRating|addResources|addScore|addScoreSide|addSecondaryWeaponItem|addSwitchableUnit|addTeamMember|addToRemainsCollector|addTorque|addUniform|addVehicle|addVest|addWaypoint|addWeapon|addWeaponCargo|addWeaponCargoGlobal|addWeaponGlobal|addWeaponItem|addWeaponPool|addWeaponTurret|admin|agent|agents|AGLToASL|aimedAtTarget|aimPos|airDensityCurveRTD|airDensityRTD|airplaneThrottle|airportSide|AISFinishHeal|alive|all3DENEntities|allAirports|allControls|allCurators|allCutLayers|allDead|allDeadMen|allDisplays|allGroups|allMapMarkers|allMines|allMissionObjects|allow3DMode|allowCrewInImmobile|allowCuratorLogicIgnoreAreas|allowDamage|allowDammage|allowFileOperations|allowFleeing|allowGetIn|allowSprint|allPlayers|allSimpleObjects|allSites|allTurrets|allUnits|allUnitsUAV|allVariables|ammo|ammoOnPylon|animate|animateBay|animateDoor|animatePylon|animateSource|animationNames|animationPhase|animationSourcePhase|animationState|append|apply|armoryPoints|arrayIntersect|asin|ASLToAGL|ASLToATL|assert|assignAsCargo|assignAsCargoIndex|assignAsCommander|assignAsDriver|assignAsGunner|assignAsTurret|assignCurator|assignedCargo|assignedCommander|assignedDriver|assignedGunner|assignedItems|assignedTarget|assignedTeam|assignedVehicle|assignedVehicleRole|assignItem|assignTeam|assignToAirport|atan|atan2|atg|ATLToASL|attachedObject|attachedObjects|attachedTo|attachObject|attachTo|attackEnabled|backpack|backpackCargo|backpackContainer|backpackItems|backpackMagazines|backpackSpaceFor|behaviour|benchmark|binocular|blufor|boundingBox|boundingBoxReal|boundingCenter|briefingName|buildingExit|buildingPos|buldozer_EnableRoadDiag|buldozer_IsEnabledRoadDiag|buldozer_LoadNewRoads|buldozer_reloadOperMap|buttonAction|buttonSetAction|cadetMode|callExtension|camCommand|camCommit|camCommitPrepared|camCommitted|camConstuctionSetParams|camCreate|camDestroy|cameraEffect|cameraEffectEnableHUD|cameraInterest|cameraOn|cameraView|campaignConfigFile|camPreload|camPreloaded|camPrepareBank|camPrepareDir|camPrepareDive|camPrepareFocus|camPrepareFov|camPrepareFovRange|camPreparePos|camPrepareRelPos|camPrepareTarget|camSetBank|camSetDir|camSetDive|camSetFocus|camSetFov|camSetFovRange|camSetPos|camSetRelPos|camSetTarget|camTarget|camUseNVG|canAdd|canAddItemToBackpack|canAddItemToUniform|canAddItemToVest|cancelSimpleTaskDestination|canFire|canMove|canSlingLoad|canStand|canSuspend|canTriggerDynamicSimulation|canUnloadInCombat|canVehicleCargo|captive|captiveNum|cbChecked|cbSetChecked|ceil|channelEnabled|cheatsEnabled|checkAIFeature|checkVisibility|civilian|className|clear3DENAttribute|clear3DENInventory|clearAllItemsFromBackpack|clearBackpackCargo|clearBackpackCargoGlobal|clearForcesRTD|clearGroupIcons|clearItemCargo|clearItemCargoGlobal|clearItemPool|clearMagazineCargo|clearMagazineCargoGlobal|clearMagazinePool|clearOverlay|clearRadio|clearVehicleInit|clearWeaponCargo|clearWeaponCargoGlobal|clearWeaponPool|clientOwner|closeDialog|closeDisplay|closeOverlay|collapseObjectTree|collect3DENHistory|collectiveRTD|combatMode|commandArtilleryFire|commandChat|commander|commandFire|commandFollow|commandFSM|commandGetOut|commandingMenu|commandMove|commandRadio|commandStop|commandSuppressiveFire|commandTarget|commandWatch|comment|commitOverlay|compile|compileFinal|completedFSM|composeText|configClasses|configFile|configHierarchy|configName|configNull|configProperties|configSourceAddonList|configSourceMod|configSourceModList|confirmSensorTarget|connectTerminalToUAV|controlNull|controlsGroupCtrl|copyFromClipboard|copyToClipboard|copyWaypoints|cos|count|countEnemy|countFriendly|countSide|countType|countUnknown|create3DENComposition|create3DENEntity|createAgent|createCenter|createDialog|createDiaryLink|createDiaryRecord|createDiarySubject|createDisplay|createGearDialog|createGroup|createGuardedPoint|createLocation|createMarker|createMarkerLocal|createMenu|createMine|createMissionDisplay|createMPCampaignDisplay|createSimpleObject|createSimpleTask|createSite|createSoundSource|createTask|createTeam|createTrigger|createUnit|createVehicle|createVehicleCrew|createVehicleLocal|crew|ctAddHeader|ctAddRow|ctClear|ctCurSel|ctData|ctFindHeaderRows|ctFindRowHeader|ctHeaderControls|ctHeaderCount|ctRemoveHeaders|ctRemoveRows|ctrlActivate|ctrlAddEventHandler|ctrlAngle|ctrlAutoScrollDelay|ctrlAutoScrollRewind|ctrlAutoScrollSpeed|ctrlChecked|ctrlClassName|ctrlCommit|ctrlCommitted|ctrlCreate|ctrlDelete|ctrlEnable|ctrlEnabled|ctrlFade|ctrlHTMLLoaded|ctrlIDC|ctrlIDD|ctrlMapAnimAdd|ctrlMapAnimClear|ctrlMapAnimCommit|ctrlMapAnimDone|ctrlMapCursor|ctrlMapMouseOver|ctrlMapScale|ctrlMapScreenToWorld|ctrlMapWorldToScreen|ctrlModel|ctrlModelDirAndUp|ctrlModelScale|ctrlParent|ctrlParentControlsGroup|ctrlPosition|ctrlRemoveAllEventHandlers|ctrlRemoveEventHandler|ctrlScale|ctrlSetActiveColor|ctrlSetAngle|ctrlSetAutoScrollDelay|ctrlSetAutoScrollRewind|ctrlSetAutoScrollSpeed|ctrlSetBackgroundColor|ctrlSetChecked|ctrlSetDisabledColor|ctrlSetEventHandler|ctrlSetFade|ctrlSetFocus|ctrlSetFont|ctrlSetFontH1|ctrlSetFontH1B|ctrlSetFontH2|ctrlSetFontH2B|ctrlSetFontH3|ctrlSetFontH3B|ctrlSetFontH4|ctrlSetFontH4B|ctrlSetFontH5|ctrlSetFontH5B|ctrlSetFontH6|ctrlSetFontH6B|ctrlSetFontHeight|ctrlSetFontHeightH1|ctrlSetFontHeightH2|ctrlSetFontHeightH3|ctrlSetFontHeightH4|ctrlSetFontHeightH5|ctrlSetFontHeightH6|ctrlSetFontHeightSecondary|ctrlSetFontP|ctrlSetFontPB|ctrlSetFontSecondary|ctrlSetForegroundColor|ctrlSetModel|ctrlSetModelDirAndUp|ctrlSetModelScale|ctrlSetPixelPrecision|ctrlSetPosition|ctrlSetScale|ctrlSetStructuredText|ctrlSetText|ctrlSetTextColor|ctrlSetTextColorSecondary|ctrlSetTextSecondary|ctrlSetTooltip|ctrlSetTooltipColorBox|ctrlSetTooltipColorShade|ctrlSetTooltipColorText|ctrlShow|ctrlShown|ctrlText|ctrlTextHeight|ctrlTextSecondary|ctrlTextWidth|ctrlType|ctrlVisible|ctRowControls|ctRowCount|ctSetCurSel|ctSetData|ctSetHeaderTemplate|ctSetRowTemplate|ctSetValue|ctValue|curatorAddons|curatorCamera|curatorCameraArea|curatorCameraAreaCeiling|curatorCoef|curatorEditableObjects|curatorEditingArea|curatorEditingAreaType|curatorMouseOver|curatorPoints|curatorRegisteredObjects|curatorSelected|curatorWaypointCost|current3DENOperation|currentChannel|currentCommand|currentMagazine|currentMagazineDetail|currentMagazineDetailTurret|currentMagazineTurret|currentMuzzle|currentNamespace|currentTask|currentTasks|currentThrowable|currentVisionMode|currentWaypoint|currentWeapon|currentWeaponMode|currentWeaponTurret|currentZeroing|cursorObject|cursorTarget|customChat|customRadio|cutFadeOut|cutObj|cutRsc|cutText|damage|date|dateToNumber|daytime|deActivateKey|debriefingText|debugFSM|debugLog|deg|delete3DENEntities|deleteAt|deleteCenter|deleteCollection|deleteEditorObject|deleteGroup|deleteGroupWhenEmpty|deleteIdentity|deleteLocation|deleteMarker|deleteMarkerLocal|deleteRange|deleteResources|deleteSite|deleteStatus|deleteTeam|deleteVehicle|deleteVehicleCrew|deleteWaypoint|detach|detectedMines|diag_activeMissionFSMs|diag_activeScripts|diag_activeSQFScripts|diag_activeSQSScripts|diag_captureFrame|diag_captureFrameToFile|diag_captureSlowFrame|diag_codePerformance|diag_drawMode|diag_dynamicSimulationEnd|diag_enable|diag_enabled|diag_fps|diag_fpsMin|diag_frameNo|diag_lightNewLoad|diag_list|diag_log|diag_logSlowFrame|diag_mergeConfigFile|diag_recordTurretLimits|diag_setLightNew|diag_tickTime|diag_toggle|dialog|diarySubjectExists|didJIP|didJIPOwner|difficulty|difficultyEnabled|difficultyEnabledRTD|difficultyOption|direction|directSay|disableAI|disableCollisionWith|disableConversation|disableDebriefingStats|disableMapIndicators|disableNVGEquipment|disableRemoteSensors|disableSerialization|disableTIEquipment|disableUAVConnectability|disableUserInput|displayAddEventHandler|displayCtrl|displayNull|displayParent|displayRemoveAllEventHandlers|displayRemoveEventHandler|displaySetEventHandler|dissolveTeam|distance|distance2D|distanceSqr|distributionRegion|do3DENAction|doArtilleryFire|doFire|doFollow|doFSM|doGetOut|doMove|doorPhase|doStop|doSuppressiveFire|doTarget|doWatch|drawArrow|drawEllipse|drawIcon|drawIcon3D|drawLine|drawLine3D|drawLink|drawLocation|drawPolygon|drawRectangle|drawTriangle|driver|drop|dynamicSimulationDistance|dynamicSimulationDistanceCoef|dynamicSimulationEnabled|dynamicSimulationSystemEnabled|east|edit3DENMissionAttributes|editObject|editorSetEventHandler|effectiveCommander|emptyPositions|enableAI|enableAIFeature|enableAimPrecision|enableAttack|enableAudioFeature|enableAutoStartUpRTD|enableAutoTrimRTD|enableCamShake|enableCaustics|enableChannel|enableCollisionWith|enableCopilot|enableDebriefingStats|enableDiagLegend|enableDynamicSimulation|enableDynamicSimulationSystem|enableEndDialog|enableEngineArtillery|enableEnvironment|enableFatigue|enableGunLights|enableInfoPanelComponent|enableIRLasers|enableMimics|enablePersonTurret|enableRadio|enableReload|enableRopeAttach|enableSatNormalOnDetail|enableSaving|enableSentences|enableSimulation|enableSimulationGlobal|enableStamina|enableStressDamage|enableTeamSwitch|enableTraffic|enableUAVConnectability|enableUAVWaypoints|enableVehicleCargo|enableVehicleSensor|enableWeaponDisassembly|endl|endLoadingScreen|endMission|engineOn|enginesIsOnRTD|enginesPowerRTD|enginesRpmRTD|enginesTorqueRTD|entities|environmentEnabled|estimatedEndServerTime|estimatedTimeLeft|evalObjectArgument|everyBackpack|everyContainer|exec|execEditorScript|exp|expectedDestination|exportJIPMessages|eyeDirection|eyePos|face|faction|fadeMusic|fadeRadio|fadeSound|fadeSpeech|failMission|fillWeaponsFromPool|find|findCover|findDisplay|findEditorObject|findEmptyPosition|findEmptyPositionReady|findIf|findNearestEnemy|finishMissionInit|finite|fire|fireAtTarget|firstBackpack|flag|flagAnimationPhase|flagOwner|flagSide|flagTexture|fleeing|floor|flyInHeight|flyInHeightASL|fog|fogForecast|fogParams|forceAddUniform|forceAtPositionRTD|forcedMap|forceEnd|forceFlagTexture|forceFollowRoad|forceGeneratorRTD|forceMap|forceRespawn|forceSpeed|forceWalk|forceWeaponFire|forceWeatherChange|forgetTarget|format|formation|formationDirection|formationLeader|formationMembers|formationPosition|formationTask|formatText|formLeader|freeLook|fromEditor|fuel|fullCrew|gearIDCAmmoCount|gearSlotAmmoCount|gearSlotData|get3DENActionState|get3DENAttribute|get3DENCamera|get3DENConnections|get3DENEntity|get3DENEntityID|get3DENGrid|get3DENIconsVisible|get3DENLayerEntities|get3DENLinesVisible|get3DENMissionAttribute|get3DENMouseOver|get3DENSelected|getAimingCoef|getAllEnvSoundControllers|getAllHitPointsDamage|getAllOwnedMines|getAllSoundControllers|getAmmoCargo|getAnimAimPrecision|getAnimSpeedCoef|getArray|getArtilleryAmmo|getArtilleryComputerSettings|getArtilleryETA|getAssignedCuratorLogic|getAssignedCuratorUnit|getBackpackCargo|getBleedingRemaining|getBurningValue|getCameraViewDirection|getCargoIndex|getCenterOfMass|getClientState|getClientStateNumber|getCompatiblePylonMagazines|getConnectedUAV|getContainerMaxLoad|getCursorObjectParams|getCustomAimCoef|getDammage|getDescription|getDir|getDirVisual|getDLCAssetsUsage|getDLCAssetsUsageByName|getDLCs|getDLCUsageTime|getEditorCamera|getEditorMode|getEditorObjectScope|getElevationOffset|getEngineTargetRpmRTD|getEnvSoundController|getFatigue|getFieldManualStartPage|getForcedFlagTexture|getFriend|getFSMVariable|getFuelCargo|getGroupIcon|getGroupIconParams|getGroupIcons|getHideFrom|getHit|getHitIndex|getHitPointDamage|getItemCargo|getMagazineCargo|getMarkerColor|getMarkerPos|getMarkerSize|getMarkerType|getMass|getMissionConfig|getMissionConfigValue|getMissionDLCs|getMissionLayerEntities|getMissionLayers|getModelInfo|getMousePosition|getMusicPlayedTime|getNumber|getObjectArgument|getObjectChildren|getObjectDLC|getObjectMaterials|getObjectProxy|getObjectTextures|getObjectType|getObjectViewDistance|getOxygenRemaining|getPersonUsedDLCs|getPilotCameraDirection|getPilotCameraPosition|getPilotCameraRotation|getPilotCameraTarget|getPlateNumber|getPlayerChannel|getPlayerScores|getPlayerUID|getPlayerUIDOld|getPos|getPosASL|getPosASLVisual|getPosASLW|getPosATL|getPosATLVisual|getPosVisual|getPosWorld|getPylonMagazines|getRelDir|getRelPos|getRemoteSensorsDisabled|getRepairCargo|getResolution|getRotorBrakeRTD|getShadowDistance|getShotParents|getSlingLoad|getSoundController|getSoundControllerResult|getSpeed|getStamina|getStatValue|getSuppression|getTerrainGrid|getTerrainHeightASL|getText|getTotalDLCUsageTime|getTrimOffsetRTD|getUnitLoadout|getUnitTrait|getUserMFDText|getUserMFDValue|getVariable|getVehicleCargo|getWeaponCargo|getWeaponSway|getWingsOrientationRTD|getWingsPositionRTD|getWPPos|glanceAt|globalChat|globalRadio|goggles|group|groupChat|groupFromNetId|groupIconSelectable|groupIconsVisible|groupId|groupOwner|groupRadio|groupSelectedUnits|groupSelectUnit|grpNull|gunner|gusts|halt|handgunItems|handgunMagazine|handgunWeapon|handsHit|hasInterface|hasPilotCamera|hasWeapon|hcAllGroups|hcGroupParams|hcLeader|hcRemoveAllGroups|hcRemoveGroup|hcSelected|hcSelectGroup|hcSetGroup|hcShowBar|hcShownBar|headgear|hideBody|hideObject|hideObjectGlobal|hideSelection|hint|hintC|hintCadet|hintSilent|hmd|hostMission|htmlLoad|HUDMovementLevels|humidity|image|importAllGroups|importance|in|inArea|inAreaArray|incapacitatedState|independent|inflame|inflamed|infoPanel|infoPanelComponentEnabled|infoPanelComponents|infoPanels|inGameUISetEventHandler|inheritsFrom|initAmbientLife|inPolygon|inputAction|inRangeOfArtillery|insertEditorObject|intersect|is3DEN|is3DENMultiplayer|isAbleToBreathe|isAgent|isAimPrecisionEnabled|isArray|isAutoHoverOn|isAutonomous|isAutoStartUpEnabledRTD|isAutotest|isAutoTrimOnRTD|isBleeding|isBurning|isClass|isCollisionLightOn|isCopilotEnabled|isDamageAllowed|isDedicated|isDLCAvailable|isEngineOn|isEqualTo|isEqualType|isEqualTypeAll|isEqualTypeAny|isEqualTypeArray|isEqualTypeParams|isFilePatchingEnabled|isFlashlightOn|isFlatEmpty|isForcedWalk|isFormationLeader|isGroupDeletedWhenEmpty|isHidden|isInRemainsCollector|isInstructorFigureEnabled|isIRLaserOn|isKeyActive|isKindOf|isLaserOn|isLightOn|isLocalized|isManualFire|isMarkedForCollection|isMultiplayer|isMultiplayerSolo|isNil|isNull|isNumber|isObjectHidden|isObjectRTD|isOnRoad|isPipEnabled|isPlayer|isRealTime|isRemoteExecuted|isRemoteExecutedJIP|isServer|isShowing3DIcons|isSimpleObject|isSprintAllowed|isStaminaEnabled|isSteamMission|isStreamFriendlyUIEnabled|isStressDamageEnabled|isText|isTouchingGround|isTurnedOut|isTutHintsEnabled|isUAVConnectable|isUAVConnected|isUIContext|isUniformAllowed|isVehicleCargo|isVehicleRadarOn|isVehicleSensorEnabled|isWalking|isWeaponDeployed|isWeaponRested|itemCargo|items|itemsWithMagazines|join|joinAs|joinAsSilent|joinSilent|joinString|kbAddDatabase|kbAddDatabaseTargets|kbAddTopic|kbHasTopic|kbReact|kbRemoveTopic|kbTell|kbWasSaid|keyImage|keyName|knowsAbout|land|landAt|landResult|language|laserTarget|lbAdd|lbClear|lbColor|lbColorRight|lbCurSel|lbData|lbDelete|lbIsSelected|lbPicture|lbPictureRight|lbSelection|lbSetColor|lbSetColorRight|lbSetCurSel|lbSetData|lbSetPicture|lbSetPictureColor|lbSetPictureColorDisabled|lbSetPictureColorSelected|lbSetPictureRight|lbSetPictureRightColor|lbSetPictureRightColorDisabled|lbSetPictureRightColorSelected|lbSetSelectColor|lbSetSelectColorRight|lbSetSelected|lbSetText|lbSetTextRight|lbSetTooltip|lbSetValue|lbSize|lbSort|lbSortByValue|lbText|lbTextRight|lbValue|leader|leaderboardDeInit|leaderboardGetRows|leaderboardInit|leaderboardRequestRowsFriends|leaderboardRequestRowsGlobal|leaderboardRequestRowsGlobalAroundUser|leaderboardsRequestUploadScore|leaderboardsRequestUploadScoreKeepBest|leaderboardState|leaveVehicle|libraryCredits|libraryDisclaimers|lifeState|lightAttachObject|lightDetachObject|lightIsOn|lightnings|limitSpeed|linearConversion|lineBreak|lineIntersects|lineIntersectsObjs|lineIntersectsSurfaces|lineIntersectsWith|linkItem|list|listObjects|listRemoteTargets|listVehicleSensors|ln|lnbAddArray|lnbAddColumn|lnbAddRow|lnbClear|lnbColor|lnbColorRight|lnbCurSelRow|lnbData|lnbDeleteColumn|lnbDeleteRow|lnbGetColumnsPosition|lnbPicture|lnbPictureRight|lnbSetColor|lnbSetColorRight|lnbSetColumnsPos|lnbSetCurSelRow|lnbSetData|lnbSetPicture|lnbSetPictureColor|lnbSetPictureColorRight|lnbSetPictureColorSelected|lnbSetPictureColorSelectedRight|lnbSetPictureRight|lnbSetText|lnbSetTextRight|lnbSetValue|lnbSize|lnbSort|lnbSortByValue|lnbText|lnbTextRight|lnbValue|load|loadAbs|loadBackpack|loadFile|loadGame|loadIdentity|loadMagazine|loadOverlay|loadStatus|loadUniform|loadVest|local|localize|locationNull|locationPosition|lock|lockCameraTo|lockCargo|lockDriver|locked|lockedCargo|lockedDriver|lockedTurret|lockIdentity|lockTurret|lockWP|log|logEntities|logNetwork|logNetworkTerminate|lookAt|lookAtPos|magazineCargo|magazines|magazinesAllTurrets|magazinesAmmo|magazinesAmmoCargo|magazinesAmmoFull|magazinesDetail|magazinesDetailBackpack|magazinesDetailUniform|magazinesDetailVest|magazinesTurret|magazineTurretAmmo|mapAnimAdd|mapAnimClear|mapAnimCommit|mapAnimDone|mapCenterOnCamera|mapGridPosition|markAsFinishedOnSteam|markerAlpha|markerBrush|markerColor|markerDir|markerPos|markerShape|markerSize|markerText|markerType|max|members|menuAction|menuAdd|menuChecked|menuClear|menuCollapse|menuData|menuDelete|menuEnable|menuEnabled|menuExpand|menuHover|menuPicture|menuSetAction|menuSetCheck|menuSetData|menuSetPicture|menuSetValue|menuShortcut|menuShortcutText|menuSize|menuSort|menuText|menuURL|menuValue|min|mineActive|mineDetectedBy|missionConfigFile|missionDifficulty|missionName|missionNamespace|missionStart|missionVersion|modelToWorld|modelToWorldVisual|modelToWorldVisualWorld|modelToWorldWorld|modParams|moonIntensity|moonPhase|morale|move|move3DENCamera|moveInAny|moveInCargo|moveInCommander|moveInDriver|moveInGunner|moveInTurret|moveObjectToEnd|moveOut|moveTime|moveTo|moveToCompleted|moveToFailed|musicVolume|name|nameSound|nearEntities|nearestBuilding|nearestLocation|nearestLocations|nearestLocationWithDubbing|nearestObject|nearestObjects|nearestTerrainObjects|nearObjects|nearObjectsReady|nearRoads|nearSupplies|nearTargets|needReload|netId|netObjNull|newOverlay|nextMenuItemIndex|nextWeatherChange|nMenuItems|numberOfEnginesRTD|numberToDate|objectCurators|objectFromNetId|objectParent|objNull|objStatus|onBriefingGear|onBriefingGroup|onBriefingNotes|onBriefingPlan|onBriefingTeamSwitch|onCommandModeChanged|onDoubleClick|onEachFrame|onGroupIconClick|onGroupIconOverEnter|onGroupIconOverLeave|onHCGroupSelectionChanged|onMapSingleClick|onPlayerConnected|onPlayerDisconnected|onPreloadFinished|onPreloadStarted|onShowNewObject|onTeamSwitch|openCuratorInterface|openDLCPage|openDSInterface|openMap|openSteamApp|openYoutubeVideo|opfor|orderGetIn|overcast|overcastForecast|owner|param|params|parseNumber|parseSimpleArray|parseText|parsingNamespace|particlesQuality|pi|pickWeaponPool|pitch|pixelGrid|pixelGridBase|pixelGridNoUIScale|pixelH|pixelW|playableSlotsNumber|playableUnits|playAction|playActionNow|player|playerRespawnTime|playerSide|playersNumber|playGesture|playMission|playMove|playMoveNow|playMusic|playScriptedMission|playSound|playSound3D|position|positionCameraToWorld|posScreenToWorld|posWorldToScreen|ppEffectAdjust|ppEffectCommit|ppEffectCommitted|ppEffectCreate|ppEffectDestroy|ppEffectEnable|ppEffectEnabled|ppEffectForceInNVG|precision|preloadCamera|preloadObject|preloadSound|preloadTitleObj|preloadTitleRsc|primaryWeapon|primaryWeaponItems|primaryWeaponMagazine|priority|processDiaryLink|processInitCommands|productVersion|profileName|profileNamespace|profileNameSteam|progressLoadingScreen|progressPosition|progressSetPosition|publicVariable|publicVariableClient|publicVariableServer|pushBack|pushBackUnique|putWeaponPool|queryItemsPool|queryMagazinePool|queryWeaponPool|rad|radioChannelAdd|radioChannelCreate|radioChannelRemove|radioChannelSetCallSign|radioChannelSetLabel|radioVolume|rain|rainbow|random|rank|rankId|rating|rectangular|registeredTasks|registerTask|reload|reloadEnabled|remoteControl|remoteExec|remoteExecCall|remoteExecutedOwner|remove3DENConnection|remove3DENEventHandler|remove3DENLayer|removeAction|removeAll3DENEventHandlers|removeAllActions|removeAllAssignedItems|removeAllContainers|removeAllCuratorAddons|removeAllCuratorCameraAreas|removeAllCuratorEditingAreas|removeAllEventHandlers|removeAllHandgunItems|removeAllItems|removeAllItemsWithMagazines|removeAllMissionEventHandlers|removeAllMPEventHandlers|removeAllMusicEventHandlers|removeAllOwnedMines|removeAllPrimaryWeaponItems|removeAllWeapons|removeBackpack|removeBackpackGlobal|removeCuratorAddons|removeCuratorCameraArea|removeCuratorEditableObjects|removeCuratorEditingArea|removeDrawIcon|removeDrawLinks|removeEventHandler|removeFromRemainsCollector|removeGoggles|removeGroupIcon|removeHandgunItem|removeHeadgear|removeItem|removeItemFromBackpack|removeItemFromUniform|removeItemFromVest|removeItems|removeMagazine|removeMagazineGlobal|removeMagazines|removeMagazinesTurret|removeMagazineTurret|removeMenuItem|removeMissionEventHandler|removeMPEventHandler|removeMusicEventHandler|removeOwnedMine|removePrimaryWeaponItem|removeSecondaryWeaponItem|removeSimpleTask|removeSwitchableUnit|removeTeamMember|removeUniform|removeVest|removeWeapon|removeWeaponAttachmentCargo|removeWeaponCargo|removeWeaponGlobal|removeWeaponTurret|reportRemoteTarget|requiredVersion|resetCamShake|resetSubgroupDirection|resistance|resize|resources|respawnVehicle|restartEditorCamera|reveal|revealMine|reverse|reversedMouseY|roadAt|roadsConnectedTo|roleDescription|ropeAttachedObjects|ropeAttachedTo|ropeAttachEnabled|ropeAttachTo|ropeCreate|ropeCut|ropeDestroy|ropeDetach|ropeEndPosition|ropeLength|ropes|ropeUnwind|ropeUnwound|rotorsForcesRTD|rotorsRpmRTD|round|runInitScript|safeZoneH|safeZoneW|safeZoneWAbs|safeZoneX|safeZoneXAbs|safeZoneY|save3DENInventory|saveGame|saveIdentity|saveJoysticks|saveOverlay|saveProfileNamespace|saveStatus|saveVar|savingEnabled|say|say2D|say3D|score|scoreSide|screenshot|screenToWorld|scriptDone|scriptName|scriptNull|scudState|secondaryWeapon|secondaryWeaponItems|secondaryWeaponMagazine|select|selectBestPlaces|selectDiarySubject|selectedEditorObjects|selectEditorObject|selectionNames|selectionPosition|selectLeader|selectMax|selectMin|selectNoPlayer|selectPlayer|selectRandom|selectRandomWeighted|selectWeapon|selectWeaponTurret|sendAUMessage|sendSimpleCommand|sendTask|sendTaskResult|sendUDPMessage|serverCommand|serverCommandAvailable|serverCommandExecutable|serverName|serverTime|set|set3DENAttribute|set3DENAttributes|set3DENGrid|set3DENIconsVisible|set3DENLayer|set3DENLinesVisible|set3DENLogicType|set3DENMissionAttribute|set3DENMissionAttributes|set3DENModelsVisible|set3DENObjectType|set3DENSelected|setAccTime|setActualCollectiveRTD|setAirplaneThrottle|setAirportSide|setAmmo|setAmmoCargo|setAmmoOnPylon|setAnimSpeedCoef|setAperture|setApertureNew|setArmoryPoints|setAttributes|setAutonomous|setBehaviour|setBleedingRemaining|setBrakesRTD|setCameraInterest|setCamShakeDefParams|setCamShakeParams|setCamUseTI|setCaptive|setCenterOfMass|setCollisionLight|setCombatMode|setCompassOscillation|setConvoySeparation|setCuratorCameraAreaCeiling|setCuratorCoef|setCuratorEditingAreaType|setCuratorWaypointCost|setCurrentChannel|setCurrentTask|setCurrentWaypoint|setCustomAimCoef|setCustomWeightRTD|setDamage|setDammage|setDate|setDebriefingText|setDefaultCamera|setDestination|setDetailMapBlendPars|setDir|setDirection|setDrawIcon|setDriveOnPath|setDropInterval|setDynamicSimulationDistance|setDynamicSimulationDistanceCoef|setEditorMode|setEditorObjectScope|setEffectCondition|setEngineRpmRTD|setFace|setFaceAnimation|setFatigue|setFeatureType|setFlagAnimationPhase|setFlagOwner|setFlagSide|setFlagTexture|setFog|setForceGeneratorRTD|setFormation|setFormationTask|setFormDir|setFriend|setFromEditor|setFSMVariable|setFuel|setFuelCargo|setGroupIcon|setGroupIconParams|setGroupIconsSelectable|setGroupIconsVisible|setGroupId|setGroupIdGlobal|setGroupOwner|setGusts|setHideBehind|setHit|setHitIndex|setHitPointDamage|setHorizonParallaxCoef|setHUDMovementLevels|setIdentity|setImportance|setInfoPanel|setLeader|setLightAmbient|setLightAttenuation|setLightBrightness|setLightColor|setLightDayLight|setLightFlareMaxDistance|setLightFlareSize|setLightIntensity|setLightnings|setLightUseFlare|setLocalWindParams|setMagazineTurretAmmo|setMarkerAlpha|setMarkerAlphaLocal|setMarkerBrush|setMarkerBrushLocal|setMarkerColor|setMarkerColorLocal|setMarkerDir|setMarkerDirLocal|setMarkerPos|setMarkerPosLocal|setMarkerShape|setMarkerShapeLocal|setMarkerSize|setMarkerSizeLocal|setMarkerText|setMarkerTextLocal|setMarkerType|setMarkerTypeLocal|setMass|setMimic|setMousePosition|setMusicEffect|setMusicEventHandler|setName|setNameSound|setObjectArguments|setObjectMaterial|setObjectMaterialGlobal|setObjectProxy|setObjectTexture|setObjectTextureGlobal|setObjectViewDistance|setOvercast|setOwner|setOxygenRemaining|setParticleCircle|setParticleClass|setParticleFire|setParticleParams|setParticleRandom|setPilotCameraDirection|setPilotCameraRotation|setPilotCameraTarget|setPilotLight|setPiPEffect|setPitch|setPlateNumber|setPlayable|setPlayerRespawnTime|setPos|setPosASL|setPosASL2|setPosASLW|setPosATL|setPosition|setPosWorld|setPylonLoadOut|setPylonsPriority|setRadioMsg|setRain|setRainbow|setRandomLip|setRank|setRectangular|setRepairCargo|setRotorBrakeRTD|setShadowDistance|setShotParents|setSide|setSimpleTaskAlwaysVisible|setSimpleTaskCustomData|setSimpleTaskDescription|setSimpleTaskDestination|setSimpleTaskTarget|setSimpleTaskType|setSimulWeatherLayers|setSize|setSkill|setSlingLoad|setSoundEffect|setSpeaker|setSpeech|setSpeedMode|setStamina|setStaminaScheme|setStatValue|setSuppression|setSystemOfUnits|setTargetAge|setTaskMarkerOffset|setTaskResult|setTaskState|setTerrainGrid|setText|setTimeMultiplier|setTitleEffect|setToneMapping|setToneMappingParams|setTrafficDensity|setTrafficDistance|setTrafficGap|setTrafficSpeed|setTriggerActivation|setTriggerArea|setTriggerStatements|setTriggerText|setTriggerTimeout|setTriggerType|setType|setUnconscious|setUnitAbility|setUnitLoadout|setUnitPos|setUnitPosWeak|setUnitRank|setUnitRecoilCoefficient|setUnitTrait|setUnloadInCombat|setUserActionText|setUserMFDText|setUserMFDValue|setVariable|setVectorDir|setVectorDirAndUp|setVectorUp|setVehicleAmmo|setVehicleAmmoDef|setVehicleArmor|setVehicleCargo|setVehicleId|setVehicleInit|setVehicleLock|setVehiclePosition|setVehicleRadar|setVehicleReceiveRemoteTargets|setVehicleReportOwnPosition|setVehicleReportRemoteTargets|setVehicleTIPars|setVehicleVarName|setVelocity|setVelocityModelSpace|setVelocityTransformation|setViewDistance|setVisibleIfTreeCollapsed|setWantedRpmRTD|setWaves|setWaypointBehaviour|setWaypointCombatMode|setWaypointCompletionRadius|setWaypointDescription|setWaypointForceBehaviour|setWaypointFormation|setWaypointHousePosition|setWaypointLoiterRadius|setWaypointLoiterType|setWaypointName|setWaypointPosition|setWaypointScript|setWaypointSpeed|setWaypointStatements|setWaypointTimeout|setWaypointType|setWaypointVisible|setWeaponReloadingTime|setWind|setWindDir|setWindForce|setWindStr|setWingForceScaleRTD|setWPPos|show3DIcons|showChat|showCinemaBorder|showCommandingMenu|showCompass|showCuratorCompass|showGPS|showHUD|showLegend|showMap|shownArtilleryComputer|shownChat|shownCompass|shownCuratorCompass|showNewEditorObject|shownGPS|shownHUD|shownMap|shownPad|shownRadio|shownScoretable|shownUAVFeed|shownWarrant|shownWatch|showPad|showRadio|showScoretable|showSubtitles|showUAVFeed|showWarrant|showWatch|showWaypoint|showWaypoints|side|sideAmbientLife|sideChat|sideEmpty|sideEnemy|sideFriendly|sideLogic|sideRadio|sideUnknown|simpleTasks|simulationEnabled|simulCloudDensity|simulCloudOcclusion|simulInClouds|simulWeatherSync|sin|size|sizeOf|skill|skillFinal|skipTime|sleep|sliderPosition|sliderRange|sliderSetPosition|sliderSetRange|sliderSetSpeed|sliderSpeed|slingLoadAssistantShown|soldierMagazines|someAmmo|sort|soundVolume|speaker|speed|speedMode|splitString|sqrt|squadParams|stance|startLoadingScreen|stop|stopEngineRTD|stopped|str|sunOrMoon|supportInfo|suppressFor|surfaceIsWater|surfaceNormal|surfaceType|swimInDepth|switchableUnits|switchAction|switchCamera|switchGesture|switchLight|switchMove|synchronizedObjects|synchronizedTriggers|synchronizedWaypoints|synchronizeObjectsAdd|synchronizeObjectsRemove|synchronizeTrigger|synchronizeWaypoint|systemChat|systemOfUnits|tan|targetKnowledge|targets|targetsAggregate|targetsQuery|taskAlwaysVisible|taskChildren|taskCompleted|taskCustomData|taskDescription|taskDestination|taskHint|taskMarkerOffset|taskNull|taskParent|taskResult|taskState|taskType|teamMember|teamMemberNull|teamName|teams|teamSwitch|teamSwitchEnabled|teamType|terminate|terrainIntersect|terrainIntersectASL|terrainIntersectAtASL|text|textLog|textLogFormat|tg|time|timeMultiplier|titleCut|titleFadeOut|titleObj|titleRsc|titleText|toArray|toFixed|toLower|toString|toUpper|triggerActivated|triggerActivation|triggerArea|triggerAttachedVehicle|triggerAttachObject|triggerAttachVehicle|triggerDynamicSimulation|triggerStatements|triggerText|triggerTimeout|triggerTimeoutCurrent|triggerType|turretLocal|turretOwner|turretUnit|tvAdd|tvClear|tvCollapse|tvCollapseAll|tvCount|tvCurSel|tvData|tvDelete|tvExpand|tvExpandAll|tvPicture|tvPictureRight|tvSetColor|tvSetCurSel|tvSetData|tvSetPicture|tvSetPictureColor|tvSetPictureColorDisabled|tvSetPictureColorSelected|tvSetPictureRight|tvSetPictureRightColor|tvSetPictureRightColorDisabled|tvSetPictureRightColorSelected|tvSetSelectColor|tvSetText|tvSetTooltip|tvSetValue|tvSort|tvSortByValue|tvText|tvTooltip|tvValue|type|typeName|typeOf|UAVControl|uiNamespace|uiSleep|unassignCurator|unassignItem|unassignTeam|unassignVehicle|underwater|uniform|uniformContainer|uniformItems|uniformMagazines|unitAddons|unitAimPosition|unitAimPositionVisual|unitBackpack|unitIsUAV|unitPos|unitReady|unitRecoilCoefficient|units|unitsBelowHeight|unlinkItem|unlockAchievement|unregisterTask|updateDrawIcon|updateMenuItem|updateObjectTree|useAIOperMapObstructionTest|useAISteeringComponent|useAudioTimeForMoves|userInputDisabled|vectorAdd|vectorCos|vectorCrossProduct|vectorDiff|vectorDir|vectorDirVisual|vectorDistance|vectorDistanceSqr|vectorDotProduct|vectorFromTo|vectorMagnitude|vectorMagnitudeSqr|vectorModelToWorld|vectorModelToWorldVisual|vectorMultiply|vectorNormalized|vectorUp|vectorUpVisual|vectorWorldToModel|vectorWorldToModelVisual|vehicle|vehicleCargoEnabled|vehicleChat|vehicleRadio|vehicleReceiveRemoteTargets|vehicleReportOwnPosition|vehicleReportRemoteTargets|vehicles|vehicleVarName|velocity|velocityModelSpace|verifySignature|vest|vestContainer|vestItems|vestMagazines|viewDistance|visibleCompass|visibleGPS|visibleMap|visiblePosition|visiblePositionASL|visibleScoretable|visibleWatch|waitUntil|waves|waypointAttachedObject|waypointAttachedVehicle|waypointAttachObject|waypointAttachVehicle|waypointBehaviour|waypointCombatMode|waypointCompletionRadius|waypointDescription|waypointForceBehaviour|waypointFormation|waypointHousePosition|waypointLoiterRadius|waypointLoiterType|waypointName|waypointPosition|waypoints|waypointScript|waypointsEnabledUAV|waypointShow|waypointSpeed|waypointStatements|waypointTimeout|waypointTimeoutCurrent|waypointType|waypointVisible|weaponAccessories|weaponAccessoriesCargo|weaponCargo|weaponDirection|weaponInertia|weaponLowered|weapons|weaponsItems|weaponsItemsCargo|weaponState|weaponsTurret|weightRTD|west|WFSideText|wind|windDir|windRTD|windStr|wingsForcesRTD|worldName|worldSize|worldToModel|worldToModelVisual|worldToScreen)\\b/i,\n        number: /(?:\\$|\\b0x)[\\da-f]+\\b|(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d+)?)(?:e[+-]?\\d+)?\\b/i,\n        operator: /##|>>|&&|\\|\\||[!=<>]=?|[-+*/%#^]|\\b(?:and|mod|not|or)\\b/i,\n        \"magic-variable\": {\n            pattern: /\\b(?:this|thisList|thisTrigger|_exception|_fnc_scriptName|_fnc_scriptNameParent|_forEachIndex|_this|_thisEventHandler|_thisFSM|_thisScript|_x)\\b/i,\n            alias: \"keyword\"\n        },\n        constant: /\\bDIK(?:_[a-z\\d]+)+\\b/i\n    });\n    Prism.languages.insertBefore(\"sqf\", \"string\", {\n        macro: {\n            pattern: /(^[ \\t]*)#[a-z](?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n            lookbehind: true,\n            greedy: true,\n            alias: \"property\",\n            inside: {\n                directive: {\n                    pattern: /#[a-z]+\\b/i,\n                    alias: \"keyword\"\n                },\n                comment: Prism.languages.sqf.comment\n            }\n        }\n    });\n    delete Prism.languages.sqf[\"class-name\"];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/sqf.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/sql.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/sql.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = sql;\nsql.displayName = \"sql\";\nsql.aliases = [];\nfunction sql(Prism) {\n    Prism.languages.sql = {\n        comment: {\n            pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n            lookbehind: true\n        },\n        variable: [\n            {\n                pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n                greedy: true\n            },\n            /@[\\w.$]+/\n        ],\n        string: {\n            pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n            greedy: true,\n            lookbehind: true\n        },\n        identifier: {\n            pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,\n            greedy: true,\n            lookbehind: true,\n            inside: {\n                punctuation: /^`|`$/\n            }\n        },\n        function: /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n        // Should we highlight user defined functions too?\n        keyword: /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n        boolean: /\\b(?:FALSE|NULL|TRUE)\\b/i,\n        number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n        operator: /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n        punctuation: /[;[\\]()`,.]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc3FsLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLElBQUlDLFdBQVcsR0FBRztBQUNsQkQsSUFBSUUsT0FBTyxHQUFHLEVBQUU7QUFDaEIsU0FBU0YsSUFBSUcsS0FBSztJQUNoQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxZQUFZO1FBQ2Q7UUFDQUMsVUFBVTtZQUNSO2dCQUNFRixTQUFTO2dCQUNURyxRQUFRO1lBQ1Y7WUFDQTtTQUNEO1FBQ0RDLFFBQVE7WUFDTkosU0FBUztZQUNURyxRQUFRO1lBQ1JGLFlBQVk7UUFDZDtRQUNBSSxZQUFZO1lBQ1ZMLFNBQVM7WUFDVEcsUUFBUTtZQUNSRixZQUFZO1lBQ1pLLFFBQVE7Z0JBQ05DLGFBQWE7WUFDZjtRQUNGO1FBQ0FDLFVBQ0U7UUFDRixrREFBa0Q7UUFDbERDLFNBQ0U7UUFDRkMsU0FBUztRQUNUQyxRQUFRO1FBQ1JDLFVBQ0U7UUFDRkwsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc3FsLmpzP2IyMGIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gc3FsXG5zcWwuZGlzcGxheU5hbWUgPSAnc3FsJ1xuc3FsLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gc3FsKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5zcWwgPSB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogLyhefFteXFxcXF0pKD86XFwvXFwqW1xcc1xcU10qP1xcKlxcL3woPzotLXxcXC9cXC98IykuKikvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgdmFyaWFibGU6IFtcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogL0AoW1wiJ2BdKSg/OlxcXFxbXFxzXFxTXXwoPyFcXDEpW15cXFxcXSkrXFwxLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAgL0BbXFx3LiRdKy9cbiAgICBdLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyhefFteQFxcXFxdKShcInwnKSg/OlxcXFxbXFxzXFxTXXwoPyFcXDIpW15cXFxcXXxcXDJcXDIpKlxcMi8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBpZGVudGlmaWVyOiB7XG4gICAgICBwYXR0ZXJuOiAvKF58W15AXFxcXF0pYCg/OlxcXFxbXFxzXFxTXXxbXmBcXFxcXXxgYCkqYC8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHB1bmN0dWF0aW9uOiAvXmB8YCQvXG4gICAgICB9XG4gICAgfSxcbiAgICBmdW5jdGlvbjpcbiAgICAgIC9cXGIoPzpBVkd8Q09VTlR8RklSU1R8Rk9STUFUfExBU1R8TENBU0V8TEVOfE1BWHxNSUR8TUlOfE1PRHxOT1d8Uk9VTkR8U1VNfFVDQVNFKSg/PVxccypcXCgpL2ksXG4gICAgLy8gU2hvdWxkIHdlIGhpZ2hsaWdodCB1c2VyIGRlZmluZWQgZnVuY3Rpb25zIHRvbz9cbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OkFDVElPTnxBRER8QUZURVJ8QUxHT1JJVEhNfEFMTHxBTFRFUnxBTkFMWVpFfEFOWXxBUFBMWXxBU3xBU0N8QVVUSE9SSVpBVElPTnxBVVRPX0lOQ1JFTUVOVHxCQUNLVVB8QkRCfEJFR0lOfEJFUktFTEVZREJ8QklHSU5UfEJJTkFSWXxCSVR8QkxPQnxCT09MfEJPT0xFQU58QlJFQUt8QlJPV1NFfEJUUkVFfEJVTEt8Qll8Q0FMTHxDQVNDQURFRD98Q0FTRXxDSEFJTnxDSEFSKD86QUNURVJ8U0VUKT98Q0hFQ0soPzpQT0lOVCk/fENMT1NFfENMVVNURVJFRHxDT0FMRVNDRXxDT0xMQVRFfENPTFVNTlM/fENPTU1FTlR8Q09NTUlUKD86VEVEKT98Q09NUFVURXxDT05ORUNUfENPTlNJU1RFTlR8Q09OU1RSQUlOVHxDT05UQUlOUyg/OlRBQkxFKT98Q09OVElOVUV8Q09OVkVSVHxDUkVBVEV8Q1JPU1N8Q1VSUkVOVCg/Ol9EQVRFfF9USU1FfF9USU1FU1RBTVB8X1VTRVIpP3xDVVJTT1J8Q1lDTEV8REFUQSg/OkJBU0VTPyk/fERBVEUoPzpUSU1FKT98REFZfERCQ0N8REVBTExPQ0FURXxERUN8REVDSU1BTHxERUNMQVJFfERFRkFVTFR8REVGSU5FUnxERUxBWUVEfERFTEVURXxERUxJTUlURVJTP3xERU5ZfERFU0N8REVTQ1JJQkV8REVURVJNSU5JU1RJQ3xESVNBQkxFfERJU0NBUkR8RElTS3xESVNUSU5DVHxESVNUSU5DVFJPV3xESVNUUklCVVRFRHxET3xET1VCTEV8RFJPUHxEVU1NWXxEVU1QKD86RklMRSk/fERVUExJQ0FURXxFTFNFKD86SUYpP3xFTkFCTEV8RU5DTE9TRUR8RU5EfEVOR0lORXxFTlVNfEVSUkxWTHxFUlJPUlN8RVNDQVBFRD98RVhDRVBUfEVYRUMoPzpVVEUpP3xFWElTVFN8RVhJVHxFWFBMQUlOfEVYVEVOREVEfEZFVENIfEZJRUxEU3xGSUxFfEZJTExGQUNUT1J8RklSU1R8RklYRUR8RkxPQVR8Rk9MTE9XSU5HfEZPUig/OiBFQUNIIFJPVyk/fEZPUkNFfEZPUkVJR058RlJFRVRFWFQoPzpUQUJMRSk/fEZST018RlVMTHxGVU5DVElPTnxHRU9NRVRSWSg/OkNPTExFQ1RJT04pP3xHTE9CQUx8R09UT3xHUkFOVHxHUk9VUHxIQU5ETEVSfEhBU0h8SEFWSU5HfEhPTERMT0NLfEhPVVJ8SURFTlRJVFkoPzpDT0x8X0lOU0VSVCk/fElGfElHTk9SRXxJTVBPUlR8SU5ERVh8SU5GSUxFfElOTkVSfElOTk9EQnxJTk9VVHxJTlNFUlR8SU5UfElOVEVHRVJ8SU5URVJTRUNUfElOVEVSVkFMfElOVE98SU5WT0tFUnxJU09MQVRJT058SVRFUkFURXxKT0lOfEtFWVM/fEtJTEx8TEFOR1VBR0V8TEFTVHxMRUFWRXxMRUZUfExFVkVMfExJTUlUfExJTkVOT3xMSU5FU3xMSU5FU1RSSU5HfExPQUR8TE9DQUx8TE9DS3xMT05HKD86QkxPQnxURVhUKXxMT09QfE1BVENIKD86RUQpP3xNRURJVU0oPzpCTE9CfElOVHxURVhUKXxNRVJHRXxNSURETEVJTlR8TUlOVVRFfE1PREV8TU9ESUZJRVN8TU9ESUZZfE1PTlRIfE1VTFRJKD86TElORVNUUklOR3xQT0lOVHxQT0xZR09OKXxOQVRJT05BTHxOQVRVUkFMfE5DSEFSfE5FWFR8Tk98Tk9OQ0xVU1RFUkVEfE5VTExJRnxOVU1FUklDfE9GRj98T0ZGU0VUUz98T058T1BFTig/OkRBVEFTT1VSQ0V8UVVFUll8Uk9XU0VUKT98T1BUSU1JWkV8T1BUSU9OKD86QUxMWSk/fE9SREVSfE9VVCg/OkVSfEZJTEUpP3xPVkVSfFBBUlRJQUx8UEFSVElUSU9OfFBFUkNFTlR8UElWT1R8UExBTnxQT0lOVHxQT0xZR09OfFBSRUNFRElOR3xQUkVDSVNJT058UFJFUEFSRXxQUkVWfFBSSU1BUll8UFJJTlR8UFJJVklMRUdFU3xQUk9DKD86RURVUkUpP3xQVUJMSUN8UFVSR0V8UVVJQ0t8UkFJU0VSUk9SfFJFQURTP3xSRUFMfFJFQ09ORklHVVJFfFJFRkVSRU5DRVN8UkVMRUFTRXxSRU5BTUV8UkVQRUFUKD86QUJMRSk/fFJFUExBQ0V8UkVQTElDQVRJT058UkVRVUlSRXxSRVNJR05BTHxSRVNUT1JFfFJFU1RSSUNUfFJFVFVSTig/OklOR3xTKT98UkVWT0tFfFJJR0hUfFJPTExCQUNLfFJPVVRJTkV8Uk9XKD86Q09VTlR8R1VJRENPTHxTKT98UlRSRUV8UlVMRXxTQVZFKD86UE9JTlQpP3xTQ0hFTUF8U0VDT05EfFNFTEVDVHxTRVJJQUwoPzpJWkFCTEUpP3xTRVNTSU9OKD86X1VTRVIpP3xTRVQoPzpVU0VSKT98U0hBUkV8U0hPV3xTSFVURE9XTnxTSU1QTEV8U01BTExJTlR8U05BUFNIT1R8U09NRXxTT05BTUV8U1FMfFNUQVJUKD86SU5HKT98U1RBVElTVElDU3xTVEFUVVN8U1RSSVBFRHxTWVNURU1fVVNFUnxUQUJMRVM/fFRBQkxFU1BBQ0V8VEVNUCg/Ok9SQVJZfFRBQkxFKT98VEVSTUlOQVRFRHxURVhUKD86U0laRSk/fFRIRU58VElNRSg/OlNUQU1QKT98VElOWSg/OkJMT0J8SU5UfFRFWFQpfFRPUD98VFJBTig/OlNBQ1RJT05TPyk/fFRSSUdHRVJ8VFJVTkNBVEV8VFNFUVVBTHxUWVBFUz98VU5CT1VOREVEfFVOQ09NTUlUVEVEfFVOREVGSU5FRHxVTklPTnxVTklRVUV8VU5MT0NLfFVOUElWT1R8VU5TSUdORUR8VVBEQVRFKD86VEVYVCk/fFVTQUdFfFVTRXxVU0VSfFVTSU5HfFZBTFVFUz98VkFSKD86QklOQVJZfENIQVJ8Q0hBUkFDVEVSfFlJTkcpfFZJRVd8V0FJVEZPUnxXQVJOSU5HU3xXSEVOfFdIRVJFfFdISUxFfFdJVEgoPzogUk9MTFVQfElOKT98V09SS3xXUklURSg/OlRFWFQpP3xZRUFSKVxcYi9pLFxuICAgIGJvb2xlYW46IC9cXGIoPzpGQUxTRXxOVUxMfFRSVUUpXFxiL2ksXG4gICAgbnVtYmVyOiAvXFxiMHhbXFxkYS1mXStcXGJ8XFxiXFxkKyg/OlxcLlxcZCopP3xcXEJcXC5cXGQrXFxiL2ksXG4gICAgb3BlcmF0b3I6XG4gICAgICAvWy0rKlxcLz0lXn5dfCYmP3xcXHxcXHw/fCE9P3w8KD86PT4/fDx8Pik/fD5bPj1dP3xcXGIoPzpBTkR8QkVUV0VFTnxESVZ8SUxJS0V8SU58SVN8TElLRXxOT1R8T1J8UkVHRVhQfFJMSUtFfFNPVU5EUyBMSUtFfFhPUilcXGIvaSxcbiAgICBwdW5jdHVhdGlvbjogL1s7W1xcXSgpYCwuXS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzcWwiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsInZhcmlhYmxlIiwiZ3JlZWR5Iiwic3RyaW5nIiwiaWRlbnRpZmllciIsImluc2lkZSIsInB1bmN0dWF0aW9uIiwiZnVuY3Rpb24iLCJrZXl3b3JkIiwiYm9vbGVhbiIsIm51bWJlciIsIm9wZXJhdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/sql.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/squirrel.js":
/*!*************************************************!*\
  !*** ./node_modules/refractor/lang/squirrel.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = squirrel;\nsquirrel.displayName = \"squirrel\";\nsquirrel.aliases = [];\nfunction squirrel(Prism) {\n    Prism.languages.squirrel = Prism.languages.extend(\"clike\", {\n        comment: [\n            Prism.languages.clike[\"comment\"][0],\n            {\n                pattern: /(^|[^\\\\:])(?:\\/\\/|#).*/,\n                lookbehind: true,\n                greedy: true\n            }\n        ],\n        string: {\n            pattern: /(^|[^\\\\\"'@])(?:@\"(?:[^\"]|\"\")*\"(?!\")|\"(?:[^\\\\\\r\\n\"]|\\\\.)*\")/,\n            lookbehind: true,\n            greedy: true\n        },\n        \"class-name\": {\n            pattern: /(\\b(?:class|enum|extends|instanceof)\\s+)\\w+(?:\\.\\w+)*/,\n            lookbehind: true,\n            inside: {\n                punctuation: /\\./\n            }\n        },\n        keyword: /\\b(?:__FILE__|__LINE__|base|break|case|catch|class|clone|const|constructor|continue|default|delete|else|enum|extends|for|foreach|function|if|in|instanceof|local|null|resume|return|static|switch|this|throw|try|typeof|while|yield)\\b/,\n        number: /\\b(?:0x[0-9a-fA-F]+|\\d+(?:\\.(?:\\d+|[eE][+-]?\\d+))?)\\b/,\n        operator: /\\+\\+|--|<=>|<[-<]|>>>?|&&?|\\|\\|?|[-+*/%!=<>]=?|[~^]|::?/,\n        punctuation: /[(){}\\[\\],;.]/\n    });\n    Prism.languages.insertBefore(\"squirrel\", \"string\", {\n        char: {\n            pattern: /(^|[^\\\\\"'])'(?:[^\\\\']|\\\\(?:[xuU][0-9a-fA-F]{0,8}|[\\s\\S]))'/,\n            lookbehind: true,\n            greedy: true\n        }\n    });\n    Prism.languages.insertBefore(\"squirrel\", \"operator\", {\n        \"attribute-punctuation\": {\n            pattern: /<\\/|\\/>/,\n            alias: \"important\"\n        },\n        lambda: {\n            pattern: /@(?=\\()/,\n            alias: \"operator\"\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc3F1aXJyZWwuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsU0FBU0MsV0FBVyxHQUFHO0FBQ3ZCRCxTQUFTRSxPQUFPLEdBQUcsRUFBRTtBQUNyQixTQUFTRixTQUFTRyxLQUFLO0lBQ3JCQSxNQUFNQyxTQUFTLENBQUNKLFFBQVEsR0FBR0csTUFBTUMsU0FBUyxDQUFDQyxNQUFNLENBQUMsU0FBUztRQUN6REMsU0FBUztZQUNQSCxNQUFNQyxTQUFTLENBQUNHLEtBQUssQ0FBQyxVQUFVLENBQUMsRUFBRTtZQUNuQztnQkFDRUMsU0FBUztnQkFDVEMsWUFBWTtnQkFDWkMsUUFBUTtZQUNWO1NBQ0Q7UUFDREMsUUFBUTtZQUNOSCxTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsUUFBUTtRQUNWO1FBQ0EsY0FBYztZQUNaRixTQUFTO1lBQ1RDLFlBQVk7WUFDWkcsUUFBUTtnQkFDTkMsYUFBYTtZQUNmO1FBQ0Y7UUFDQUMsU0FDRTtRQUNGQyxRQUFRO1FBQ1JDLFVBQVU7UUFDVkgsYUFBYTtJQUNmO0lBQ0FWLE1BQU1DLFNBQVMsQ0FBQ2EsWUFBWSxDQUFDLFlBQVksVUFBVTtRQUNqREMsTUFBTTtZQUNKVixTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsUUFBUTtRQUNWO0lBQ0Y7SUFDQVAsTUFBTUMsU0FBUyxDQUFDYSxZQUFZLENBQUMsWUFBWSxZQUFZO1FBQ25ELHlCQUF5QjtZQUN2QlQsU0FBUztZQUNUVyxPQUFPO1FBQ1Q7UUFDQUMsUUFBUTtZQUNOWixTQUFTO1lBQ1RXLE9BQU87UUFDVDtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc3F1aXJyZWwuanM/MDFiOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBzcXVpcnJlbFxuc3F1aXJyZWwuZGlzcGxheU5hbWUgPSAnc3F1aXJyZWwnXG5zcXVpcnJlbC5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIHNxdWlycmVsKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5zcXVpcnJlbCA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2NsaWtlJywge1xuICAgIGNvbW1lbnQ6IFtcbiAgICAgIFByaXNtLmxhbmd1YWdlcy5jbGlrZVsnY29tbWVudCddWzBdLFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvKF58W15cXFxcOl0pKD86XFwvXFwvfCMpLiovLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH1cbiAgICBdLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyhefFteXFxcXFwiJ0BdKSg/OkBcIig/OlteXCJdfFwiXCIpKlwiKD8hXCIpfFwiKD86W15cXFxcXFxyXFxuXCJdfFxcXFwuKSpcIikvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgJ2NsYXNzLW5hbWUnOiB7XG4gICAgICBwYXR0ZXJuOiAvKFxcYig/OmNsYXNzfGVudW18ZXh0ZW5kc3xpbnN0YW5jZW9mKVxccyspXFx3Kyg/OlxcLlxcdyspKi8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHB1bmN0dWF0aW9uOiAvXFwuL1xuICAgICAgfVxuICAgIH0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzpfX0ZJTEVfX3xfX0xJTkVfX3xiYXNlfGJyZWFrfGNhc2V8Y2F0Y2h8Y2xhc3N8Y2xvbmV8Y29uc3R8Y29uc3RydWN0b3J8Y29udGludWV8ZGVmYXVsdHxkZWxldGV8ZWxzZXxlbnVtfGV4dGVuZHN8Zm9yfGZvcmVhY2h8ZnVuY3Rpb258aWZ8aW58aW5zdGFuY2VvZnxsb2NhbHxudWxsfHJlc3VtZXxyZXR1cm58c3RhdGljfHN3aXRjaHx0aGlzfHRocm93fHRyeXx0eXBlb2Z8d2hpbGV8eWllbGQpXFxiLyxcbiAgICBudW1iZXI6IC9cXGIoPzoweFswLTlhLWZBLUZdK3xcXGQrKD86XFwuKD86XFxkK3xbZUVdWystXT9cXGQrKSk/KVxcYi8sXG4gICAgb3BlcmF0b3I6IC9cXCtcXCt8LS18PD0+fDxbLTxdfD4+Pj98JiY/fFxcfFxcfD98Wy0rKi8lIT08Pl09P3xbfl5dfDo6Py8sXG4gICAgcHVuY3R1YXRpb246IC9bKCl7fVxcW1xcXSw7Ll0vXG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ3NxdWlycmVsJywgJ3N0cmluZycsIHtcbiAgICBjaGFyOiB7XG4gICAgICBwYXR0ZXJuOiAvKF58W15cXFxcXCInXSknKD86W15cXFxcJ118XFxcXCg/Olt4dVVdWzAtOWEtZkEtRl17MCw4fXxbXFxzXFxTXSkpJy8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfVxuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdzcXVpcnJlbCcsICdvcGVyYXRvcicsIHtcbiAgICAnYXR0cmlidXRlLXB1bmN0dWF0aW9uJzoge1xuICAgICAgcGF0dGVybjogLzxcXC98XFwvPi8sXG4gICAgICBhbGlhczogJ2ltcG9ydGFudCdcbiAgICB9LFxuICAgIGxhbWJkYToge1xuICAgICAgcGF0dGVybjogL0AoPz1cXCgpLyxcbiAgICAgIGFsaWFzOiAnb3BlcmF0b3InXG4gICAgfVxuICB9KVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzcXVpcnJlbCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwiY29tbWVudCIsImNsaWtlIiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJncmVlZHkiLCJzdHJpbmciLCJpbnNpZGUiLCJwdW5jdHVhdGlvbiIsImtleXdvcmQiLCJudW1iZXIiLCJvcGVyYXRvciIsImluc2VydEJlZm9yZSIsImNoYXIiLCJhbGlhcyIsImxhbWJkYSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/squirrel.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/stan.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/stan.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = stan;\nstan.displayName = \"stan\";\nstan.aliases = [];\nfunction stan(Prism) {\n    ;\n    (function(Prism) {\n        // https://mc-stan.org/docs/2_28/reference-manual/bnf-grammars.html\n        var higherOrderFunctions = /\\b(?:algebra_solver|algebra_solver_newton|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect|ode_(?:adams|bdf|ckrk|rk45)(?:_tol)?|ode_adjoint_tol_ctl|reduce_sum|reduce_sum_static)\\b/;\n        Prism.languages.stan = {\n            comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|#(?!include).*/,\n            string: {\n                // String literals can contain spaces and any printable ASCII characters except for \" and \\\n                // https://mc-stan.org/docs/2_24/reference-manual/print-statements-section.html#string-literals\n                pattern: /\"[\\x20\\x21\\x23-\\x5B\\x5D-\\x7E]*\"/,\n                greedy: true\n            },\n            directive: {\n                pattern: /^([ \\t]*)#include\\b.*/m,\n                lookbehind: true,\n                alias: \"property\"\n            },\n            \"function-arg\": {\n                pattern: RegExp(\"(\" + higherOrderFunctions.source + /\\s*\\(\\s*/.source + \")\" + /[a-zA-Z]\\w*/.source),\n                lookbehind: true,\n                alias: \"function\"\n            },\n            constraint: {\n                pattern: /(\\b(?:int|matrix|real|row_vector|vector)\\s*)<[^<>]*>/,\n                lookbehind: true,\n                inside: {\n                    expression: {\n                        pattern: /(=\\s*)\\S(?:\\S|\\s+(?!\\s))*?(?=\\s*(?:>$|,\\s*\\w+\\s*=))/,\n                        lookbehind: true,\n                        inside: null // see below\n                    },\n                    property: /\\b[a-z]\\w*(?=\\s*=)/i,\n                    operator: /=/,\n                    punctuation: /^<|>$|,/\n                }\n            },\n            keyword: [\n                {\n                    pattern: /\\bdata(?=\\s*\\{)|\\b(?:functions|generated|model|parameters|quantities|transformed)\\b/,\n                    alias: \"program-block\"\n                },\n                /\\b(?:array|break|cholesky_factor_corr|cholesky_factor_cov|complex|continue|corr_matrix|cov_matrix|data|else|for|if|in|increment_log_prob|int|matrix|ordered|positive_ordered|print|real|reject|return|row_vector|simplex|target|unit_vector|vector|void|while)\\b/,\n                higherOrderFunctions\n            ],\n            function: /\\b[a-z]\\w*(?=\\s*\\()/i,\n            number: /(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:E[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i,\n            boolean: /\\b(?:false|true)\\b/,\n            operator: /<-|\\.[*/]=?|\\|\\|?|&&|[!=<>+\\-*/]=?|['^%~?:]/,\n            punctuation: /[()\\[\\]{},;]/\n        };\n        Prism.languages.stan.constraint.inside.expression.inside = Prism.languages.stan;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc3Rhbi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7O0lBQ2YsVUFBVUEsS0FBSztRQUNmLG1FQUFtRTtRQUNuRSxJQUFJQyx1QkFDRjtRQUNGRCxNQUFNRSxTQUFTLENBQUNMLElBQUksR0FBRztZQUNyQk0sU0FBUztZQUNUQyxRQUFRO2dCQUNOLDJGQUEyRjtnQkFDM0YsK0ZBQStGO2dCQUMvRkMsU0FBUztnQkFDVEMsUUFBUTtZQUNWO1lBQ0FDLFdBQVc7Z0JBQ1RGLFNBQVM7Z0JBQ1RHLFlBQVk7Z0JBQ1pDLE9BQU87WUFDVDtZQUNBLGdCQUFnQjtnQkFDZEosU0FBU0ssT0FDUCxNQUNFVCxxQkFBcUJVLE1BQU0sR0FDM0IsV0FBV0EsTUFBTSxHQUNqQixNQUNBLGNBQWNBLE1BQU07Z0JBRXhCSCxZQUFZO2dCQUNaQyxPQUFPO1lBQ1Q7WUFDQUcsWUFBWTtnQkFDVlAsU0FBUztnQkFDVEcsWUFBWTtnQkFDWkssUUFBUTtvQkFDTkMsWUFBWTt3QkFDVlQsU0FBUzt3QkFDVEcsWUFBWTt3QkFDWkssUUFBUSxLQUFLLFlBQVk7b0JBQzNCO29CQUNBRSxVQUFVO29CQUNWQyxVQUFVO29CQUNWQyxhQUFhO2dCQUNmO1lBQ0Y7WUFDQUMsU0FBUztnQkFDUDtvQkFDRWIsU0FDRTtvQkFDRkksT0FBTztnQkFDVDtnQkFDQTtnQkFDQVI7YUFDRDtZQUNEa0IsVUFBVTtZQUNWQyxRQUNFO1lBQ0ZDLFNBQVM7WUFDVEwsVUFBVTtZQUNWQyxhQUFhO1FBQ2Y7UUFDQWpCLE1BQU1FLFNBQVMsQ0FBQ0wsSUFBSSxDQUFDZSxVQUFVLENBQUNDLE1BQU0sQ0FBQ0MsVUFBVSxDQUFDRCxNQUFNLEdBQ3REYixNQUFNRSxTQUFTLENBQUNMLElBQUk7SUFDeEIsR0FBR0c7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zdGFuLmpzP2ZhM2UiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gc3Rhblxuc3Rhbi5kaXNwbGF5TmFtZSA9ICdzdGFuJ1xuc3Rhbi5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIHN0YW4oUHJpc20pIHtcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICAvLyBodHRwczovL21jLXN0YW4ub3JnL2RvY3MvMl8yOC9yZWZlcmVuY2UtbWFudWFsL2JuZi1ncmFtbWFycy5odG1sXG4gICAgdmFyIGhpZ2hlck9yZGVyRnVuY3Rpb25zID1cbiAgICAgIC9cXGIoPzphbGdlYnJhX3NvbHZlcnxhbGdlYnJhX3NvbHZlcl9uZXd0b258aW50ZWdyYXRlXzFkfGludGVncmF0ZV9vZGV8aW50ZWdyYXRlX29kZV9iZGZ8aW50ZWdyYXRlX29kZV9yazQ1fG1hcF9yZWN0fG9kZV8oPzphZGFtc3xiZGZ8Y2tya3xyazQ1KSg/Ol90b2wpP3xvZGVfYWRqb2ludF90b2xfY3RsfHJlZHVjZV9zdW18cmVkdWNlX3N1bV9zdGF0aWMpXFxiL1xuICAgIFByaXNtLmxhbmd1YWdlcy5zdGFuID0ge1xuICAgICAgY29tbWVudDogL1xcL1xcLy4qfFxcL1xcKltcXHNcXFNdKj9cXCpcXC98Iyg/IWluY2x1ZGUpLiovLFxuICAgICAgc3RyaW5nOiB7XG4gICAgICAgIC8vIFN0cmluZyBsaXRlcmFscyBjYW4gY29udGFpbiBzcGFjZXMgYW5kIGFueSBwcmludGFibGUgQVNDSUkgY2hhcmFjdGVycyBleGNlcHQgZm9yIFwiIGFuZCBcXFxuICAgICAgICAvLyBodHRwczovL21jLXN0YW4ub3JnL2RvY3MvMl8yNC9yZWZlcmVuY2UtbWFudWFsL3ByaW50LXN0YXRlbWVudHMtc2VjdGlvbi5odG1sI3N0cmluZy1saXRlcmFsc1xuICAgICAgICBwYXR0ZXJuOiAvXCJbXFx4MjBcXHgyMVxceDIzLVxceDVCXFx4NUQtXFx4N0VdKlwiLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAgZGlyZWN0aXZlOiB7XG4gICAgICAgIHBhdHRlcm46IC9eKFsgXFx0XSopI2luY2x1ZGVcXGIuKi9tLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogJ3Byb3BlcnR5J1xuICAgICAgfSxcbiAgICAgICdmdW5jdGlvbi1hcmcnOiB7XG4gICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICAnKCcgK1xuICAgICAgICAgICAgaGlnaGVyT3JkZXJGdW5jdGlvbnMuc291cmNlICtcbiAgICAgICAgICAgIC9cXHMqXFwoXFxzKi8uc291cmNlICtcbiAgICAgICAgICAgICcpJyArXG4gICAgICAgICAgICAvW2EtekEtWl1cXHcqLy5zb3VyY2VcbiAgICAgICAgKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdmdW5jdGlvbidcbiAgICAgIH0sXG4gICAgICBjb25zdHJhaW50OiB7XG4gICAgICAgIHBhdHRlcm46IC8oXFxiKD86aW50fG1hdHJpeHxyZWFsfHJvd192ZWN0b3J8dmVjdG9yKVxccyopPFtePD5dKj4vLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBleHByZXNzaW9uOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvKD1cXHMqKVxcUyg/OlxcU3xcXHMrKD8hXFxzKSkqPyg/PVxccyooPzo+JHwsXFxzKlxcdytcXHMqPSkpLyxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICBpbnNpZGU6IG51bGwgLy8gc2VlIGJlbG93XG4gICAgICAgICAgfSxcbiAgICAgICAgICBwcm9wZXJ0eTogL1xcYlthLXpdXFx3Kig/PVxccyo9KS9pLFxuICAgICAgICAgIG9wZXJhdG9yOiAvPS8sXG4gICAgICAgICAgcHVuY3R1YXRpb246IC9ePHw+JHwsL1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAga2V5d29yZDogW1xuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAgIC9cXGJkYXRhKD89XFxzKlxceyl8XFxiKD86ZnVuY3Rpb25zfGdlbmVyYXRlZHxtb2RlbHxwYXJhbWV0ZXJzfHF1YW50aXRpZXN8dHJhbnNmb3JtZWQpXFxiLyxcbiAgICAgICAgICBhbGlhczogJ3Byb2dyYW0tYmxvY2snXG4gICAgICAgIH0sXG4gICAgICAgIC9cXGIoPzphcnJheXxicmVha3xjaG9sZXNreV9mYWN0b3JfY29ycnxjaG9sZXNreV9mYWN0b3JfY292fGNvbXBsZXh8Y29udGludWV8Y29ycl9tYXRyaXh8Y292X21hdHJpeHxkYXRhfGVsc2V8Zm9yfGlmfGlufGluY3JlbWVudF9sb2dfcHJvYnxpbnR8bWF0cml4fG9yZGVyZWR8cG9zaXRpdmVfb3JkZXJlZHxwcmludHxyZWFsfHJlamVjdHxyZXR1cm58cm93X3ZlY3RvcnxzaW1wbGV4fHRhcmdldHx1bml0X3ZlY3Rvcnx2ZWN0b3J8dm9pZHx3aGlsZSlcXGIvLCAvLyB0aGVzZSBhcmUgZnVuY3Rpb25zIHRoYXQgYXJlIGtub3duIHRvIHRha2UgYW5vdGhlciBmdW5jdGlvbiBhcyB0aGVpciBmaXJzdCBhcmd1bWVudC5cbiAgICAgICAgaGlnaGVyT3JkZXJGdW5jdGlvbnNcbiAgICAgIF0sXG4gICAgICBmdW5jdGlvbjogL1xcYlthLXpdXFx3Kig/PVxccypcXCgpL2ksXG4gICAgICBudW1iZXI6XG4gICAgICAgIC8oPzpcXGJcXGQrKD86X1xcZCspKig/OlxcLig/OlxcZCsoPzpfXFxkKykqKT8pP3xcXEJcXC5cXGQrKD86X1xcZCspKikoPzpFWystXT9cXGQrKD86X1xcZCspKik/aT8oPyFcXHcpL2ksXG4gICAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvLFxuICAgICAgb3BlcmF0b3I6IC88LXxcXC5bKi9dPT98XFx8XFx8P3wmJnxbIT08PitcXC0qL109P3xbJ14lfj86XS8sXG4gICAgICBwdW5jdHVhdGlvbjogL1soKVxcW1xcXXt9LDtdL1xuICAgIH1cbiAgICBQcmlzbS5sYW5ndWFnZXMuc3Rhbi5jb25zdHJhaW50Lmluc2lkZS5leHByZXNzaW9uLmluc2lkZSA9XG4gICAgICBQcmlzbS5sYW5ndWFnZXMuc3RhblxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic3RhbiIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwiaGlnaGVyT3JkZXJGdW5jdGlvbnMiLCJsYW5ndWFnZXMiLCJjb21tZW50Iiwic3RyaW5nIiwicGF0dGVybiIsImdyZWVkeSIsImRpcmVjdGl2ZSIsImxvb2tiZWhpbmQiLCJhbGlhcyIsIlJlZ0V4cCIsInNvdXJjZSIsImNvbnN0cmFpbnQiLCJpbnNpZGUiLCJleHByZXNzaW9uIiwicHJvcGVydHkiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIiwia2V5d29yZCIsImZ1bmN0aW9uIiwibnVtYmVyIiwiYm9vbGVhbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/stan.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/stylus.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/stylus.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = stylus;\nstylus.displayName = \"stylus\";\nstylus.aliases = [];\nfunction stylus(Prism) {\n    ;\n    (function(Prism) {\n        var unit = {\n            pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n            lookbehind: true\n        } // 123 -123 .123 -.123 12.3 -12.3\n        ;\n        var number = {\n            pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n            lookbehind: true\n        };\n        var inside = {\n            comment: {\n                pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n                lookbehind: true\n            },\n            url: {\n                pattern: /\\burl\\(([\"']?).*?\\1\\)/i,\n                greedy: true\n            },\n            string: {\n                pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n                greedy: true\n            },\n            interpolation: null,\n            // See below\n            func: null,\n            // See below\n            important: /\\B!(?:important|optional)\\b/i,\n            keyword: {\n                pattern: /(^|\\s+)(?:(?:else|for|if|return|unless)(?=\\s|$)|@[\\w-]+)/,\n                lookbehind: true\n            },\n            hexcode: /#[\\da-f]{3,6}/i,\n            color: [\n                /\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i,\n                {\n                    pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n                    inside: {\n                        unit: unit,\n                        number: number,\n                        function: /[\\w-]+(?=\\()/,\n                        punctuation: /[(),]/\n                    }\n                }\n            ],\n            entity: /\\\\[\\da-f]{1,8}/i,\n            unit: unit,\n            boolean: /\\b(?:false|true)\\b/,\n            operator: [\n                // We want non-word chars around \"-\" because it is\n                // accepted in property names.\n                /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/\n            ],\n            number: number,\n            punctuation: /[{}()\\[\\];:,]/\n        };\n        inside[\"interpolation\"] = {\n            pattern: /\\{[^\\r\\n}:]+\\}/,\n            alias: \"variable\",\n            inside: {\n                delimiter: {\n                    pattern: /^\\{|\\}$/,\n                    alias: \"punctuation\"\n                },\n                rest: inside\n            }\n        };\n        inside[\"func\"] = {\n            pattern: /[\\w-]+\\([^)]*\\).*/,\n            inside: {\n                function: /^[^(]+/,\n                rest: inside\n            }\n        };\n        Prism.languages.stylus = {\n            \"atrule-declaration\": {\n                pattern: /(^[ \\t]*)@.+/m,\n                lookbehind: true,\n                inside: {\n                    atrule: /^@[\\w-]+/,\n                    rest: inside\n                }\n            },\n            \"variable-declaration\": {\n                pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n                lookbehind: true,\n                inside: {\n                    variable: /^\\S+/,\n                    rest: inside\n                }\n            },\n            statement: {\n                pattern: /(^[ \\t]*)(?:else|for|if|return|unless)[ \\t].+/m,\n                lookbehind: true,\n                inside: {\n                    keyword: /^\\S+/,\n                    rest: inside\n                }\n            },\n            // A property/value pair cannot end with a comma or a brace\n            // It cannot have indented content unless it ended with a semicolon\n            \"property-declaration\": {\n                pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\n                lookbehind: true,\n                inside: {\n                    property: {\n                        pattern: /^[^\\s:]+/,\n                        inside: {\n                            interpolation: inside.interpolation\n                        }\n                    },\n                    rest: inside\n                }\n            },\n            // A selector can contain parentheses only as part of a pseudo-element\n            // It can span multiple lines.\n            // It must end with a comma or an accolade or have indented content.\n            selector: {\n                pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\n                lookbehind: true,\n                inside: {\n                    interpolation: inside.interpolation,\n                    comment: inside.comment,\n                    punctuation: /[{},]/\n                }\n            },\n            func: inside.func,\n            string: inside.string,\n            comment: {\n                pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n                lookbehind: true,\n                greedy: true\n            },\n            interpolation: inside.interpolation,\n            punctuation: /[{}()\\[\\];:.]/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/stylus.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/swift.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/swift.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = swift;\nswift.displayName = \"swift\";\nswift.aliases = [];\nfunction swift(Prism) {\n    Prism.languages.swift = {\n        comment: {\n            // Nested comments are supported up to 2 levels\n            pattern: /(^|[^\\\\:])(?:\\/\\/.*|\\/\\*(?:[^/*]|\\/(?!\\*)|\\*(?!\\/)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\/)/,\n            lookbehind: true,\n            greedy: true\n        },\n        \"string-literal\": [\n            // https://docs.swift.org/swift-book/LanguageGuide/StringsAndCharacters.html\n            {\n                pattern: RegExp(/(^|[^\"#])/.source + \"(?:\" + // single-line string\n                /\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^(])|[^\\\\\\r\\n\"])*\"/.source + \"|\" + // multi-line string\n                /\"\"\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|[^(])|[^\\\\\"]|\"(?!\"\"))*\"\"\"/.source + \")\" + /(?![\"#])/.source),\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    interpolation: {\n                        pattern: /(\\\\\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\n                        lookbehind: true,\n                        inside: null // see below\n                    },\n                    \"interpolation-punctuation\": {\n                        pattern: /^\\)|\\\\\\($/,\n                        alias: \"punctuation\"\n                    },\n                    punctuation: /\\\\(?=[\\r\\n])/,\n                    string: /[\\s\\S]+/\n                }\n            },\n            {\n                pattern: RegExp(/(^|[^\"#])(#+)/.source + \"(?:\" + // single-line string\n                /\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^#])|[^\\\\\\r\\n])*?\"/.source + \"|\" + // multi-line string\n                /\"\"\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|[^#])|[^\\\\])*?\"\"\"/.source + \")\" + \"\\\\2\"),\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    interpolation: {\n                        pattern: /(\\\\#+\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\n                        lookbehind: true,\n                        inside: null // see below\n                    },\n                    \"interpolation-punctuation\": {\n                        pattern: /^\\)|\\\\#+\\($/,\n                        alias: \"punctuation\"\n                    },\n                    string: /[\\s\\S]+/\n                }\n            }\n        ],\n        directive: {\n            // directives with conditions\n            pattern: RegExp(/#/.source + \"(?:\" + (/(?:elseif|if)\\b/.source + \"(?:[ \t]*\" + // This regex is a little complex. It's equivalent to this:\n            //   (?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*<round>)?|<round>)(?:[ \\t]*(?:&&|\\|\\|))?\n            // where <round> is a general parentheses expression.\n            /(?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*\\((?:[^()]|\\([^()]*\\))*\\))?|\\((?:[^()]|\\([^()]*\\))*\\))(?:[ \\t]*(?:&&|\\|\\|))?/.source + \")+\") + \"|\" + /(?:else|endif)\\b/.source + \")\"),\n            alias: \"property\",\n            inside: {\n                \"directive-name\": /^#\\w+/,\n                boolean: /\\b(?:false|true)\\b/,\n                number: /\\b\\d+(?:\\.\\d+)*\\b/,\n                operator: /!|&&|\\|\\||[<>]=?/,\n                punctuation: /[(),]/\n            }\n        },\n        literal: {\n            pattern: /#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\\b/,\n            alias: \"constant\"\n        },\n        \"other-directive\": {\n            pattern: /#\\w+\\b/,\n            alias: \"property\"\n        },\n        attribute: {\n            pattern: /@\\w+/,\n            alias: \"atrule\"\n        },\n        \"function-definition\": {\n            pattern: /(\\bfunc\\s+)\\w+/,\n            lookbehind: true,\n            alias: \"function\"\n        },\n        label: {\n            // https://docs.swift.org/swift-book/LanguageGuide/ControlFlow.html#ID141\n            pattern: /\\b(break|continue)\\s+\\w+|\\b[a-zA-Z_]\\w*(?=\\s*:\\s*(?:for|repeat|while)\\b)/,\n            lookbehind: true,\n            alias: \"important\"\n        },\n        keyword: /\\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        nil: {\n            pattern: /\\bnil\\b/,\n            alias: \"constant\"\n        },\n        \"short-argument\": /\\$\\d+\\b/,\n        omit: {\n            pattern: /\\b_\\b/,\n            alias: \"keyword\"\n        },\n        number: /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\n        // A class name must start with an upper-case letter and be either 1 letter long or contain a lower-case letter.\n        \"class-name\": /\\b[A-Z](?:[A-Z_\\d]*[a-z]\\w*)?\\b/,\n        function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        constant: /\\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\n        // Operators are generic in Swift. Developers can even create new operators (e.g. +++).\n        // https://docs.swift.org/swift-book/ReferenceManual/zzSummaryOfTheGrammar.html#ID481\n        // This regex only supports ASCII operators.\n        operator: /[-+*/%=!<>&|^~?]+|\\.[.\\-+*/%=!<>&|^~?]+/,\n        punctuation: /[{}[\\]();,.:\\\\]/\n    };\n    Prism.languages.swift[\"string-literal\"].forEach(function(rule) {\n        rule.inside[\"interpolation\"].inside = Prism.languages.swift;\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/swift.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/systemd.js":
/*!************************************************!*\
  !*** ./node_modules/refractor/lang/systemd.js ***!
  \************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = systemd;\nsystemd.displayName = \"systemd\";\nsystemd.aliases = [];\nfunction systemd(Prism) {\n    // https://www.freedesktop.org/software/systemd/man/systemd.syntax.html\n    ;\n    (function(Prism) {\n        var comment = {\n            pattern: /^[;#].*/m,\n            greedy: true\n        };\n        var quotesSource = /\"(?:[^\\r\\n\"\\\\]|\\\\(?:[^\\r]|\\r\\n?))*\"(?!\\S)/.source;\n        Prism.languages.systemd = {\n            comment: comment,\n            section: {\n                pattern: /^\\[[^\\n\\r\\[\\]]*\\](?=[ \\t]*$)/m,\n                greedy: true,\n                inside: {\n                    punctuation: /^\\[|\\]$/,\n                    \"section-name\": {\n                        pattern: /[\\s\\S]+/,\n                        alias: \"selector\"\n                    }\n                }\n            },\n            key: {\n                pattern: /^[^\\s=]+(?=[ \\t]*=)/m,\n                greedy: true,\n                alias: \"attr-name\"\n            },\n            value: {\n                // This pattern is quite complex because of two properties:\n                //  1) Quotes (strings) must be preceded by a space. Since we can't use lookbehinds, we have to \"resolve\"\n                //     the lookbehind. You will see this in the main loop where spaces are handled separately.\n                //  2) Line continuations.\n                //     After line continuations, empty lines and comments are ignored so we have to consume them.\n                pattern: RegExp(/(=[ \\t]*(?!\\s))/.source + // the value either starts with quotes or not\n                \"(?:\" + quotesSource + '|(?=[^\"\\r\\n]))' + // main loop\n                \"(?:\" + (/[^\\s\\\\]/.source + // handle spaces separately because of quotes\n                \"|\" + '[ \t]+(?:(?![ \t\"])|' + quotesSource + \")\" + // line continuation\n                \"|\" + /\\\\[\\r\\n]+(?:[#;].*[\\r\\n]+)*(?![#;])/.source) + \")*\"),\n                lookbehind: true,\n                greedy: true,\n                alias: \"attr-value\",\n                inside: {\n                    comment: comment,\n                    quoted: {\n                        pattern: RegExp(/(^|\\s)/.source + quotesSource),\n                        lookbehind: true,\n                        greedy: true\n                    },\n                    punctuation: /\\\\$/m,\n                    boolean: {\n                        pattern: /^(?:false|no|off|on|true|yes)$/,\n                        greedy: true\n                    }\n                }\n            },\n            punctuation: /=/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc3lzdGVtZC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxRQUFRQyxXQUFXLEdBQUc7QUFDdEJELFFBQVFFLE9BQU8sR0FBRyxFQUFFO0FBQ3BCLFNBQVNGLFFBQVFHLEtBQUs7SUFDcEIsdUVBQXVFOztJQUNyRSxVQUFVQSxLQUFLO1FBQ2YsSUFBSUMsVUFBVTtZQUNaQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBLElBQUlDLGVBQWUsNENBQTRDQyxNQUFNO1FBQ3JFTCxNQUFNTSxTQUFTLENBQUNULE9BQU8sR0FBRztZQUN4QkksU0FBU0E7WUFDVE0sU0FBUztnQkFDUEwsU0FBUztnQkFDVEMsUUFBUTtnQkFDUkssUUFBUTtvQkFDTkMsYUFBYTtvQkFDYixnQkFBZ0I7d0JBQ2RQLFNBQVM7d0JBQ1RRLE9BQU87b0JBQ1Q7Z0JBQ0Y7WUFDRjtZQUNBQyxLQUFLO2dCQUNIVCxTQUFTO2dCQUNUQyxRQUFRO2dCQUNSTyxPQUFPO1lBQ1Q7WUFDQUUsT0FBTztnQkFDTCwyREFBMkQ7Z0JBQzNELHlHQUF5RztnQkFDekcsOEZBQThGO2dCQUM5RiwwQkFBMEI7Z0JBQzFCLGlHQUFpRztnQkFDakdWLFNBQVNXLE9BQ1Asa0JBQWtCUixNQUFNLEdBQUcsNkNBQTZDO2dCQUN0RSxRQUNBRCxlQUNBLG1CQUFtQixZQUFZO2dCQUMvQixRQUNDLFdBQVVDLE1BQU0sR0FBRyw2Q0FBNkM7Z0JBQy9ELE1BQ0EsdUJBQ0FELGVBQ0EsTUFBTSxvQkFBb0I7Z0JBQzFCLE1BQ0Esc0NBQXNDQyxNQUFNLElBQzlDO2dCQUVKUyxZQUFZO2dCQUNaWCxRQUFRO2dCQUNSTyxPQUFPO2dCQUNQRixRQUFRO29CQUNOUCxTQUFTQTtvQkFDVGMsUUFBUTt3QkFDTmIsU0FBU1csT0FBTyxTQUFTUixNQUFNLEdBQUdEO3dCQUNsQ1UsWUFBWTt3QkFDWlgsUUFBUTtvQkFDVjtvQkFDQU0sYUFBYTtvQkFDYk8sU0FBUzt3QkFDUGQsU0FBUzt3QkFDVEMsUUFBUTtvQkFDVjtnQkFDRjtZQUNGO1lBQ0FNLGFBQWE7UUFDZjtJQUNGLEdBQUdUO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc3lzdGVtZC5qcz80YjkzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHN5c3RlbWRcbnN5c3RlbWQuZGlzcGxheU5hbWUgPSAnc3lzdGVtZCdcbnN5c3RlbWQuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBzeXN0ZW1kKFByaXNtKSB7XG4gIC8vIGh0dHBzOi8vd3d3LmZyZWVkZXNrdG9wLm9yZy9zb2Z0d2FyZS9zeXN0ZW1kL21hbi9zeXN0ZW1kLnN5bnRheC5odG1sXG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIGNvbW1lbnQgPSB7XG4gICAgICBwYXR0ZXJuOiAvXls7I10uKi9tLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfVxuICAgIHZhciBxdW90ZXNTb3VyY2UgPSAvXCIoPzpbXlxcclxcblwiXFxcXF18XFxcXCg/OlteXFxyXXxcXHJcXG4/KSkqXCIoPyFcXFMpLy5zb3VyY2VcbiAgICBQcmlzbS5sYW5ndWFnZXMuc3lzdGVtZCA9IHtcbiAgICAgIGNvbW1lbnQ6IGNvbW1lbnQsXG4gICAgICBzZWN0aW9uOiB7XG4gICAgICAgIHBhdHRlcm46IC9eXFxbW15cXG5cXHJcXFtcXF1dKlxcXSg/PVsgXFx0XSokKS9tLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXlxcW3xcXF0kLyxcbiAgICAgICAgICAnc2VjdGlvbi1uYW1lJzoge1xuICAgICAgICAgICAgcGF0dGVybjogL1tcXHNcXFNdKy8sXG4gICAgICAgICAgICBhbGlhczogJ3NlbGVjdG9yJ1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGtleToge1xuICAgICAgICBwYXR0ZXJuOiAvXlteXFxzPV0rKD89WyBcXHRdKj0pL20sXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdhdHRyLW5hbWUnXG4gICAgICB9LFxuICAgICAgdmFsdWU6IHtcbiAgICAgICAgLy8gVGhpcyBwYXR0ZXJuIGlzIHF1aXRlIGNvbXBsZXggYmVjYXVzZSBvZiB0d28gcHJvcGVydGllczpcbiAgICAgICAgLy8gIDEpIFF1b3RlcyAoc3RyaW5ncykgbXVzdCBiZSBwcmVjZWRlZCBieSBhIHNwYWNlLiBTaW5jZSB3ZSBjYW4ndCB1c2UgbG9va2JlaGluZHMsIHdlIGhhdmUgdG8gXCJyZXNvbHZlXCJcbiAgICAgICAgLy8gICAgIHRoZSBsb29rYmVoaW5kLiBZb3Ugd2lsbCBzZWUgdGhpcyBpbiB0aGUgbWFpbiBsb29wIHdoZXJlIHNwYWNlcyBhcmUgaGFuZGxlZCBzZXBhcmF0ZWx5LlxuICAgICAgICAvLyAgMikgTGluZSBjb250aW51YXRpb25zLlxuICAgICAgICAvLyAgICAgQWZ0ZXIgbGluZSBjb250aW51YXRpb25zLCBlbXB0eSBsaW5lcyBhbmQgY29tbWVudHMgYXJlIGlnbm9yZWQgc28gd2UgaGF2ZSB0byBjb25zdW1lIHRoZW0uXG4gICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICAvKD1bIFxcdF0qKD8hXFxzKSkvLnNvdXJjZSArIC8vIHRoZSB2YWx1ZSBlaXRoZXIgc3RhcnRzIHdpdGggcXVvdGVzIG9yIG5vdFxuICAgICAgICAgICAgJyg/OicgK1xuICAgICAgICAgICAgcXVvdGVzU291cmNlICtcbiAgICAgICAgICAgICd8KD89W15cIlxcclxcbl0pKScgKyAvLyBtYWluIGxvb3BcbiAgICAgICAgICAgICcoPzonICtcbiAgICAgICAgICAgICgvW15cXHNcXFxcXS8uc291cmNlICsgLy8gaGFuZGxlIHNwYWNlcyBzZXBhcmF0ZWx5IGJlY2F1c2Ugb2YgcXVvdGVzXG4gICAgICAgICAgICAgICd8JyArXG4gICAgICAgICAgICAgICdbIFxcdF0rKD86KD8hWyBcXHRcIl0pfCcgK1xuICAgICAgICAgICAgICBxdW90ZXNTb3VyY2UgK1xuICAgICAgICAgICAgICAnKScgKyAvLyBsaW5lIGNvbnRpbnVhdGlvblxuICAgICAgICAgICAgICAnfCcgK1xuICAgICAgICAgICAgICAvXFxcXFtcXHJcXG5dKyg/OlsjO10uKltcXHJcXG5dKykqKD8hWyM7XSkvLnNvdXJjZSkgK1xuICAgICAgICAgICAgJykqJ1xuICAgICAgICApLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGFsaWFzOiAnYXR0ci12YWx1ZScsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIGNvbW1lbnQ6IGNvbW1lbnQsXG4gICAgICAgICAgcXVvdGVkOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoLyhefFxccykvLnNvdXJjZSArIHF1b3Rlc1NvdXJjZSksXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICAgICAgfSxcbiAgICAgICAgICBwdW5jdHVhdGlvbjogL1xcXFwkL20sXG4gICAgICAgICAgYm9vbGVhbjoge1xuICAgICAgICAgICAgcGF0dGVybjogL14oPzpmYWxzZXxub3xvZmZ8b258dHJ1ZXx5ZXMpJC8sXG4gICAgICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBwdW5jdHVhdGlvbjogLz0vXG4gICAgfVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic3lzdGVtZCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwiY29tbWVudCIsInBhdHRlcm4iLCJncmVlZHkiLCJxdW90ZXNTb3VyY2UiLCJzb3VyY2UiLCJsYW5ndWFnZXMiLCJzZWN0aW9uIiwiaW5zaWRlIiwicHVuY3R1YXRpb24iLCJhbGlhcyIsImtleSIsInZhbHVlIiwiUmVnRXhwIiwibG9va2JlaGluZCIsInF1b3RlZCIsImJvb2xlYW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/systemd.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/t4-cs.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/t4-cs.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorT4Templating = __webpack_require__(/*! ./t4-templating.js */ \"(ssr)/./node_modules/refractor/lang/t4-templating.js\");\nvar refractorCsharp = __webpack_require__(/*! ./csharp.js */ \"(ssr)/./node_modules/refractor/lang/csharp.js\");\nmodule.exports = t4Cs;\nt4Cs.displayName = \"t4Cs\";\nt4Cs.aliases = [];\nfunction t4Cs(Prism) {\n    Prism.register(refractorT4Templating);\n    Prism.register(refractorCsharp);\n    Prism.languages.t4 = Prism.languages[\"t4-cs\"] = Prism.languages[\"t4-templating\"].createT4(\"csharp\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdDQtY3MuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxJQUFJQSx3QkFBd0JDLG1CQUFPQSxDQUFDO0FBQ3BDLElBQUlDLGtCQUFrQkQsbUJBQU9BLENBQUM7QUFDOUJFLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFDakIsU0FBU0YsS0FBS0csS0FBSztJQUNqQkEsTUFBTUMsUUFBUSxDQUFDVDtJQUNmUSxNQUFNQyxRQUFRLENBQUNQO0lBQ2ZNLE1BQU1FLFNBQVMsQ0FBQ0MsRUFBRSxHQUFHSCxNQUFNRSxTQUFTLENBQUMsUUFBUSxHQUMzQ0YsTUFBTUUsU0FBUyxDQUFDLGdCQUFnQixDQUFDRSxRQUFRLENBQUM7QUFDOUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdDQtY3MuanM/ZmI5YiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcbnZhciByZWZyYWN0b3JUNFRlbXBsYXRpbmcgPSByZXF1aXJlKCcuL3Q0LXRlbXBsYXRpbmcuanMnKVxudmFyIHJlZnJhY3RvckNzaGFycCA9IHJlcXVpcmUoJy4vY3NoYXJwLmpzJylcbm1vZHVsZS5leHBvcnRzID0gdDRDc1xudDRDcy5kaXNwbGF5TmFtZSA9ICd0NENzJ1xudDRDcy5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIHQ0Q3MoUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yVDRUZW1wbGF0aW5nKVxuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JDc2hhcnApXG4gIFByaXNtLmxhbmd1YWdlcy50NCA9IFByaXNtLmxhbmd1YWdlc1sndDQtY3MnXSA9XG4gICAgUHJpc20ubGFuZ3VhZ2VzWyd0NC10ZW1wbGF0aW5nJ10uY3JlYXRlVDQoJ2NzaGFycCcpXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yVDRUZW1wbGF0aW5nIiwicmVxdWlyZSIsInJlZnJhY3RvckNzaGFycCIsIm1vZHVsZSIsImV4cG9ydHMiLCJ0NENzIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsInQ0IiwiY3JlYXRlVDQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/t4-cs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/t4-templating.js":
/*!******************************************************!*\
  !*** ./node_modules/refractor/lang/t4-templating.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = t4Templating;\nt4Templating.displayName = \"t4Templating\";\nt4Templating.aliases = [];\nfunction t4Templating(Prism) {\n    ;\n    (function(Prism) {\n        function createBlock(prefix, inside, contentAlias) {\n            return {\n                pattern: RegExp(\"<#\" + prefix + \"[\\\\s\\\\S]*?#>\"),\n                alias: \"block\",\n                inside: {\n                    delimiter: {\n                        pattern: RegExp(\"^<#\" + prefix + \"|#>$\"),\n                        alias: \"important\"\n                    },\n                    content: {\n                        pattern: /[\\s\\S]+/,\n                        inside: inside,\n                        alias: contentAlias\n                    }\n                }\n            };\n        }\n        function createT4(insideLang) {\n            var grammar = Prism.languages[insideLang];\n            var className = \"language-\" + insideLang;\n            return {\n                block: {\n                    pattern: /<#[\\s\\S]+?#>/,\n                    inside: {\n                        directive: createBlock(\"@\", {\n                            \"attr-value\": {\n                                pattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/,\n                                inside: {\n                                    punctuation: /^=|^[\"']|[\"']$/\n                                }\n                            },\n                            keyword: /\\b\\w+(?=\\s)/,\n                            \"attr-name\": /\\b\\w+/\n                        }),\n                        expression: createBlock(\"=\", grammar, className),\n                        \"class-feature\": createBlock(\"\\\\+\", grammar, className),\n                        standard: createBlock(\"\", grammar, className)\n                    }\n                }\n            };\n        }\n        Prism.languages[\"t4-templating\"] = Object.defineProperty({}, \"createT4\", {\n            value: createT4\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdDQtdGVtcGxhdGluZy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxhQUFhQyxXQUFXLEdBQUc7QUFDM0JELGFBQWFFLE9BQU8sR0FBRyxFQUFFO0FBQ3pCLFNBQVNGLGFBQWFHLEtBQUs7O0lBQ3ZCLFVBQVVBLEtBQUs7UUFDZixTQUFTQyxZQUFZQyxNQUFNLEVBQUVDLE1BQU0sRUFBRUMsWUFBWTtZQUMvQyxPQUFPO2dCQUNMQyxTQUFTQyxPQUFPLE9BQU9KLFNBQVM7Z0JBQ2hDSyxPQUFPO2dCQUNQSixRQUFRO29CQUNOSyxXQUFXO3dCQUNUSCxTQUFTQyxPQUFPLFFBQVFKLFNBQVM7d0JBQ2pDSyxPQUFPO29CQUNUO29CQUNBRSxTQUFTO3dCQUNQSixTQUFTO3dCQUNURixRQUFRQTt3QkFDUkksT0FBT0g7b0JBQ1Q7Z0JBQ0Y7WUFDRjtRQUNGO1FBQ0EsU0FBU00sU0FBU0MsVUFBVTtZQUMxQixJQUFJQyxVQUFVWixNQUFNYSxTQUFTLENBQUNGLFdBQVc7WUFDekMsSUFBSUcsWUFBWSxjQUFjSDtZQUM5QixPQUFPO2dCQUNMSSxPQUFPO29CQUNMVixTQUFTO29CQUNURixRQUFRO3dCQUNOYSxXQUFXZixZQUFZLEtBQUs7NEJBQzFCLGNBQWM7Z0NBQ1pJLFNBQVM7Z0NBQ1RGLFFBQVE7b0NBQ05jLGFBQWE7Z0NBQ2Y7NEJBQ0Y7NEJBQ0FDLFNBQVM7NEJBQ1QsYUFBYTt3QkFDZjt3QkFDQUMsWUFBWWxCLFlBQVksS0FBS1csU0FBU0U7d0JBQ3RDLGlCQUFpQmIsWUFBWSxPQUFPVyxTQUFTRTt3QkFDN0NNLFVBQVVuQixZQUFZLElBQUlXLFNBQVNFO29CQUNyQztnQkFDRjtZQUNGO1FBQ0Y7UUFDQWQsTUFBTWEsU0FBUyxDQUFDLGdCQUFnQixHQUFHUSxPQUFPQyxjQUFjLENBQUMsQ0FBQyxHQUFHLFlBQVk7WUFDdkVDLE9BQU9iO1FBQ1Q7SUFDRixHQUFHVjtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3Q0LXRlbXBsYXRpbmcuanM/ZjE1NyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSB0NFRlbXBsYXRpbmdcbnQ0VGVtcGxhdGluZy5kaXNwbGF5TmFtZSA9ICd0NFRlbXBsYXRpbmcnXG50NFRlbXBsYXRpbmcuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiB0NFRlbXBsYXRpbmcoUHJpc20pIHtcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICBmdW5jdGlvbiBjcmVhdGVCbG9jayhwcmVmaXgsIGluc2lkZSwgY29udGVudEFsaWFzKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoJzwjJyArIHByZWZpeCArICdbXFxcXHNcXFxcU10qPyM+JyksXG4gICAgICAgIGFsaWFzOiAnYmxvY2snLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBkZWxpbWl0ZXI6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IFJlZ0V4cCgnXjwjJyArIHByZWZpeCArICd8Iz4kJyksXG4gICAgICAgICAgICBhbGlhczogJ2ltcG9ydGFudCdcbiAgICAgICAgICB9LFxuICAgICAgICAgIGNvbnRlbnQ6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC9bXFxzXFxTXSsvLFxuICAgICAgICAgICAgaW5zaWRlOiBpbnNpZGUsXG4gICAgICAgICAgICBhbGlhczogY29udGVudEFsaWFzXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNyZWF0ZVQ0KGluc2lkZUxhbmcpIHtcbiAgICAgIHZhciBncmFtbWFyID0gUHJpc20ubGFuZ3VhZ2VzW2luc2lkZUxhbmddXG4gICAgICB2YXIgY2xhc3NOYW1lID0gJ2xhbmd1YWdlLScgKyBpbnNpZGVMYW5nXG4gICAgICByZXR1cm4ge1xuICAgICAgICBibG9jazoge1xuICAgICAgICAgIHBhdHRlcm46IC88I1tcXHNcXFNdKz8jPi8sXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICBkaXJlY3RpdmU6IGNyZWF0ZUJsb2NrKCdAJywge1xuICAgICAgICAgICAgICAnYXR0ci12YWx1ZSc6IHtcbiAgICAgICAgICAgICAgICBwYXR0ZXJuOiAvPSg/OihcInwnKSg/OlxcXFxbXFxzXFxTXXwoPyFcXDEpW15cXFxcXSkqXFwxfFteXFxzJ1wiPj1dKykvLFxuICAgICAgICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgICAgICAgcHVuY3R1YXRpb246IC9ePXxeW1wiJ118W1wiJ10kL1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAga2V5d29yZDogL1xcYlxcdysoPz1cXHMpLyxcbiAgICAgICAgICAgICAgJ2F0dHItbmFtZSc6IC9cXGJcXHcrL1xuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBleHByZXNzaW9uOiBjcmVhdGVCbG9jaygnPScsIGdyYW1tYXIsIGNsYXNzTmFtZSksXG4gICAgICAgICAgICAnY2xhc3MtZmVhdHVyZSc6IGNyZWF0ZUJsb2NrKCdcXFxcKycsIGdyYW1tYXIsIGNsYXNzTmFtZSksXG4gICAgICAgICAgICBzdGFuZGFyZDogY3JlYXRlQmxvY2soJycsIGdyYW1tYXIsIGNsYXNzTmFtZSlcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzWyd0NC10ZW1wbGF0aW5nJ10gPSBPYmplY3QuZGVmaW5lUHJvcGVydHkoe30sICdjcmVhdGVUNCcsIHtcbiAgICAgIHZhbHVlOiBjcmVhdGVUNFxuICAgIH0pXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJ0NFRlbXBsYXRpbmciLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImNyZWF0ZUJsb2NrIiwicHJlZml4IiwiaW5zaWRlIiwiY29udGVudEFsaWFzIiwicGF0dGVybiIsIlJlZ0V4cCIsImFsaWFzIiwiZGVsaW1pdGVyIiwiY29udGVudCIsImNyZWF0ZVQ0IiwiaW5zaWRlTGFuZyIsImdyYW1tYXIiLCJsYW5ndWFnZXMiLCJjbGFzc05hbWUiLCJibG9jayIsImRpcmVjdGl2ZSIsInB1bmN0dWF0aW9uIiwia2V5d29yZCIsImV4cHJlc3Npb24iLCJzdGFuZGFyZCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/t4-templating.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/t4-vb.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/t4-vb.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorT4Templating = __webpack_require__(/*! ./t4-templating.js */ \"(ssr)/./node_modules/refractor/lang/t4-templating.js\");\nvar refractorVbnet = __webpack_require__(/*! ./vbnet.js */ \"(ssr)/./node_modules/refractor/lang/vbnet.js\");\nmodule.exports = t4Vb;\nt4Vb.displayName = \"t4Vb\";\nt4Vb.aliases = [];\nfunction t4Vb(Prism) {\n    Prism.register(refractorT4Templating);\n    Prism.register(refractorVbnet);\n    Prism.languages[\"t4-vb\"] = Prism.languages[\"t4-templating\"].createT4(\"vbnet\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdDQtdmIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxJQUFJQSx3QkFBd0JDLG1CQUFPQSxDQUFDO0FBQ3BDLElBQUlDLGlCQUFpQkQsbUJBQU9BLENBQUM7QUFDN0JFLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFDakIsU0FBU0YsS0FBS0csS0FBSztJQUNqQkEsTUFBTUMsUUFBUSxDQUFDVDtJQUNmUSxNQUFNQyxRQUFRLENBQUNQO0lBQ2ZNLE1BQU1FLFNBQVMsQ0FBQyxRQUFRLEdBQUdGLE1BQU1FLFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQ0MsUUFBUSxDQUFDO0FBQ3ZFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3Q0LXZiLmpzP2U3OGQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG52YXIgcmVmcmFjdG9yVDRUZW1wbGF0aW5nID0gcmVxdWlyZSgnLi90NC10ZW1wbGF0aW5nLmpzJylcbnZhciByZWZyYWN0b3JWYm5ldCA9IHJlcXVpcmUoJy4vdmJuZXQuanMnKVxubW9kdWxlLmV4cG9ydHMgPSB0NFZiXG50NFZiLmRpc3BsYXlOYW1lID0gJ3Q0VmInXG50NFZiLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gdDRWYihQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JUNFRlbXBsYXRpbmcpXG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvclZibmV0KVxuICBQcmlzbS5sYW5ndWFnZXNbJ3Q0LXZiJ10gPSBQcmlzbS5sYW5ndWFnZXNbJ3Q0LXRlbXBsYXRpbmcnXS5jcmVhdGVUNCgndmJuZXQnKVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3RvclQ0VGVtcGxhdGluZyIsInJlcXVpcmUiLCJyZWZyYWN0b3JWYm5ldCIsIm1vZHVsZSIsImV4cG9ydHMiLCJ0NFZiIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImNyZWF0ZVQ0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/t4-vb.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/tap.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/tap.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorYaml = __webpack_require__(/*! ./yaml.js */ \"(ssr)/./node_modules/refractor/lang/yaml.js\");\nmodule.exports = tap;\ntap.displayName = \"tap\";\ntap.aliases = [];\nfunction tap(Prism) {\n    Prism.register(refractorYaml);\n    // https://en.wikipedia.org/wiki/Test_Anything_Protocol\n    Prism.languages.tap = {\n        fail: /not ok[^#{\\n\\r]*/,\n        pass: /ok[^#{\\n\\r]*/,\n        pragma: /pragma [+-][a-z]+/,\n        bailout: /bail out!.*/i,\n        version: /TAP version \\d+/i,\n        plan: /\\b\\d+\\.\\.\\d+(?: +#.*)?/,\n        subtest: {\n            pattern: /# Subtest(?:: .*)?/,\n            greedy: true\n        },\n        punctuation: /[{}]/,\n        directive: /#.*/,\n        yamlish: {\n            pattern: /(^[ \\t]*)---[\\s\\S]*?[\\r\\n][ \\t]*\\.\\.\\.$/m,\n            lookbehind: true,\n            inside: Prism.languages.yaml,\n            alias: \"language-yaml\"\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdGFwLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsSUFBSUEsZ0JBQWdCQyxtQkFBT0EsQ0FBQztBQUM1QkMsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUNoQixTQUFTRixJQUFJRyxLQUFLO0lBQ2hCQSxNQUFNQyxRQUFRLENBQUNSO0lBQ2YsdURBQXVEO0lBQ3ZETyxNQUFNRSxTQUFTLENBQUNMLEdBQUcsR0FBRztRQUNwQk0sTUFBTTtRQUNOQyxNQUFNO1FBQ05DLFFBQVE7UUFDUkMsU0FBUztRQUNUQyxTQUFTO1FBQ1RDLE1BQU07UUFDTkMsU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBQyxhQUFhO1FBQ2JDLFdBQVc7UUFDWEMsU0FBUztZQUNQSixTQUFTO1lBQ1RLLFlBQVk7WUFDWkMsUUFBUWhCLE1BQU1FLFNBQVMsQ0FBQ2UsSUFBSTtZQUM1QkMsT0FBTztRQUNUO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy90YXAuanM/NjZhYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcbnZhciByZWZyYWN0b3JZYW1sID0gcmVxdWlyZSgnLi95YW1sLmpzJylcbm1vZHVsZS5leHBvcnRzID0gdGFwXG50YXAuZGlzcGxheU5hbWUgPSAndGFwJ1xudGFwLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gdGFwKFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvcllhbWwpXG4gIC8vIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1Rlc3RfQW55dGhpbmdfUHJvdG9jb2xcbiAgUHJpc20ubGFuZ3VhZ2VzLnRhcCA9IHtcbiAgICBmYWlsOiAvbm90IG9rW14je1xcblxccl0qLyxcbiAgICBwYXNzOiAvb2tbXiN7XFxuXFxyXSovLFxuICAgIHByYWdtYTogL3ByYWdtYSBbKy1dW2Etel0rLyxcbiAgICBiYWlsb3V0OiAvYmFpbCBvdXQhLiovaSxcbiAgICB2ZXJzaW9uOiAvVEFQIHZlcnNpb24gXFxkKy9pLFxuICAgIHBsYW46IC9cXGJcXGQrXFwuXFwuXFxkKyg/OiArIy4qKT8vLFxuICAgIHN1YnRlc3Q6IHtcbiAgICAgIHBhdHRlcm46IC8jIFN1YnRlc3QoPzo6IC4qKT8vLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBwdW5jdHVhdGlvbjogL1t7fV0vLFxuICAgIGRpcmVjdGl2ZTogLyMuKi8sXG4gICAgeWFtbGlzaDoge1xuICAgICAgcGF0dGVybjogLyheWyBcXHRdKiktLS1bXFxzXFxTXSo/W1xcclxcbl1bIFxcdF0qXFwuXFwuXFwuJC9tLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGluc2lkZTogUHJpc20ubGFuZ3VhZ2VzLnlhbWwsXG4gICAgICBhbGlhczogJ2xhbmd1YWdlLXlhbWwnXG4gICAgfVxuICB9XG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yWWFtbCIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwidGFwIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImZhaWwiLCJwYXNzIiwicHJhZ21hIiwiYmFpbG91dCIsInZlcnNpb24iLCJwbGFuIiwic3VidGVzdCIsInBhdHRlcm4iLCJncmVlZHkiLCJwdW5jdHVhdGlvbiIsImRpcmVjdGl2ZSIsInlhbWxpc2giLCJsb29rYmVoaW5kIiwiaW5zaWRlIiwieWFtbCIsImFsaWFzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/tap.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/tcl.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/tcl.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = tcl;\ntcl.displayName = \"tcl\";\ntcl.aliases = [];\nfunction tcl(Prism) {\n    Prism.languages.tcl = {\n        comment: {\n            pattern: /(^|[^\\\\])#.*/,\n            lookbehind: true\n        },\n        string: {\n            pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n            greedy: true\n        },\n        variable: [\n            {\n                pattern: /(\\$)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/,\n                lookbehind: true\n            },\n            {\n                pattern: /(\\$)\\{[^}]+\\}/,\n                lookbehind: true\n            },\n            {\n                pattern: /(^[\\t ]*set[ \\t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/m,\n                lookbehind: true\n            }\n        ],\n        function: {\n            pattern: /(^[\\t ]*proc[ \\t]+)\\S+/m,\n            lookbehind: true\n        },\n        builtin: [\n            {\n                pattern: /(^[\\t ]*)(?:break|class|continue|error|eval|exit|for|foreach|if|proc|return|switch|while)\\b/m,\n                lookbehind: true\n            },\n            /\\b(?:else|elseif)\\b/\n        ],\n        scope: {\n            pattern: /(^[\\t ]*)(?:global|upvar|variable)\\b/m,\n            lookbehind: true,\n            alias: \"constant\"\n        },\n        keyword: {\n            pattern: /(^[\\t ]*|\\[)(?:Safe_Base|Tcl|after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|scan|seek|set|socket|source|split|string|subst|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|test|vars|wordBreak(?:After|Before))|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\\b/m,\n            lookbehind: true\n        },\n        operator: /!=?|\\*\\*?|==|&&?|\\|\\|?|<[=<]?|>[=>]?|[-+~\\/%?^]|\\b(?:eq|in|ne|ni)\\b/,\n        punctuation: /[{}()\\[\\]]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdGNsLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLElBQUlDLFdBQVcsR0FBRztBQUNsQkQsSUFBSUUsT0FBTyxHQUFHLEVBQUU7QUFDaEIsU0FBU0YsSUFBSUcsS0FBSztJQUNoQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxZQUFZO1FBQ2Q7UUFDQUMsUUFBUTtZQUNORixTQUFTO1lBQ1RHLFFBQVE7UUFDVjtRQUNBQyxVQUFVO1lBQ1I7Z0JBQ0VKLFNBQVM7Z0JBQ1RDLFlBQVk7WUFDZDtZQUNBO2dCQUNFRCxTQUFTO2dCQUNUQyxZQUFZO1lBQ2Q7WUFDQTtnQkFDRUQsU0FBUztnQkFDVEMsWUFBWTtZQUNkO1NBQ0Q7UUFDREksVUFBVTtZQUNSTCxTQUFTO1lBQ1RDLFlBQVk7UUFDZDtRQUNBSyxTQUFTO1lBQ1A7Z0JBQ0VOLFNBQ0U7Z0JBQ0ZDLFlBQVk7WUFDZDtZQUNBO1NBQ0Q7UUFDRE0sT0FBTztZQUNMUCxTQUFTO1lBQ1RDLFlBQVk7WUFDWk8sT0FBTztRQUNUO1FBQ0FDLFNBQVM7WUFDUFQsU0FDRTtZQUNGQyxZQUFZO1FBQ2Q7UUFDQVMsVUFDRTtRQUNGQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy90Y2wuanM/MmQ1OSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSB0Y2xcbnRjbC5kaXNwbGF5TmFtZSA9ICd0Y2wnXG50Y2wuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiB0Y2woUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLnRjbCA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvKF58W15cXFxcXSkjLiovLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvXCIoPzpbXlwiXFxcXFxcclxcbl18XFxcXCg/OlxcclxcbnxbXFxzXFxTXSkpKlwiLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgdmFyaWFibGU6IFtcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyhcXCQpKD86OjopPyg/OlthLXpBLVowLTldKzo6KSpcXHcrLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyhcXCQpXFx7W159XStcXH0vLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvKF5bXFx0IF0qc2V0WyBcXHRdKykoPzo6Oik/KD86W2EtekEtWjAtOV0rOjopKlxcdysvbSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfVxuICAgIF0sXG4gICAgZnVuY3Rpb246IHtcbiAgICAgIHBhdHRlcm46IC8oXltcXHQgXSpwcm9jWyBcXHRdKylcXFMrL20sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBidWlsdGluOiBbXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyheW1xcdCBdKikoPzpicmVha3xjbGFzc3xjb250aW51ZXxlcnJvcnxldmFsfGV4aXR8Zm9yfGZvcmVhY2h8aWZ8cHJvY3xyZXR1cm58c3dpdGNofHdoaWxlKVxcYi9tLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAgL1xcYig/OmVsc2V8ZWxzZWlmKVxcYi9cbiAgICBdLFxuICAgIHNjb3BlOiB7XG4gICAgICBwYXR0ZXJuOiAvKF5bXFx0IF0qKSg/Omdsb2JhbHx1cHZhcnx2YXJpYWJsZSlcXGIvbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ2NvbnN0YW50J1xuICAgIH0sXG4gICAga2V5d29yZDoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyheW1xcdCBdKnxcXFspKD86U2FmZV9CYXNlfFRjbHxhZnRlcnxhcHBlbmR8YXBwbHl8YXJyYXl8YXV0b18oPzpleGVjb2t8aW1wb3J0fGxvYWR8bWtpbmRleHxxdWFsaWZ5fHJlc2V0KXxhdXRvbWtpbmRleF9vbGR8YmdlcnJvcnxiaW5hcnl8Y2F0Y2h8Y2R8Y2hhbnxjbG9ja3xjbG9zZXxjb25jYXR8ZGRlfGRpY3R8ZW5jb2Rpbmd8ZW9mfGV4ZWN8ZXhwcnxmYmxvY2tlZHxmY29uZmlndXJlfGZjb3B5fGZpbGUoPzpldmVudHxuYW1lKT98Zmx1c2h8Z2V0c3xnbG9ifGhpc3Rvcnl8aHR0cHxpbmNyfGluZm98aW50ZXJwfGpvaW58bGFwcGVuZHxsYXNzaWdufGxpbmRleHxsaW5zZXJ0fGxpc3R8bGxlbmd0aHxsb2FkfGxyYW5nZXxscmVwZWF0fGxyZXBsYWNlfGxyZXZlcnNlfGxzZWFyY2h8bHNldHxsc29ydHxtYXRoKD86ZnVuY3xvcCl8bWVtb3J5fG1zZ2NhdHxuYW1lc3BhY2V8b3BlbnxwYWNrYWdlfHBhcnJheXxwaWR8cGtnX21rSW5kZXh8cGxhdGZvcm18cHV0c3xwd2R8cmVfc3ludGF4fHJlYWR8cmVmY2hhbnxyZWdleHB8cmVnaXN0cnl8cmVnc3VifHJlbmFtZXxzY2FufHNlZWt8c2V0fHNvY2tldHxzb3VyY2V8c3BsaXR8c3RyaW5nfHN1YnN0fHRjbCg/Ol9lbmRPZldvcmR8X2ZpbmRMaWJyYXJ5fHN0YXJ0T2YoPzpOZXh0fFByZXZpb3VzKVdvcmR8dGVzdHx2YXJzfHdvcmRCcmVhayg/OkFmdGVyfEJlZm9yZSkpfHRlbGx8dGltZXx0bXx0cmFjZXx1bmtub3dufHVubG9hZHx1bnNldHx1cGRhdGV8dXBsZXZlbHx2d2FpdClcXGIvbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIG9wZXJhdG9yOlxuICAgICAgLyE9P3xcXCpcXCo/fD09fCYmP3xcXHxcXHw/fDxbPTxdP3w+Wz0+XT98Wy0rflxcLyU/Xl18XFxiKD86ZXF8aW58bmV8bmkpXFxiLyxcbiAgICBwdW5jdHVhdGlvbjogL1t7fSgpXFxbXFxdXS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJ0Y2wiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsInN0cmluZyIsImdyZWVkeSIsInZhcmlhYmxlIiwiZnVuY3Rpb24iLCJidWlsdGluIiwic2NvcGUiLCJhbGlhcyIsImtleXdvcmQiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/tcl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/textile.js":
/*!************************************************!*\
  !*** ./node_modules/refractor/lang/textile.js ***!
  \************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = textile;\ntextile.displayName = \"textile\";\ntextile.aliases = [];\nfunction textile(Prism) {\n    ;\n    (function(Prism) {\n        // We don't allow for pipes inside parentheses\n        // to not break table pattern |(. foo |). bar |\n        var modifierRegex = /\\([^|()\\n]+\\)|\\[[^\\]\\n]+\\]|\\{[^}\\n]+\\}/.source // Opening and closing parentheses which are not a modifier\n        ;\n        // This pattern is necessary to prevent exponential backtracking\n        var parenthesesRegex = /\\)|\\((?![^|()\\n]+\\))/.source;\n        /**\n     * @param {string} source\n     * @param {string} [flags]\n     */ function withModifier(source, flags) {\n            return RegExp(source.replace(/<MOD>/g, function() {\n                return \"(?:\" + modifierRegex + \")\";\n            }).replace(/<PAR>/g, function() {\n                return \"(?:\" + parenthesesRegex + \")\";\n            }), flags || \"\");\n        }\n        var modifierTokens = {\n            css: {\n                pattern: /\\{[^{}]+\\}/,\n                inside: {\n                    rest: Prism.languages.css\n                }\n            },\n            \"class-id\": {\n                pattern: /(\\()[^()]+(?=\\))/,\n                lookbehind: true,\n                alias: \"attr-value\"\n            },\n            lang: {\n                pattern: /(\\[)[^\\[\\]]+(?=\\])/,\n                lookbehind: true,\n                alias: \"attr-value\"\n            },\n            // Anything else is punctuation (the first pattern is for row/col spans inside tables)\n            punctuation: /[\\\\\\/]\\d+|\\S/\n        };\n        var textile = Prism.languages.textile = Prism.languages.extend(\"markup\", {\n            phrase: {\n                pattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n                lookbehind: true,\n                inside: {\n                    // h1. Header 1\n                    \"block-tag\": {\n                        pattern: withModifier(/^[a-z]\\w*(?:<MOD>|<PAR>|[<>=])*\\./.source),\n                        inside: {\n                            modifier: {\n                                pattern: withModifier(/(^[a-z]\\w*)(?:<MOD>|<PAR>|[<>=])+(?=\\.)/.source),\n                                lookbehind: true,\n                                inside: modifierTokens\n                            },\n                            tag: /^[a-z]\\w*/,\n                            punctuation: /\\.$/\n                        }\n                    },\n                    // # List item\n                    // * List item\n                    list: {\n                        pattern: withModifier(/^[*#]+<MOD>*\\s+\\S.*/.source, \"m\"),\n                        inside: {\n                            modifier: {\n                                pattern: withModifier(/(^[*#]+)<MOD>+/.source),\n                                lookbehind: true,\n                                inside: modifierTokens\n                            },\n                            punctuation: /^[*#]+/\n                        }\n                    },\n                    // | cell | cell | cell |\n                    table: {\n                        // Modifiers can be applied to the row: {color:red}.|1|2|3|\n                        // or the cell: |{color:red}.1|2|3|\n                        pattern: withModifier(/^(?:(?:<MOD>|<PAR>|[<>=^~])+\\.\\s*)?(?:\\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.|(?!(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.))[^|]*)+\\|/.source, \"m\"),\n                        inside: {\n                            modifier: {\n                                // Modifiers for rows after the first one are\n                                // preceded by a pipe and a line feed\n                                pattern: withModifier(/(^|\\|(?:\\r?\\n|\\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+(?=\\.)/.source),\n                                lookbehind: true,\n                                inside: modifierTokens\n                            },\n                            punctuation: /\\||^\\./\n                        }\n                    },\n                    inline: {\n                        // eslint-disable-next-line regexp/no-super-linear-backtracking\n                        pattern: withModifier(/(^|[^a-zA-Z\\d])(\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>*.+?\\2(?![a-zA-Z\\d])/.source),\n                        lookbehind: true,\n                        inside: {\n                            // Note: superscripts and subscripts are not handled specifically\n                            // *bold*, **bold**\n                            bold: {\n                                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                                pattern: withModifier(/(^(\\*\\*?)<MOD>*).+?(?=\\2)/.source),\n                                lookbehind: true\n                            },\n                            // _italic_, __italic__\n                            italic: {\n                                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                                pattern: withModifier(/(^(__?)<MOD>*).+?(?=\\2)/.source),\n                                lookbehind: true\n                            },\n                            // ??cite??\n                            cite: {\n                                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                                pattern: withModifier(/(^\\?\\?<MOD>*).+?(?=\\?\\?)/.source),\n                                lookbehind: true,\n                                alias: \"string\"\n                            },\n                            // @code@\n                            code: {\n                                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                                pattern: withModifier(/(^@<MOD>*).+?(?=@)/.source),\n                                lookbehind: true,\n                                alias: \"keyword\"\n                            },\n                            // +inserted+\n                            inserted: {\n                                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                                pattern: withModifier(/(^\\+<MOD>*).+?(?=\\+)/.source),\n                                lookbehind: true\n                            },\n                            // -deleted-\n                            deleted: {\n                                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                                pattern: withModifier(/(^-<MOD>*).+?(?=-)/.source),\n                                lookbehind: true\n                            },\n                            // %span%\n                            span: {\n                                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                                pattern: withModifier(/(^%<MOD>*).+?(?=%)/.source),\n                                lookbehind: true\n                            },\n                            modifier: {\n                                pattern: withModifier(/(^\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>+/.source),\n                                lookbehind: true,\n                                inside: modifierTokens\n                            },\n                            punctuation: /[*_%?@+\\-^~]+/\n                        }\n                    },\n                    // [alias]http://example.com\n                    \"link-ref\": {\n                        pattern: /^\\[[^\\]]+\\]\\S+$/m,\n                        inside: {\n                            string: {\n                                pattern: /(^\\[)[^\\]]+(?=\\])/,\n                                lookbehind: true\n                            },\n                            url: {\n                                pattern: /(^\\])\\S+$/,\n                                lookbehind: true\n                            },\n                            punctuation: /[\\[\\]]/\n                        }\n                    },\n                    // \"text\":http://example.com\n                    // \"text\":link-ref\n                    link: {\n                        // eslint-disable-next-line regexp/no-super-linear-backtracking\n                        pattern: withModifier(/\"<MOD>*[^\"]+\":.+?(?=[^\\w/]?(?:\\s|$))/.source),\n                        inside: {\n                            text: {\n                                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                                pattern: withModifier(/(^\"<MOD>*)[^\"]+(?=\")/.source),\n                                lookbehind: true\n                            },\n                            modifier: {\n                                pattern: withModifier(/(^\")<MOD>+/.source),\n                                lookbehind: true,\n                                inside: modifierTokens\n                            },\n                            url: {\n                                pattern: /(:).+/,\n                                lookbehind: true\n                            },\n                            punctuation: /[\":]/\n                        }\n                    },\n                    // !image.jpg!\n                    // !image.jpg(Title)!:http://example.com\n                    image: {\n                        pattern: withModifier(/!(?:<MOD>|<PAR>|[<>=])*(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?!(?::.+?(?=[^\\w/]?(?:\\s|$)))?/.source),\n                        inside: {\n                            source: {\n                                pattern: withModifier(/(^!(?:<MOD>|<PAR>|[<>=])*)(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?(?=!)/.source),\n                                lookbehind: true,\n                                alias: \"url\"\n                            },\n                            modifier: {\n                                pattern: withModifier(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source),\n                                lookbehind: true,\n                                inside: modifierTokens\n                            },\n                            url: {\n                                pattern: /(:).+/,\n                                lookbehind: true\n                            },\n                            punctuation: /[!:]/\n                        }\n                    },\n                    // Footnote[1]\n                    footnote: {\n                        pattern: /\\b\\[\\d+\\]/,\n                        alias: \"comment\",\n                        inside: {\n                            punctuation: /\\[|\\]/\n                        }\n                    },\n                    // CSS(Cascading Style Sheet)\n                    acronym: {\n                        pattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n                        inside: {\n                            comment: {\n                                pattern: /(\\()[^()]+(?=\\))/,\n                                lookbehind: true\n                            },\n                            punctuation: /[()]/\n                        }\n                    },\n                    // Prism(C)\n                    mark: {\n                        pattern: /\\b\\((?:C|R|TM)\\)/,\n                        alias: \"comment\",\n                        inside: {\n                            punctuation: /[()]/\n                        }\n                    }\n                }\n            }\n        });\n        var phraseInside = textile[\"phrase\"].inside;\n        var nestedPatterns = {\n            inline: phraseInside[\"inline\"],\n            link: phraseInside[\"link\"],\n            image: phraseInside[\"image\"],\n            footnote: phraseInside[\"footnote\"],\n            acronym: phraseInside[\"acronym\"],\n            mark: phraseInside[\"mark\"]\n        } // Only allow alpha-numeric HTML tags, not XML tags\n        ;\n        textile.tag.pattern = /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i // Allow some nesting\n        ;\n        var phraseInlineInside = phraseInside[\"inline\"].inside;\n        phraseInlineInside[\"bold\"].inside = nestedPatterns;\n        phraseInlineInside[\"italic\"].inside = nestedPatterns;\n        phraseInlineInside[\"inserted\"].inside = nestedPatterns;\n        phraseInlineInside[\"deleted\"].inside = nestedPatterns;\n        phraseInlineInside[\"span\"].inside = nestedPatterns // Allow some styles inside table cells\n        ;\n        var phraseTableInside = phraseInside[\"table\"].inside;\n        phraseTableInside[\"inline\"] = nestedPatterns[\"inline\"];\n        phraseTableInside[\"link\"] = nestedPatterns[\"link\"];\n        phraseTableInside[\"image\"] = nestedPatterns[\"image\"];\n        phraseTableInside[\"footnote\"] = nestedPatterns[\"footnote\"];\n        phraseTableInside[\"acronym\"] = nestedPatterns[\"acronym\"];\n        phraseTableInside[\"mark\"] = nestedPatterns[\"mark\"];\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/textile.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/toml.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/toml.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = toml;\ntoml.displayName = \"toml\";\ntoml.aliases = [];\nfunction toml(Prism) {\n    ;\n    (function(Prism) {\n        var key = /(?:[\\w-]+|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/.source;\n        /**\n     * @param {string} pattern\n     */ function insertKey(pattern) {\n            return pattern.replace(/__/g, function() {\n                return key;\n            });\n        }\n        Prism.languages.toml = {\n            comment: {\n                pattern: /#.*/,\n                greedy: true\n            },\n            table: {\n                pattern: RegExp(insertKey(/(^[\\t ]*\\[\\s*(?:\\[\\s*)?)__(?:\\s*\\.\\s*__)*(?=\\s*\\])/.source), \"m\"),\n                lookbehind: true,\n                greedy: true,\n                alias: \"class-name\"\n            },\n            key: {\n                pattern: RegExp(insertKey(/(^[\\t ]*|[{,]\\s*)__(?:\\s*\\.\\s*__)*(?=\\s*=)/.source), \"m\"),\n                lookbehind: true,\n                greedy: true,\n                alias: \"property\"\n            },\n            string: {\n                pattern: /\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n                greedy: true\n            },\n            date: [\n                {\n                    // Offset Date-Time, Local Date-Time, Local Date\n                    pattern: /\\b\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?\\b/i,\n                    alias: \"number\"\n                },\n                {\n                    // Local Time\n                    pattern: /\\b\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?\\b/,\n                    alias: \"number\"\n                }\n            ],\n            number: /(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\b\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?\\b(?:inf|nan)\\b/,\n            boolean: /\\b(?:false|true)\\b/,\n            punctuation: /[.,=[\\]{}]/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdG9tbC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7O0lBQ2YsVUFBVUEsS0FBSztRQUNmLElBQUlDLE1BQU0sK0NBQStDQyxNQUFNO1FBQy9EOztLQUVDLEdBQ0QsU0FBU0MsVUFBVUMsT0FBTztZQUN4QixPQUFPQSxRQUFRQyxPQUFPLENBQUMsT0FBTztnQkFDNUIsT0FBT0o7WUFDVDtRQUNGO1FBQ0FELE1BQU1NLFNBQVMsQ0FBQ1QsSUFBSSxHQUFHO1lBQ3JCVSxTQUFTO2dCQUNQSCxTQUFTO2dCQUNUSSxRQUFRO1lBQ1Y7WUFDQUMsT0FBTztnQkFDTEwsU0FBU00sT0FDUFAsVUFDRSxxREFBcURELE1BQU0sR0FFN0Q7Z0JBRUZTLFlBQVk7Z0JBQ1pILFFBQVE7Z0JBQ1JJLE9BQU87WUFDVDtZQUNBWCxLQUFLO2dCQUNIRyxTQUFTTSxPQUNQUCxVQUFVLDZDQUE2Q0QsTUFBTSxHQUM3RDtnQkFFRlMsWUFBWTtnQkFDWkgsUUFBUTtnQkFDUkksT0FBTztZQUNUO1lBQ0FDLFFBQVE7Z0JBQ05ULFNBQ0U7Z0JBQ0ZJLFFBQVE7WUFDVjtZQUNBTSxNQUFNO2dCQUNKO29CQUNFLGdEQUFnRDtvQkFDaERWLFNBQ0U7b0JBQ0ZRLE9BQU87Z0JBQ1Q7Z0JBQ0E7b0JBQ0UsYUFBYTtvQkFDYlIsU0FBUztvQkFDVFEsT0FBTztnQkFDVDthQUNEO1lBQ0RHLFFBQ0U7WUFDRkMsU0FBUztZQUNUQyxhQUFhO1FBQ2Y7SUFDRixHQUFHakI7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy90b21sLmpzP2QwNmMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gdG9tbFxudG9tbC5kaXNwbGF5TmFtZSA9ICd0b21sJ1xudG9tbC5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIHRvbWwoUHJpc20pIHtcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIga2V5ID0gLyg/OltcXHctXSt8J1teJ1xcblxccl0qJ3xcIig/OlxcXFwufFteXFxcXFwiXFxyXFxuXSkqXCIpLy5zb3VyY2VcbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gcGF0dGVyblxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGluc2VydEtleShwYXR0ZXJuKSB7XG4gICAgICByZXR1cm4gcGF0dGVybi5yZXBsYWNlKC9fXy9nLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBrZXlcbiAgICAgIH0pXG4gICAgfVxuICAgIFByaXNtLmxhbmd1YWdlcy50b21sID0ge1xuICAgICAgY29tbWVudDoge1xuICAgICAgICBwYXR0ZXJuOiAvIy4qLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAgdGFibGU6IHtcbiAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgIGluc2VydEtleShcbiAgICAgICAgICAgIC8oXltcXHQgXSpcXFtcXHMqKD86XFxbXFxzKik/KV9fKD86XFxzKlxcLlxccypfXykqKD89XFxzKlxcXSkvLnNvdXJjZVxuICAgICAgICAgICksXG4gICAgICAgICAgJ20nXG4gICAgICAgICksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdjbGFzcy1uYW1lJ1xuICAgICAgfSxcbiAgICAgIGtleToge1xuICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoXG4gICAgICAgICAgaW5zZXJ0S2V5KC8oXltcXHQgXSp8W3ssXVxccyopX18oPzpcXHMqXFwuXFxzKl9fKSooPz1cXHMqPSkvLnNvdXJjZSksXG4gICAgICAgICAgJ20nXG4gICAgICAgICksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdwcm9wZXJ0eSdcbiAgICAgIH0sXG4gICAgICBzdHJpbmc6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvXCJcIlwiKD86XFxcXFtcXHNcXFNdfFteXFxcXF0pKj9cIlwiXCJ8JycnW1xcc1xcU10qPycnJ3wnW14nXFxuXFxyXSonfFwiKD86XFxcXC58W15cXFxcXCJcXHJcXG5dKSpcIi8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGRhdGU6IFtcbiAgICAgICAge1xuICAgICAgICAgIC8vIE9mZnNldCBEYXRlLVRpbWUsIExvY2FsIERhdGUtVGltZSwgTG9jYWwgRGF0ZVxuICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAvXFxiXFxkezR9LVxcZHsyfS1cXGR7Mn0oPzpbVFxcc11cXGR7Mn06XFxkezJ9OlxcZHsyfSg/OlxcLlxcZCspPyg/Olp8WystXVxcZHsyfTpcXGR7Mn0pPyk/XFxiL2ksXG4gICAgICAgICAgYWxpYXM6ICdudW1iZXInXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAvLyBMb2NhbCBUaW1lXG4gICAgICAgICAgcGF0dGVybjogL1xcYlxcZHsyfTpcXGR7Mn06XFxkezJ9KD86XFwuXFxkKyk/XFxiLyxcbiAgICAgICAgICBhbGlhczogJ251bWJlcidcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIG51bWJlcjpcbiAgICAgICAgLyg/OlxcYjAoPzp4W1xcZGEtekEtWl0rKD86X1tcXGRhLXpBLVpdKykqfG9bMC03XSsoPzpfWzAtN10rKSp8YlsxMF0rKD86X1sxMF0rKSopKVxcYnxbLStdP1xcYlxcZCsoPzpfXFxkKykqKD86XFwuXFxkKyg/Ol9cXGQrKSopPyg/OltlRV1bKy1dP1xcZCsoPzpfXFxkKykqKT9cXGJ8Wy0rXT9cXGIoPzppbmZ8bmFuKVxcYi8sXG4gICAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvLFxuICAgICAgcHVuY3R1YXRpb246IC9bLiw9W1xcXXt9XS9cbiAgICB9XG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJ0b21sIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJrZXkiLCJzb3VyY2UiLCJpbnNlcnRLZXkiLCJwYXR0ZXJuIiwicmVwbGFjZSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJncmVlZHkiLCJ0YWJsZSIsIlJlZ0V4cCIsImxvb2tiZWhpbmQiLCJhbGlhcyIsInN0cmluZyIsImRhdGUiLCJudW1iZXIiLCJib29sZWFuIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/toml.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/tremor.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/tremor.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = tremor;\ntremor.displayName = \"tremor\";\ntremor.aliases = [];\nfunction tremor(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.tremor = {\n            comment: {\n                pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n                lookbehind: true\n            },\n            \"interpolated-string\": null,\n            // see below\n            extractor: {\n                pattern: /\\b[a-z_]\\w*\\|(?:[^\\r\\n\\\\|]|\\\\(?:\\r\\n|[\\s\\S]))*\\|/i,\n                greedy: true,\n                inside: {\n                    regex: {\n                        pattern: /(^re)\\|[\\s\\S]+/,\n                        lookbehind: true\n                    },\n                    function: /^\\w+/,\n                    value: /\\|[\\s\\S]+/\n                }\n            },\n            identifier: {\n                pattern: /`[^`]*`/,\n                greedy: true\n            },\n            function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())\\b/,\n            keyword: /\\b(?:args|as|by|case|config|connect|connector|const|copy|create|default|define|deploy|drop|each|emit|end|erase|event|flow|fn|for|from|group|having|insert|into|intrinsic|let|links|match|merge|mod|move|of|operator|patch|pipeline|recur|script|select|set|sliding|state|stream|to|tumbling|update|use|when|where|window|with)\\b/,\n            boolean: /\\b(?:false|null|true)\\b/i,\n            number: /\\b(?:0b[01_]*|0x[0-9a-fA-F_]*|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[Ee][+-]?[\\d_]+)?)\\b/,\n            \"pattern-punctuation\": {\n                pattern: /%(?=[({[])/,\n                alias: \"punctuation\"\n            },\n            operator: /[-+*\\/%~!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?>?=?|(?:absent|and|not|or|present|xor)\\b/,\n            punctuation: /::|[;\\[\\]()\\{\\},.:]/\n        };\n        var interpolationPattern = /#\\{(?:[^\"{}]|\\{[^{}]*\\}|\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\")*\\}/.source;\n        Prism.languages.tremor[\"interpolated-string\"] = {\n            pattern: RegExp(/(^|[^\\\\])/.source + \"(?:\" + '\"\"\"(?:' + /[^\"\\\\#]|\\\\[\\s\\S]|\"(?!\"\")|#(?!\\{)/.source + \"|\" + interpolationPattern + ')*\"\"\"' + \"|\" + '\"(?:' + /[^\"\\\\\\r\\n#]|\\\\(?:\\r\\n|[\\s\\S])|#(?!\\{)/.source + \"|\" + interpolationPattern + ')*\"' + \")\"),\n            lookbehind: true,\n            greedy: true,\n            inside: {\n                interpolation: {\n                    pattern: RegExp(interpolationPattern),\n                    inside: {\n                        punctuation: /^#\\{|\\}$/,\n                        expression: {\n                            pattern: /[\\s\\S]+/,\n                            inside: Prism.languages.tremor\n                        }\n                    }\n                },\n                string: /[\\s\\S]+/\n            }\n        };\n        Prism.languages.troy = Prism.languages[\"tremor\"];\n        Prism.languages.trickle = Prism.languages[\"tremor\"];\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdHJlbW9yLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLE9BQU9DLFdBQVcsR0FBRztBQUNyQkQsT0FBT0UsT0FBTyxHQUFHLEVBQUU7QUFDbkIsU0FBU0YsT0FBT0csS0FBSzs7SUFDakIsVUFBVUEsS0FBSztRQUNmQSxNQUFNQyxTQUFTLENBQUNKLE1BQU0sR0FBRztZQUN2QkssU0FBUztnQkFDUEMsU0FBUztnQkFDVEMsWUFBWTtZQUNkO1lBQ0EsdUJBQXVCO1lBQ3ZCLFlBQVk7WUFDWkMsV0FBVztnQkFDVEYsU0FBUztnQkFDVEcsUUFBUTtnQkFDUkMsUUFBUTtvQkFDTkMsT0FBTzt3QkFDTEwsU0FBUzt3QkFDVEMsWUFBWTtvQkFDZDtvQkFDQUssVUFBVTtvQkFDVkMsT0FBTztnQkFDVDtZQUNGO1lBQ0FDLFlBQVk7Z0JBQ1ZSLFNBQVM7Z0JBQ1RHLFFBQVE7WUFDVjtZQUNBRyxVQUFVO1lBQ1ZHLFNBQ0U7WUFDRkMsU0FBUztZQUNUQyxRQUNFO1lBQ0YsdUJBQXVCO2dCQUNyQlgsU0FBUztnQkFDVFksT0FBTztZQUNUO1lBQ0FDLFVBQ0U7WUFDRkMsYUFBYTtRQUNmO1FBQ0EsSUFBSUMsdUJBQ0Ysa0VBQWtFQyxNQUFNO1FBQzFFbkIsTUFBTUMsU0FBUyxDQUFDSixNQUFNLENBQUMsc0JBQXNCLEdBQUc7WUFDOUNNLFNBQVNpQixPQUNQLFlBQVlELE1BQU0sR0FDaEIsUUFDQSxXQUNBLG1DQUFtQ0EsTUFBTSxHQUN6QyxNQUNBRCx1QkFDQSxVQUNBLE1BQ0EsU0FDQSx3Q0FBd0NDLE1BQU0sR0FDOUMsTUFDQUQsdUJBQ0EsUUFDQTtZQUVKZCxZQUFZO1lBQ1pFLFFBQVE7WUFDUkMsUUFBUTtnQkFDTmMsZUFBZTtvQkFDYmxCLFNBQVNpQixPQUFPRjtvQkFDaEJYLFFBQVE7d0JBQ05VLGFBQWE7d0JBQ2JLLFlBQVk7NEJBQ1ZuQixTQUFTOzRCQUNUSSxRQUFRUCxNQUFNQyxTQUFTLENBQUNKLE1BQU07d0JBQ2hDO29CQUNGO2dCQUNGO2dCQUNBMEIsUUFBUTtZQUNWO1FBQ0Y7UUFDQXZCLE1BQU1DLFNBQVMsQ0FBQ3VCLElBQUksR0FBR3hCLE1BQU1DLFNBQVMsQ0FBQyxTQUFTO1FBQ2hERCxNQUFNQyxTQUFTLENBQUN3QixPQUFPLEdBQUd6QixNQUFNQyxTQUFTLENBQUMsU0FBUztJQUNyRCxHQUFHRDtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3RyZW1vci5qcz85MmUyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHRyZW1vclxudHJlbW9yLmRpc3BsYXlOYW1lID0gJ3RyZW1vcidcbnRyZW1vci5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIHRyZW1vcihQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIFByaXNtLmxhbmd1YWdlcy50cmVtb3IgPSB7XG4gICAgICBjb21tZW50OiB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKSg/OlxcL1xcKltcXHNcXFNdKj9cXCpcXC98KD86LS18XFwvXFwvfCMpLiopLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgICdpbnRlcnBvbGF0ZWQtc3RyaW5nJzogbnVsbCxcbiAgICAgIC8vIHNlZSBiZWxvd1xuICAgICAgZXh0cmFjdG9yOiB7XG4gICAgICAgIHBhdHRlcm46IC9cXGJbYS16X11cXHcqXFx8KD86W15cXHJcXG5cXFxcfF18XFxcXCg/OlxcclxcbnxbXFxzXFxTXSkpKlxcfC9pLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIHJlZ2V4OiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvKF5yZSlcXHxbXFxzXFxTXSsvLFxuICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICAgIH0sXG4gICAgICAgICAgZnVuY3Rpb246IC9eXFx3Ky8sXG4gICAgICAgICAgdmFsdWU6IC9cXHxbXFxzXFxTXSsvXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBpZGVudGlmaWVyOiB7XG4gICAgICAgIHBhdHRlcm46IC9gW15gXSpgLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAgZnVuY3Rpb246IC9cXGJbYS16X11cXHcqKD89XFxzKig/Ojo6XFxzKjx8XFwoKSlcXGIvLFxuICAgICAga2V5d29yZDpcbiAgICAgICAgL1xcYig/OmFyZ3N8YXN8Ynl8Y2FzZXxjb25maWd8Y29ubmVjdHxjb25uZWN0b3J8Y29uc3R8Y29weXxjcmVhdGV8ZGVmYXVsdHxkZWZpbmV8ZGVwbG95fGRyb3B8ZWFjaHxlbWl0fGVuZHxlcmFzZXxldmVudHxmbG93fGZufGZvcnxmcm9tfGdyb3VwfGhhdmluZ3xpbnNlcnR8aW50b3xpbnRyaW5zaWN8bGV0fGxpbmtzfG1hdGNofG1lcmdlfG1vZHxtb3ZlfG9mfG9wZXJhdG9yfHBhdGNofHBpcGVsaW5lfHJlY3VyfHNjcmlwdHxzZWxlY3R8c2V0fHNsaWRpbmd8c3RhdGV8c3RyZWFtfHRvfHR1bWJsaW5nfHVwZGF0ZXx1c2V8d2hlbnx3aGVyZXx3aW5kb3d8d2l0aClcXGIvLFxuICAgICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfG51bGx8dHJ1ZSlcXGIvaSxcbiAgICAgIG51bWJlcjpcbiAgICAgICAgL1xcYig/OjBiWzAxX10qfDB4WzAtOWEtZkEtRl9dKnxcXGRbXFxkX10qKD86XFwuXFxkW1xcZF9dKik/KD86W0VlXVsrLV0/W1xcZF9dKyk/KVxcYi8sXG4gICAgICAncGF0dGVybi1wdW5jdHVhdGlvbic6IHtcbiAgICAgICAgcGF0dGVybjogLyUoPz1bKHtbXSkvLFxuICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgfSxcbiAgICAgIG9wZXJhdG9yOlxuICAgICAgICAvWy0rKlxcLyV+IV5dPT98PVs9Pl0/fCZbJj1dP3xcXHxbfD1dP3w8PD89P3w+Pj8+Pz0/fCg/OmFic2VudHxhbmR8bm90fG9yfHByZXNlbnR8eG9yKVxcYi8sXG4gICAgICBwdW5jdHVhdGlvbjogLzo6fFs7XFxbXFxdKClcXHtcXH0sLjpdL1xuICAgIH1cbiAgICB2YXIgaW50ZXJwb2xhdGlvblBhdHRlcm4gPVxuICAgICAgLyNcXHsoPzpbXlwie31dfFxce1tee31dKlxcfXxcIig/OlteXCJcXFxcXFxyXFxuXXxcXFxcKD86XFxyXFxufFtcXHNcXFNdKSkqXCIpKlxcfS8uc291cmNlXG4gICAgUHJpc20ubGFuZ3VhZ2VzLnRyZW1vclsnaW50ZXJwb2xhdGVkLXN0cmluZyddID0ge1xuICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAvKF58W15cXFxcXSkvLnNvdXJjZSArXG4gICAgICAgICAgJyg/OicgK1xuICAgICAgICAgICdcIlwiXCIoPzonICtcbiAgICAgICAgICAvW15cIlxcXFwjXXxcXFxcW1xcc1xcU118XCIoPyFcIlwiKXwjKD8hXFx7KS8uc291cmNlICtcbiAgICAgICAgICAnfCcgK1xuICAgICAgICAgIGludGVycG9sYXRpb25QYXR0ZXJuICtcbiAgICAgICAgICAnKSpcIlwiXCInICtcbiAgICAgICAgICAnfCcgK1xuICAgICAgICAgICdcIig/OicgK1xuICAgICAgICAgIC9bXlwiXFxcXFxcclxcbiNdfFxcXFwoPzpcXHJcXG58W1xcc1xcU10pfCMoPyFcXHspLy5zb3VyY2UgK1xuICAgICAgICAgICd8JyArXG4gICAgICAgICAgaW50ZXJwb2xhdGlvblBhdHRlcm4gK1xuICAgICAgICAgICcpKlwiJyArXG4gICAgICAgICAgJyknXG4gICAgICApLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBpbnRlcnBvbGF0aW9uOiB7XG4gICAgICAgICAgcGF0dGVybjogUmVnRXhwKGludGVycG9sYXRpb25QYXR0ZXJuKSxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXiNcXHt8XFx9JC8sXG4gICAgICAgICAgICBleHByZXNzaW9uOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC9bXFxzXFxTXSsvLFxuICAgICAgICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy50cmVtb3JcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHN0cmluZzogL1tcXHNcXFNdKy9cbiAgICAgIH1cbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzLnRyb3kgPSBQcmlzbS5sYW5ndWFnZXNbJ3RyZW1vciddXG4gICAgUHJpc20ubGFuZ3VhZ2VzLnRyaWNrbGUgPSBQcmlzbS5sYW5ndWFnZXNbJ3RyZW1vciddXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJ0cmVtb3IiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImV4dHJhY3RvciIsImdyZWVkeSIsImluc2lkZSIsInJlZ2V4IiwiZnVuY3Rpb24iLCJ2YWx1ZSIsImlkZW50aWZpZXIiLCJrZXl3b3JkIiwiYm9vbGVhbiIsIm51bWJlciIsImFsaWFzIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiIsImludGVycG9sYXRpb25QYXR0ZXJuIiwic291cmNlIiwiUmVnRXhwIiwiaW50ZXJwb2xhdGlvbiIsImV4cHJlc3Npb24iLCJzdHJpbmciLCJ0cm95IiwidHJpY2tsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/tremor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/tsx.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/tsx.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorJsx = __webpack_require__(/*! ./jsx.js */ \"(ssr)/./node_modules/refractor/lang/jsx.js\");\nvar refractorTypescript = __webpack_require__(/*! ./typescript.js */ \"(ssr)/./node_modules/refractor/lang/typescript.js\");\nmodule.exports = tsx;\ntsx.displayName = \"tsx\";\ntsx.aliases = [];\nfunction tsx(Prism) {\n    Prism.register(refractorJsx);\n    Prism.register(refractorTypescript);\n    (function(Prism) {\n        var typescript = Prism.util.clone(Prism.languages.typescript);\n        Prism.languages.tsx = Prism.languages.extend(\"jsx\", typescript) // doesn't work with TS because TS is too complex\n        ;\n        delete Prism.languages.tsx[\"parameter\"];\n        delete Prism.languages.tsx[\"literal-property\"] // This will prevent collisions between TSX tags and TS generic types.\n        ;\n        // Idea by https://github.com/karlhorky\n        // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n        var tag = Prism.languages.tsx.tag;\n        tag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + \"(?:\" + tag.pattern.source + \")\", tag.pattern.flags);\n        tag.lookbehind = true;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdHN4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsSUFBSUEsZUFBZUMsbUJBQU9BLENBQUM7QUFDM0IsSUFBSUMsc0JBQXNCRCxtQkFBT0EsQ0FBQztBQUNsQ0UsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUNoQixTQUFTRixJQUFJRyxLQUFLO0lBQ2hCQSxNQUFNQyxRQUFRLENBQUNUO0lBQ2ZRLE1BQU1DLFFBQVEsQ0FBQ1A7SUFDYixVQUFVTSxLQUFLO1FBQ2YsSUFBSUUsYUFBYUYsTUFBTUcsSUFBSSxDQUFDQyxLQUFLLENBQUNKLE1BQU1LLFNBQVMsQ0FBQ0gsVUFBVTtRQUM1REYsTUFBTUssU0FBUyxDQUFDUixHQUFHLEdBQUdHLE1BQU1LLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLE9BQU9KLFlBQVksaURBQWlEOztRQUNqSCxPQUFPRixNQUFNSyxTQUFTLENBQUNSLEdBQUcsQ0FBQyxZQUFZO1FBQ3ZDLE9BQU9HLE1BQU1LLFNBQVMsQ0FBQ1IsR0FBRyxDQUFDLG1CQUFtQixDQUFDLHNFQUFzRTs7UUFDckgsdUNBQXVDO1FBQ3ZDLGtGQUFrRjtRQUNsRixJQUFJVSxNQUFNUCxNQUFNSyxTQUFTLENBQUNSLEdBQUcsQ0FBQ1UsR0FBRztRQUNqQ0EsSUFBSUMsT0FBTyxHQUFHQyxPQUNaLHFCQUFxQkMsTUFBTSxHQUFHLFFBQVFILElBQUlDLE9BQU8sQ0FBQ0UsTUFBTSxHQUFHLEtBQzNESCxJQUFJQyxPQUFPLENBQUNHLEtBQUs7UUFFbkJKLElBQUlLLFVBQVUsR0FBRztJQUNuQixHQUFHWjtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3RzeC5qcz8xNmI4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xudmFyIHJlZnJhY3RvckpzeCA9IHJlcXVpcmUoJy4vanN4LmpzJylcbnZhciByZWZyYWN0b3JUeXBlc2NyaXB0ID0gcmVxdWlyZSgnLi90eXBlc2NyaXB0LmpzJylcbm1vZHVsZS5leHBvcnRzID0gdHN4XG50c3guZGlzcGxheU5hbWUgPSAndHN4J1xudHN4LmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gdHN4KFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvckpzeClcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yVHlwZXNjcmlwdClcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIgdHlwZXNjcmlwdCA9IFByaXNtLnV0aWwuY2xvbmUoUHJpc20ubGFuZ3VhZ2VzLnR5cGVzY3JpcHQpXG4gICAgUHJpc20ubGFuZ3VhZ2VzLnRzeCA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2pzeCcsIHR5cGVzY3JpcHQpIC8vIGRvZXNuJ3Qgd29yayB3aXRoIFRTIGJlY2F1c2UgVFMgaXMgdG9vIGNvbXBsZXhcbiAgICBkZWxldGUgUHJpc20ubGFuZ3VhZ2VzLnRzeFsncGFyYW1ldGVyJ11cbiAgICBkZWxldGUgUHJpc20ubGFuZ3VhZ2VzLnRzeFsnbGl0ZXJhbC1wcm9wZXJ0eSddIC8vIFRoaXMgd2lsbCBwcmV2ZW50IGNvbGxpc2lvbnMgYmV0d2VlbiBUU1ggdGFncyBhbmQgVFMgZ2VuZXJpYyB0eXBlcy5cbiAgICAvLyBJZGVhIGJ5IGh0dHBzOi8vZ2l0aHViLmNvbS9rYXJsaG9ya3lcbiAgICAvLyBEaXNjdXNzaW9uOiBodHRwczovL2dpdGh1Yi5jb20vUHJpc21KUy9wcmlzbS9pc3N1ZXMvMjU5NCNpc3N1ZWNvbW1lbnQtNzEwNjY2OTI4XG4gICAgdmFyIHRhZyA9IFByaXNtLmxhbmd1YWdlcy50c3gudGFnXG4gICAgdGFnLnBhdHRlcm4gPSBSZWdFeHAoXG4gICAgICAvKF58W15cXHckXXwoPz08XFwvKSkvLnNvdXJjZSArICcoPzonICsgdGFnLnBhdHRlcm4uc291cmNlICsgJyknLFxuICAgICAgdGFnLnBhdHRlcm4uZmxhZ3NcbiAgICApXG4gICAgdGFnLmxvb2tiZWhpbmQgPSB0cnVlXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3RvckpzeCIsInJlcXVpcmUiLCJyZWZyYWN0b3JUeXBlc2NyaXB0IiwibW9kdWxlIiwiZXhwb3J0cyIsInRzeCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJ0eXBlc2NyaXB0IiwidXRpbCIsImNsb25lIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwidGFnIiwicGF0dGVybiIsIlJlZ0V4cCIsInNvdXJjZSIsImZsYWdzIiwibG9va2JlaGluZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/tsx.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/tt2.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/tt2.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorMarkupTemplating = __webpack_require__(/*! ./markup-templating.js */ \"(ssr)/./node_modules/refractor/lang/markup-templating.js\");\nmodule.exports = tt2;\ntt2.displayName = \"tt2\";\ntt2.aliases = [];\nfunction tt2(Prism) {\n    Prism.register(refractorMarkupTemplating);\n    (function(Prism) {\n        Prism.languages.tt2 = Prism.languages.extend(\"clike\", {\n            comment: /#.*|\\[%#[\\s\\S]*?%\\]/,\n            keyword: /\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|SWITCH|TAGS|THROW|TRY|UNLESS|USE|WHILE|WRAPPER)\\b/,\n            punctuation: /[[\\]{},()]/\n        });\n        Prism.languages.insertBefore(\"tt2\", \"number\", {\n            operator: /=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|not|or)\\b/,\n            variable: {\n                pattern: /\\b[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*\\b/i\n            }\n        });\n        Prism.languages.insertBefore(\"tt2\", \"keyword\", {\n            delimiter: {\n                pattern: /^(?:\\[%|%%)-?|-?%\\]$/,\n                alias: \"punctuation\"\n            }\n        });\n        Prism.languages.insertBefore(\"tt2\", \"string\", {\n            \"single-quoted-string\": {\n                pattern: /'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,\n                greedy: true,\n                alias: \"string\"\n            },\n            \"double-quoted-string\": {\n                pattern: /\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,\n                greedy: true,\n                alias: \"string\",\n                inside: {\n                    variable: {\n                        pattern: /\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i\n                    }\n                }\n            }\n        }) // The different types of TT2 strings \"replace\" the C-like standard string\n        ;\n        delete Prism.languages.tt2.string;\n        Prism.hooks.add(\"before-tokenize\", function(env) {\n            var tt2Pattern = /\\[%[\\s\\S]+?%\\]/g;\n            Prism.languages[\"markup-templating\"].buildPlaceholders(env, \"tt2\", tt2Pattern);\n        });\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            Prism.languages[\"markup-templating\"].tokenizePlaceholders(env, \"tt2\");\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdHQyLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsSUFBSUEsNEJBQTRCQyxtQkFBT0EsQ0FBQztBQUN4Q0MsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUNoQixTQUFTRixJQUFJRyxLQUFLO0lBQ2hCQSxNQUFNQyxRQUFRLENBQUNSO0lBQ2IsVUFBVU8sS0FBSztRQUNmQSxNQUFNRSxTQUFTLENBQUNMLEdBQUcsR0FBR0csTUFBTUUsU0FBUyxDQUFDQyxNQUFNLENBQUMsU0FBUztZQUNwREMsU0FBUztZQUNUQyxTQUNFO1lBQ0ZDLGFBQWE7UUFDZjtRQUNBTixNQUFNRSxTQUFTLENBQUNLLFlBQVksQ0FBQyxPQUFPLFVBQVU7WUFDNUNDLFVBQVU7WUFDVkMsVUFBVTtnQkFDUkMsU0FBUztZQUNYO1FBQ0Y7UUFDQVYsTUFBTUUsU0FBUyxDQUFDSyxZQUFZLENBQUMsT0FBTyxXQUFXO1lBQzdDSSxXQUFXO2dCQUNURCxTQUFTO2dCQUNURSxPQUFPO1lBQ1Q7UUFDRjtRQUNBWixNQUFNRSxTQUFTLENBQUNLLFlBQVksQ0FBQyxPQUFPLFVBQVU7WUFDNUMsd0JBQXdCO2dCQUN0QkcsU0FBUztnQkFDVEcsUUFBUTtnQkFDUkQsT0FBTztZQUNUO1lBQ0Esd0JBQXdCO2dCQUN0QkYsU0FBUztnQkFDVEcsUUFBUTtnQkFDUkQsT0FBTztnQkFDUEUsUUFBUTtvQkFDTkwsVUFBVTt3QkFDUkMsU0FBUztvQkFDWDtnQkFDRjtZQUNGO1FBQ0YsR0FBRywwRUFBMEU7O1FBQzdFLE9BQU9WLE1BQU1FLFNBQVMsQ0FBQ0wsR0FBRyxDQUFDa0IsTUFBTTtRQUNqQ2YsTUFBTWdCLEtBQUssQ0FBQ0MsR0FBRyxDQUFDLG1CQUFtQixTQUFVQyxHQUFHO1lBQzlDLElBQUlDLGFBQWE7WUFDakJuQixNQUFNRSxTQUFTLENBQUMsb0JBQW9CLENBQUNrQixpQkFBaUIsQ0FDcERGLEtBQ0EsT0FDQUM7UUFFSjtRQUNBbkIsTUFBTWdCLEtBQUssQ0FBQ0MsR0FBRyxDQUFDLGtCQUFrQixTQUFVQyxHQUFHO1lBQzdDbEIsTUFBTUUsU0FBUyxDQUFDLG9CQUFvQixDQUFDbUIsb0JBQW9CLENBQUNILEtBQUs7UUFDakU7SUFDRixHQUFHbEI7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy90dDIuanM/MzNhZCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcbnZhciByZWZyYWN0b3JNYXJrdXBUZW1wbGF0aW5nID0gcmVxdWlyZSgnLi9tYXJrdXAtdGVtcGxhdGluZy5qcycpXG5tb2R1bGUuZXhwb3J0cyA9IHR0MlxudHQyLmRpc3BsYXlOYW1lID0gJ3R0MidcbnR0Mi5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIHR0MihQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JNYXJrdXBUZW1wbGF0aW5nKVxuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIFByaXNtLmxhbmd1YWdlcy50dDIgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdjbGlrZScsIHtcbiAgICAgIGNvbW1lbnQ6IC8jLip8XFxbJSNbXFxzXFxTXSo/JVxcXS8sXG4gICAgICBrZXl3b3JkOlxuICAgICAgICAvXFxiKD86QkxPQ0t8Q0FMTHxDQVNFfENBVENIfENMRUFSfERFQlVHfERFRkFVTFR8RUxTRXxFTFNJRnxFTkR8RklMVEVSfEZJTkFMfEZPUkVBQ0h8R0VUfElGfElOfElOQ0xVREV8SU5TRVJUfExBU1R8TUFDUk98TUVUQXxORVhUfFBFUkx8UFJPQ0VTU3xSQVdQRVJMfFJFVFVSTnxTRVR8U1RPUHxTV0lUQ0h8VEFHU3xUSFJPV3xUUll8VU5MRVNTfFVTRXxXSElMRXxXUkFQUEVSKVxcYi8sXG4gICAgICBwdW5jdHVhdGlvbjogL1tbXFxde30sKCldL1xuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgndHQyJywgJ251bWJlcicsIHtcbiAgICAgIG9wZXJhdG9yOiAvPVs+PV0/fCE9P3w8PT98Pj0/fCYmfFxcfFxcfD98XFxiKD86YW5kfG5vdHxvcilcXGIvLFxuICAgICAgdmFyaWFibGU6IHtcbiAgICAgICAgcGF0dGVybjogL1xcYlthLXpdXFx3Kig/OlxccypcXC5cXHMqKD86XFxkK3xcXCQ/W2Etel1cXHcqKSkqXFxiL2lcbiAgICAgIH1cbiAgICB9KVxuICAgIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ3R0MicsICdrZXl3b3JkJywge1xuICAgICAgZGVsaW1pdGVyOiB7XG4gICAgICAgIHBhdHRlcm46IC9eKD86XFxbJXwlJSktP3wtPyVcXF0kLyxcbiAgICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbidcbiAgICAgIH1cbiAgICB9KVxuICAgIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ3R0MicsICdzdHJpbmcnLCB7XG4gICAgICAnc2luZ2xlLXF1b3RlZC1zdHJpbmcnOiB7XG4gICAgICAgIHBhdHRlcm46IC8nW15cXFxcJ10qKD86XFxcXFtcXHNcXFNdW15cXFxcJ10qKSonLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBhbGlhczogJ3N0cmluZydcbiAgICAgIH0sXG4gICAgICAnZG91YmxlLXF1b3RlZC1zdHJpbmcnOiB7XG4gICAgICAgIHBhdHRlcm46IC9cIlteXFxcXFwiXSooPzpcXFxcW1xcc1xcU11bXlxcXFxcIl0qKSpcIi8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdzdHJpbmcnLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICB2YXJpYWJsZToge1xuICAgICAgICAgICAgcGF0dGVybjogL1xcJCg/OlthLXpdXFx3Kig/OlxcLig/OlxcZCt8XFwkP1thLXpdXFx3KikpKikvaVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pIC8vIFRoZSBkaWZmZXJlbnQgdHlwZXMgb2YgVFQyIHN0cmluZ3MgXCJyZXBsYWNlXCIgdGhlIEMtbGlrZSBzdGFuZGFyZCBzdHJpbmdcbiAgICBkZWxldGUgUHJpc20ubGFuZ3VhZ2VzLnR0Mi5zdHJpbmdcbiAgICBQcmlzbS5ob29rcy5hZGQoJ2JlZm9yZS10b2tlbml6ZScsIGZ1bmN0aW9uIChlbnYpIHtcbiAgICAgIHZhciB0dDJQYXR0ZXJuID0gL1xcWyVbXFxzXFxTXSs/JVxcXS9nXG4gICAgICBQcmlzbS5sYW5ndWFnZXNbJ21hcmt1cC10ZW1wbGF0aW5nJ10uYnVpbGRQbGFjZWhvbGRlcnMoXG4gICAgICAgIGVudixcbiAgICAgICAgJ3R0MicsXG4gICAgICAgIHR0MlBhdHRlcm5cbiAgICAgIClcbiAgICB9KVxuICAgIFByaXNtLmhvb2tzLmFkZCgnYWZ0ZXItdG9rZW5pemUnLCBmdW5jdGlvbiAoZW52KSB7XG4gICAgICBQcmlzbS5sYW5ndWFnZXNbJ21hcmt1cC10ZW1wbGF0aW5nJ10udG9rZW5pemVQbGFjZWhvbGRlcnMoZW52LCAndHQyJylcbiAgICB9KVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JNYXJrdXBUZW1wbGF0aW5nIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJ0dDIiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwiY29tbWVudCIsImtleXdvcmQiLCJwdW5jdHVhdGlvbiIsImluc2VydEJlZm9yZSIsIm9wZXJhdG9yIiwidmFyaWFibGUiLCJwYXR0ZXJuIiwiZGVsaW1pdGVyIiwiYWxpYXMiLCJncmVlZHkiLCJpbnNpZGUiLCJzdHJpbmciLCJob29rcyIsImFkZCIsImVudiIsInR0MlBhdHRlcm4iLCJidWlsZFBsYWNlaG9sZGVycyIsInRva2VuaXplUGxhY2Vob2xkZXJzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/tt2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/turtle.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/turtle.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = turtle;\nturtle.displayName = \"turtle\";\nturtle.aliases = [];\nfunction turtle(Prism) {\n    Prism.languages.turtle = {\n        comment: {\n            pattern: /#.*/,\n            greedy: true\n        },\n        \"multiline-string\": {\n            pattern: /\"\"\"(?:(?:\"\"?)?(?:[^\"\\\\]|\\\\.))*\"\"\"|'''(?:(?:''?)?(?:[^'\\\\]|\\\\.))*'''/,\n            greedy: true,\n            alias: \"string\",\n            inside: {\n                comment: /#.*/\n            }\n        },\n        string: {\n            pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"|'(?:[^\\\\'\\r\\n]|\\\\.)*'/,\n            greedy: true\n        },\n        url: {\n            pattern: /<(?:[^\\x00-\\x20<>\"{}|^`\\\\]|\\\\(?:u[\\da-fA-F]{4}|U[\\da-fA-F]{8}))*>/,\n            greedy: true,\n            inside: {\n                punctuation: /[<>]/\n            }\n        },\n        function: {\n            pattern: /(?:(?![-.\\d\\xB7])[-.\\w\\xB7\\xC0-\\uFFFD]+)?:(?:(?![-.])(?:[-.:\\w\\xC0-\\uFFFD]|%[\\da-f]{2}|\\\\.)+)?/i,\n            inside: {\n                \"local-name\": {\n                    pattern: /([^:]*:)[\\s\\S]+/,\n                    lookbehind: true\n                },\n                prefix: {\n                    pattern: /[\\s\\S]+/,\n                    inside: {\n                        punctuation: /:/\n                    }\n                }\n            }\n        },\n        number: /[+-]?\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n        punctuation: /[{}.,;()[\\]]|\\^\\^/,\n        boolean: /\\b(?:false|true)\\b/,\n        keyword: [\n            /(?:\\ba|@prefix|@base)\\b|=/,\n            /\\b(?:base|graph|prefix)\\b/i\n        ],\n        tag: {\n            pattern: /@[a-z]+(?:-[a-z\\d]+)*/i,\n            inside: {\n                punctuation: /@/\n            }\n        }\n    };\n    Prism.languages.trig = Prism.languages[\"turtle\"];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdHVydGxlLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLE9BQU9DLFdBQVcsR0FBRztBQUNyQkQsT0FBT0UsT0FBTyxHQUFHLEVBQUU7QUFDbkIsU0FBU0YsT0FBT0csS0FBSztJQUNuQkEsTUFBTUMsU0FBUyxDQUFDSixNQUFNLEdBQUc7UUFDdkJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQSxvQkFBb0I7WUFDbEJELFNBQ0U7WUFDRkMsUUFBUTtZQUNSQyxPQUFPO1lBQ1BDLFFBQVE7Z0JBQ05KLFNBQVM7WUFDWDtRQUNGO1FBQ0FLLFFBQVE7WUFDTkosU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUksS0FBSztZQUNITCxTQUNFO1lBQ0ZDLFFBQVE7WUFDUkUsUUFBUTtnQkFDTkcsYUFBYTtZQUNmO1FBQ0Y7UUFDQUMsVUFBVTtZQUNSUCxTQUNFO1lBQ0ZHLFFBQVE7Z0JBQ04sY0FBYztvQkFDWkgsU0FBUztvQkFDVFEsWUFBWTtnQkFDZDtnQkFDQUMsUUFBUTtvQkFDTlQsU0FBUztvQkFDVEcsUUFBUTt3QkFDTkcsYUFBYTtvQkFDZjtnQkFDRjtZQUNGO1FBQ0Y7UUFDQUksUUFBUTtRQUNSSixhQUFhO1FBQ2JLLFNBQVM7UUFDVEMsU0FBUztZQUFDO1lBQTZCO1NBQTZCO1FBQ3BFQyxLQUFLO1lBQ0hiLFNBQVM7WUFDVEcsUUFBUTtnQkFDTkcsYUFBYTtZQUNmO1FBQ0Y7SUFDRjtJQUNBVCxNQUFNQyxTQUFTLENBQUNnQixJQUFJLEdBQUdqQixNQUFNQyxTQUFTLENBQUMsU0FBUztBQUNsRCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy90dXJ0bGUuanM/NjU0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSB0dXJ0bGVcbnR1cnRsZS5kaXNwbGF5TmFtZSA9ICd0dXJ0bGUnXG50dXJ0bGUuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiB0dXJ0bGUoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLnR1cnRsZSA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvIy4qLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgJ211bHRpbGluZS1zdHJpbmcnOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvXCJcIlwiKD86KD86XCJcIj8pPyg/OlteXCJcXFxcXXxcXFxcLikpKlwiXCJcInwnJycoPzooPzonJz8pPyg/OlteJ1xcXFxdfFxcXFwuKSkqJycnLyxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGFsaWFzOiAnc3RyaW5nJyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBjb21tZW50OiAvIy4qL1xuICAgICAgfVxuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvXCIoPzpbXlxcXFxcIlxcclxcbl18XFxcXC4pKlwifCcoPzpbXlxcXFwnXFxyXFxuXXxcXFxcLikqJy8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHVybDoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLzwoPzpbXlxceDAwLVxceDIwPD5cInt9fF5gXFxcXF18XFxcXCg/OnVbXFxkYS1mQS1GXXs0fXxVW1xcZGEtZkEtRl17OH0pKSo+LyxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBwdW5jdHVhdGlvbjogL1s8Pl0vXG4gICAgICB9XG4gICAgfSxcbiAgICBmdW5jdGlvbjoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyg/Oig/IVstLlxcZFxceEI3XSlbLS5cXHdcXHhCN1xceEMwLVxcdUZGRkRdKyk/Oig/Oig/IVstLl0pKD86Wy0uOlxcd1xceEMwLVxcdUZGRkRdfCVbXFxkYS1mXXsyfXxcXFxcLikrKT8vaSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICAnbG9jYWwtbmFtZSc6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKFteOl0qOilbXFxzXFxTXSsvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgcHJlZml4OiB7XG4gICAgICAgICAgcGF0dGVybjogL1tcXHNcXFNdKy8sXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICBwdW5jdHVhdGlvbjogLzovXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBudW1iZXI6IC9bKy1dP1xcYlxcZCsoPzpcXC5cXGQqKT8oPzplWystXT9cXGQrKT8vaSxcbiAgICBwdW5jdHVhdGlvbjogL1t7fS4sOygpW1xcXV18XFxeXFxeLyxcbiAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvLFxuICAgIGtleXdvcmQ6IFsvKD86XFxiYXxAcHJlZml4fEBiYXNlKVxcYnw9LywgL1xcYig/OmJhc2V8Z3JhcGh8cHJlZml4KVxcYi9pXSxcbiAgICB0YWc6IHtcbiAgICAgIHBhdHRlcm46IC9AW2Etel0rKD86LVthLXpcXGRdKykqL2ksXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgcHVuY3R1YXRpb246IC9AL1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBQcmlzbS5sYW5ndWFnZXMudHJpZyA9IFByaXNtLmxhbmd1YWdlc1sndHVydGxlJ11cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwidHVydGxlIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImdyZWVkeSIsImFsaWFzIiwiaW5zaWRlIiwic3RyaW5nIiwidXJsIiwicHVuY3R1YXRpb24iLCJmdW5jdGlvbiIsImxvb2tiZWhpbmQiLCJwcmVmaXgiLCJudW1iZXIiLCJib29sZWFuIiwia2V5d29yZCIsInRhZyIsInRyaWciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/turtle.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/twig.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/twig.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorMarkupTemplating = __webpack_require__(/*! ./markup-templating.js */ \"(ssr)/./node_modules/refractor/lang/markup-templating.js\");\nmodule.exports = twig;\ntwig.displayName = \"twig\";\ntwig.aliases = [];\nfunction twig(Prism) {\n    Prism.register(refractorMarkupTemplating);\n    Prism.languages.twig = {\n        comment: /^\\{#[\\s\\S]*?#\\}$/,\n        \"tag-name\": {\n            pattern: /(^\\{%-?\\s*)\\w+/,\n            lookbehind: true,\n            alias: \"keyword\"\n        },\n        delimiter: {\n            pattern: /^\\{[{%]-?|-?[%}]\\}$/,\n            alias: \"punctuation\"\n        },\n        string: {\n            pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            inside: {\n                punctuation: /^['\"]|['\"]$/\n            }\n        },\n        keyword: /\\b(?:even|if|odd)\\b/,\n        boolean: /\\b(?:false|null|true)\\b/,\n        number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n        operator: [\n            {\n                pattern: /(\\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n                lookbehind: true\n            },\n            /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/\n        ],\n        punctuation: /[()\\[\\]{}:.,]/\n    };\n    Prism.hooks.add(\"before-tokenize\", function(env) {\n        if (env.language !== \"twig\") {\n            return;\n        }\n        var pattern = /\\{(?:#[\\s\\S]*?#|%[\\s\\S]*?%|\\{[\\s\\S]*?\\})\\}/g;\n        Prism.languages[\"markup-templating\"].buildPlaceholders(env, \"twig\", pattern);\n    });\n    Prism.hooks.add(\"after-tokenize\", function(env) {\n        Prism.languages[\"markup-templating\"].tokenizePlaceholders(env, \"twig\");\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdHdpZy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLElBQUlBLDRCQUE0QkMsbUJBQU9BLENBQUM7QUFDeENDLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFDakIsU0FBU0YsS0FBS0csS0FBSztJQUNqQkEsTUFBTUMsUUFBUSxDQUFDUjtJQUNmTyxNQUFNRSxTQUFTLENBQUNMLElBQUksR0FBRztRQUNyQk0sU0FBUztRQUNULFlBQVk7WUFDVkMsU0FBUztZQUNUQyxZQUFZO1lBQ1pDLE9BQU87UUFDVDtRQUNBQyxXQUFXO1lBQ1RILFNBQVM7WUFDVEUsT0FBTztRQUNUO1FBQ0FFLFFBQVE7WUFDTkosU0FBUztZQUNUSyxRQUFRO2dCQUNOQyxhQUFhO1lBQ2Y7UUFDRjtRQUNBQyxTQUFTO1FBQ1RDLFNBQVM7UUFDVEMsUUFBUTtRQUNSQyxVQUFVO1lBQ1I7Z0JBQ0VWLFNBQ0U7Z0JBQ0ZDLFlBQVk7WUFDZDtZQUNBO1NBQ0Q7UUFDREssYUFBYTtJQUNmO0lBQ0FWLE1BQU1lLEtBQUssQ0FBQ0MsR0FBRyxDQUFDLG1CQUFtQixTQUFVQyxHQUFHO1FBQzlDLElBQUlBLElBQUlDLFFBQVEsS0FBSyxRQUFRO1lBQzNCO1FBQ0Y7UUFDQSxJQUFJZCxVQUFVO1FBQ2RKLE1BQU1FLFNBQVMsQ0FBQyxvQkFBb0IsQ0FBQ2lCLGlCQUFpQixDQUFDRixLQUFLLFFBQVFiO0lBQ3RFO0lBQ0FKLE1BQU1lLEtBQUssQ0FBQ0MsR0FBRyxDQUFDLGtCQUFrQixTQUFVQyxHQUFHO1FBQzdDakIsTUFBTUUsU0FBUyxDQUFDLG9CQUFvQixDQUFDa0Isb0JBQW9CLENBQUNILEtBQUs7SUFDakU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy90d2lnLmpzP2NlNWYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG52YXIgcmVmcmFjdG9yTWFya3VwVGVtcGxhdGluZyA9IHJlcXVpcmUoJy4vbWFya3VwLXRlbXBsYXRpbmcuanMnKVxubW9kdWxlLmV4cG9ydHMgPSB0d2lnXG50d2lnLmRpc3BsYXlOYW1lID0gJ3R3aWcnXG50d2lnLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gdHdpZyhQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JNYXJrdXBUZW1wbGF0aW5nKVxuICBQcmlzbS5sYW5ndWFnZXMudHdpZyA9IHtcbiAgICBjb21tZW50OiAvXlxceyNbXFxzXFxTXSo/I1xcfSQvLFxuICAgICd0YWctbmFtZSc6IHtcbiAgICAgIHBhdHRlcm46IC8oXlxceyUtP1xccyopXFx3Ky8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgIH0sXG4gICAgZGVsaW1pdGVyOiB7XG4gICAgICBwYXR0ZXJuOiAvXlxce1t7JV0tP3wtP1slfV1cXH0kLyxcbiAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC8oXCJ8JykoPzpcXFxcLnwoPyFcXDEpW15cXFxcXFxyXFxuXSkqXFwxLyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBwdW5jdHVhdGlvbjogL15bJ1wiXXxbJ1wiXSQvXG4gICAgICB9XG4gICAgfSxcbiAgICBrZXl3b3JkOiAvXFxiKD86ZXZlbnxpZnxvZGQpXFxiLyxcbiAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8bnVsbHx0cnVlKVxcYi8sXG4gICAgbnVtYmVyOiAvXFxiMHhbXFxkQS1GYS1mXSt8KD86XFxiXFxkKyg/OlxcLlxcZCopP3xcXEJcXC5cXGQrKSg/OltFZV1bLStdP1xcZCspPy8sXG4gICAgb3BlcmF0b3I6IFtcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKFxccykoPzphbmR8Yi1hbmR8Yi1vcnxiLXhvcnxlbmRzIHdpdGh8aW58aXN8bWF0Y2hlc3xub3R8b3J8c2FtZSBhc3xzdGFydHMgd2l0aCkoPz1cXHMpLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIC9bPTw+XT0/fCE9fFxcKlxcKj98XFwvXFwvP3xcXD86P3xbLSt+JXxdL1xuICAgIF0sXG4gICAgcHVuY3R1YXRpb246IC9bKClcXFtcXF17fTouLF0vXG4gIH1cbiAgUHJpc20uaG9va3MuYWRkKCdiZWZvcmUtdG9rZW5pemUnLCBmdW5jdGlvbiAoZW52KSB7XG4gICAgaWYgKGVudi5sYW5ndWFnZSAhPT0gJ3R3aWcnKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgdmFyIHBhdHRlcm4gPSAvXFx7KD86I1tcXHNcXFNdKj8jfCVbXFxzXFxTXSo/JXxcXHtbXFxzXFxTXSo/XFx9KVxcfS9nXG4gICAgUHJpc20ubGFuZ3VhZ2VzWydtYXJrdXAtdGVtcGxhdGluZyddLmJ1aWxkUGxhY2Vob2xkZXJzKGVudiwgJ3R3aWcnLCBwYXR0ZXJuKVxuICB9KVxuICBQcmlzbS5ob29rcy5hZGQoJ2FmdGVyLXRva2VuaXplJywgZnVuY3Rpb24gKGVudikge1xuICAgIFByaXNtLmxhbmd1YWdlc1snbWFya3VwLXRlbXBsYXRpbmcnXS50b2tlbml6ZVBsYWNlaG9sZGVycyhlbnYsICd0d2lnJylcbiAgfSlcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JNYXJrdXBUZW1wbGF0aW5nIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJ0d2lnIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImFsaWFzIiwiZGVsaW1pdGVyIiwic3RyaW5nIiwiaW5zaWRlIiwicHVuY3R1YXRpb24iLCJrZXl3b3JkIiwiYm9vbGVhbiIsIm51bWJlciIsIm9wZXJhdG9yIiwiaG9va3MiLCJhZGQiLCJlbnYiLCJsYW5ndWFnZSIsImJ1aWxkUGxhY2Vob2xkZXJzIiwidG9rZW5pemVQbGFjZWhvbGRlcnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/twig.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/typescript.js":
/*!***************************************************!*\
  !*** ./node_modules/refractor/lang/typescript.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = typescript;\ntypescript.displayName = \"typescript\";\ntypescript.aliases = [\n    \"ts\"\n];\nfunction typescript(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.typescript = Prism.languages.extend(\"javascript\", {\n            \"class-name\": {\n                pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n                lookbehind: true,\n                greedy: true,\n                inside: null // see below\n            },\n            builtin: /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\n        }) // The keywords TypeScript adds to JavaScript\n        ;\n        Prism.languages.typescript.keyword.push(/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/, /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/, /\\btype\\b(?=\\s*(?:[\\{*]|$))/) // doesn't work with TS because TS is too complex\n        ;\n        delete Prism.languages.typescript[\"parameter\"];\n        delete Prism.languages.typescript[\"literal-property\"] // a version of typescript specifically for highlighting types\n        ;\n        var typeInside = Prism.languages.extend(\"typescript\", {});\n        delete typeInside[\"class-name\"];\n        Prism.languages.typescript[\"class-name\"].inside = typeInside;\n        Prism.languages.insertBefore(\"typescript\", \"function\", {\n            decorator: {\n                pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n                inside: {\n                    at: {\n                        pattern: /^@/,\n                        alias: \"operator\"\n                    },\n                    function: /^[\\s\\S]+/\n                }\n            },\n            \"generic-function\": {\n                // e.g. foo<T extends \"bar\" | \"baz\">( ...\n                pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n                greedy: true,\n                inside: {\n                    function: /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n                    generic: {\n                        pattern: /<[\\s\\S]+/,\n                        // everything after the first <\n                        alias: \"class-name\",\n                        inside: typeInside\n                    }\n                }\n            }\n        });\n        Prism.languages.ts = Prism.languages.typescript;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdHlwZXNjcmlwdC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxXQUFXQyxXQUFXLEdBQUc7QUFDekJELFdBQVdFLE9BQU8sR0FBRztJQUFDO0NBQUs7QUFDM0IsU0FBU0YsV0FBV0csS0FBSzs7SUFDckIsVUFBVUEsS0FBSztRQUNmQSxNQUFNQyxTQUFTLENBQUNKLFVBQVUsR0FBR0csTUFBTUMsU0FBUyxDQUFDQyxNQUFNLENBQUMsY0FBYztZQUNoRSxjQUFjO2dCQUNaQyxTQUNFO2dCQUNGQyxZQUFZO2dCQUNaQyxRQUFRO2dCQUNSQyxRQUFRLEtBQUssWUFBWTtZQUMzQjtZQUNBQyxTQUNFO1FBQ0osR0FBRyw2Q0FBNkM7O1FBQ2hEUCxNQUFNQyxTQUFTLENBQUNKLFVBQVUsQ0FBQ1csT0FBTyxDQUFDQyxJQUFJLENBQ3JDLHNEQUNBLDRGQUNBLDhCQUNBLGlEQUFpRDs7UUFDbkQsT0FBT1QsTUFBTUMsU0FBUyxDQUFDSixVQUFVLENBQUMsWUFBWTtRQUM5QyxPQUFPRyxNQUFNQyxTQUFTLENBQUNKLFVBQVUsQ0FBQyxtQkFBbUIsQ0FBQyw4REFBOEQ7O1FBQ3BILElBQUlhLGFBQWFWLE1BQU1DLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLGNBQWMsQ0FBQztRQUN2RCxPQUFPUSxVQUFVLENBQUMsYUFBYTtRQUMvQlYsTUFBTUMsU0FBUyxDQUFDSixVQUFVLENBQUMsYUFBYSxDQUFDUyxNQUFNLEdBQUdJO1FBQ2xEVixNQUFNQyxTQUFTLENBQUNVLFlBQVksQ0FBQyxjQUFjLFlBQVk7WUFDckRDLFdBQVc7Z0JBQ1RULFNBQVM7Z0JBQ1RHLFFBQVE7b0JBQ05PLElBQUk7d0JBQ0ZWLFNBQVM7d0JBQ1RXLE9BQU87b0JBQ1Q7b0JBQ0FDLFVBQVU7Z0JBQ1o7WUFDRjtZQUNBLG9CQUFvQjtnQkFDbEIseUNBQXlDO2dCQUN6Q1osU0FDRTtnQkFDRkUsUUFBUTtnQkFDUkMsUUFBUTtvQkFDTlMsVUFBVTtvQkFDVkMsU0FBUzt3QkFDUGIsU0FBUzt3QkFDVCwrQkFBK0I7d0JBQy9CVyxPQUFPO3dCQUNQUixRQUFRSTtvQkFDVjtnQkFDRjtZQUNGO1FBQ0Y7UUFDQVYsTUFBTUMsU0FBUyxDQUFDZ0IsRUFBRSxHQUFHakIsTUFBTUMsU0FBUyxDQUFDSixVQUFVO0lBQ2pELEdBQUdHO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdHlwZXNjcmlwdC5qcz81YzMyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHR5cGVzY3JpcHRcbnR5cGVzY3JpcHQuZGlzcGxheU5hbWUgPSAndHlwZXNjcmlwdCdcbnR5cGVzY3JpcHQuYWxpYXNlcyA9IFsndHMnXVxuZnVuY3Rpb24gdHlwZXNjcmlwdChQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIFByaXNtLmxhbmd1YWdlcy50eXBlc2NyaXB0ID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnamF2YXNjcmlwdCcsIHtcbiAgICAgICdjbGFzcy1uYW1lJzoge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXFxiKD86Y2xhc3N8ZXh0ZW5kc3xpbXBsZW1lbnRzfGluc3RhbmNlb2Z8aW50ZXJmYWNlfG5ld3x0eXBlKVxccyspKD8ha2V5b2ZcXGIpKD8hXFxzKVtfJGEtekEtWlxceEEwLVxcdUZGRkZdKD86KD8hXFxzKVskXFx3XFx4QTAtXFx1RkZGRl0pKig/Olxccyo8KD86W148Pl18PCg/OltePD5dfDxbXjw+XSo+KSo+KSo+KT8vLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGluc2lkZTogbnVsbCAvLyBzZWUgYmVsb3dcbiAgICAgIH0sXG4gICAgICBidWlsdGluOlxuICAgICAgICAvXFxiKD86QXJyYXl8RnVuY3Rpb258UHJvbWlzZXxhbnl8Ym9vbGVhbnxjb25zb2xlfG5ldmVyfG51bWJlcnxzdHJpbmd8c3ltYm9sfHVua25vd24pXFxiL1xuICAgIH0pIC8vIFRoZSBrZXl3b3JkcyBUeXBlU2NyaXB0IGFkZHMgdG8gSmF2YVNjcmlwdFxuICAgIFByaXNtLmxhbmd1YWdlcy50eXBlc2NyaXB0LmtleXdvcmQucHVzaChcbiAgICAgIC9cXGIoPzphYnN0cmFjdHxkZWNsYXJlfGlzfGtleW9mfHJlYWRvbmx5fHJlcXVpcmUpXFxiLywgLy8ga2V5d29yZHMgdGhhdCBoYXZlIHRvIGJlIGZvbGxvd2VkIGJ5IGFuIGlkZW50aWZpZXJcbiAgICAgIC9cXGIoPzphc3NlcnRzfGluZmVyfGludGVyZmFjZXxtb2R1bGV8bmFtZXNwYWNlfHR5cGUpXFxiKD89XFxzKig/Olt7XyRhLXpBLVpcXHhBMC1cXHVGRkZGXXwkKSkvLCAvLyBUaGlzIGlzIGZvciBgaW1wb3J0IHR5cGUgKiwge31gXG4gICAgICAvXFxidHlwZVxcYig/PVxccyooPzpbXFx7Kl18JCkpL1xuICAgICkgLy8gZG9lc24ndCB3b3JrIHdpdGggVFMgYmVjYXVzZSBUUyBpcyB0b28gY29tcGxleFxuICAgIGRlbGV0ZSBQcmlzbS5sYW5ndWFnZXMudHlwZXNjcmlwdFsncGFyYW1ldGVyJ11cbiAgICBkZWxldGUgUHJpc20ubGFuZ3VhZ2VzLnR5cGVzY3JpcHRbJ2xpdGVyYWwtcHJvcGVydHknXSAvLyBhIHZlcnNpb24gb2YgdHlwZXNjcmlwdCBzcGVjaWZpY2FsbHkgZm9yIGhpZ2hsaWdodGluZyB0eXBlc1xuICAgIHZhciB0eXBlSW5zaWRlID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgndHlwZXNjcmlwdCcsIHt9KVxuICAgIGRlbGV0ZSB0eXBlSW5zaWRlWydjbGFzcy1uYW1lJ11cbiAgICBQcmlzbS5sYW5ndWFnZXMudHlwZXNjcmlwdFsnY2xhc3MtbmFtZSddLmluc2lkZSA9IHR5cGVJbnNpZGVcbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCd0eXBlc2NyaXB0JywgJ2Z1bmN0aW9uJywge1xuICAgICAgZGVjb3JhdG9yOiB7XG4gICAgICAgIHBhdHRlcm46IC9AWyRcXHdcXHhBMC1cXHVGRkZGXSsvLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBhdDoge1xuICAgICAgICAgICAgcGF0dGVybjogL15ALyxcbiAgICAgICAgICAgIGFsaWFzOiAnb3BlcmF0b3InXG4gICAgICAgICAgfSxcbiAgICAgICAgICBmdW5jdGlvbjogL15bXFxzXFxTXSsvXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICAnZ2VuZXJpYy1mdW5jdGlvbic6IHtcbiAgICAgICAgLy8gZS5nLiBmb288VCBleHRlbmRzIFwiYmFyXCIgfCBcImJhelwiPiggLi4uXG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyM/KD8hXFxzKVtfJGEtekEtWlxceEEwLVxcdUZGRkZdKD86KD8hXFxzKVskXFx3XFx4QTAtXFx1RkZGRl0pKlxccyo8KD86W148Pl18PCg/OltePD5dfDxbXjw+XSo+KSo+KSo+KD89XFxzKlxcKCkvLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIGZ1bmN0aW9uOiAvXiM/KD8hXFxzKVtfJGEtekEtWlxceEEwLVxcdUZGRkZdKD86KD8hXFxzKVskXFx3XFx4QTAtXFx1RkZGRl0pKi8sXG4gICAgICAgICAgZ2VuZXJpYzoge1xuICAgICAgICAgICAgcGF0dGVybjogLzxbXFxzXFxTXSsvLFxuICAgICAgICAgICAgLy8gZXZlcnl0aGluZyBhZnRlciB0aGUgZmlyc3QgPFxuICAgICAgICAgICAgYWxpYXM6ICdjbGFzcy1uYW1lJyxcbiAgICAgICAgICAgIGluc2lkZTogdHlwZUluc2lkZVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLnRzID0gUHJpc20ubGFuZ3VhZ2VzLnR5cGVzY3JpcHRcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInR5cGVzY3JpcHQiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImV4dGVuZCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiZ3JlZWR5IiwiaW5zaWRlIiwiYnVpbHRpbiIsImtleXdvcmQiLCJwdXNoIiwidHlwZUluc2lkZSIsImluc2VydEJlZm9yZSIsImRlY29yYXRvciIsImF0IiwiYWxpYXMiLCJmdW5jdGlvbiIsImdlbmVyaWMiLCJ0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/typescript.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/typoscript.js":
/*!***************************************************!*\
  !*** ./node_modules/refractor/lang/typoscript.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = typoscript;\ntyposcript.displayName = \"typoscript\";\ntyposcript.aliases = [\n    \"tsconfig\"\n];\nfunction typoscript(Prism) {\n    ;\n    (function(Prism) {\n        var keywords = /\\b(?:ACT|ACTIFSUB|CARRAY|CASE|CLEARGIF|COA|COA_INT|CONSTANTS|CONTENT|CUR|EDITPANEL|EFFECT|EXT|FILE|FLUIDTEMPLATE|FORM|FRAME|FRAMESET|GIFBUILDER|GMENU|GMENU_FOLDOUT|GMENU_LAYERS|GP|HMENU|HRULER|HTML|IENV|IFSUB|IMAGE|IMGMENU|IMGMENUITEM|IMGTEXT|IMG_RESOURCE|INCLUDE_TYPOSCRIPT|JSMENU|JSMENUITEM|LLL|LOAD_REGISTER|NO|PAGE|RECORDS|RESTORE_REGISTER|TEMPLATE|TEXT|TMENU|TMENUITEM|TMENU_LAYERS|USER|USER_INT|_GIFBUILDER|global|globalString|globalVar)\\b/;\n        Prism.languages.typoscript = {\n            comment: [\n                {\n                    // multiline comments /* */\n                    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n                    lookbehind: true\n                },\n                {\n                    // double-slash comments - ignored when backslashes or colon is found in front\n                    // also ignored whenever directly after an equal-sign, because it would probably be an url without protocol\n                    pattern: /(^|[^\\\\:= \\t]|(?:^|[^= \\t])[ \\t]+)\\/\\/.*/,\n                    lookbehind: true,\n                    greedy: true\n                },\n                {\n                    // hash comments - ignored when leading quote is found for hex colors in strings\n                    pattern: /(^|[^\"'])#.*/,\n                    lookbehind: true,\n                    greedy: true\n                }\n            ],\n            function: [\n                {\n                    // old include style\n                    pattern: /<INCLUDE_TYPOSCRIPT:\\s*source\\s*=\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*>/,\n                    inside: {\n                        string: {\n                            pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n                            inside: {\n                                keyword: keywords\n                            }\n                        },\n                        keyword: {\n                            pattern: /INCLUDE_TYPOSCRIPT/\n                        }\n                    }\n                },\n                {\n                    // new include style\n                    pattern: /@import\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')/,\n                    inside: {\n                        string: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/\n                    }\n                }\n            ],\n            string: {\n                pattern: /^([^=]*=[< ]?)(?:(?!\\]\\n).)*/,\n                lookbehind: true,\n                inside: {\n                    function: /\\{\\$.*\\}/,\n                    // constants include\n                    keyword: keywords,\n                    number: /^\\d+$/,\n                    punctuation: /[,|:]/\n                }\n            },\n            keyword: keywords,\n            number: {\n                // special highlighting for indexes of arrays in tags\n                pattern: /\\b\\d+\\s*[.{=]/,\n                inside: {\n                    operator: /[.{=]/\n                }\n            },\n            tag: {\n                pattern: /\\.?[-\\w\\\\]+\\.?/,\n                inside: {\n                    punctuation: /\\./\n                }\n            },\n            punctuation: /[{}[\\];(),.:|]/,\n            operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/\n        };\n        Prism.languages.tsconfig = Prism.languages.typoscript;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdHlwb3NjcmlwdC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxXQUFXQyxXQUFXLEdBQUc7QUFDekJELFdBQVdFLE9BQU8sR0FBRztJQUFDO0NBQVc7QUFDakMsU0FBU0YsV0FBV0csS0FBSzs7SUFDckIsVUFBVUEsS0FBSztRQUNmLElBQUlDLFdBQ0Y7UUFDRkQsTUFBTUUsU0FBUyxDQUFDTCxVQUFVLEdBQUc7WUFDM0JNLFNBQVM7Z0JBQ1A7b0JBQ0UsMkJBQTJCO29CQUMzQkMsU0FBUztvQkFDVEMsWUFBWTtnQkFDZDtnQkFDQTtvQkFDRSw4RUFBOEU7b0JBQzlFLDJHQUEyRztvQkFDM0dELFNBQVM7b0JBQ1RDLFlBQVk7b0JBQ1pDLFFBQVE7Z0JBQ1Y7Z0JBQ0E7b0JBQ0UsZ0ZBQWdGO29CQUNoRkYsU0FBUztvQkFDVEMsWUFBWTtvQkFDWkMsUUFBUTtnQkFDVjthQUNEO1lBQ0RDLFVBQVU7Z0JBQ1I7b0JBQ0Usb0JBQW9CO29CQUNwQkgsU0FDRTtvQkFDRkksUUFBUTt3QkFDTkMsUUFBUTs0QkFDTkwsU0FBUzs0QkFDVEksUUFBUTtnQ0FDTkUsU0FBU1Q7NEJBQ1g7d0JBQ0Y7d0JBQ0FTLFNBQVM7NEJBQ1BOLFNBQVM7d0JBQ1g7b0JBQ0Y7Z0JBQ0Y7Z0JBQ0E7b0JBQ0Usb0JBQW9CO29CQUNwQkEsU0FBUztvQkFDVEksUUFBUTt3QkFDTkMsUUFBUTtvQkFDVjtnQkFDRjthQUNEO1lBQ0RBLFFBQVE7Z0JBQ05MLFNBQVM7Z0JBQ1RDLFlBQVk7Z0JBQ1pHLFFBQVE7b0JBQ05ELFVBQVU7b0JBQ1Ysb0JBQW9CO29CQUNwQkcsU0FBU1Q7b0JBQ1RVLFFBQVE7b0JBQ1JDLGFBQWE7Z0JBQ2Y7WUFDRjtZQUNBRixTQUFTVDtZQUNUVSxRQUFRO2dCQUNOLHFEQUFxRDtnQkFDckRQLFNBQVM7Z0JBQ1RJLFFBQVE7b0JBQ05LLFVBQVU7Z0JBQ1o7WUFDRjtZQUNBQyxLQUFLO2dCQUNIVixTQUFTO2dCQUNUSSxRQUFRO29CQUNOSSxhQUFhO2dCQUNmO1lBQ0Y7WUFDQUEsYUFBYTtZQUNiQyxVQUFVO1FBQ1o7UUFDQWIsTUFBTUUsU0FBUyxDQUFDYSxRQUFRLEdBQUdmLE1BQU1FLFNBQVMsQ0FBQ0wsVUFBVTtJQUN2RCxHQUFHRztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3R5cG9zY3JpcHQuanM/MjljYyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSB0eXBvc2NyaXB0XG50eXBvc2NyaXB0LmRpc3BsYXlOYW1lID0gJ3R5cG9zY3JpcHQnXG50eXBvc2NyaXB0LmFsaWFzZXMgPSBbJ3RzY29uZmlnJ11cbmZ1bmN0aW9uIHR5cG9zY3JpcHQoUHJpc20pIHtcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIga2V5d29yZHMgPVxuICAgICAgL1xcYig/OkFDVHxBQ1RJRlNVQnxDQVJSQVl8Q0FTRXxDTEVBUkdJRnxDT0F8Q09BX0lOVHxDT05TVEFOVFN8Q09OVEVOVHxDVVJ8RURJVFBBTkVMfEVGRkVDVHxFWFR8RklMRXxGTFVJRFRFTVBMQVRFfEZPUk18RlJBTUV8RlJBTUVTRVR8R0lGQlVJTERFUnxHTUVOVXxHTUVOVV9GT0xET1VUfEdNRU5VX0xBWUVSU3xHUHxITUVOVXxIUlVMRVJ8SFRNTHxJRU5WfElGU1VCfElNQUdFfElNR01FTlV8SU1HTUVOVUlURU18SU1HVEVYVHxJTUdfUkVTT1VSQ0V8SU5DTFVERV9UWVBPU0NSSVBUfEpTTUVOVXxKU01FTlVJVEVNfExMTHxMT0FEX1JFR0lTVEVSfE5PfFBBR0V8UkVDT1JEU3xSRVNUT1JFX1JFR0lTVEVSfFRFTVBMQVRFfFRFWFR8VE1FTlV8VE1FTlVJVEVNfFRNRU5VX0xBWUVSU3xVU0VSfFVTRVJfSU5UfF9HSUZCVUlMREVSfGdsb2JhbHxnbG9iYWxTdHJpbmd8Z2xvYmFsVmFyKVxcYi9cbiAgICBQcmlzbS5sYW5ndWFnZXMudHlwb3NjcmlwdCA9IHtcbiAgICAgIGNvbW1lbnQ6IFtcbiAgICAgICAge1xuICAgICAgICAgIC8vIG11bHRpbGluZSBjb21tZW50cyAvKiAqL1xuICAgICAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKVxcL1xcKltcXHNcXFNdKj8oPzpcXCpcXC98JCkvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIC8vIGRvdWJsZS1zbGFzaCBjb21tZW50cyAtIGlnbm9yZWQgd2hlbiBiYWNrc2xhc2hlcyBvciBjb2xvbiBpcyBmb3VuZCBpbiBmcm9udFxuICAgICAgICAgIC8vIGFsc28gaWdub3JlZCB3aGVuZXZlciBkaXJlY3RseSBhZnRlciBhbiBlcXVhbC1zaWduLCBiZWNhdXNlIGl0IHdvdWxkIHByb2JhYmx5IGJlIGFuIHVybCB3aXRob3V0IHByb3RvY29sXG4gICAgICAgICAgcGF0dGVybjogLyhefFteXFxcXDo9IFxcdF18KD86XnxbXj0gXFx0XSlbIFxcdF0rKVxcL1xcLy4qLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgLy8gaGFzaCBjb21tZW50cyAtIGlnbm9yZWQgd2hlbiBsZWFkaW5nIHF1b3RlIGlzIGZvdW5kIGZvciBoZXggY29sb3JzIGluIHN0cmluZ3NcbiAgICAgICAgICBwYXR0ZXJuOiAvKF58W15cIiddKSMuKi8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIGZ1bmN0aW9uOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAvLyBvbGQgaW5jbHVkZSBzdHlsZVxuICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAvPElOQ0xVREVfVFlQT1NDUklQVDpcXHMqc291cmNlXFxzKj1cXHMqKD86XCJbXlwiXFxyXFxuXSpcInwnW14nXFxyXFxuXSonKVxccyo+LyxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIHN0cmluZzoge1xuICAgICAgICAgICAgICBwYXR0ZXJuOiAvXCJbXlwiXFxyXFxuXSpcInwnW14nXFxyXFxuXSonLyxcbiAgICAgICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICAgICAga2V5d29yZDoga2V5d29yZHNcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGtleXdvcmQ6IHtcbiAgICAgICAgICAgICAgcGF0dGVybjogL0lOQ0xVREVfVFlQT1NDUklQVC9cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAvLyBuZXcgaW5jbHVkZSBzdHlsZVxuICAgICAgICAgIHBhdHRlcm46IC9AaW1wb3J0XFxzKig/OlwiW15cIlxcclxcbl0qXCJ8J1teJ1xcclxcbl0qJykvLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgc3RyaW5nOiAvXCJbXlwiXFxyXFxuXSpcInwnW14nXFxyXFxuXSonL1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIHN0cmluZzoge1xuICAgICAgICBwYXR0ZXJuOiAvXihbXj1dKj1bPCBdPykoPzooPyFcXF1cXG4pLikqLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgZnVuY3Rpb246IC9cXHtcXCQuKlxcfS8sXG4gICAgICAgICAgLy8gY29uc3RhbnRzIGluY2x1ZGVcbiAgICAgICAgICBrZXl3b3JkOiBrZXl3b3JkcyxcbiAgICAgICAgICBudW1iZXI6IC9eXFxkKyQvLFxuICAgICAgICAgIHB1bmN0dWF0aW9uOiAvWyx8Ol0vXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBrZXl3b3JkOiBrZXl3b3JkcyxcbiAgICAgIG51bWJlcjoge1xuICAgICAgICAvLyBzcGVjaWFsIGhpZ2hsaWdodGluZyBmb3IgaW5kZXhlcyBvZiBhcnJheXMgaW4gdGFnc1xuICAgICAgICBwYXR0ZXJuOiAvXFxiXFxkK1xccypbLns9XS8sXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIG9wZXJhdG9yOiAvWy57PV0vXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB0YWc6IHtcbiAgICAgICAgcGF0dGVybjogL1xcLj9bLVxcd1xcXFxdK1xcLj8vLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjogL1xcLi9cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHB1bmN0dWF0aW9uOiAvW3t9W1xcXTsoKSwuOnxdLyxcbiAgICAgIG9wZXJhdG9yOiAvWzw+XT0/fFshPV09Pz0/fC0tP3xcXCtcXCs/fCYmP3xcXHxcXHw/fFs/Ki9+XiVdL1xuICAgIH1cbiAgICBQcmlzbS5sYW5ndWFnZXMudHNjb25maWcgPSBQcmlzbS5sYW5ndWFnZXMudHlwb3NjcmlwdFxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwidHlwb3NjcmlwdCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwia2V5d29yZHMiLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJncmVlZHkiLCJmdW5jdGlvbiIsImluc2lkZSIsInN0cmluZyIsImtleXdvcmQiLCJudW1iZXIiLCJwdW5jdHVhdGlvbiIsIm9wZXJhdG9yIiwidGFnIiwidHNjb25maWciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/typoscript.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/unrealscript.js":
/*!*****************************************************!*\
  !*** ./node_modules/refractor/lang/unrealscript.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = unrealscript;\nunrealscript.displayName = \"unrealscript\";\nunrealscript.aliases = [\n    \"uc\",\n    \"uscript\"\n];\nfunction unrealscript(Prism) {\n    Prism.languages.unrealscript = {\n        comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        string: {\n            pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true\n        },\n        category: {\n            pattern: /(\\b(?:(?:autoexpand|hide|show)categories|var)\\s*\\()[^()]+(?=\\))/,\n            lookbehind: true,\n            greedy: true,\n            alias: \"property\"\n        },\n        metadata: {\n            pattern: /(\\w\\s*)<\\s*\\w+\\s*=[^<>|=\\r\\n]+(?:\\|\\s*\\w+\\s*=[^<>|=\\r\\n]+)*>/,\n            lookbehind: true,\n            greedy: true,\n            inside: {\n                property: /\\b\\w+(?=\\s*=)/,\n                operator: /=/,\n                punctuation: /[<>|]/\n            }\n        },\n        macro: {\n            pattern: /`\\w+/,\n            alias: \"property\"\n        },\n        \"class-name\": {\n            pattern: /(\\b(?:class|enum|extends|interface|state(?:\\(\\))?|struct|within)\\s+)\\w+/,\n            lookbehind: true\n        },\n        keyword: /\\b(?:abstract|actor|array|auto|autoexpandcategories|bool|break|byte|case|class|classgroup|client|coerce|collapsecategories|config|const|continue|default|defaultproperties|delegate|dependson|deprecated|do|dontcollapsecategories|editconst|editinlinenew|else|enum|event|exec|export|extends|final|float|for|forcescriptorder|foreach|function|goto|guid|hidecategories|hidedropdown|if|ignores|implements|inherits|input|int|interface|iterator|latent|local|material|name|native|nativereplication|noexport|nontransient|noteditinlinenew|notplaceable|operator|optional|out|pawn|perobjectconfig|perobjectlocalized|placeable|postoperator|preoperator|private|protected|reliable|replication|return|server|showcategories|simulated|singular|state|static|string|struct|structdefault|structdefaultproperties|switch|texture|transient|travel|unreliable|until|var|vector|while|within)\\b/,\n        function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        boolean: /\\b(?:false|true)\\b/,\n        number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n        // https://docs.unrealengine.com/udk/Three/UnrealScriptExpressions.html\n        operator: />>|<<|--|\\+\\+|\\*\\*|[-+*/~!=<>$@]=?|&&?|\\|\\|?|\\^\\^?|[?:%]|\\b(?:ClockwiseFrom|Cross|Dot)\\b/,\n        punctuation: /[()[\\]{};,.]/\n    };\n    Prism.languages.uc = Prism.languages.uscript = Prism.languages.unrealscript;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdW5yZWFsc2NyaXB0LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLGFBQWFDLFdBQVcsR0FBRztBQUMzQkQsYUFBYUUsT0FBTyxHQUFHO0lBQUM7SUFBTTtDQUFVO0FBQ3hDLFNBQVNGLGFBQWFHLEtBQUs7SUFDekJBLE1BQU1DLFNBQVMsQ0FBQ0osWUFBWSxHQUFHO1FBQzdCSyxTQUFTO1FBQ1RDLFFBQVE7WUFDTkMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsVUFBVTtZQUNSRixTQUNFO1lBQ0ZHLFlBQVk7WUFDWkYsUUFBUTtZQUNSRyxPQUFPO1FBQ1Q7UUFDQUMsVUFBVTtZQUNSTCxTQUFTO1lBQ1RHLFlBQVk7WUFDWkYsUUFBUTtZQUNSSyxRQUFRO2dCQUNOQyxVQUFVO2dCQUNWQyxVQUFVO2dCQUNWQyxhQUFhO1lBQ2Y7UUFDRjtRQUNBQyxPQUFPO1lBQ0xWLFNBQVM7WUFDVEksT0FBTztRQUNUO1FBQ0EsY0FBYztZQUNaSixTQUNFO1lBQ0ZHLFlBQVk7UUFDZDtRQUNBUSxTQUNFO1FBQ0ZDLFVBQVU7UUFDVkMsU0FBUztRQUNUQyxRQUFRO1FBQ1IsdUVBQXVFO1FBQ3ZFTixVQUNFO1FBQ0ZDLGFBQWE7SUFDZjtJQUNBYixNQUFNQyxTQUFTLENBQUNrQixFQUFFLEdBQUduQixNQUFNQyxTQUFTLENBQUNtQixPQUFPLEdBQUdwQixNQUFNQyxTQUFTLENBQUNKLFlBQVk7QUFDN0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdW5yZWFsc2NyaXB0LmpzP2NlYTIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gdW5yZWFsc2NyaXB0XG51bnJlYWxzY3JpcHQuZGlzcGxheU5hbWUgPSAndW5yZWFsc2NyaXB0J1xudW5yZWFsc2NyaXB0LmFsaWFzZXMgPSBbJ3VjJywgJ3VzY3JpcHQnXVxuZnVuY3Rpb24gdW5yZWFsc2NyaXB0KFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy51bnJlYWxzY3JpcHQgPSB7XG4gICAgY29tbWVudDogL1xcL1xcLy4qfFxcL1xcKltcXHNcXFNdKj9cXCpcXC8vLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyhbXCInXSkoPzpcXFxcKD86XFxyXFxufFtcXHNcXFNdKXwoPyFcXDEpW15cXFxcXFxyXFxuXSkqXFwxLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgY2F0ZWdvcnk6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXFxiKD86KD86YXV0b2V4cGFuZHxoaWRlfHNob3cpY2F0ZWdvcmllc3x2YXIpXFxzKlxcKClbXigpXSsoPz1cXCkpLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBhbGlhczogJ3Byb3BlcnR5J1xuICAgIH0sXG4gICAgbWV0YWRhdGE6IHtcbiAgICAgIHBhdHRlcm46IC8oXFx3XFxzKik8XFxzKlxcdytcXHMqPVtePD58PVxcclxcbl0rKD86XFx8XFxzKlxcdytcXHMqPVtePD58PVxcclxcbl0rKSo+LyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgcHJvcGVydHk6IC9cXGJcXHcrKD89XFxzKj0pLyxcbiAgICAgICAgb3BlcmF0b3I6IC89LyxcbiAgICAgICAgcHVuY3R1YXRpb246IC9bPD58XS9cbiAgICAgIH1cbiAgICB9LFxuICAgIG1hY3JvOiB7XG4gICAgICBwYXR0ZXJuOiAvYFxcdysvLFxuICAgICAgYWxpYXM6ICdwcm9wZXJ0eSdcbiAgICB9LFxuICAgICdjbGFzcy1uYW1lJzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhcXGIoPzpjbGFzc3xlbnVtfGV4dGVuZHN8aW50ZXJmYWNlfHN0YXRlKD86XFwoXFwpKT98c3RydWN0fHdpdGhpbilcXHMrKVxcdysvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzphYnN0cmFjdHxhY3RvcnxhcnJheXxhdXRvfGF1dG9leHBhbmRjYXRlZ29yaWVzfGJvb2x8YnJlYWt8Ynl0ZXxjYXNlfGNsYXNzfGNsYXNzZ3JvdXB8Y2xpZW50fGNvZXJjZXxjb2xsYXBzZWNhdGVnb3JpZXN8Y29uZmlnfGNvbnN0fGNvbnRpbnVlfGRlZmF1bHR8ZGVmYXVsdHByb3BlcnRpZXN8ZGVsZWdhdGV8ZGVwZW5kc29ufGRlcHJlY2F0ZWR8ZG98ZG9udGNvbGxhcHNlY2F0ZWdvcmllc3xlZGl0Y29uc3R8ZWRpdGlubGluZW5ld3xlbHNlfGVudW18ZXZlbnR8ZXhlY3xleHBvcnR8ZXh0ZW5kc3xmaW5hbHxmbG9hdHxmb3J8Zm9yY2VzY3JpcHRvcmRlcnxmb3JlYWNofGZ1bmN0aW9ufGdvdG98Z3VpZHxoaWRlY2F0ZWdvcmllc3xoaWRlZHJvcGRvd258aWZ8aWdub3Jlc3xpbXBsZW1lbnRzfGluaGVyaXRzfGlucHV0fGludHxpbnRlcmZhY2V8aXRlcmF0b3J8bGF0ZW50fGxvY2FsfG1hdGVyaWFsfG5hbWV8bmF0aXZlfG5hdGl2ZXJlcGxpY2F0aW9ufG5vZXhwb3J0fG5vbnRyYW5zaWVudHxub3RlZGl0aW5saW5lbmV3fG5vdHBsYWNlYWJsZXxvcGVyYXRvcnxvcHRpb25hbHxvdXR8cGF3bnxwZXJvYmplY3Rjb25maWd8cGVyb2JqZWN0bG9jYWxpemVkfHBsYWNlYWJsZXxwb3N0b3BlcmF0b3J8cHJlb3BlcmF0b3J8cHJpdmF0ZXxwcm90ZWN0ZWR8cmVsaWFibGV8cmVwbGljYXRpb258cmV0dXJufHNlcnZlcnxzaG93Y2F0ZWdvcmllc3xzaW11bGF0ZWR8c2luZ3VsYXJ8c3RhdGV8c3RhdGljfHN0cmluZ3xzdHJ1Y3R8c3RydWN0ZGVmYXVsdHxzdHJ1Y3RkZWZhdWx0cHJvcGVydGllc3xzd2l0Y2h8dGV4dHVyZXx0cmFuc2llbnR8dHJhdmVsfHVucmVsaWFibGV8dW50aWx8dmFyfHZlY3Rvcnx3aGlsZXx3aXRoaW4pXFxiLyxcbiAgICBmdW5jdGlvbjogL1xcYlthLXpfXVxcdyooPz1cXHMqXFwoKS9pLFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAgbnVtYmVyOiAvXFxiMHhbXFxkYS1mXStcXGJ8KD86XFxiXFxkKyg/OlxcLlxcZCopP3xcXEJcXC5cXGQrKSg/OmVbKy1dP1xcZCspPy9pLFxuICAgIC8vIGh0dHBzOi8vZG9jcy51bnJlYWxlbmdpbmUuY29tL3Vkay9UaHJlZS9VbnJlYWxTY3JpcHRFeHByZXNzaW9ucy5odG1sXG4gICAgb3BlcmF0b3I6XG4gICAgICAvPj58PDx8LS18XFwrXFwrfFxcKlxcKnxbLSsqL34hPTw+JEBdPT98JiY/fFxcfFxcfD98XFxeXFxeP3xbPzolXXxcXGIoPzpDbG9ja3dpc2VGcm9tfENyb3NzfERvdClcXGIvLFxuICAgIHB1bmN0dWF0aW9uOiAvWygpW1xcXXt9OywuXS9cbiAgfVxuICBQcmlzbS5sYW5ndWFnZXMudWMgPSBQcmlzbS5sYW5ndWFnZXMudXNjcmlwdCA9IFByaXNtLmxhbmd1YWdlcy51bnJlYWxzY3JpcHRcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwidW5yZWFsc2NyaXB0IiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50Iiwic3RyaW5nIiwicGF0dGVybiIsImdyZWVkeSIsImNhdGVnb3J5IiwibG9va2JlaGluZCIsImFsaWFzIiwibWV0YWRhdGEiLCJpbnNpZGUiLCJwcm9wZXJ0eSIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iLCJtYWNybyIsImtleXdvcmQiLCJmdW5jdGlvbiIsImJvb2xlYW4iLCJudW1iZXIiLCJ1YyIsInVzY3JpcHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/unrealscript.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/uorazor.js":
/*!************************************************!*\
  !*** ./node_modules/refractor/lang/uorazor.js ***!
  \************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = uorazor;\nuorazor.displayName = \"uorazor\";\nuorazor.aliases = [];\nfunction uorazor(Prism) {\n    Prism.languages.uorazor = {\n        \"comment-hash\": {\n            pattern: /#.*/,\n            alias: \"comment\",\n            greedy: true\n        },\n        \"comment-slash\": {\n            pattern: /\\/\\/.*/,\n            alias: \"comment\",\n            greedy: true\n        },\n        string: {\n            pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            inside: {\n                punctuation: /^['\"]|['\"]$/\n            },\n            greedy: true\n        },\n        \"source-layers\": {\n            pattern: /\\b(?:arms|backpack|blue|bracelet|cancel|clear|cloak|criminal|earrings|enemy|facialhair|friend|friendly|gloves|gray|grey|ground|hair|head|innerlegs|innertorso|innocent|lefthand|middletorso|murderer|neck|nonfriendly|onehandedsecondary|outerlegs|outertorso|pants|red|righthand|ring|self|shirt|shoes|talisman|waist)\\b/i,\n            alias: \"function\"\n        },\n        \"source-commands\": {\n            pattern: /\\b(?:alliance|attack|cast|clearall|clearignore|clearjournal|clearlist|clearsysmsg|createlist|createtimer|dclick|dclicktype|dclickvar|dress|dressconfig|drop|droprelloc|emote|getlabel|guild|gumpclose|gumpresponse|hotkey|ignore|lasttarget|lift|lifttype|menu|menuresponse|msg|org|organize|organizer|overhead|pause|poplist|potion|promptresponse|pushlist|removelist|removetimer|rename|restock|say|scav|scavenger|script|setability|setlasttarget|setskill|settimer|setvar|sysmsg|target|targetloc|targetrelloc|targettype|undress|unignore|unsetvar|useobject|useonce|useskill|usetype|virtue|wait|waitforgump|waitformenu|waitforprompt|waitforstat|waitforsysmsg|waitfortarget|walk|wfsysmsg|wft|whisper|yell)\\b/,\n            alias: \"function\"\n        },\n        \"tag-name\": {\n            pattern: /(^\\{%-?\\s*)\\w+/,\n            lookbehind: true,\n            alias: \"keyword\"\n        },\n        delimiter: {\n            pattern: /^\\{[{%]-?|-?[%}]\\}$/,\n            alias: \"punctuation\"\n        },\n        function: /\\b(?:atlist|close|closest|count|counter|counttype|dead|dex|diffhits|diffmana|diffstam|diffweight|find|findbuff|finddebuff|findlayer|findtype|findtypelist|followers|gumpexists|hidden|hits|hp|hue|human|humanoid|ingump|inlist|insysmessage|insysmsg|int|invul|lhandempty|list|listexists|mana|maxhits|maxhp|maxmana|maxstam|maxweight|monster|mounted|name|next|noto|paralyzed|poisoned|position|prev|previous|queued|rand|random|rhandempty|skill|stam|str|targetexists|timer|timerexists|varexist|warmode|weight)\\b/,\n        keyword: /\\b(?:and|as|break|continue|else|elseif|endfor|endif|endwhile|for|if|loop|not|or|replay|stop|while)\\b/,\n        boolean: /\\b(?:false|null|true)\\b/,\n        number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n        operator: [\n            {\n                pattern: /(\\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n                lookbehind: true\n            },\n            /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/\n        ],\n        punctuation: /[()\\[\\]{}:.,]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdW9yYXpvci5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxRQUFRQyxXQUFXLEdBQUc7QUFDdEJELFFBQVFFLE9BQU8sR0FBRyxFQUFFO0FBQ3BCLFNBQVNGLFFBQVFHLEtBQUs7SUFDcEJBLE1BQU1DLFNBQVMsQ0FBQ0osT0FBTyxHQUFHO1FBQ3hCLGdCQUFnQjtZQUNkSyxTQUFTO1lBQ1RDLE9BQU87WUFDUEMsUUFBUTtRQUNWO1FBQ0EsaUJBQWlCO1lBQ2ZGLFNBQVM7WUFDVEMsT0FBTztZQUNQQyxRQUFRO1FBQ1Y7UUFDQUMsUUFBUTtZQUNOSCxTQUFTO1lBQ1RJLFFBQVE7Z0JBQ05DLGFBQWE7WUFDZjtZQUNBSCxRQUFRO1FBQ1Y7UUFDQSxpQkFBaUI7WUFDZkYsU0FDRTtZQUNGQyxPQUFPO1FBQ1Q7UUFDQSxtQkFBbUI7WUFDakJELFNBQ0U7WUFDRkMsT0FBTztRQUNUO1FBQ0EsWUFBWTtZQUNWRCxTQUFTO1lBQ1RNLFlBQVk7WUFDWkwsT0FBTztRQUNUO1FBQ0FNLFdBQVc7WUFDVFAsU0FBUztZQUNUQyxPQUFPO1FBQ1Q7UUFDQU8sVUFDRTtRQUNGQyxTQUNFO1FBQ0ZDLFNBQVM7UUFDVEMsUUFBUTtRQUNSQyxVQUFVO1lBQ1I7Z0JBQ0VaLFNBQ0U7Z0JBQ0ZNLFlBQVk7WUFDZDtZQUNBO1NBQ0Q7UUFDREQsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdW9yYXpvci5qcz85MTM5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHVvcmF6b3JcbnVvcmF6b3IuZGlzcGxheU5hbWUgPSAndW9yYXpvcidcbnVvcmF6b3IuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiB1b3Jhem9yKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy51b3Jhem9yID0ge1xuICAgICdjb21tZW50LWhhc2gnOiB7XG4gICAgICBwYXR0ZXJuOiAvIy4qLyxcbiAgICAgIGFsaWFzOiAnY29tbWVudCcsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgICdjb21tZW50LXNsYXNoJzoge1xuICAgICAgcGF0dGVybjogL1xcL1xcLy4qLyxcbiAgICAgIGFsaWFzOiAnY29tbWVudCcsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyhcInwnKSg/OlxcXFwufCg/IVxcMSlbXlxcXFxcXHJcXG5dKSpcXDEvLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHB1bmN0dWF0aW9uOiAvXlsnXCJdfFsnXCJdJC9cbiAgICAgIH0sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgICdzb3VyY2UtbGF5ZXJzJzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL1xcYig/OmFybXN8YmFja3BhY2t8Ymx1ZXxicmFjZWxldHxjYW5jZWx8Y2xlYXJ8Y2xvYWt8Y3JpbWluYWx8ZWFycmluZ3N8ZW5lbXl8ZmFjaWFsaGFpcnxmcmllbmR8ZnJpZW5kbHl8Z2xvdmVzfGdyYXl8Z3JleXxncm91bmR8aGFpcnxoZWFkfGlubmVybGVnc3xpbm5lcnRvcnNvfGlubm9jZW50fGxlZnRoYW5kfG1pZGRsZXRvcnNvfG11cmRlcmVyfG5lY2t8bm9uZnJpZW5kbHl8b25laGFuZGVkc2Vjb25kYXJ5fG91dGVybGVnc3xvdXRlcnRvcnNvfHBhbnRzfHJlZHxyaWdodGhhbmR8cmluZ3xzZWxmfHNoaXJ0fHNob2VzfHRhbGlzbWFufHdhaXN0KVxcYi9pLFxuICAgICAgYWxpYXM6ICdmdW5jdGlvbidcbiAgICB9LFxuICAgICdzb3VyY2UtY29tbWFuZHMnOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvXFxiKD86YWxsaWFuY2V8YXR0YWNrfGNhc3R8Y2xlYXJhbGx8Y2xlYXJpZ25vcmV8Y2xlYXJqb3VybmFsfGNsZWFybGlzdHxjbGVhcnN5c21zZ3xjcmVhdGVsaXN0fGNyZWF0ZXRpbWVyfGRjbGlja3xkY2xpY2t0eXBlfGRjbGlja3ZhcnxkcmVzc3xkcmVzc2NvbmZpZ3xkcm9wfGRyb3ByZWxsb2N8ZW1vdGV8Z2V0bGFiZWx8Z3VpbGR8Z3VtcGNsb3NlfGd1bXByZXNwb25zZXxob3RrZXl8aWdub3JlfGxhc3R0YXJnZXR8bGlmdHxsaWZ0dHlwZXxtZW51fG1lbnVyZXNwb25zZXxtc2d8b3JnfG9yZ2FuaXplfG9yZ2FuaXplcnxvdmVyaGVhZHxwYXVzZXxwb3BsaXN0fHBvdGlvbnxwcm9tcHRyZXNwb25zZXxwdXNobGlzdHxyZW1vdmVsaXN0fHJlbW92ZXRpbWVyfHJlbmFtZXxyZXN0b2NrfHNheXxzY2F2fHNjYXZlbmdlcnxzY3JpcHR8c2V0YWJpbGl0eXxzZXRsYXN0dGFyZ2V0fHNldHNraWxsfHNldHRpbWVyfHNldHZhcnxzeXNtc2d8dGFyZ2V0fHRhcmdldGxvY3x0YXJnZXRyZWxsb2N8dGFyZ2V0dHlwZXx1bmRyZXNzfHVuaWdub3JlfHVuc2V0dmFyfHVzZW9iamVjdHx1c2VvbmNlfHVzZXNraWxsfHVzZXR5cGV8dmlydHVlfHdhaXR8d2FpdGZvcmd1bXB8d2FpdGZvcm1lbnV8d2FpdGZvcnByb21wdHx3YWl0Zm9yc3RhdHx3YWl0Zm9yc3lzbXNnfHdhaXRmb3J0YXJnZXR8d2Fsa3x3ZnN5c21zZ3x3ZnR8d2hpc3Blcnx5ZWxsKVxcYi8sXG4gICAgICBhbGlhczogJ2Z1bmN0aW9uJ1xuICAgIH0sXG4gICAgJ3RhZy1uYW1lJzoge1xuICAgICAgcGF0dGVybjogLyheXFx7JS0/XFxzKilcXHcrLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgfSxcbiAgICBkZWxpbWl0ZXI6IHtcbiAgICAgIHBhdHRlcm46IC9eXFx7W3slXS0/fC0/WyV9XVxcfSQvLFxuICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbidcbiAgICB9LFxuICAgIGZ1bmN0aW9uOlxuICAgICAgL1xcYig/OmF0bGlzdHxjbG9zZXxjbG9zZXN0fGNvdW50fGNvdW50ZXJ8Y291bnR0eXBlfGRlYWR8ZGV4fGRpZmZoaXRzfGRpZmZtYW5hfGRpZmZzdGFtfGRpZmZ3ZWlnaHR8ZmluZHxmaW5kYnVmZnxmaW5kZGVidWZmfGZpbmRsYXllcnxmaW5kdHlwZXxmaW5kdHlwZWxpc3R8Zm9sbG93ZXJzfGd1bXBleGlzdHN8aGlkZGVufGhpdHN8aHB8aHVlfGh1bWFufGh1bWFub2lkfGluZ3VtcHxpbmxpc3R8aW5zeXNtZXNzYWdlfGluc3lzbXNnfGludHxpbnZ1bHxsaGFuZGVtcHR5fGxpc3R8bGlzdGV4aXN0c3xtYW5hfG1heGhpdHN8bWF4aHB8bWF4bWFuYXxtYXhzdGFtfG1heHdlaWdodHxtb25zdGVyfG1vdW50ZWR8bmFtZXxuZXh0fG5vdG98cGFyYWx5emVkfHBvaXNvbmVkfHBvc2l0aW9ufHByZXZ8cHJldmlvdXN8cXVldWVkfHJhbmR8cmFuZG9tfHJoYW5kZW1wdHl8c2tpbGx8c3RhbXxzdHJ8dGFyZ2V0ZXhpc3RzfHRpbWVyfHRpbWVyZXhpc3RzfHZhcmV4aXN0fHdhcm1vZGV8d2VpZ2h0KVxcYi8sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzphbmR8YXN8YnJlYWt8Y29udGludWV8ZWxzZXxlbHNlaWZ8ZW5kZm9yfGVuZGlmfGVuZHdoaWxlfGZvcnxpZnxsb29wfG5vdHxvcnxyZXBsYXl8c3RvcHx3aGlsZSlcXGIvLFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXxudWxsfHRydWUpXFxiLyxcbiAgICBudW1iZXI6IC9cXGIweFtcXGRBLUZhLWZdK3woPzpcXGJcXGQrKD86XFwuXFxkKik/fFxcQlxcLlxcZCspKD86W0VlXVstK10/XFxkKyk/LyxcbiAgICBvcGVyYXRvcjogW1xuICAgICAge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXFxzKSg/OmFuZHxiLWFuZHxiLW9yfGIteG9yfGVuZHMgd2l0aHxpbnxpc3xtYXRjaGVzfG5vdHxvcnxzYW1lIGFzfHN0YXJ0cyB3aXRoKSg/PVxccykvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAgL1s9PD5dPT98IT18XFwqXFwqP3xcXC9cXC8/fFxcPzo/fFstK34lfF0vXG4gICAgXSxcbiAgICBwdW5jdHVhdGlvbjogL1soKVxcW1xcXXt9Oi4sXS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJ1b3Jhem9yIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJwYXR0ZXJuIiwiYWxpYXMiLCJncmVlZHkiLCJzdHJpbmciLCJpbnNpZGUiLCJwdW5jdHVhdGlvbiIsImxvb2tiZWhpbmQiLCJkZWxpbWl0ZXIiLCJmdW5jdGlvbiIsImtleXdvcmQiLCJib29sZWFuIiwibnVtYmVyIiwib3BlcmF0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/uorazor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/uri.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/uri.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = uri;\nuri.displayName = \"uri\";\nuri.aliases = [\n    \"url\"\n];\nfunction uri(Prism) {\n    // https://tools.ietf.org/html/rfc3986#appendix-A\n    Prism.languages.uri = {\n        scheme: {\n            pattern: /^[a-z][a-z0-9+.-]*:/im,\n            greedy: true,\n            inside: {\n                \"scheme-delimiter\": /:$/\n            }\n        },\n        fragment: {\n            pattern: /#[\\w\\-.~!$&'()*+,;=%:@/?]*/,\n            inside: {\n                \"fragment-delimiter\": /^#/\n            }\n        },\n        query: {\n            pattern: /\\?[\\w\\-.~!$&'()*+,;=%:@/?]*/,\n            inside: {\n                \"query-delimiter\": {\n                    pattern: /^\\?/,\n                    greedy: true\n                },\n                \"pair-delimiter\": /[&;]/,\n                pair: {\n                    pattern: /^[^=][\\s\\S]*/,\n                    inside: {\n                        key: /^[^=]+/,\n                        value: {\n                            pattern: /(^=)[\\s\\S]+/,\n                            lookbehind: true\n                        }\n                    }\n                }\n            }\n        },\n        authority: {\n            pattern: RegExp(/^\\/\\//.source + // [ userinfo \"@\" ]\n            /(?:[\\w\\-.~!$&'()*+,;=%:]*@)?/.source + // host\n            (\"(?:\" + // IP-literal\n            /\\[(?:[0-9a-fA-F:.]{2,48}|v[0-9a-fA-F]+\\.[\\w\\-.~!$&'()*+,;=]+)\\]/.source + \"|\" + // IPv4address or registered name\n            /[\\w\\-.~!$&'()*+,;=%]*/.source + \")\") + // [ \":\" port ]\n            /(?::\\d*)?/.source, \"m\"),\n            inside: {\n                \"authority-delimiter\": /^\\/\\//,\n                \"user-info-segment\": {\n                    pattern: /^[\\w\\-.~!$&'()*+,;=%:]*@/,\n                    inside: {\n                        \"user-info-delimiter\": /@$/,\n                        \"user-info\": /^[\\w\\-.~!$&'()*+,;=%:]+/\n                    }\n                },\n                \"port-segment\": {\n                    pattern: /:\\d*$/,\n                    inside: {\n                        \"port-delimiter\": /^:/,\n                        port: /^\\d+/\n                    }\n                },\n                host: {\n                    pattern: /[\\s\\S]+/,\n                    inside: {\n                        \"ip-literal\": {\n                            pattern: /^\\[[\\s\\S]+\\]$/,\n                            inside: {\n                                \"ip-literal-delimiter\": /^\\[|\\]$/,\n                                \"ipv-future\": /^v[\\s\\S]+/,\n                                \"ipv6-address\": /^[\\s\\S]+/\n                            }\n                        },\n                        \"ipv4-address\": /^(?:(?:[03-9]\\d?|[12]\\d{0,2})\\.){3}(?:[03-9]\\d?|[12]\\d{0,2})$/\n                    }\n                }\n            }\n        },\n        path: {\n            pattern: /^[\\w\\-.~!$&'()*+,;=%:@/]+/m,\n            inside: {\n                \"path-separator\": /\\//\n            }\n        }\n    };\n    Prism.languages.url = Prism.languages.uri;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdXJpLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLElBQUlDLFdBQVcsR0FBRztBQUNsQkQsSUFBSUUsT0FBTyxHQUFHO0lBQUM7Q0FBTTtBQUNyQixTQUFTRixJQUFJRyxLQUFLO0lBQ2hCLGlEQUFpRDtJQUNqREEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFFBQVE7WUFDTkMsU0FBUztZQUNUQyxRQUFRO1lBQ1JDLFFBQVE7Z0JBQ04sb0JBQW9CO1lBQ3RCO1FBQ0Y7UUFDQUMsVUFBVTtZQUNSSCxTQUFTO1lBQ1RFLFFBQVE7Z0JBQ04sc0JBQXNCO1lBQ3hCO1FBQ0Y7UUFDQUUsT0FBTztZQUNMSixTQUFTO1lBQ1RFLFFBQVE7Z0JBQ04sbUJBQW1CO29CQUNqQkYsU0FBUztvQkFDVEMsUUFBUTtnQkFDVjtnQkFDQSxrQkFBa0I7Z0JBQ2xCSSxNQUFNO29CQUNKTCxTQUFTO29CQUNURSxRQUFRO3dCQUNOSSxLQUFLO3dCQUNMQyxPQUFPOzRCQUNMUCxTQUFTOzRCQUNUUSxZQUFZO3dCQUNkO29CQUNGO2dCQUNGO1lBQ0Y7UUFDRjtRQUNBQyxXQUFXO1lBQ1RULFNBQVNVLE9BQ1AsUUFBUUMsTUFBTSxHQUFHLG1CQUFtQjtZQUNsQywrQkFBK0JBLE1BQU0sR0FBRyxPQUFPO1lBQzlDLFNBQVEsYUFBYTtZQUNwQixrRUFDR0EsTUFBTSxHQUNULE1BQU0saUNBQWlDO1lBQ3ZDLHdCQUF3QkEsTUFBTSxHQUM5QixHQUFFLElBQUssZUFBZTtZQUN4QixZQUFZQSxNQUFNLEVBQ3BCO1lBRUZULFFBQVE7Z0JBQ04sdUJBQXVCO2dCQUN2QixxQkFBcUI7b0JBQ25CRixTQUFTO29CQUNURSxRQUFRO3dCQUNOLHVCQUF1Qjt3QkFDdkIsYUFBYTtvQkFDZjtnQkFDRjtnQkFDQSxnQkFBZ0I7b0JBQ2RGLFNBQVM7b0JBQ1RFLFFBQVE7d0JBQ04sa0JBQWtCO3dCQUNsQlUsTUFBTTtvQkFDUjtnQkFDRjtnQkFDQUMsTUFBTTtvQkFDSmIsU0FBUztvQkFDVEUsUUFBUTt3QkFDTixjQUFjOzRCQUNaRixTQUFTOzRCQUNURSxRQUFRO2dDQUNOLHdCQUF3QjtnQ0FDeEIsY0FBYztnQ0FDZCxnQkFBZ0I7NEJBQ2xCO3dCQUNGO3dCQUNBLGdCQUNFO29CQUNKO2dCQUNGO1lBQ0Y7UUFDRjtRQUNBWSxNQUFNO1lBQ0pkLFNBQVM7WUFDVEUsUUFBUTtnQkFDTixrQkFBa0I7WUFDcEI7UUFDRjtJQUNGO0lBQ0FMLE1BQU1DLFNBQVMsQ0FBQ2lCLEdBQUcsR0FBR2xCLE1BQU1DLFNBQVMsQ0FBQ0osR0FBRztBQUMzQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy91cmkuanM/NmZiNyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSB1cmlcbnVyaS5kaXNwbGF5TmFtZSA9ICd1cmknXG51cmkuYWxpYXNlcyA9IFsndXJsJ11cbmZ1bmN0aW9uIHVyaShQcmlzbSkge1xuICAvLyBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjMzk4NiNhcHBlbmRpeC1BXG4gIFByaXNtLmxhbmd1YWdlcy51cmkgPSB7XG4gICAgc2NoZW1lOiB7XG4gICAgICBwYXR0ZXJuOiAvXlthLXpdW2EtejAtOSsuLV0qOi9pbSxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICAnc2NoZW1lLWRlbGltaXRlcic6IC86JC9cbiAgICAgIH1cbiAgICB9LFxuICAgIGZyYWdtZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvI1tcXHdcXC0ufiEkJicoKSorLDs9JTpALz9dKi8sXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgJ2ZyYWdtZW50LWRlbGltaXRlcic6IC9eIy9cbiAgICAgIH1cbiAgICB9LFxuICAgIHF1ZXJ5OiB7XG4gICAgICBwYXR0ZXJuOiAvXFw/W1xcd1xcLS5+ISQmJygpKissOz0lOkAvP10qLyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICAncXVlcnktZGVsaW1pdGVyJzoge1xuICAgICAgICAgIHBhdHRlcm46IC9eXFw/LyxcbiAgICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgJ3BhaXItZGVsaW1pdGVyJzogL1smO10vLFxuICAgICAgICBwYWlyOiB7XG4gICAgICAgICAgcGF0dGVybjogL15bXj1dW1xcc1xcU10qLyxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIGtleTogL15bXj1dKy8sXG4gICAgICAgICAgICB2YWx1ZToge1xuICAgICAgICAgICAgICBwYXR0ZXJuOiAvKF49KVtcXHNcXFNdKy8sXG4gICAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIGF1dGhvcml0eToge1xuICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAvXlxcL1xcLy8uc291cmNlICsgLy8gWyB1c2VyaW5mbyBcIkBcIiBdXG4gICAgICAgICAgLyg/OltcXHdcXC0ufiEkJicoKSorLDs9JTpdKkApPy8uc291cmNlICsgLy8gaG9zdFxuICAgICAgICAgICgnKD86JyArIC8vIElQLWxpdGVyYWxcbiAgICAgICAgICAgIC9cXFsoPzpbMC05YS1mQS1GOi5dezIsNDh9fHZbMC05YS1mQS1GXStcXC5bXFx3XFwtLn4hJCYnKCkqKyw7PV0rKVxcXS9cbiAgICAgICAgICAgICAgLnNvdXJjZSArXG4gICAgICAgICAgICAnfCcgKyAvLyBJUHY0YWRkcmVzcyBvciByZWdpc3RlcmVkIG5hbWVcbiAgICAgICAgICAgIC9bXFx3XFwtLn4hJCYnKCkqKyw7PSVdKi8uc291cmNlICtcbiAgICAgICAgICAgICcpJykgKyAvLyBbIFwiOlwiIHBvcnQgXVxuICAgICAgICAgIC8oPzo6XFxkKik/Ly5zb3VyY2UsXG4gICAgICAgICdtJ1xuICAgICAgKSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICAnYXV0aG9yaXR5LWRlbGltaXRlcic6IC9eXFwvXFwvLyxcbiAgICAgICAgJ3VzZXItaW5mby1zZWdtZW50Jzoge1xuICAgICAgICAgIHBhdHRlcm46IC9eW1xcd1xcLS5+ISQmJygpKissOz0lOl0qQC8sXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICAndXNlci1pbmZvLWRlbGltaXRlcic6IC9AJC8sXG4gICAgICAgICAgICAndXNlci1pbmZvJzogL15bXFx3XFwtLn4hJCYnKCkqKyw7PSU6XSsvXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICAncG9ydC1zZWdtZW50Jzoge1xuICAgICAgICAgIHBhdHRlcm46IC86XFxkKiQvLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgJ3BvcnQtZGVsaW1pdGVyJzogL146LyxcbiAgICAgICAgICAgIHBvcnQ6IC9eXFxkKy9cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGhvc3Q6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvW1xcc1xcU10rLyxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICdpcC1saXRlcmFsJzoge1xuICAgICAgICAgICAgICBwYXR0ZXJuOiAvXlxcW1tcXHNcXFNdK1xcXSQvLFxuICAgICAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICAgICAnaXAtbGl0ZXJhbC1kZWxpbWl0ZXInOiAvXlxcW3xcXF0kLyxcbiAgICAgICAgICAgICAgICAnaXB2LWZ1dHVyZSc6IC9edltcXHNcXFNdKy8sXG4gICAgICAgICAgICAgICAgJ2lwdjYtYWRkcmVzcyc6IC9eW1xcc1xcU10rL1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJ2lwdjQtYWRkcmVzcyc6XG4gICAgICAgICAgICAgIC9eKD86KD86WzAzLTldXFxkP3xbMTJdXFxkezAsMn0pXFwuKXszfSg/OlswMy05XVxcZD98WzEyXVxcZHswLDJ9KSQvXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBwYXRoOiB7XG4gICAgICBwYXR0ZXJuOiAvXltcXHdcXC0ufiEkJicoKSorLDs9JTpAL10rL20sXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgJ3BhdGgtc2VwYXJhdG9yJzogL1xcLy9cbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgUHJpc20ubGFuZ3VhZ2VzLnVybCA9IFByaXNtLmxhbmd1YWdlcy51cmlcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwidXJpIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJzY2hlbWUiLCJwYXR0ZXJuIiwiZ3JlZWR5IiwiaW5zaWRlIiwiZnJhZ21lbnQiLCJxdWVyeSIsInBhaXIiLCJrZXkiLCJ2YWx1ZSIsImxvb2tiZWhpbmQiLCJhdXRob3JpdHkiLCJSZWdFeHAiLCJzb3VyY2UiLCJwb3J0IiwiaG9zdCIsInBhdGgiLCJ1cmwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/uri.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/v.js":
/*!******************************************!*\
  !*** ./node_modules/refractor/lang/v.js ***!
  \******************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = v;\nv.displayName = \"v\";\nv.aliases = [];\nfunction v(Prism) {\n    ;\n    (function(Prism) {\n        var interpolationExpr = {\n            pattern: /[\\s\\S]+/,\n            inside: null\n        };\n        Prism.languages.v = Prism.languages.extend(\"clike\", {\n            string: {\n                pattern: /r?([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n                alias: \"quoted-string\",\n                greedy: true,\n                inside: {\n                    interpolation: {\n                        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[^{}]*\\}|\\w+(?:\\.\\w+(?:\\([^\\(\\)]*\\))?|\\[[^\\[\\]]+\\])*)/,\n                        lookbehind: true,\n                        inside: {\n                            \"interpolation-variable\": {\n                                pattern: /^\\$\\w[\\s\\S]*$/,\n                                alias: \"variable\"\n                            },\n                            \"interpolation-punctuation\": {\n                                pattern: /^\\$\\{|\\}$/,\n                                alias: \"punctuation\"\n                            },\n                            \"interpolation-expression\": interpolationExpr\n                        }\n                    }\n                }\n            },\n            \"class-name\": {\n                pattern: /(\\b(?:enum|interface|struct|type)\\s+)(?:C\\.)?\\w+/,\n                lookbehind: true\n            },\n            keyword: /(?:\\b(?:__global|as|asm|assert|atomic|break|chan|const|continue|defer|else|embed|enum|fn|for|go(?:to)?|if|import|in|interface|is|lock|match|module|mut|none|or|pub|return|rlock|select|shared|sizeof|static|struct|type(?:of)?|union|unsafe)|\\$(?:else|for|if)|#(?:flag|include))\\b/,\n            number: /\\b(?:0x[a-f\\d]+(?:_[a-f\\d]+)*|0b[01]+(?:_[01]+)*|0o[0-7]+(?:_[0-7]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?)\\b/i,\n            operator: /~|\\?|[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\.?/,\n            builtin: /\\b(?:any(?:_float|_int)?|bool|byte(?:ptr)?|charptr|f(?:32|64)|i(?:8|16|64|128|nt)|rune|size_t|string|u(?:16|32|64|128)|voidptr)\\b/\n        });\n        interpolationExpr.inside = Prism.languages.v;\n        Prism.languages.insertBefore(\"v\", \"string\", {\n            char: {\n                pattern: /`(?:\\\\`|\\\\?[^`]{1,2})`/,\n                // using {1,2} instead of `u` flag for compatibility\n                alias: \"rune\"\n            }\n        });\n        Prism.languages.insertBefore(\"v\", \"operator\", {\n            attribute: {\n                pattern: /(^[\\t ]*)\\[(?:deprecated|direct_array_access|flag|inline|live|ref_only|typedef|unsafe_fn|windows_stdcall)\\]/m,\n                lookbehind: true,\n                alias: \"annotation\",\n                inside: {\n                    punctuation: /[\\[\\]]/,\n                    keyword: /\\w+/\n                }\n            },\n            generic: {\n                pattern: /<\\w+>(?=\\s*[\\)\\{])/,\n                inside: {\n                    punctuation: /[<>]/,\n                    \"class-name\": /\\w+/\n                }\n            }\n        });\n        Prism.languages.insertBefore(\"v\", \"function\", {\n            \"generic-function\": {\n                // e.g. foo<T>( ...\n                pattern: /\\b\\w+\\s*<\\w+>(?=\\()/,\n                inside: {\n                    function: /^\\w+/,\n                    generic: {\n                        pattern: /<\\w+>/,\n                        inside: Prism.languages.v.generic.inside\n                    }\n                }\n            }\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxFQUFFQyxXQUFXLEdBQUc7QUFDaEJELEVBQUVFLE9BQU8sR0FBRyxFQUFFO0FBQ2QsU0FBU0YsRUFBRUcsS0FBSzs7SUFDWixVQUFVQSxLQUFLO1FBQ2YsSUFBSUMsb0JBQW9CO1lBQ3RCQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBSCxNQUFNSSxTQUFTLENBQUNQLENBQUMsR0FBR0csTUFBTUksU0FBUyxDQUFDQyxNQUFNLENBQUMsU0FBUztZQUNsREMsUUFBUTtnQkFDTkosU0FBUztnQkFDVEssT0FBTztnQkFDUEMsUUFBUTtnQkFDUkwsUUFBUTtvQkFDTk0sZUFBZTt3QkFDYlAsU0FDRTt3QkFDRlEsWUFBWTt3QkFDWlAsUUFBUTs0QkFDTiwwQkFBMEI7Z0NBQ3hCRCxTQUFTO2dDQUNUSyxPQUFPOzRCQUNUOzRCQUNBLDZCQUE2QjtnQ0FDM0JMLFNBQVM7Z0NBQ1RLLE9BQU87NEJBQ1Q7NEJBQ0EsNEJBQTRCTjt3QkFDOUI7b0JBQ0Y7Z0JBQ0Y7WUFDRjtZQUNBLGNBQWM7Z0JBQ1pDLFNBQVM7Z0JBQ1RRLFlBQVk7WUFDZDtZQUNBQyxTQUNFO1lBQ0ZDLFFBQ0U7WUFDRkMsVUFDRTtZQUNGQyxTQUNFO1FBQ0o7UUFDQWIsa0JBQWtCRSxNQUFNLEdBQUdILE1BQU1JLFNBQVMsQ0FBQ1AsQ0FBQztRQUM1Q0csTUFBTUksU0FBUyxDQUFDVyxZQUFZLENBQUMsS0FBSyxVQUFVO1lBQzFDQyxNQUFNO2dCQUNKZCxTQUFTO2dCQUNULG9EQUFvRDtnQkFDcERLLE9BQU87WUFDVDtRQUNGO1FBQ0FQLE1BQU1JLFNBQVMsQ0FBQ1csWUFBWSxDQUFDLEtBQUssWUFBWTtZQUM1Q0UsV0FBVztnQkFDVGYsU0FDRTtnQkFDRlEsWUFBWTtnQkFDWkgsT0FBTztnQkFDUEosUUFBUTtvQkFDTmUsYUFBYTtvQkFDYlAsU0FBUztnQkFDWDtZQUNGO1lBQ0FRLFNBQVM7Z0JBQ1BqQixTQUFTO2dCQUNUQyxRQUFRO29CQUNOZSxhQUFhO29CQUNiLGNBQWM7Z0JBQ2hCO1lBQ0Y7UUFDRjtRQUNBbEIsTUFBTUksU0FBUyxDQUFDVyxZQUFZLENBQUMsS0FBSyxZQUFZO1lBQzVDLG9CQUFvQjtnQkFDbEIsbUJBQW1CO2dCQUNuQmIsU0FBUztnQkFDVEMsUUFBUTtvQkFDTmlCLFVBQVU7b0JBQ1ZELFNBQVM7d0JBQ1BqQixTQUFTO3dCQUNUQyxRQUFRSCxNQUFNSSxTQUFTLENBQUNQLENBQUMsQ0FBQ3NCLE9BQU8sQ0FBQ2hCLE1BQU07b0JBQzFDO2dCQUNGO1lBQ0Y7UUFDRjtJQUNGLEdBQUdIO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdi5qcz8wZjkxIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHZcbnYuZGlzcGxheU5hbWUgPSAndidcbnYuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiB2KFByaXNtKSB7XG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIGludGVycG9sYXRpb25FeHByID0ge1xuICAgICAgcGF0dGVybjogL1tcXHNcXFNdKy8sXG4gICAgICBpbnNpZGU6IG51bGxcbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzLnYgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdjbGlrZScsIHtcbiAgICAgIHN0cmluZzoge1xuICAgICAgICBwYXR0ZXJuOiAvcj8oW1wiJ10pKD86XFxcXCg/OlxcclxcbnxbXFxzXFxTXSl8KD8hXFwxKVteXFxcXFxcclxcbl0pKlxcMS8sXG4gICAgICAgIGFsaWFzOiAncXVvdGVkLXN0cmluZycsXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgaW50ZXJwb2xhdGlvbjoge1xuICAgICAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAgICAgLygoPzpefFteXFxcXF0pKD86XFxcXHsyfSkqKVxcJCg/Olxce1tee31dKlxcfXxcXHcrKD86XFwuXFx3Kyg/OlxcKFteXFwoXFwpXSpcXCkpP3xcXFtbXlxcW1xcXV0rXFxdKSopLyxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICAgJ2ludGVycG9sYXRpb24tdmFyaWFibGUnOiB7XG4gICAgICAgICAgICAgICAgcGF0dGVybjogL15cXCRcXHdbXFxzXFxTXSokLyxcbiAgICAgICAgICAgICAgICBhbGlhczogJ3ZhcmlhYmxlJ1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAnaW50ZXJwb2xhdGlvbi1wdW5jdHVhdGlvbic6IHtcbiAgICAgICAgICAgICAgICBwYXR0ZXJuOiAvXlxcJFxce3xcXH0kLyxcbiAgICAgICAgICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAnaW50ZXJwb2xhdGlvbi1leHByZXNzaW9uJzogaW50ZXJwb2xhdGlvbkV4cHJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICAnY2xhc3MtbmFtZSc6IHtcbiAgICAgICAgcGF0dGVybjogLyhcXGIoPzplbnVtfGludGVyZmFjZXxzdHJ1Y3R8dHlwZSlcXHMrKSg/OkNcXC4pP1xcdysvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAga2V5d29yZDpcbiAgICAgICAgLyg/OlxcYig/Ol9fZ2xvYmFsfGFzfGFzbXxhc3NlcnR8YXRvbWljfGJyZWFrfGNoYW58Y29uc3R8Y29udGludWV8ZGVmZXJ8ZWxzZXxlbWJlZHxlbnVtfGZufGZvcnxnbyg/OnRvKT98aWZ8aW1wb3J0fGlufGludGVyZmFjZXxpc3xsb2NrfG1hdGNofG1vZHVsZXxtdXR8bm9uZXxvcnxwdWJ8cmV0dXJufHJsb2NrfHNlbGVjdHxzaGFyZWR8c2l6ZW9mfHN0YXRpY3xzdHJ1Y3R8dHlwZSg/Om9mKT98dW5pb258dW5zYWZlKXxcXCQoPzplbHNlfGZvcnxpZil8Iyg/OmZsYWd8aW5jbHVkZSkpXFxiLyxcbiAgICAgIG51bWJlcjpcbiAgICAgICAgL1xcYig/OjB4W2EtZlxcZF0rKD86X1thLWZcXGRdKykqfDBiWzAxXSsoPzpfWzAxXSspKnwwb1swLTddKyg/Ol9bMC03XSspKnxcXGQrKD86X1xcZCspKig/OlxcLlxcZCsoPzpfXFxkKykqKT8pXFxiL2ksXG4gICAgICBvcGVyYXRvcjpcbiAgICAgICAgL358XFw/fFsqXFwvJV4hPV09P3xcXCtbPStdP3wtWz0tXT98XFx8Wz18XT98Jig/Oj18JnxcXF49Pyk/fD4oPzo+PT98PSk/fDwoPzo8PT98PXwtKT98Oj18XFwuXFwuXFwuPy8sXG4gICAgICBidWlsdGluOlxuICAgICAgICAvXFxiKD86YW55KD86X2Zsb2F0fF9pbnQpP3xib29sfGJ5dGUoPzpwdHIpP3xjaGFycHRyfGYoPzozMnw2NCl8aSg/Ojh8MTZ8NjR8MTI4fG50KXxydW5lfHNpemVfdHxzdHJpbmd8dSg/OjE2fDMyfDY0fDEyOCl8dm9pZHB0cilcXGIvXG4gICAgfSlcbiAgICBpbnRlcnBvbGF0aW9uRXhwci5pbnNpZGUgPSBQcmlzbS5sYW5ndWFnZXMudlxuICAgIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ3YnLCAnc3RyaW5nJywge1xuICAgICAgY2hhcjoge1xuICAgICAgICBwYXR0ZXJuOiAvYCg/OlxcXFxgfFxcXFw/W15gXXsxLDJ9KWAvLFxuICAgICAgICAvLyB1c2luZyB7MSwyfSBpbnN0ZWFkIG9mIGB1YCBmbGFnIGZvciBjb21wYXRpYmlsaXR5XG4gICAgICAgIGFsaWFzOiAncnVuZSdcbiAgICAgIH1cbiAgICB9KVxuICAgIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ3YnLCAnb3BlcmF0b3InLCB7XG4gICAgICBhdHRyaWJ1dGU6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKF5bXFx0IF0qKVxcWyg/OmRlcHJlY2F0ZWR8ZGlyZWN0X2FycmF5X2FjY2Vzc3xmbGFnfGlubGluZXxsaXZlfHJlZl9vbmx5fHR5cGVkZWZ8dW5zYWZlX2ZufHdpbmRvd3Nfc3RkY2FsbClcXF0vbSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdhbm5vdGF0aW9uJyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgcHVuY3R1YXRpb246IC9bXFxbXFxdXS8sXG4gICAgICAgICAga2V5d29yZDogL1xcdysvXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBnZW5lcmljOiB7XG4gICAgICAgIHBhdHRlcm46IC88XFx3Kz4oPz1cXHMqW1xcKVxce10pLyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgcHVuY3R1YXRpb246IC9bPD5dLyxcbiAgICAgICAgICAnY2xhc3MtbmFtZSc6IC9cXHcrL1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSlcbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCd2JywgJ2Z1bmN0aW9uJywge1xuICAgICAgJ2dlbmVyaWMtZnVuY3Rpb24nOiB7XG4gICAgICAgIC8vIGUuZy4gZm9vPFQ+KCAuLi5cbiAgICAgICAgcGF0dGVybjogL1xcYlxcdytcXHMqPFxcdys+KD89XFwoKS8sXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIGZ1bmN0aW9uOiAvXlxcdysvLFxuICAgICAgICAgIGdlbmVyaWM6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC88XFx3Kz4vLFxuICAgICAgICAgICAgaW5zaWRlOiBQcmlzbS5sYW5ndWFnZXMudi5nZW5lcmljLmluc2lkZVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJ2IiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJpbnRlcnBvbGF0aW9uRXhwciIsInBhdHRlcm4iLCJpbnNpZGUiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJzdHJpbmciLCJhbGlhcyIsImdyZWVkeSIsImludGVycG9sYXRpb24iLCJsb29rYmVoaW5kIiwia2V5d29yZCIsIm51bWJlciIsIm9wZXJhdG9yIiwiYnVpbHRpbiIsImluc2VydEJlZm9yZSIsImNoYXIiLCJhdHRyaWJ1dGUiLCJwdW5jdHVhdGlvbiIsImdlbmVyaWMiLCJmdW5jdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/v.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/vala.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/vala.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = vala;\nvala.displayName = \"vala\";\nvala.aliases = [];\nfunction vala(Prism) {\n    Prism.languages.vala = Prism.languages.extend(\"clike\", {\n        // Classes copied from prism-csharp\n        \"class-name\": [\n            {\n                // (Foo bar, Bar baz)\n                pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=(?:\\?\\s+|\\*?\\s+\\*?)\\w)/,\n                inside: {\n                    punctuation: /\\./\n                }\n            },\n            {\n                // [Foo]\n                pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n                lookbehind: true,\n                inside: {\n                    punctuation: /\\./\n                }\n            },\n            {\n                // class Foo : Bar\n                pattern: /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n                lookbehind: true,\n                inside: {\n                    punctuation: /\\./\n                }\n            },\n            {\n                // class Foo\n                pattern: /((?:\\b(?:class|enum|interface|new|struct)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n                lookbehind: true,\n                inside: {\n                    punctuation: /\\./\n                }\n            }\n        ],\n        keyword: /\\b(?:abstract|as|assert|async|base|bool|break|case|catch|char|class|const|construct|continue|default|delegate|delete|do|double|dynamic|else|ensures|enum|errordomain|extern|finally|float|for|foreach|get|if|in|inline|int|int16|int32|int64|int8|interface|internal|is|lock|long|namespace|new|null|out|override|owned|params|private|protected|public|ref|requires|return|set|short|signal|sizeof|size_t|ssize_t|static|string|struct|switch|this|throw|throws|try|typeof|uchar|uint|uint16|uint32|uint64|uint8|ulong|unichar|unowned|ushort|using|value|var|virtual|void|volatile|weak|while|yield)\\b/i,\n        function: /\\b\\w+(?=\\s*\\()/,\n        number: /(?:\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?:f|u?l?)?/i,\n        operator: /\\+\\+|--|&&|\\|\\||<<=?|>>=?|=>|->|~|[+\\-*\\/%&^|=!<>]=?|\\?\\??|\\.\\.\\./,\n        punctuation: /[{}[\\];(),.:]/,\n        constant: /\\b[A-Z0-9_]+\\b/\n    });\n    Prism.languages.insertBefore(\"vala\", \"string\", {\n        \"raw-string\": {\n            pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n            greedy: true,\n            alias: \"string\"\n        },\n        \"template-string\": {\n            pattern: /@\"[\\s\\S]*?\"/,\n            greedy: true,\n            inside: {\n                interpolation: {\n                    pattern: /\\$(?:\\([^)]*\\)|[a-zA-Z]\\w*)/,\n                    inside: {\n                        delimiter: {\n                            pattern: /^\\$\\(?|\\)$/,\n                            alias: \"punctuation\"\n                        },\n                        rest: Prism.languages.vala\n                    }\n                },\n                string: /[\\s\\S]+/\n            }\n        }\n    });\n    Prism.languages.insertBefore(\"vala\", \"keyword\", {\n        regex: {\n            pattern: /\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[imsx]{0,4}(?=\\s*(?:$|[\\r\\n,.;})\\]]))/,\n            greedy: true,\n            inside: {\n                \"regex-source\": {\n                    pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n                    lookbehind: true,\n                    alias: \"language-regex\",\n                    inside: Prism.languages.regex\n                },\n                \"regex-delimiter\": /^\\//,\n                \"regex-flags\": /^[a-z]+$/\n            }\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdmFsYS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDakJBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHRyxNQUFNQyxTQUFTLENBQUNDLE1BQU0sQ0FBQyxTQUFTO1FBQ3JELG1DQUFtQztRQUNuQyxjQUFjO1lBQ1o7Z0JBQ0UscUJBQXFCO2dCQUNyQkMsU0FBUztnQkFDVEMsUUFBUTtvQkFDTkMsYUFBYTtnQkFDZjtZQUNGO1lBQ0E7Z0JBQ0UsUUFBUTtnQkFDUkYsU0FBUztnQkFDVEcsWUFBWTtnQkFDWkYsUUFBUTtvQkFDTkMsYUFBYTtnQkFDZjtZQUNGO1lBQ0E7Z0JBQ0Usa0JBQWtCO2dCQUNsQkYsU0FDRTtnQkFDRkcsWUFBWTtnQkFDWkYsUUFBUTtvQkFDTkMsYUFBYTtnQkFDZjtZQUNGO1lBQ0E7Z0JBQ0UsWUFBWTtnQkFDWkYsU0FDRTtnQkFDRkcsWUFBWTtnQkFDWkYsUUFBUTtvQkFDTkMsYUFBYTtnQkFDZjtZQUNGO1NBQ0Q7UUFDREUsU0FDRTtRQUNGQyxVQUFVO1FBQ1ZDLFFBQ0U7UUFDRkMsVUFDRTtRQUNGTCxhQUFhO1FBQ2JNLFVBQVU7SUFDWjtJQUNBWCxNQUFNQyxTQUFTLENBQUNXLFlBQVksQ0FBQyxRQUFRLFVBQVU7UUFDN0MsY0FBYztZQUNaVCxTQUFTO1lBQ1RVLFFBQVE7WUFDUkMsT0FBTztRQUNUO1FBQ0EsbUJBQW1CO1lBQ2pCWCxTQUFTO1lBQ1RVLFFBQVE7WUFDUlQsUUFBUTtnQkFDTlcsZUFBZTtvQkFDYlosU0FBUztvQkFDVEMsUUFBUTt3QkFDTlksV0FBVzs0QkFDVGIsU0FBUzs0QkFDVFcsT0FBTzt3QkFDVDt3QkFDQUcsTUFBTWpCLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSTtvQkFDNUI7Z0JBQ0Y7Z0JBQ0FxQixRQUFRO1lBQ1Y7UUFDRjtJQUNGO0lBQ0FsQixNQUFNQyxTQUFTLENBQUNXLFlBQVksQ0FBQyxRQUFRLFdBQVc7UUFDOUNPLE9BQU87WUFDTGhCLFNBQ0U7WUFDRlUsUUFBUTtZQUNSVCxRQUFRO2dCQUNOLGdCQUFnQjtvQkFDZEQsU0FBUztvQkFDVEcsWUFBWTtvQkFDWlEsT0FBTztvQkFDUFYsUUFBUUosTUFBTUMsU0FBUyxDQUFDa0IsS0FBSztnQkFDL0I7Z0JBQ0EsbUJBQW1CO2dCQUNuQixlQUFlO1lBQ2pCO1FBQ0Y7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3ZhbGEuanM/NGJiOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSB2YWxhXG52YWxhLmRpc3BsYXlOYW1lID0gJ3ZhbGEnXG52YWxhLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gdmFsYShQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMudmFsYSA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2NsaWtlJywge1xuICAgIC8vIENsYXNzZXMgY29waWVkIGZyb20gcHJpc20tY3NoYXJwXG4gICAgJ2NsYXNzLW5hbWUnOiBbXG4gICAgICB7XG4gICAgICAgIC8vIChGb28gYmFyLCBCYXIgYmF6KVxuICAgICAgICBwYXR0ZXJuOiAvXFxiW0EtWl1cXHcqKD86XFwuXFx3KykqXFxiKD89KD86XFw/XFxzK3xcXCo/XFxzK1xcKj8pXFx3KS8sXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXFwuL1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAvLyBbRm9vXVxuICAgICAgICBwYXR0ZXJuOiAvKFxcWylbQS1aXVxcdyooPzpcXC5cXHcrKSpcXGIvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjogL1xcLi9cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgLy8gY2xhc3MgRm9vIDogQmFyXG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhcXGIoPzpjbGFzc3xpbnRlcmZhY2UpXFxzK1tBLVpdXFx3Kig/OlxcLlxcdyspKlxccyo6XFxzKilbQS1aXVxcdyooPzpcXC5cXHcrKSpcXGIvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjogL1xcLi9cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgLy8gY2xhc3MgRm9vXG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLygoPzpcXGIoPzpjbGFzc3xlbnVtfGludGVyZmFjZXxuZXd8c3RydWN0KVxccyspfCg/OmNhdGNoXFxzK1xcKCkpW0EtWl1cXHcqKD86XFwuXFx3KykqXFxiLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgcHVuY3R1YXRpb246IC9cXC4vXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICBdLFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YWJzdHJhY3R8YXN8YXNzZXJ0fGFzeW5jfGJhc2V8Ym9vbHxicmVha3xjYXNlfGNhdGNofGNoYXJ8Y2xhc3N8Y29uc3R8Y29uc3RydWN0fGNvbnRpbnVlfGRlZmF1bHR8ZGVsZWdhdGV8ZGVsZXRlfGRvfGRvdWJsZXxkeW5hbWljfGVsc2V8ZW5zdXJlc3xlbnVtfGVycm9yZG9tYWlufGV4dGVybnxmaW5hbGx5fGZsb2F0fGZvcnxmb3JlYWNofGdldHxpZnxpbnxpbmxpbmV8aW50fGludDE2fGludDMyfGludDY0fGludDh8aW50ZXJmYWNlfGludGVybmFsfGlzfGxvY2t8bG9uZ3xuYW1lc3BhY2V8bmV3fG51bGx8b3V0fG92ZXJyaWRlfG93bmVkfHBhcmFtc3xwcml2YXRlfHByb3RlY3RlZHxwdWJsaWN8cmVmfHJlcXVpcmVzfHJldHVybnxzZXR8c2hvcnR8c2lnbmFsfHNpemVvZnxzaXplX3R8c3NpemVfdHxzdGF0aWN8c3RyaW5nfHN0cnVjdHxzd2l0Y2h8dGhpc3x0aHJvd3x0aHJvd3N8dHJ5fHR5cGVvZnx1Y2hhcnx1aW50fHVpbnQxNnx1aW50MzJ8dWludDY0fHVpbnQ4fHVsb25nfHVuaWNoYXJ8dW5vd25lZHx1c2hvcnR8dXNpbmd8dmFsdWV8dmFyfHZpcnR1YWx8dm9pZHx2b2xhdGlsZXx3ZWFrfHdoaWxlfHlpZWxkKVxcYi9pLFxuICAgIGZ1bmN0aW9uOiAvXFxiXFx3Kyg/PVxccypcXCgpLyxcbiAgICBudW1iZXI6XG4gICAgICAvKD86XFxiMHhbXFxkYS1mXStcXGJ8KD86XFxiXFxkKyg/OlxcLlxcZCopP3xcXEJcXC5cXGQrKSg/OmVbKy1dP1xcZCspPykoPzpmfHU/bD8pPy9pLFxuICAgIG9wZXJhdG9yOlxuICAgICAgL1xcK1xcK3wtLXwmJnxcXHxcXHx8PDw9P3w+Pj0/fD0+fC0+fH58WytcXC0qXFwvJSZefD0hPD5dPT98XFw/XFw/P3xcXC5cXC5cXC4vLFxuICAgIHB1bmN0dWF0aW9uOiAvW3t9W1xcXTsoKSwuOl0vLFxuICAgIGNvbnN0YW50OiAvXFxiW0EtWjAtOV9dK1xcYi9cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgndmFsYScsICdzdHJpbmcnLCB7XG4gICAgJ3Jhdy1zdHJpbmcnOiB7XG4gICAgICBwYXR0ZXJuOiAvXCJcIlwiW1xcc1xcU10qP1wiXCJcIi8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBhbGlhczogJ3N0cmluZydcbiAgICB9LFxuICAgICd0ZW1wbGF0ZS1zdHJpbmcnOiB7XG4gICAgICBwYXR0ZXJuOiAvQFwiW1xcc1xcU10qP1wiLyxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBpbnRlcnBvbGF0aW9uOiB7XG4gICAgICAgICAgcGF0dGVybjogL1xcJCg/OlxcKFteKV0qXFwpfFthLXpBLVpdXFx3KikvLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgZGVsaW1pdGVyOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC9eXFwkXFwoP3xcXCkkLyxcbiAgICAgICAgICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbidcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICByZXN0OiBQcmlzbS5sYW5ndWFnZXMudmFsYVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgc3RyaW5nOiAvW1xcc1xcU10rL1xuICAgICAgfVxuICAgIH1cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgndmFsYScsICdrZXl3b3JkJywge1xuICAgIHJlZ2V4OiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvXFwvKD86XFxbKD86W15cXF1cXFxcXFxyXFxuXXxcXFxcLikqXFxdfFxcXFwufFteL1xcXFxcXFtcXHJcXG5dKStcXC9baW1zeF17MCw0fSg/PVxccyooPzokfFtcXHJcXG4sLjt9KVxcXV0pKS8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgJ3JlZ2V4LXNvdXJjZSc6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXihcXC8pW1xcc1xcU10rKD89XFwvW2Etel0qJCkvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgYWxpYXM6ICdsYW5ndWFnZS1yZWdleCcsXG4gICAgICAgICAgaW5zaWRlOiBQcmlzbS5sYW5ndWFnZXMucmVnZXhcbiAgICAgICAgfSxcbiAgICAgICAgJ3JlZ2V4LWRlbGltaXRlcic6IC9eXFwvLyxcbiAgICAgICAgJ3JlZ2V4LWZsYWdzJzogL15bYS16XSskL1xuICAgICAgfVxuICAgIH1cbiAgfSlcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwidmFsYSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwicGF0dGVybiIsImluc2lkZSIsInB1bmN0dWF0aW9uIiwibG9va2JlaGluZCIsImtleXdvcmQiLCJmdW5jdGlvbiIsIm51bWJlciIsIm9wZXJhdG9yIiwiY29uc3RhbnQiLCJpbnNlcnRCZWZvcmUiLCJncmVlZHkiLCJhbGlhcyIsImludGVycG9sYXRpb24iLCJkZWxpbWl0ZXIiLCJyZXN0Iiwic3RyaW5nIiwicmVnZXgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/vala.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/vbnet.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/vbnet.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar refractorBasic = __webpack_require__(/*! ./basic.js */ \"(ssr)/./node_modules/refractor/lang/basic.js\");\nmodule.exports = vbnet;\nvbnet.displayName = \"vbnet\";\nvbnet.aliases = [];\nfunction vbnet(Prism) {\n    Prism.register(refractorBasic);\n    Prism.languages.vbnet = Prism.languages.extend(\"basic\", {\n        comment: [\n            {\n                pattern: /(?:!|REM\\b).+/i,\n                inside: {\n                    keyword: /^REM/i\n                }\n            },\n            {\n                pattern: /(^|[^\\\\:])'.*/,\n                lookbehind: true,\n                greedy: true\n            }\n        ],\n        string: {\n            pattern: /(^|[^\"])\"(?:\"\"|[^\"])*\"(?!\")/,\n            lookbehind: true,\n            greedy: true\n        },\n        keyword: /(?:\\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDBL|CDEC|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DEFAULT|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LET|LIB|LIKE|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPERATOR|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHELL|SHORT|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SWAP|SYNCLOCK|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\\$|\\b)/i,\n        punctuation: /[,;:(){}]/\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdmJuZXQuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxJQUFJQSxpQkFBaUJDLG1CQUFPQSxDQUFDO0FBQzdCQyxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxNQUFNQyxXQUFXLEdBQUc7QUFDcEJELE1BQU1FLE9BQU8sR0FBRyxFQUFFO0FBQ2xCLFNBQVNGLE1BQU1HLEtBQUs7SUFDbEJBLE1BQU1DLFFBQVEsQ0FBQ1I7SUFDZk8sTUFBTUUsU0FBUyxDQUFDTCxLQUFLLEdBQUdHLE1BQU1FLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLFNBQVM7UUFDdERDLFNBQVM7WUFDUDtnQkFDRUMsU0FBUztnQkFDVEMsUUFBUTtvQkFDTkMsU0FBUztnQkFDWDtZQUNGO1lBQ0E7Z0JBQ0VGLFNBQVM7Z0JBQ1RHLFlBQVk7Z0JBQ1pDLFFBQVE7WUFDVjtTQUNEO1FBQ0RDLFFBQVE7WUFDTkwsU0FBUztZQUNURyxZQUFZO1lBQ1pDLFFBQVE7UUFDVjtRQUNBRixTQUNFO1FBQ0ZJLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3ZibmV0LmpzP2Y2NWQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG52YXIgcmVmcmFjdG9yQmFzaWMgPSByZXF1aXJlKCcuL2Jhc2ljLmpzJylcbm1vZHVsZS5leHBvcnRzID0gdmJuZXRcbnZibmV0LmRpc3BsYXlOYW1lID0gJ3ZibmV0J1xudmJuZXQuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiB2Ym5ldChQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JCYXNpYylcbiAgUHJpc20ubGFuZ3VhZ2VzLnZibmV0ID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnYmFzaWMnLCB7XG4gICAgY29tbWVudDogW1xuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvKD86IXxSRU1cXGIpLisvaSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAga2V5d29yZDogL15SRU0vaVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvKF58W15cXFxcOl0pJy4qLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9XG4gICAgXSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC8oXnxbXlwiXSlcIig/OlwiXCJ8W15cIl0pKlwiKD8hXCIpLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGtleXdvcmQ6XG4gICAgICAvKD86XFxiKD86QURESEFORExFUnxBRERSRVNTT0Z8QUxJQVN8QU5EfEFOREFMU098QVN8QkVFUHxCTE9BRHxCT09MRUFOfEJTQVZFfEJZUkVGfEJZVEV8QllWQUx8Q0FMTCg/OiBBQlNPTFVURSk/fENBU0V8Q0FUQ0h8Q0JPT0x8Q0JZVEV8Q0NIQVJ8Q0RBVEV8Q0RCTHxDREVDfENIQUlOfENIQVJ8Q0hESVJ8Q0lOVHxDTEFTU3xDTEVBUnxDTE5HfENMT1NFfENMU3xDT0JKfENPTXxDT01NT058Q09OU1R8Q09OVElOVUV8Q1NCWVRFfENTSE9SVHxDU05HfENTVFJ8Q1RZUEV8Q1VJTlR8Q1VMTkd8Q1VTSE9SVHxEQVRBfERBVEV8REVDSU1BTHxERUNMQVJFfERFRig/OiBGTnwgU0VHfERCTHxJTlR8TE5HfFNOR3xTVFIpfERFRkFVTFR8REVMRUdBVEV8RElNfERJUkVDVENBU1R8RE98RE9VQkxFfEVMU0V8RUxTRUlGfEVORHxFTlVNfEVOVklST058RVJBU0V8RVJST1J8RVZFTlR8RVhJVHxGQUxTRXxGSUVMRHxGSUxFU3xGSU5BTExZfEZPUig/OiBFQUNIKT98RlJJRU5EfEZVTkNUSU9OfEdFVHxHRVRUWVBFfEdFVFhNTE5BTUVTUEFDRXxHTE9CQUx8R09TVUJ8R09UT3xIQU5ETEVTfElGfElNUExFTUVOVFN8SU1QT1JUU3xJTnxJTkhFUklUU3xJTlBVVHxJTlRFR0VSfElOVEVSRkFDRXxJT0NUTHxJU3xJU05PVHxLRVl8S0lMTHxMRVR8TElCfExJS0V8TElORSBJTlBVVHxMT0NBVEV8TE9DS3xMT05HfExPT1B8TFNFVHxNRXxNS0RJUnxNT0R8TU9EVUxFfE1VU1RJTkhFUklUfE1VU1RPVkVSUklERXxNWUJBU0V8TVlDTEFTU3xOQU1FfE5BTUVTUEFDRXxOQVJST1dJTkd8TkVXfE5FWFR8Tk9UfE5PVEhJTkd8Tk9USU5IRVJJVEFCTEV8Tk9UT1ZFUlJJREFCTEV8T0JKRUNUfE9GfE9GRnxPTig/OiBDT018IEVSUk9SfCBLRVl8IFRJTUVSKT98T1BFTnxPUEVSQVRPUnxPUFRJT04oPzogQkFTRSk/fE9QVElPTkFMfE9SfE9SRUxTRXxPVVR8T1ZFUkxPQURTfE9WRVJSSURBQkxFfE9WRVJSSURFU3xQQVJBTUFSUkFZfFBBUlRJQUx8UE9LRXxQUklWQVRFfFBST1BFUlRZfFBST1RFQ1RFRHxQVUJMSUN8UFVUfFJBSVNFRVZFTlR8UkVBRHxSRUFET05MWXxSRURJTXxSRU18UkVNT1ZFSEFORExFUnxSRVNUT1JFfFJFU1VNRXxSRVRVUk58Uk1ESVJ8UlNFVHxSVU58U0JZVEV8U0VMRUNUKD86IENBU0UpP3xTRVR8U0hBRE9XU3xTSEFSRUR8U0hFTEx8U0hPUlR8U0lOR0xFfFNMRUVQfFNUQVRJQ3xTVEVQfFNUT1B8U1RSSU5HfFNUUlVDVFVSRXxTVUJ8U1dBUHxTWU5DTE9DS3xTWVNURU18VEhFTnxUSFJPV3xUSU1FUnxUT3xUUk9GRnxUUk9OfFRSVUV8VFJZfFRSWUNBU1R8VFlQRXxUWVBFT0Z8VUlOVEVHRVJ8VUxPTkd8VU5MT0NLfFVOVElMfFVTSE9SVHxVU0lOR3xWSUVXIFBSSU5UfFdBSVR8V0VORHxXSEVOfFdISUxFfFdJREVOSU5HfFdJVEh8V0lUSEVWRU5UU3xXUklURXxXUklURU9OTFl8WE9SKXxcXEIoPzojQ09OU1R8I0VMU0V8I0VMU0VJRnwjRU5EfCNJRikpKD86XFwkfFxcYikvaSxcbiAgICBwdW5jdHVhdGlvbjogL1ssOzooKXt9XS9cbiAgfSlcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JCYXNpYyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwidmJuZXQiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwiY29tbWVudCIsInBhdHRlcm4iLCJpbnNpZGUiLCJrZXl3b3JkIiwibG9va2JlaGluZCIsImdyZWVkeSIsInN0cmluZyIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/vbnet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/velocity.js":
/*!*************************************************!*\
  !*** ./node_modules/refractor/lang/velocity.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = velocity;\nvelocity.displayName = \"velocity\";\nvelocity.aliases = [];\nfunction velocity(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.velocity = Prism.languages.extend(\"markup\", {});\n        var velocity = {\n            variable: {\n                pattern: /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+\\])*|\\{[^}]+\\})/i,\n                lookbehind: true,\n                inside: {} // See below\n            },\n            string: {\n                pattern: /\"[^\"]*\"|'[^']*'/,\n                greedy: true\n            },\n            number: /\\b\\d+\\b/,\n            boolean: /\\b(?:false|true)\\b/,\n            operator: /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n            punctuation: /[(){}[\\]:,.]/\n        };\n        velocity.variable.inside = {\n            string: velocity[\"string\"],\n            function: {\n                pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n                lookbehind: true\n            },\n            number: velocity[\"number\"],\n            boolean: velocity[\"boolean\"],\n            punctuation: velocity[\"punctuation\"]\n        };\n        Prism.languages.insertBefore(\"velocity\", \"comment\", {\n            unparsed: {\n                pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?\\]\\]#/,\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    punctuation: /^#\\[\\[|\\]\\]#$/\n                }\n            },\n            \"velocity-comment\": [\n                {\n                    pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n                    lookbehind: true,\n                    greedy: true,\n                    alias: \"comment\"\n                },\n                {\n                    pattern: /(^|[^\\\\])##.*/,\n                    lookbehind: true,\n                    greedy: true,\n                    alias: \"comment\"\n                }\n            ],\n            directive: {\n                pattern: /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n                lookbehind: true,\n                inside: {\n                    keyword: {\n                        pattern: /^#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})|\\bin\\b/,\n                        inside: {\n                            punctuation: /[{}]/\n                        }\n                    },\n                    rest: velocity\n                }\n            },\n            variable: velocity[\"variable\"]\n        });\n        Prism.languages.velocity[\"tag\"].inside[\"attr-value\"].inside.rest = Prism.languages.velocity;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdmVsb2NpdHkuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsU0FBU0MsV0FBVyxHQUFHO0FBQ3ZCRCxTQUFTRSxPQUFPLEdBQUcsRUFBRTtBQUNyQixTQUFTRixTQUFTRyxLQUFLOztJQUNuQixVQUFVQSxLQUFLO1FBQ2ZBLE1BQU1DLFNBQVMsQ0FBQ0osUUFBUSxHQUFHRyxNQUFNQyxTQUFTLENBQUNDLE1BQU0sQ0FBQyxVQUFVLENBQUM7UUFDN0QsSUFBSUwsV0FBVztZQUNiTSxVQUFVO2dCQUNSQyxTQUNFO2dCQUNGQyxZQUFZO2dCQUNaQyxRQUFRLENBQUMsRUFBRSxZQUFZO1lBQ3pCO1lBQ0FDLFFBQVE7Z0JBQ05ILFNBQVM7Z0JBQ1RJLFFBQVE7WUFDVjtZQUNBQyxRQUFRO1lBQ1JDLFNBQVM7WUFDVEMsVUFDRTtZQUNGQyxhQUFhO1FBQ2Y7UUFDQWYsU0FBU00sUUFBUSxDQUFDRyxNQUFNLEdBQUc7WUFDekJDLFFBQVFWLFFBQVEsQ0FBQyxTQUFTO1lBQzFCZ0IsVUFBVTtnQkFDUlQsU0FBUztnQkFDVEMsWUFBWTtZQUNkO1lBQ0FJLFFBQVFaLFFBQVEsQ0FBQyxTQUFTO1lBQzFCYSxTQUFTYixRQUFRLENBQUMsVUFBVTtZQUM1QmUsYUFBYWYsUUFBUSxDQUFDLGNBQWM7UUFDdEM7UUFDQUcsTUFBTUMsU0FBUyxDQUFDYSxZQUFZLENBQUMsWUFBWSxXQUFXO1lBQ2xEQyxVQUFVO2dCQUNSWCxTQUFTO2dCQUNUQyxZQUFZO2dCQUNaRyxRQUFRO2dCQUNSRixRQUFRO29CQUNOTSxhQUFhO2dCQUNmO1lBQ0Y7WUFDQSxvQkFBb0I7Z0JBQ2xCO29CQUNFUixTQUFTO29CQUNUQyxZQUFZO29CQUNaRyxRQUFRO29CQUNSUSxPQUFPO2dCQUNUO2dCQUNBO29CQUNFWixTQUFTO29CQUNUQyxZQUFZO29CQUNaRyxRQUFRO29CQUNSUSxPQUFPO2dCQUNUO2FBQ0Q7WUFDREMsV0FBVztnQkFDVGIsU0FDRTtnQkFDRkMsWUFBWTtnQkFDWkMsUUFBUTtvQkFDTlksU0FBUzt3QkFDUGQsU0FBUzt3QkFDVEUsUUFBUTs0QkFDTk0sYUFBYTt3QkFDZjtvQkFDRjtvQkFDQU8sTUFBTXRCO2dCQUNSO1lBQ0Y7WUFDQU0sVUFBVU4sUUFBUSxDQUFDLFdBQVc7UUFDaEM7UUFDQUcsTUFBTUMsU0FBUyxDQUFDSixRQUFRLENBQUMsTUFBTSxDQUFDUyxNQUFNLENBQUMsYUFBYSxDQUFDQSxNQUFNLENBQUNhLElBQUksR0FDOURuQixNQUFNQyxTQUFTLENBQUNKLFFBQVE7SUFDNUIsR0FBR0c7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy92ZWxvY2l0eS5qcz85ZDgxIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHZlbG9jaXR5XG52ZWxvY2l0eS5kaXNwbGF5TmFtZSA9ICd2ZWxvY2l0eSdcbnZlbG9jaXR5LmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gdmVsb2NpdHkoUHJpc20pIHtcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICBQcmlzbS5sYW5ndWFnZXMudmVsb2NpdHkgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdtYXJrdXAnLCB7fSlcbiAgICB2YXIgdmVsb2NpdHkgPSB7XG4gICAgICB2YXJpYWJsZToge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXnxbXlxcXFxdKD86XFxcXFxcXFwpKilcXCQhPyg/OlthLXpdW1xcdy1dKig/OlxcKFteKV0qXFwpKT8oPzpcXC5bYS16XVtcXHctXSooPzpcXChbXildKlxcKSk/fFxcW1teXFxdXStcXF0pKnxcXHtbXn1dK1xcfSkvaSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7fSAvLyBTZWUgYmVsb3dcbiAgICAgIH0sXG4gICAgICBzdHJpbmc6IHtcbiAgICAgICAgcGF0dGVybjogL1wiW15cIl0qXCJ8J1teJ10qJy8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIG51bWJlcjogL1xcYlxcZCtcXGIvLFxuICAgICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiLyxcbiAgICAgIG9wZXJhdG9yOlxuICAgICAgICAvWz0hPD5dPT98WysqLyUtXXwmJnxcXHxcXHx8XFwuXFwufFxcYig/OmVxfGdbZXRdfGxbZXRdfG4oPzplfG90KSlcXGIvLFxuICAgICAgcHVuY3R1YXRpb246IC9bKCl7fVtcXF06LC5dL1xuICAgIH1cbiAgICB2ZWxvY2l0eS52YXJpYWJsZS5pbnNpZGUgPSB7XG4gICAgICBzdHJpbmc6IHZlbG9jaXR5WydzdHJpbmcnXSxcbiAgICAgIGZ1bmN0aW9uOiB7XG4gICAgICAgIHBhdHRlcm46IC8oW15cXHctXSlbYS16XVtcXHctXSooPz1cXCgpLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIG51bWJlcjogdmVsb2NpdHlbJ251bWJlciddLFxuICAgICAgYm9vbGVhbjogdmVsb2NpdHlbJ2Jvb2xlYW4nXSxcbiAgICAgIHB1bmN0dWF0aW9uOiB2ZWxvY2l0eVsncHVuY3R1YXRpb24nXVxuICAgIH1cbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCd2ZWxvY2l0eScsICdjb21tZW50Jywge1xuICAgICAgdW5wYXJzZWQ6IHtcbiAgICAgICAgcGF0dGVybjogLyhefFteXFxcXF0pI1xcW1xcW1tcXHNcXFNdKj9cXF1cXF0jLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjogL14jXFxbXFxbfFxcXVxcXSMkL1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgJ3ZlbG9jaXR5LWNvbW1lbnQnOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKF58W15cXFxcXSkjXFwqW1xcc1xcU10qP1xcKiMvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICAgIGFsaWFzOiAnY29tbWVudCdcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKSMjLiovLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICAgIGFsaWFzOiAnY29tbWVudCdcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIGRpcmVjdGl2ZToge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXnxbXlxcXFxdKD86XFxcXFxcXFwpKikjQD8oPzpbYS16XVtcXHctXSp8XFx7W2Etel1bXFx3LV0qXFx9KSg/OlxccypcXCgoPzpbXigpXXxcXChbXigpXSpcXCkpKlxcKSk/L2ksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIGtleXdvcmQ6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC9eI0A/KD86W2Etel1bXFx3LV0qfFxce1thLXpdW1xcdy1dKlxcfSl8XFxiaW5cXGIvLFxuICAgICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICAgIHB1bmN0dWF0aW9uOiAvW3t9XS9cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHJlc3Q6IHZlbG9jaXR5XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB2YXJpYWJsZTogdmVsb2NpdHlbJ3ZhcmlhYmxlJ11cbiAgICB9KVxuICAgIFByaXNtLmxhbmd1YWdlcy52ZWxvY2l0eVsndGFnJ10uaW5zaWRlWydhdHRyLXZhbHVlJ10uaW5zaWRlLnJlc3QgPVxuICAgICAgUHJpc20ubGFuZ3VhZ2VzLnZlbG9jaXR5XG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJ2ZWxvY2l0eSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwidmFyaWFibGUiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImluc2lkZSIsInN0cmluZyIsImdyZWVkeSIsIm51bWJlciIsImJvb2xlYW4iLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIiwiZnVuY3Rpb24iLCJpbnNlcnRCZWZvcmUiLCJ1bnBhcnNlZCIsImFsaWFzIiwiZGlyZWN0aXZlIiwia2V5d29yZCIsInJlc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/velocity.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/verilog.js":
/*!************************************************!*\
  !*** ./node_modules/refractor/lang/verilog.js ***!
  \************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = verilog;\nverilog.displayName = \"verilog\";\nverilog.aliases = [];\nfunction verilog(Prism) {\n    Prism.languages.verilog = {\n        comment: {\n            pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n            greedy: true\n        },\n        string: {\n            pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n            greedy: true\n        },\n        \"kernel-function\": {\n            // support for any kernel function (ex: $display())\n            pattern: /\\B\\$\\w+\\b/,\n            alias: \"property\"\n        },\n        // support for user defined constants (ex: `define)\n        constant: /\\B`\\w+\\b/,\n        function: /\\b\\w+(?=\\()/,\n        // support for verilog and system verilog keywords\n        keyword: /\\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|case|casex|casez|cell|chandle|class|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endsequence|endspecify|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_ondetect|pulsestyle_onevent|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\\b/,\n        // bold highlighting for all verilog and system verilog logic blocks\n        important: /\\b(?:always|always_comb|always_ff|always_latch)\\b(?: *@)?/,\n        // support for time ticks, vectors, and real numbers\n        number: /\\B##?\\d+|(?:\\b\\d+)?'[odbh] ?[\\da-fzx_?]+|\\b(?:\\d*[._])?\\d+(?:e[-+]?\\d+)?/i,\n        operator: /[-+{}^~%*\\/?=!<>&|]+/,\n        punctuation: /[[\\];(),.:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdmVyaWxvZy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxRQUFRQyxXQUFXLEdBQUc7QUFDdEJELFFBQVFFLE9BQU8sR0FBRyxFQUFFO0FBQ3BCLFNBQVNGLFFBQVFHLEtBQUs7SUFDcEJBLE1BQU1DLFNBQVMsQ0FBQ0osT0FBTyxHQUFHO1FBQ3hCSyxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FDLFFBQVE7WUFDTkYsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQSxtQkFBbUI7WUFDakIsbURBQW1EO1lBQ25ERCxTQUFTO1lBQ1RHLE9BQU87UUFDVDtRQUNBLG1EQUFtRDtRQUNuREMsVUFBVTtRQUNWQyxVQUFVO1FBQ1Ysa0RBQWtEO1FBQ2xEQyxTQUNFO1FBQ0Ysb0VBQW9FO1FBQ3BFQyxXQUFXO1FBQ1gsb0RBQW9EO1FBQ3BEQyxRQUNFO1FBQ0ZDLFVBQVU7UUFDVkMsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdmVyaWxvZy5qcz9kZjJkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHZlcmlsb2dcbnZlcmlsb2cuZGlzcGxheU5hbWUgPSAndmVyaWxvZydcbnZlcmlsb2cuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiB2ZXJpbG9nKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy52ZXJpbG9nID0ge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC9cXC9cXC8uKnxcXC9cXCpbXFxzXFxTXSo/XFwqXFwvLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvXCIoPzpcXFxcKD86XFxyXFxufFtcXHNcXFNdKXxbXlwiXFxcXFxcclxcbl0pKlwiLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgJ2tlcm5lbC1mdW5jdGlvbic6IHtcbiAgICAgIC8vIHN1cHBvcnQgZm9yIGFueSBrZXJuZWwgZnVuY3Rpb24gKGV4OiAkZGlzcGxheSgpKVxuICAgICAgcGF0dGVybjogL1xcQlxcJFxcdytcXGIvLFxuICAgICAgYWxpYXM6ICdwcm9wZXJ0eSdcbiAgICB9LFxuICAgIC8vIHN1cHBvcnQgZm9yIHVzZXIgZGVmaW5lZCBjb25zdGFudHMgKGV4OiBgZGVmaW5lKVxuICAgIGNvbnN0YW50OiAvXFxCYFxcdytcXGIvLFxuICAgIGZ1bmN0aW9uOiAvXFxiXFx3Kyg/PVxcKCkvLFxuICAgIC8vIHN1cHBvcnQgZm9yIHZlcmlsb2cgYW5kIHN5c3RlbSB2ZXJpbG9nIGtleXdvcmRzXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzphbGlhc3xhbmR8YXNzZXJ0fGFzc2lnbnxhc3N1bWV8YXV0b21hdGljfGJlZm9yZXxiZWdpbnxiaW5kfGJpbnN8Ymluc29mfGJpdHxicmVha3xidWZ8YnVmaWYwfGJ1ZmlmMXxieXRlfGNhc2V8Y2FzZXh8Y2FzZXp8Y2VsbHxjaGFuZGxlfGNsYXNzfGNsb2NraW5nfGNtb3N8Y29uZmlnfGNvbnN0fGNvbnN0cmFpbnR8Y29udGV4dHxjb250aW51ZXxjb3Zlcnxjb3Zlcmdyb3VwfGNvdmVycG9pbnR8Y3Jvc3N8ZGVhc3NpZ258ZGVmYXVsdHxkZWZwYXJhbXxkZXNpZ258ZGlzYWJsZXxkaXN0fGRvfGVkZ2V8ZWxzZXxlbmR8ZW5kY2FzZXxlbmRjbGFzc3xlbmRjbG9ja2luZ3xlbmRjb25maWd8ZW5kZnVuY3Rpb258ZW5kZ2VuZXJhdGV8ZW5kZ3JvdXB8ZW5kaW50ZXJmYWNlfGVuZG1vZHVsZXxlbmRwYWNrYWdlfGVuZHByaW1pdGl2ZXxlbmRwcm9ncmFtfGVuZHByb3BlcnR5fGVuZHNlcXVlbmNlfGVuZHNwZWNpZnl8ZW5kdGFibGV8ZW5kdGFza3xlbnVtfGV2ZW50fGV4cGVjdHxleHBvcnR8ZXh0ZW5kc3xleHRlcm58ZmluYWx8Zmlyc3RfbWF0Y2h8Zm9yfGZvcmNlfGZvcmVhY2h8Zm9yZXZlcnxmb3JrfGZvcmtqb2lufGZ1bmN0aW9ufGdlbmVyYXRlfGdlbnZhcnxoaWdoejB8aGlnaHoxfGlmfGlmZnxpZm5vbmV8aWdub3JlX2JpbnN8aWxsZWdhbF9iaW5zfGltcG9ydHxpbmNkaXJ8aW5jbHVkZXxpbml0aWFsfGlub3V0fGlucHV0fGluc2lkZXxpbnN0YW5jZXxpbnR8aW50ZWdlcnxpbnRlcmZhY2V8aW50ZXJzZWN0fGpvaW58am9pbl9hbnl8am9pbl9ub25lfGxhcmdlfGxpYmxpc3R8bGlicmFyeXxsb2NhbHxsb2NhbHBhcmFtfGxvZ2ljfGxvbmdpbnR8bWFjcm9tb2R1bGV8bWF0Y2hlc3xtZWRpdW18bW9kcG9ydHxtb2R1bGV8bmFuZHxuZWdlZGdlfG5ld3xubW9zfG5vcnxub3Nob3djYW5jZWxsZWR8bm90fG5vdGlmMHxub3RpZjF8bnVsbHxvcnxvdXRwdXR8cGFja2FnZXxwYWNrZWR8cGFyYW1ldGVyfHBtb3N8cG9zZWRnZXxwcmltaXRpdmV8cHJpb3JpdHl8cHJvZ3JhbXxwcm9wZXJ0eXxwcm90ZWN0ZWR8cHVsbDB8cHVsbDF8cHVsbGRvd258cHVsbHVwfHB1bHNlc3R5bGVfb25kZXRlY3R8cHVsc2VzdHlsZV9vbmV2ZW50fHB1cmV8cmFuZHxyYW5kY3xyYW5kY2FzZXxyYW5kc2VxdWVuY2V8cmNtb3N8cmVhbHxyZWFsdGltZXxyZWZ8cmVnfHJlbGVhc2V8cmVwZWF0fHJldHVybnxybm1vc3xycG1vc3xydHJhbnxydHJhbmlmMHxydHJhbmlmMXxzY2FsYXJlZHxzZXF1ZW5jZXxzaG9ydGludHxzaG9ydHJlYWx8c2hvd2NhbmNlbGxlZHxzaWduZWR8c21hbGx8c29sdmV8c3BlY2lmeXxzcGVjcGFyYW18c3RhdGljfHN0cmluZ3xzdHJvbmcwfHN0cm9uZzF8c3RydWN0fHN1cGVyfHN1cHBseTB8c3VwcGx5MXx0YWJsZXx0YWdnZWR8dGFza3x0aGlzfHRocm91Z2hvdXR8dGltZXx0aW1lcHJlY2lzaW9ufHRpbWV1bml0fHRyYW58dHJhbmlmMHx0cmFuaWYxfHRyaXx0cmkwfHRyaTF8dHJpYW5kfHRyaW9yfHRyaXJlZ3x0eXBlfHR5cGVkZWZ8dW5pb258dW5pcXVlfHVuc2lnbmVkfHVzZXx1d2lyZXx2YXJ8dmVjdG9yZWR8dmlydHVhbHx2b2lkfHdhaXR8d2FpdF9vcmRlcnx3YW5kfHdlYWswfHdlYWsxfHdoaWxlfHdpbGRjYXJkfHdpcmV8d2l0aHx3aXRoaW58d29yfHhub3J8eG9yKVxcYi8sXG4gICAgLy8gYm9sZCBoaWdobGlnaHRpbmcgZm9yIGFsbCB2ZXJpbG9nIGFuZCBzeXN0ZW0gdmVyaWxvZyBsb2dpYyBibG9ja3NcbiAgICBpbXBvcnRhbnQ6IC9cXGIoPzphbHdheXN8YWx3YXlzX2NvbWJ8YWx3YXlzX2ZmfGFsd2F5c19sYXRjaClcXGIoPzogKkApPy8sXG4gICAgLy8gc3VwcG9ydCBmb3IgdGltZSB0aWNrcywgdmVjdG9ycywgYW5kIHJlYWwgbnVtYmVyc1xuICAgIG51bWJlcjpcbiAgICAgIC9cXEIjIz9cXGQrfCg/OlxcYlxcZCspPydbb2RiaF0gP1tcXGRhLWZ6eF8/XSt8XFxiKD86XFxkKlsuX10pP1xcZCsoPzplWy0rXT9cXGQrKT8vaSxcbiAgICBvcGVyYXRvcjogL1stK3t9Xn4lKlxcLz89ITw+JnxdKy8sXG4gICAgcHVuY3R1YXRpb246IC9bW1xcXTsoKSwuOl0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwidmVyaWxvZyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJncmVlZHkiLCJzdHJpbmciLCJhbGlhcyIsImNvbnN0YW50IiwiZnVuY3Rpb24iLCJrZXl3b3JkIiwiaW1wb3J0YW50IiwibnVtYmVyIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/verilog.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/vhdl.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/vhdl.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = vhdl;\nvhdl.displayName = \"vhdl\";\nvhdl.aliases = [];\nfunction vhdl(Prism) {\n    Prism.languages.vhdl = {\n        comment: /--.+/,\n        // support for all logic vectors\n        \"vhdl-vectors\": {\n            pattern: /\\b[oxb]\"[\\da-f_]+\"|\"[01uxzwlh-]+\"/i,\n            alias: \"number\"\n        },\n        // support for operator overloading included\n        \"quoted-function\": {\n            pattern: /\"\\S+?\"(?=\\()/,\n            alias: \"function\"\n        },\n        string: /\"(?:[^\\\\\"\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n        constant: /\\b(?:library|use)\\b/i,\n        // support for predefined attributes included\n        keyword: /\\b(?:'active|'ascending|'base|'delayed|'driving|'driving_value|'event|'high|'image|'instance_name|'last_active|'last_event|'last_value|'left|'leftof|'length|'low|'path_name|'pos|'pred|'quiet|'range|'reverse_range|'right|'rightof|'simple_name|'stable|'succ|'transaction|'val|'value|access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with)\\b/i,\n        boolean: /\\b(?:false|true)\\b/i,\n        function: /\\w+(?=\\()/,\n        // decimal, based, physical, and exponential numbers supported\n        number: /'[01uxzwlh-]'|\\b(?:\\d+#[\\da-f_.]+#|\\d[\\d_.]*)(?:e[-+]?\\d+)?/i,\n        operator: /[<>]=?|:=|[-+*/&=]|\\b(?:abs|and|mod|nand|nor|not|or|rem|rol|ror|sla|sll|sra|srl|xnor|xor)\\b/i,\n        punctuation: /[{}[\\];(),.:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdmhkbC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDakJBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHO1FBQ3JCSyxTQUFTO1FBQ1QsZ0NBQWdDO1FBQ2hDLGdCQUFnQjtZQUNkQyxTQUFTO1lBQ1RDLE9BQU87UUFDVDtRQUNBLDRDQUE0QztRQUM1QyxtQkFBbUI7WUFDakJELFNBQVM7WUFDVEMsT0FBTztRQUNUO1FBQ0FDLFFBQVE7UUFDUkMsVUFBVTtRQUNWLDZDQUE2QztRQUM3Q0MsU0FDRTtRQUNGQyxTQUFTO1FBQ1RDLFVBQVU7UUFDViw4REFBOEQ7UUFDOURDLFFBQVE7UUFDUkMsVUFDRTtRQUNGQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy92aGRsLmpzPzA0ZjYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gdmhkbFxudmhkbC5kaXNwbGF5TmFtZSA9ICd2aGRsJ1xudmhkbC5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIHZoZGwoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLnZoZGwgPSB7XG4gICAgY29tbWVudDogLy0tLisvLFxuICAgIC8vIHN1cHBvcnQgZm9yIGFsbCBsb2dpYyB2ZWN0b3JzXG4gICAgJ3ZoZGwtdmVjdG9ycyc6IHtcbiAgICAgIHBhdHRlcm46IC9cXGJbb3hiXVwiW1xcZGEtZl9dK1wifFwiWzAxdXh6d2xoLV0rXCIvaSxcbiAgICAgIGFsaWFzOiAnbnVtYmVyJ1xuICAgIH0sXG4gICAgLy8gc3VwcG9ydCBmb3Igb3BlcmF0b3Igb3ZlcmxvYWRpbmcgaW5jbHVkZWRcbiAgICAncXVvdGVkLWZ1bmN0aW9uJzoge1xuICAgICAgcGF0dGVybjogL1wiXFxTKz9cIig/PVxcKCkvLFxuICAgICAgYWxpYXM6ICdmdW5jdGlvbidcbiAgICB9LFxuICAgIHN0cmluZzogL1wiKD86W15cXFxcXCJcXHJcXG5dfFxcXFwoPzpcXHJcXG58W1xcc1xcU10pKSpcIi8sXG4gICAgY29uc3RhbnQ6IC9cXGIoPzpsaWJyYXJ5fHVzZSlcXGIvaSxcbiAgICAvLyBzdXBwb3J0IGZvciBwcmVkZWZpbmVkIGF0dHJpYnV0ZXMgaW5jbHVkZWRcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OidhY3RpdmV8J2FzY2VuZGluZ3wnYmFzZXwnZGVsYXllZHwnZHJpdmluZ3wnZHJpdmluZ192YWx1ZXwnZXZlbnR8J2hpZ2h8J2ltYWdlfCdpbnN0YW5jZV9uYW1lfCdsYXN0X2FjdGl2ZXwnbGFzdF9ldmVudHwnbGFzdF92YWx1ZXwnbGVmdHwnbGVmdG9mfCdsZW5ndGh8J2xvd3wncGF0aF9uYW1lfCdwb3N8J3ByZWR8J3F1aWV0fCdyYW5nZXwncmV2ZXJzZV9yYW5nZXwncmlnaHR8J3JpZ2h0b2Z8J3NpbXBsZV9uYW1lfCdzdGFibGV8J3N1Y2N8J3RyYW5zYWN0aW9ufCd2YWx8J3ZhbHVlfGFjY2Vzc3xhZnRlcnxhbGlhc3xhbGx8YXJjaGl0ZWN0dXJlfGFycmF5fGFzc2VydHxhdHRyaWJ1dGV8YmVnaW58YmxvY2t8Ym9keXxidWZmZXJ8YnVzfGNhc2V8Y29tcG9uZW50fGNvbmZpZ3VyYXRpb258Y29uc3RhbnR8ZGlzY29ubmVjdHxkb3dudG98ZWxzZXxlbHNpZnxlbmR8ZW50aXR5fGV4aXR8ZmlsZXxmb3J8ZnVuY3Rpb258Z2VuZXJhdGV8Z2VuZXJpY3xncm91cHxndWFyZGVkfGlmfGltcHVyZXxpbnxpbmVydGlhbHxpbm91dHxpc3xsYWJlbHxsaWJyYXJ5fGxpbmthZ2V8bGl0ZXJhbHxsb29wfG1hcHxuZXd8bmV4dHxudWxsfG9mfG9ufG9wZW58b3RoZXJzfG91dHxwYWNrYWdlfHBvcnR8cG9zdHBvbmVkfHByb2NlZHVyZXxwcm9jZXNzfHB1cmV8cmFuZ2V8cmVjb3JkfHJlZ2lzdGVyfHJlamVjdHxyZXBvcnR8cmV0dXJufHNlbGVjdHxzZXZlcml0eXxzaGFyZWR8c2lnbmFsfHN1YnR5cGV8dGhlbnx0b3x0cmFuc3BvcnR8dHlwZXx1bmFmZmVjdGVkfHVuaXRzfHVudGlsfHVzZXx2YXJpYWJsZXx3YWl0fHdoZW58d2hpbGV8d2l0aClcXGIvaSxcbiAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvaSxcbiAgICBmdW5jdGlvbjogL1xcdysoPz1cXCgpLyxcbiAgICAvLyBkZWNpbWFsLCBiYXNlZCwgcGh5c2ljYWwsIGFuZCBleHBvbmVudGlhbCBudW1iZXJzIHN1cHBvcnRlZFxuICAgIG51bWJlcjogLydbMDF1eHp3bGgtXSd8XFxiKD86XFxkKyNbXFxkYS1mXy5dKyN8XFxkW1xcZF8uXSopKD86ZVstK10/XFxkKyk/L2ksXG4gICAgb3BlcmF0b3I6XG4gICAgICAvWzw+XT0/fDo9fFstKyovJj1dfFxcYig/OmFic3xhbmR8bW9kfG5hbmR8bm9yfG5vdHxvcnxyZW18cm9sfHJvcnxzbGF8c2xsfHNyYXxzcmx8eG5vcnx4b3IpXFxiL2ksXG4gICAgcHVuY3R1YXRpb246IC9be31bXFxdOygpLC46XS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJ2aGRsIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImFsaWFzIiwic3RyaW5nIiwiY29uc3RhbnQiLCJrZXl3b3JkIiwiYm9vbGVhbiIsImZ1bmN0aW9uIiwibnVtYmVyIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/vhdl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/vim.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/vim.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = vim;\nvim.displayName = \"vim\";\nvim.aliases = [];\nfunction vim(Prism) {\n    Prism.languages.vim = {\n        string: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,\n        comment: /\".*/,\n        function: /\\b\\w+(?=\\()/,\n        keyword: /\\b(?:N|Next|P|Print|X|XMLent|XMLns|ab|abbreviate|abc|abclear|abo|aboveleft|al|all|ar|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|args|argu|argument|as|ascii|b|bN|bNext|ba|bad|badd|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bo|botright|bp|bprevious|br|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|brewind|bro|browse|bufdo|buffer|buffers|bun|bunload|bw|bwipeout|c|cN|cNext|cNfcNfile|ca|cabbrev|cabc|cabclear|cad|caddb|caddbuffer|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cg|cgetb|cgetbuffer|cgete|cgetexpr|cgetfile|change|changes|chd|chdir|che|checkpath|checkt|checktime|cl|cla|clast|clist|clo|close|cmapc|cmapclear|cn|cnew|cnewer|cnext|cnf|cnfile|cnorea|cnoreabbrev|co|col|colder|colo|colorscheme|comc|comclear|comp|compiler|con|conf|confirm|continue|cope|copen|copy|cp|cpf|cpfile|cprevious|cq|cquit|cr|crewind|cu|cuna|cunabbrev|cunmap|cw|cwindow|d|debugg|debuggreedy|delc|delcommand|delete|delf|delfunction|delm|delmarks|di|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|e|earlier|echoe|echoerr|echom|echomsg|echon|edit|el|else|elsei|elseif|em|emenu|en|endf|endfo|endfor|endfun|endfunction|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fin|fina|finally|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|foldd|folddoc|folddoclosed|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|h|ha|hardcopy|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iu|iuna|iunabbrev|iunmap|j|join|ju|jumps|k|kee|keepalt|keepj|keepjumps|keepmarks|l|lN|lNext|lNf|lNfile|la|lad|laddb|laddbuffer|laddexpr|laddf|laddfile|lan|language|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|left|lefta|leftabove|let|lex|lexpr|lf|lfile|lfir|lfirst|lg|lgetb|lgetbuffer|lgete|lgetexpr|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|list|ll|lla|llast|lli|llist|lm|lmak|lmake|lmap|lmapc|lmapclear|ln|lne|lnew|lnewer|lnext|lnf|lnfile|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lp|lpf|lpfile|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|m|ma|mak|make|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkv|mkvie|mkview|mkvimrc|mod|mode|move|mz|mzf|mzfile|mzscheme|n|nbkey|new|next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|o|omapc|omapclear|on|only|open|opt|options|ou|ounmap|p|pc|pclose|pe|ped|pedit|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|print|prof|profd|profdel|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|ptN|ptNext|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|py|pyf|pyfile|python|q|qa|qall|quit|quita|quitall|r|read|rec|recover|red|redi|redir|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|ru|rub|ruby|rubyd|rubydo|rubyf|rubyfile|runtime|rv|rviminfo|sN|sNext|sa|sal|sall|san|sandbox|sargument|sav|saveas|sb|sbN|sbNext|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbp|sbprevious|sbr|sbrewind|sbuffer|scrip|scripte|scriptencoding|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sl|sla|slast|sleep|sm|smagic|smap|smapc|smapclear|sme|smenu|sn|snext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|so|sor|sort|source|sp|spe|spelld|spelldump|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|split|spr|sprevious|sre|srewind|st|sta|stag|star|startg|startgreplace|startinsert|startr|startreplace|stj|stjump|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tN|tNext|ta|tab|tabN|tabNext|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabn|tabnew|tabnext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tmenu|tn|tnext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tunmenu|u|una|unabbreviate|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|ve|verb|verbose|version|vert|vertical|vi|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|w|wN|wNext|wa|wall|wh|while|win|winc|wincmd|windo|winp|winpos|winsize|wn|wnext|wp|wprevious|wq|wqa|wqall|write|ws|wsverb|wv|wviminfo|x|xa|xall|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,\n        builtin: /\\b(?:acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autocmd|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|t_AB|t_AF|t_AL|t_CS|t_CV|t_Ce|t_Co|t_Cs|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_IE|t_IS|t_K1|t_K3|t_K4|t_K5|t_K6|t_K7|t_K8|t_K9|t_KA|t_KB|t_KC|t_KD|t_KE|t_KF|t_KG|t_KH|t_KI|t_KJ|t_KK|t_KL|t_RI|t_RV|t_SI|t_Sb|t_Sf|t_WP|t_WS|t_ZH|t_ZR|t_al|t_bc|t_cd|t_ce|t_cl|t_cm|t_cs|t_da|t_db|t_dl|t_fs|t_k1|t_k2|t_k3|t_k4|t_k5|t_k6|t_k7|t_k8|t_k9|t_kB|t_kD|t_kI|t_kN|t_kP|t_kb|t_kd|t_ke|t_kh|t_kl|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_se|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_xs|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww)\\b/,\n        number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n        operator: /\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,\n        punctuation: /[{}[\\](),;:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/vim.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/visual-basic.js":
/*!*****************************************************!*\
  !*** ./node_modules/refractor/lang/visual-basic.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = visualBasic;\nvisualBasic.displayName = \"visualBasic\";\nvisualBasic.aliases = [];\nfunction visualBasic(Prism) {\n    Prism.languages[\"visual-basic\"] = {\n        comment: {\n            pattern: /(?:['‘’]|REM\\b)(?:[^\\r\\n_]|_(?:\\r\\n?|\\n)?)*/i,\n            inside: {\n                keyword: /^REM/i\n            }\n        },\n        directive: {\n            pattern: /#(?:Const|Else|ElseIf|End|ExternalChecksum|ExternalSource|If|Region)(?:\\b_[ \\t]*(?:\\r\\n?|\\n)|.)+/i,\n            alias: \"property\",\n            greedy: true\n        },\n        string: {\n            pattern: /\\$?[\"“”](?:[\"“”]{2}|[^\"“”])*[\"“”]C?/i,\n            greedy: true\n        },\n        date: {\n            pattern: /#[ \\t]*(?:\\d+([/-])\\d+\\1\\d+(?:[ \\t]+(?:\\d+[ \\t]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[ \\t]*(?:AM|PM))?))?|\\d+[ \\t]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[ \\t]*(?:AM|PM))?)[ \\t]*#/i,\n            alias: \"number\"\n        },\n        number: /(?:(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)(?:E[+-]?\\d+)?|&[HO][\\dA-F]+)(?:[FRD]|U?[ILS])?/i,\n        boolean: /\\b(?:False|Nothing|True)\\b/i,\n        keyword: /\\b(?:AddHandler|AddressOf|Alias|And(?:Also)?|As|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|C(?:Bool|Byte|Char|Date|Dbl|Dec|Int|Lng|Obj|SByte|Short|Sng|Str|Type|UInt|ULng|UShort)|Char|Class|Const|Continue|Currency|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else(?:If)?|End(?:If)?|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get(?:Type|XMLNamespace)?|Global|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|IsNot|Let|Lib|Like|Long|Loop|Me|Mod|Module|Must(?:Inherit|Override)|My(?:Base|Class)|Namespace|Narrowing|New|Next|Not(?:Inheritable|Overridable)?|Object|Of|On|Operator|Option(?:al)?|Or(?:Else)?|Out|Overloads|Overridable|Overrides|ParamArray|Partial|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|SByte|Select|Set|Shadows|Shared|short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TryCast|Type|TypeOf|U(?:Integer|Long|Short)|Until|Using|Variant|Wend|When|While|Widening|With(?:Events)?|WriteOnly|Xor)\\b/i,\n        operator: /[+\\-*/\\\\^<=>&#@$%!]|\\b_(?=[ \\t]*[\\r\\n])/,\n        punctuation: /[{}().,:?]/\n    };\n    Prism.languages.vb = Prism.languages[\"visual-basic\"];\n    Prism.languages.vba = Prism.languages[\"visual-basic\"];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdmlzdWFsLWJhc2ljLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLFlBQVlDLFdBQVcsR0FBRztBQUMxQkQsWUFBWUUsT0FBTyxHQUFHLEVBQUU7QUFDeEIsU0FBU0YsWUFBWUcsS0FBSztJQUN4QkEsTUFBTUMsU0FBUyxDQUFDLGVBQWUsR0FBRztRQUNoQ0MsU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFFBQVE7Z0JBQ05DLFNBQVM7WUFDWDtRQUNGO1FBQ0FDLFdBQVc7WUFDVEgsU0FDRTtZQUNGSSxPQUFPO1lBQ1BDLFFBQVE7UUFDVjtRQUNBQyxRQUFRO1lBQ05OLFNBQVM7WUFDVEssUUFBUTtRQUNWO1FBQ0FFLE1BQU07WUFDSlAsU0FDRTtZQUNGSSxPQUFPO1FBQ1Q7UUFDQUksUUFDRTtRQUNGQyxTQUFTO1FBQ1RQLFNBQ0U7UUFDRlEsVUFBVTtRQUNWQyxhQUFhO0lBQ2Y7SUFDQWQsTUFBTUMsU0FBUyxDQUFDYyxFQUFFLEdBQUdmLE1BQU1DLFNBQVMsQ0FBQyxlQUFlO0lBQ3BERCxNQUFNQyxTQUFTLENBQUNlLEdBQUcsR0FBR2hCLE1BQU1DLFNBQVMsQ0FBQyxlQUFlO0FBQ3ZEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3Zpc3VhbC1iYXNpYy5qcz9hZDEwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHZpc3VhbEJhc2ljXG52aXN1YWxCYXNpYy5kaXNwbGF5TmFtZSA9ICd2aXN1YWxCYXNpYydcbnZpc3VhbEJhc2ljLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gdmlzdWFsQmFzaWMoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzWyd2aXN1YWwtYmFzaWMnXSA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvKD86WyfigJjigJldfFJFTVxcYikoPzpbXlxcclxcbl9dfF8oPzpcXHJcXG4/fFxcbik/KSovaSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBrZXl3b3JkOiAvXlJFTS9pXG4gICAgICB9XG4gICAgfSxcbiAgICBkaXJlY3RpdmU6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8jKD86Q29uc3R8RWxzZXxFbHNlSWZ8RW5kfEV4dGVybmFsQ2hlY2tzdW18RXh0ZXJuYWxTb3VyY2V8SWZ8UmVnaW9uKSg/OlxcYl9bIFxcdF0qKD86XFxyXFxuP3xcXG4pfC4pKy9pLFxuICAgICAgYWxpYXM6ICdwcm9wZXJ0eScsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1xcJD9bXCLigJzigJ1dKD86W1wi4oCc4oCdXXsyfXxbXlwi4oCc4oCdXSkqW1wi4oCc4oCdXUM/L2ksXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGRhdGU6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8jWyBcXHRdKig/OlxcZCsoWy8tXSlcXGQrXFwxXFxkKyg/OlsgXFx0XSsoPzpcXGQrWyBcXHRdKig/OkFNfFBNKXxcXGQrOlxcZCsoPzo6XFxkKyk/KD86WyBcXHRdKig/OkFNfFBNKSk/KSk/fFxcZCtbIFxcdF0qKD86QU18UE0pfFxcZCs6XFxkKyg/OjpcXGQrKT8oPzpbIFxcdF0qKD86QU18UE0pKT8pWyBcXHRdKiMvaSxcbiAgICAgIGFsaWFzOiAnbnVtYmVyJ1xuICAgIH0sXG4gICAgbnVtYmVyOlxuICAgICAgLyg/Oig/OlxcYlxcZCsoPzpcXC5cXGQrKT98XFwuXFxkKykoPzpFWystXT9cXGQrKT98JltIT11bXFxkQS1GXSspKD86W0ZSRF18VT9bSUxTXSk/L2ksXG4gICAgYm9vbGVhbjogL1xcYig/OkZhbHNlfE5vdGhpbmd8VHJ1ZSlcXGIvaSxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OkFkZEhhbmRsZXJ8QWRkcmVzc09mfEFsaWFzfEFuZCg/OkFsc28pP3xBc3xCb29sZWFufEJ5UmVmfEJ5dGV8QnlWYWx8Q2FsbHxDYXNlfENhdGNofEMoPzpCb29sfEJ5dGV8Q2hhcnxEYXRlfERibHxEZWN8SW50fExuZ3xPYmp8U0J5dGV8U2hvcnR8U25nfFN0cnxUeXBlfFVJbnR8VUxuZ3xVU2hvcnQpfENoYXJ8Q2xhc3N8Q29uc3R8Q29udGludWV8Q3VycmVuY3l8RGF0ZXxEZWNpbWFsfERlY2xhcmV8RGVmYXVsdHxEZWxlZ2F0ZXxEaW18RGlyZWN0Q2FzdHxEb3xEb3VibGV8RWFjaHxFbHNlKD86SWYpP3xFbmQoPzpJZik/fEVudW18RXJhc2V8RXJyb3J8RXZlbnR8RXhpdHxGaW5hbGx5fEZvcnxGcmllbmR8RnVuY3Rpb258R2V0KD86VHlwZXxYTUxOYW1lc3BhY2UpP3xHbG9iYWx8R29TdWJ8R29Ub3xIYW5kbGVzfElmfEltcGxlbWVudHN8SW1wb3J0c3xJbnxJbmhlcml0c3xJbnRlZ2VyfEludGVyZmFjZXxJc3xJc05vdHxMZXR8TGlifExpa2V8TG9uZ3xMb29wfE1lfE1vZHxNb2R1bGV8TXVzdCg/OkluaGVyaXR8T3ZlcnJpZGUpfE15KD86QmFzZXxDbGFzcyl8TmFtZXNwYWNlfE5hcnJvd2luZ3xOZXd8TmV4dHxOb3QoPzpJbmhlcml0YWJsZXxPdmVycmlkYWJsZSk/fE9iamVjdHxPZnxPbnxPcGVyYXRvcnxPcHRpb24oPzphbCk/fE9yKD86RWxzZSk/fE91dHxPdmVybG9hZHN8T3ZlcnJpZGFibGV8T3ZlcnJpZGVzfFBhcmFtQXJyYXl8UGFydGlhbHxQcml2YXRlfFByb3BlcnR5fFByb3RlY3RlZHxQdWJsaWN8UmFpc2VFdmVudHxSZWFkT25seXxSZURpbXxSZW1vdmVIYW5kbGVyfFJlc3VtZXxSZXR1cm58U0J5dGV8U2VsZWN0fFNldHxTaGFkb3dzfFNoYXJlZHxzaG9ydHxTaW5nbGV8U3RhdGljfFN0ZXB8U3RvcHxTdHJpbmd8U3RydWN0dXJlfFN1YnxTeW5jTG9ja3xUaGVufFRocm93fFRvfFRyeXxUcnlDYXN0fFR5cGV8VHlwZU9mfFUoPzpJbnRlZ2VyfExvbmd8U2hvcnQpfFVudGlsfFVzaW5nfFZhcmlhbnR8V2VuZHxXaGVufFdoaWxlfFdpZGVuaW5nfFdpdGgoPzpFdmVudHMpP3xXcml0ZU9ubHl8WG9yKVxcYi9pLFxuICAgIG9wZXJhdG9yOiAvWytcXC0qL1xcXFxePD0+JiNAJCUhXXxcXGJfKD89WyBcXHRdKltcXHJcXG5dKS8sXG4gICAgcHVuY3R1YXRpb246IC9be30oKS4sOj9dL1xuICB9XG4gIFByaXNtLmxhbmd1YWdlcy52YiA9IFByaXNtLmxhbmd1YWdlc1sndmlzdWFsLWJhc2ljJ11cbiAgUHJpc20ubGFuZ3VhZ2VzLnZiYSA9IFByaXNtLmxhbmd1YWdlc1sndmlzdWFsLWJhc2ljJ11cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwidmlzdWFsQmFzaWMiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwiaW5zaWRlIiwia2V5d29yZCIsImRpcmVjdGl2ZSIsImFsaWFzIiwiZ3JlZWR5Iiwic3RyaW5nIiwiZGF0ZSIsIm51bWJlciIsImJvb2xlYW4iLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIiwidmIiLCJ2YmEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/visual-basic.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/warpscript.js":
/*!***************************************************!*\
  !*** ./node_modules/refractor/lang/warpscript.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = warpscript;\nwarpscript.displayName = \"warpscript\";\nwarpscript.aliases = [];\nfunction warpscript(Prism) {\n    Prism.languages.warpscript = {\n        comment: /#.*|\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        string: {\n            pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'|<'(?:[^\\\\']|'(?!>)|\\\\.)*'>/,\n            greedy: true\n        },\n        variable: /\\$\\S+/,\n        macro: {\n            pattern: /@\\S+/,\n            alias: \"property\"\n        },\n        // WarpScript doesn't have any keywords, these are all functions under the control category\n        // https://www.warp10.io/tags/control\n        keyword: /\\b(?:BREAK|CHECKMACRO|CONTINUE|CUDF|DEFINED|DEFINEDMACRO|EVAL|FAIL|FOR|FOREACH|FORSTEP|IFT|IFTE|MSGFAIL|NRETURN|RETHROW|RETURN|SWITCH|TRY|UDF|UNTIL|WHILE)\\b/,\n        number: /[+-]?\\b(?:NaN|Infinity|\\d+(?:\\.\\d*)?(?:[Ee][+-]?\\d+)?|0x[\\da-fA-F]+|0b[01]+)\\b/,\n        boolean: /\\b(?:F|T|false|true)\\b/,\n        punctuation: /<%|%>|[{}[\\]()]/,\n        // Some operators from the \"operators\" category\n        // https://www.warp10.io/tags/operators\n        operator: /==|&&?|\\|\\|?|\\*\\*?|>>>?|<<|[<>!~]=?|[-/%^]|\\+!?|\\b(?:AND|NOT|OR)\\b/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvd2FycHNjcmlwdC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxXQUFXQyxXQUFXLEdBQUc7QUFDekJELFdBQVdFLE9BQU8sR0FBRyxFQUFFO0FBQ3ZCLFNBQVNGLFdBQVdHLEtBQUs7SUFDdkJBLE1BQU1DLFNBQVMsQ0FBQ0osVUFBVSxHQUFHO1FBQzNCSyxTQUFTO1FBQ1RDLFFBQVE7WUFDTkMsU0FDRTtZQUNGQyxRQUFRO1FBQ1Y7UUFDQUMsVUFBVTtRQUNWQyxPQUFPO1lBQ0xILFNBQVM7WUFDVEksT0FBTztRQUNUO1FBQ0EsMkZBQTJGO1FBQzNGLHFDQUFxQztRQUNyQ0MsU0FDRTtRQUNGQyxRQUNFO1FBQ0ZDLFNBQVM7UUFDVEMsYUFBYTtRQUNiLCtDQUErQztRQUMvQyx1Q0FBdUM7UUFDdkNDLFVBQ0U7SUFDSjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3dhcnBzY3JpcHQuanM/YTY2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSB3YXJwc2NyaXB0XG53YXJwc2NyaXB0LmRpc3BsYXlOYW1lID0gJ3dhcnBzY3JpcHQnXG53YXJwc2NyaXB0LmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gd2FycHNjcmlwdChQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMud2FycHNjcmlwdCA9IHtcbiAgICBjb21tZW50OiAvIy4qfFxcL1xcLy4qfFxcL1xcKltcXHNcXFNdKj9cXCpcXC8vLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL1wiKD86W15cIlxcXFxcXHJcXG5dfFxcXFwuKSpcInwnKD86W14nXFxcXFxcclxcbl18XFxcXC4pKid8PCcoPzpbXlxcXFwnXXwnKD8hPil8XFxcXC4pKic+LyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgdmFyaWFibGU6IC9cXCRcXFMrLyxcbiAgICBtYWNybzoge1xuICAgICAgcGF0dGVybjogL0BcXFMrLyxcbiAgICAgIGFsaWFzOiAncHJvcGVydHknXG4gICAgfSxcbiAgICAvLyBXYXJwU2NyaXB0IGRvZXNuJ3QgaGF2ZSBhbnkga2V5d29yZHMsIHRoZXNlIGFyZSBhbGwgZnVuY3Rpb25zIHVuZGVyIHRoZSBjb250cm9sIGNhdGVnb3J5XG4gICAgLy8gaHR0cHM6Ly93d3cud2FycDEwLmlvL3RhZ3MvY29udHJvbFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86QlJFQUt8Q0hFQ0tNQUNST3xDT05USU5VRXxDVURGfERFRklORUR8REVGSU5FRE1BQ1JPfEVWQUx8RkFJTHxGT1J8Rk9SRUFDSHxGT1JTVEVQfElGVHxJRlRFfE1TR0ZBSUx8TlJFVFVSTnxSRVRIUk9XfFJFVFVSTnxTV0lUQ0h8VFJZfFVERnxVTlRJTHxXSElMRSlcXGIvLFxuICAgIG51bWJlcjpcbiAgICAgIC9bKy1dP1xcYig/Ok5hTnxJbmZpbml0eXxcXGQrKD86XFwuXFxkKik/KD86W0VlXVsrLV0/XFxkKyk/fDB4W1xcZGEtZkEtRl0rfDBiWzAxXSspXFxiLyxcbiAgICBib29sZWFuOiAvXFxiKD86RnxUfGZhbHNlfHRydWUpXFxiLyxcbiAgICBwdW5jdHVhdGlvbjogLzwlfCU+fFt7fVtcXF0oKV0vLFxuICAgIC8vIFNvbWUgb3BlcmF0b3JzIGZyb20gdGhlIFwib3BlcmF0b3JzXCIgY2F0ZWdvcnlcbiAgICAvLyBodHRwczovL3d3dy53YXJwMTAuaW8vdGFncy9vcGVyYXRvcnNcbiAgICBvcGVyYXRvcjpcbiAgICAgIC89PXwmJj98XFx8XFx8P3xcXCpcXCo/fD4+Pj98PDx8Wzw+IX5dPT98Wy0vJV5dfFxcKyE/fFxcYig/OkFORHxOT1R8T1IpXFxiL1xuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIndhcnBzY3JpcHQiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZ3JlZWR5IiwidmFyaWFibGUiLCJtYWNybyIsImFsaWFzIiwia2V5d29yZCIsIm51bWJlciIsImJvb2xlYW4iLCJwdW5jdHVhdGlvbiIsIm9wZXJhdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/warpscript.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/wasm.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/wasm.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = wasm;\nwasm.displayName = \"wasm\";\nwasm.aliases = [];\nfunction wasm(Prism) {\n    Prism.languages.wasm = {\n        comment: [\n            /\\(;[\\s\\S]*?;\\)/,\n            {\n                pattern: /;;.*/,\n                greedy: true\n            }\n        ],\n        string: {\n            pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n            greedy: true\n        },\n        keyword: [\n            {\n                pattern: /\\b(?:align|offset)=/,\n                inside: {\n                    operator: /=/\n                }\n            },\n            {\n                pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n                inside: {\n                    punctuation: /\\./\n                }\n            },\n            /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/\n        ],\n        variable: /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^`|~]+/,\n        number: /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n        punctuation: /[()]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvd2FzbS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDakJBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHO1FBQ3JCSyxTQUFTO1lBQ1A7WUFDQTtnQkFDRUMsU0FBUztnQkFDVEMsUUFBUTtZQUNWO1NBQ0Q7UUFDREMsUUFBUTtZQUNORixTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBRSxTQUFTO1lBQ1A7Z0JBQ0VILFNBQVM7Z0JBQ1RJLFFBQVE7b0JBQ05DLFVBQVU7Z0JBQ1o7WUFDRjtZQUNBO2dCQUNFTCxTQUNFO2dCQUNGSSxRQUFRO29CQUNORSxhQUFhO2dCQUNmO1lBQ0Y7WUFDQTtTQUNEO1FBQ0RDLFVBQVU7UUFDVkMsUUFDRTtRQUNGRixhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy93YXNtLmpzPzFhZWUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gd2FzbVxud2FzbS5kaXNwbGF5TmFtZSA9ICd3YXNtJ1xud2FzbS5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIHdhc20oUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLndhc20gPSB7XG4gICAgY29tbWVudDogW1xuICAgICAgL1xcKDtbXFxzXFxTXSo/O1xcKS8sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC87Oy4qLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9XG4gICAgXSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIig/OlxcXFxbXFxzXFxTXXxbXlwiXFxcXF0pKlwiLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAga2V5d29yZDogW1xuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvXFxiKD86YWxpZ258b2Zmc2V0KT0vLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBvcGVyYXRvcjogLz0vXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgL1xcYig/Oig/OmYzMnxmNjR8aTMyfGk2NCkoPzpcXC4oPzphYnN8YWRkfGFuZHxjZWlsfGNsenxjb25zdHxjb252ZXJ0X1tzdV1cXC9pKD86MzJ8NjQpfGNvcHlzaWdufGN0enxkZW1vdGVcXC9mNjR8ZGl2KD86X1tzdV0pP3xlcXo/fGV4dGVuZF9bc3VdXFwvaTMyfGZsb29yfGdlKD86X1tzdV0pP3xndCg/Ol9bc3VdKT98bGUoPzpfW3N1XSk/fGxvYWQoPzooPzo4fDE2fDMyKV9bc3VdKT98bHQoPzpfW3N1XSk/fG1heHxtaW58bXVsfG5lZz98bmVhcmVzdHxvcnxwb3BjbnR8cHJvbW90ZVxcL2YzMnxyZWludGVycHJldFxcL1tmaV0oPzozMnw2NCl8cmVtX1tzdV18cm90W2xyXXxzaGx8c2hyX1tzdV18c3FydHxzdG9yZSg/Ojh8MTZ8MzIpP3xzdWJ8dHJ1bmMoPzpfW3N1XVxcL2YoPzozMnw2NCkpP3x3cmFwXFwvaTY0fHhvcikpP3xtZW1vcnlcXC4oPzpncm93fHNpemUpKVxcYi8sXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXFwuL1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgL1xcYig/OmFueWZ1bmN8YmxvY2t8YnIoPzpfaWZ8X3RhYmxlKT98Y2FsbCg/Ol9pbmRpcmVjdCk/fGRhdGF8ZHJvcHxlbGVtfGVsc2V8ZW5kfGV4cG9ydHxmdW5jfGdldF8oPzpnbG9iYWx8bG9jYWwpfGdsb2JhbHxpZnxpbXBvcnR8bG9jYWx8bG9vcHxtZW1vcnl8bW9kdWxlfG11dHxub3B8b2Zmc2V0fHBhcmFtfHJlc3VsdHxyZXR1cm58c2VsZWN0fHNldF8oPzpnbG9iYWx8bG9jYWwpfHN0YXJ0fHRhYmxlfHRlZV9sb2NhbHx0aGVufHR5cGV8dW5yZWFjaGFibGUpXFxiL1xuICAgIF0sXG4gICAgdmFyaWFibGU6IC9cXCRbXFx3ISMkJSYnKitcXC0uLzo8PT4/QFxcXFxeYHx+XSsvLFxuICAgIG51bWJlcjpcbiAgICAgIC9bKy1dP1xcYig/OlxcZCg/Ol8/XFxkKSooPzpcXC5cXGQoPzpfP1xcZCkqKT8oPzpbZUVdWystXT9cXGQoPzpfP1xcZCkqKT98MHhbXFxkYS1mQS1GXSg/Ol8/W1xcZGEtZkEtRl0pKig/OlxcLltcXGRhLWZBLUZdKD86Xz9bXFxkYS1mQS1EXSkqKT8oPzpbcFBdWystXT9cXGQoPzpfP1xcZCkqKT8pXFxifFxcYmluZlxcYnxcXGJuYW4oPzo6MHhbXFxkYS1mQS1GXSg/Ol8/W1xcZGEtZkEtRF0pKik/XFxiLyxcbiAgICBwdW5jdHVhdGlvbjogL1soKV0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwid2FzbSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJncmVlZHkiLCJzdHJpbmciLCJrZXl3b3JkIiwiaW5zaWRlIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiIsInZhcmlhYmxlIiwibnVtYmVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/wasm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/web-idl.js":
/*!************************************************!*\
  !*** ./node_modules/refractor/lang/web-idl.js ***!
  \************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = webIdl;\nwebIdl.displayName = \"webIdl\";\nwebIdl.aliases = [];\nfunction webIdl(Prism) {\n    ;\n    (function(Prism) {\n        var id = /(?:\\B-|\\b_|\\b)[A-Za-z][\\w-]*(?![\\w-])/.source;\n        var type = \"(?:\" + /\\b(?:unsigned\\s+)?long\\s+long(?![\\w-])/.source + \"|\" + /\\b(?:unrestricted|unsigned)\\s+[a-z]+(?![\\w-])/.source + \"|\" + /(?!(?:unrestricted|unsigned)\\b)/.source + id + /(?:\\s*<(?:[^<>]|<[^<>]*>)*>)?/.source + \")\" + /(?:\\s*\\?)?/.source;\n        var typeInside = {};\n        Prism.languages[\"web-idl\"] = {\n            comment: {\n                pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n                greedy: true\n            },\n            string: {\n                pattern: /\"[^\"]*\"/,\n                greedy: true\n            },\n            namespace: {\n                pattern: RegExp(/(\\bnamespace\\s+)/.source + id),\n                lookbehind: true\n            },\n            \"class-name\": [\n                {\n                    pattern: /(^|[^\\w-])(?:iterable|maplike|setlike)\\s*<(?:[^<>]|<[^<>]*>)*>/,\n                    lookbehind: true,\n                    inside: typeInside\n                },\n                {\n                    pattern: RegExp(/(\\b(?:attribute|const|deleter|getter|optional|setter)\\s+)/.source + type),\n                    lookbehind: true,\n                    inside: typeInside\n                },\n                {\n                    // callback return type\n                    pattern: RegExp(\"(\" + /\\bcallback\\s+/.source + id + /\\s*=\\s*/.source + \")\" + type),\n                    lookbehind: true,\n                    inside: typeInside\n                },\n                {\n                    // typedef\n                    pattern: RegExp(/(\\btypedef\\b\\s*)/.source + type),\n                    lookbehind: true,\n                    inside: typeInside\n                },\n                {\n                    pattern: RegExp(/(\\b(?:callback|dictionary|enum|interface(?:\\s+mixin)?)\\s+)(?!(?:interface|mixin)\\b)/.source + id),\n                    lookbehind: true\n                },\n                {\n                    // inheritance\n                    pattern: RegExp(/(:\\s*)/.source + id),\n                    lookbehind: true\n                },\n                RegExp(id + /(?=\\s+(?:implements|includes)\\b)/.source),\n                {\n                    pattern: RegExp(/(\\b(?:implements|includes)\\s+)/.source + id),\n                    lookbehind: true\n                },\n                {\n                    // function return type, parameter types, and dictionary members\n                    pattern: RegExp(type + \"(?=\" + /\\s*(?:\\.{3}\\s*)?/.source + id + /\\s*[(),;=]/.source + \")\"),\n                    inside: typeInside\n                }\n            ],\n            builtin: /\\b(?:ArrayBuffer|BigInt64Array|BigUint64Array|ByteString|DOMString|DataView|Float32Array|Float64Array|FrozenArray|Int16Array|Int32Array|Int8Array|ObservableArray|Promise|USVString|Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray)\\b/,\n            keyword: [\n                /\\b(?:async|attribute|callback|const|constructor|deleter|dictionary|enum|getter|implements|includes|inherit|interface|mixin|namespace|null|optional|or|partial|readonly|required|setter|static|stringifier|typedef|unrestricted)\\b/,\n                /\\b(?:any|bigint|boolean|byte|double|float|iterable|long|maplike|object|octet|record|sequence|setlike|short|symbol|undefined|unsigned|void)\\b/\n            ],\n            boolean: /\\b(?:false|true)\\b/,\n            number: {\n                pattern: /(^|[^\\w-])-?(?:0x[0-9a-f]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|NaN|Infinity)(?![\\w-])/i,\n                lookbehind: true\n            },\n            operator: /\\.{3}|[=:?<>-]/,\n            punctuation: /[(){}[\\].,;]/\n        };\n        for(var key in Prism.languages[\"web-idl\"]){\n            if (key !== \"class-name\") {\n                typeInside[key] = Prism.languages[\"web-idl\"][key];\n            }\n        }\n        Prism.languages[\"webidl\"] = Prism.languages[\"web-idl\"];\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvd2ViLWlkbC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxPQUFPQyxXQUFXLEdBQUc7QUFDckJELE9BQU9FLE9BQU8sR0FBRyxFQUFFO0FBQ25CLFNBQVNGLE9BQU9HLEtBQUs7O0lBQ2pCLFVBQVVBLEtBQUs7UUFDZixJQUFJQyxLQUFLLHdDQUF3Q0MsTUFBTTtRQUN2RCxJQUFJQyxPQUNGLFFBQ0EseUNBQXlDRCxNQUFNLEdBQy9DLE1BQ0EsZ0RBQWdEQSxNQUFNLEdBQ3RELE1BQ0Esa0NBQWtDQSxNQUFNLEdBQ3hDRCxLQUNBLGdDQUFnQ0MsTUFBTSxHQUN0QyxNQUNBLGFBQWFBLE1BQU07UUFDckIsSUFBSUUsYUFBYSxDQUFDO1FBQ2xCSixNQUFNSyxTQUFTLENBQUMsVUFBVSxHQUFHO1lBQzNCQyxTQUFTO2dCQUNQQyxTQUFTO2dCQUNUQyxRQUFRO1lBQ1Y7WUFDQUMsUUFBUTtnQkFDTkYsU0FBUztnQkFDVEMsUUFBUTtZQUNWO1lBQ0FFLFdBQVc7Z0JBQ1RILFNBQVNJLE9BQU8sbUJBQW1CVCxNQUFNLEdBQUdEO2dCQUM1Q1csWUFBWTtZQUNkO1lBQ0EsY0FBYztnQkFDWjtvQkFDRUwsU0FDRTtvQkFDRkssWUFBWTtvQkFDWkMsUUFBUVQ7Z0JBQ1Y7Z0JBQ0E7b0JBQ0VHLFNBQVNJLE9BQ1AsNERBQTREVCxNQUFNLEdBQ2hFQztvQkFFSlMsWUFBWTtvQkFDWkMsUUFBUVQ7Z0JBQ1Y7Z0JBQ0E7b0JBQ0UsdUJBQXVCO29CQUN2QkcsU0FBU0ksT0FDUCxNQUFNLGdCQUFnQlQsTUFBTSxHQUFHRCxLQUFLLFVBQVVDLE1BQU0sR0FBRyxNQUFNQztvQkFFL0RTLFlBQVk7b0JBQ1pDLFFBQVFUO2dCQUNWO2dCQUNBO29CQUNFLFVBQVU7b0JBQ1ZHLFNBQVNJLE9BQU8sbUJBQW1CVCxNQUFNLEdBQUdDO29CQUM1Q1MsWUFBWTtvQkFDWkMsUUFBUVQ7Z0JBQ1Y7Z0JBQ0E7b0JBQ0VHLFNBQVNJLE9BQ1Asc0ZBQ0dULE1BQU0sR0FBR0Q7b0JBRWRXLFlBQVk7Z0JBQ2Q7Z0JBQ0E7b0JBQ0UsY0FBYztvQkFDZEwsU0FBU0ksT0FBTyxTQUFTVCxNQUFNLEdBQUdEO29CQUNsQ1csWUFBWTtnQkFDZDtnQkFDQUQsT0FBT1YsS0FBSyxtQ0FBbUNDLE1BQU07Z0JBQ3JEO29CQUNFSyxTQUFTSSxPQUFPLGlDQUFpQ1QsTUFBTSxHQUFHRDtvQkFDMURXLFlBQVk7Z0JBQ2Q7Z0JBQ0E7b0JBQ0UsZ0VBQWdFO29CQUNoRUwsU0FBU0ksT0FDUFIsT0FDRSxRQUNBLG1CQUFtQkQsTUFBTSxHQUN6QkQsS0FDQSxhQUFhQyxNQUFNLEdBQ25CO29CQUVKVyxRQUFRVDtnQkFDVjthQUNEO1lBQ0RVLFNBQ0U7WUFDRkMsU0FBUztnQkFDUDtnQkFDQTthQUNEO1lBQ0RDLFNBQVM7WUFDVEMsUUFBUTtnQkFDTlYsU0FDRTtnQkFDRkssWUFBWTtZQUNkO1lBQ0FNLFVBQVU7WUFDVkMsYUFBYTtRQUNmO1FBQ0EsSUFBSyxJQUFJQyxPQUFPcEIsTUFBTUssU0FBUyxDQUFDLFVBQVUsQ0FBRTtZQUMxQyxJQUFJZSxRQUFRLGNBQWM7Z0JBQ3hCaEIsVUFBVSxDQUFDZ0IsSUFBSSxHQUFHcEIsTUFBTUssU0FBUyxDQUFDLFVBQVUsQ0FBQ2UsSUFBSTtZQUNuRDtRQUNGO1FBQ0FwQixNQUFNSyxTQUFTLENBQUMsU0FBUyxHQUFHTCxNQUFNSyxTQUFTLENBQUMsVUFBVTtJQUN4RCxHQUFHTDtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3dlYi1pZGwuanM/NWVmYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSB3ZWJJZGxcbndlYklkbC5kaXNwbGF5TmFtZSA9ICd3ZWJJZGwnXG53ZWJJZGwuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiB3ZWJJZGwoUHJpc20pIHtcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIgaWQgPSAvKD86XFxCLXxcXGJffFxcYilbQS1aYS16XVtcXHctXSooPyFbXFx3LV0pLy5zb3VyY2VcbiAgICB2YXIgdHlwZSA9XG4gICAgICAnKD86JyArXG4gICAgICAvXFxiKD86dW5zaWduZWRcXHMrKT9sb25nXFxzK2xvbmcoPyFbXFx3LV0pLy5zb3VyY2UgK1xuICAgICAgJ3wnICtcbiAgICAgIC9cXGIoPzp1bnJlc3RyaWN0ZWR8dW5zaWduZWQpXFxzK1thLXpdKyg/IVtcXHctXSkvLnNvdXJjZSArXG4gICAgICAnfCcgK1xuICAgICAgLyg/ISg/OnVucmVzdHJpY3RlZHx1bnNpZ25lZClcXGIpLy5zb3VyY2UgK1xuICAgICAgaWQgK1xuICAgICAgLyg/Olxccyo8KD86W148Pl18PFtePD5dKj4pKj4pPy8uc291cmNlICtcbiAgICAgICcpJyArXG4gICAgICAvKD86XFxzKlxcPyk/Ly5zb3VyY2VcbiAgICB2YXIgdHlwZUluc2lkZSA9IHt9XG4gICAgUHJpc20ubGFuZ3VhZ2VzWyd3ZWItaWRsJ10gPSB7XG4gICAgICBjb21tZW50OiB7XG4gICAgICAgIHBhdHRlcm46IC9cXC9cXC8uKnxcXC9cXCpbXFxzXFxTXSo/XFwqXFwvLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAgc3RyaW5nOiB7XG4gICAgICAgIHBhdHRlcm46IC9cIlteXCJdKlwiLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAgbmFtZXNwYWNlOiB7XG4gICAgICAgIHBhdHRlcm46IFJlZ0V4cCgvKFxcYm5hbWVzcGFjZVxccyspLy5zb3VyY2UgKyBpZCksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICAnY2xhc3MtbmFtZSc6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAvKF58W15cXHctXSkoPzppdGVyYWJsZXxtYXBsaWtlfHNldGxpa2UpXFxzKjwoPzpbXjw+XXw8W148Pl0qPikqPi8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHR5cGVJbnNpZGVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICAgIC8oXFxiKD86YXR0cmlidXRlfGNvbnN0fGRlbGV0ZXJ8Z2V0dGVyfG9wdGlvbmFsfHNldHRlcilcXHMrKS8uc291cmNlICtcbiAgICAgICAgICAgICAgdHlwZVxuICAgICAgICAgICksXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHR5cGVJbnNpZGVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIC8vIGNhbGxiYWNrIHJldHVybiB0eXBlXG4gICAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgICAgJygnICsgL1xcYmNhbGxiYWNrXFxzKy8uc291cmNlICsgaWQgKyAvXFxzKj1cXHMqLy5zb3VyY2UgKyAnKScgKyB0eXBlXG4gICAgICAgICAgKSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGluc2lkZTogdHlwZUluc2lkZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgLy8gdHlwZWRlZlxuICAgICAgICAgIHBhdHRlcm46IFJlZ0V4cCgvKFxcYnR5cGVkZWZcXGJcXHMqKS8uc291cmNlICsgdHlwZSksXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHR5cGVJbnNpZGVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICAgIC8oXFxiKD86Y2FsbGJhY2t8ZGljdGlvbmFyeXxlbnVtfGludGVyZmFjZSg/OlxccyttaXhpbik/KVxccyspKD8hKD86aW50ZXJmYWNlfG1peGluKVxcYikvXG4gICAgICAgICAgICAgIC5zb3VyY2UgKyBpZFxuICAgICAgICAgICksXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgLy8gaW5oZXJpdGFuY2VcbiAgICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoLyg6XFxzKikvLnNvdXJjZSArIGlkKSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgIH0sIC8vIGluY2x1ZGVzIGFuZCBpbXBsZW1lbnRzXG4gICAgICAgIFJlZ0V4cChpZCArIC8oPz1cXHMrKD86aW1wbGVtZW50c3xpbmNsdWRlcylcXGIpLy5zb3VyY2UpLFxuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogUmVnRXhwKC8oXFxiKD86aW1wbGVtZW50c3xpbmNsdWRlcylcXHMrKS8uc291cmNlICsgaWQpLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIC8vIGZ1bmN0aW9uIHJldHVybiB0eXBlLCBwYXJhbWV0ZXIgdHlwZXMsIGFuZCBkaWN0aW9uYXJ5IG1lbWJlcnNcbiAgICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoXG4gICAgICAgICAgICB0eXBlICtcbiAgICAgICAgICAgICAgJyg/PScgK1xuICAgICAgICAgICAgICAvXFxzKig/OlxcLnszfVxccyopPy8uc291cmNlICtcbiAgICAgICAgICAgICAgaWQgK1xuICAgICAgICAgICAgICAvXFxzKlsoKSw7PV0vLnNvdXJjZSArXG4gICAgICAgICAgICAgICcpJ1xuICAgICAgICAgICksXG4gICAgICAgICAgaW5zaWRlOiB0eXBlSW5zaWRlXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBidWlsdGluOlxuICAgICAgICAvXFxiKD86QXJyYXlCdWZmZXJ8QmlnSW50NjRBcnJheXxCaWdVaW50NjRBcnJheXxCeXRlU3RyaW5nfERPTVN0cmluZ3xEYXRhVmlld3xGbG9hdDMyQXJyYXl8RmxvYXQ2NEFycmF5fEZyb3plbkFycmF5fEludDE2QXJyYXl8SW50MzJBcnJheXxJbnQ4QXJyYXl8T2JzZXJ2YWJsZUFycmF5fFByb21pc2V8VVNWU3RyaW5nfFVpbnQxNkFycmF5fFVpbnQzMkFycmF5fFVpbnQ4QXJyYXl8VWludDhDbGFtcGVkQXJyYXkpXFxiLyxcbiAgICAgIGtleXdvcmQ6IFtcbiAgICAgICAgL1xcYig/OmFzeW5jfGF0dHJpYnV0ZXxjYWxsYmFja3xjb25zdHxjb25zdHJ1Y3RvcnxkZWxldGVyfGRpY3Rpb25hcnl8ZW51bXxnZXR0ZXJ8aW1wbGVtZW50c3xpbmNsdWRlc3xpbmhlcml0fGludGVyZmFjZXxtaXhpbnxuYW1lc3BhY2V8bnVsbHxvcHRpb25hbHxvcnxwYXJ0aWFsfHJlYWRvbmx5fHJlcXVpcmVkfHNldHRlcnxzdGF0aWN8c3RyaW5naWZpZXJ8dHlwZWRlZnx1bnJlc3RyaWN0ZWQpXFxiLywgLy8gdHlwZSBrZXl3b3Jkc1xuICAgICAgICAvXFxiKD86YW55fGJpZ2ludHxib29sZWFufGJ5dGV8ZG91YmxlfGZsb2F0fGl0ZXJhYmxlfGxvbmd8bWFwbGlrZXxvYmplY3R8b2N0ZXR8cmVjb3JkfHNlcXVlbmNlfHNldGxpa2V8c2hvcnR8c3ltYm9sfHVuZGVmaW5lZHx1bnNpZ25lZHx2b2lkKVxcYi9cbiAgICAgIF0sXG4gICAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvLFxuICAgICAgbnVtYmVyOiB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhefFteXFx3LV0pLT8oPzoweFswLTlhLWZdK3woPzpcXGQrKD86XFwuXFxkKik/fFxcLlxcZCspKD86ZVsrLV0/XFxkKyk/fE5hTnxJbmZpbml0eSkoPyFbXFx3LV0pL2ksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBvcGVyYXRvcjogL1xcLnszfXxbPTo/PD4tXS8sXG4gICAgICBwdW5jdHVhdGlvbjogL1soKXt9W1xcXS4sO10vXG4gICAgfVxuICAgIGZvciAodmFyIGtleSBpbiBQcmlzbS5sYW5ndWFnZXNbJ3dlYi1pZGwnXSkge1xuICAgICAgaWYgKGtleSAhPT0gJ2NsYXNzLW5hbWUnKSB7XG4gICAgICAgIHR5cGVJbnNpZGVba2V5XSA9IFByaXNtLmxhbmd1YWdlc1snd2ViLWlkbCddW2tleV1cbiAgICAgIH1cbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzWyd3ZWJpZGwnXSA9IFByaXNtLmxhbmd1YWdlc1snd2ViLWlkbCddXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJ3ZWJJZGwiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImlkIiwic291cmNlIiwidHlwZSIsInR5cGVJbnNpZGUiLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImdyZWVkeSIsInN0cmluZyIsIm5hbWVzcGFjZSIsIlJlZ0V4cCIsImxvb2tiZWhpbmQiLCJpbnNpZGUiLCJidWlsdGluIiwia2V5d29yZCIsImJvb2xlYW4iLCJudW1iZXIiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIiwia2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/web-idl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/wiki.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/wiki.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = wiki;\nwiki.displayName = \"wiki\";\nwiki.aliases = [];\nfunction wiki(Prism) {\n    Prism.languages.wiki = Prism.languages.extend(\"markup\", {\n        \"block-comment\": {\n            pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n            lookbehind: true,\n            alias: \"comment\"\n        },\n        heading: {\n            pattern: /^(=+)[^=\\r\\n].*?\\1/m,\n            inside: {\n                punctuation: /^=+|=+$/,\n                important: /.+/\n            }\n        },\n        emphasis: {\n            // TODO Multi-line\n            pattern: /('{2,5}).+?\\1/,\n            inside: {\n                \"bold-italic\": {\n                    pattern: /(''''').+?(?=\\1)/,\n                    lookbehind: true,\n                    alias: [\n                        \"bold\",\n                        \"italic\"\n                    ]\n                },\n                bold: {\n                    pattern: /(''')[^'](?:.*?[^'])?(?=\\1)/,\n                    lookbehind: true\n                },\n                italic: {\n                    pattern: /('')[^'](?:.*?[^'])?(?=\\1)/,\n                    lookbehind: true\n                },\n                punctuation: /^''+|''+$/\n            }\n        },\n        hr: {\n            pattern: /^-{4,}/m,\n            alias: \"punctuation\"\n        },\n        url: [\n            /ISBN +(?:97[89][ -]?)?(?:\\d[ -]?){9}[\\dx]\\b|(?:PMID|RFC) +\\d+/i,\n            /\\[\\[.+?\\]\\]|\\[.+?\\]/\n        ],\n        variable: [\n            /__[A-Z]+__/,\n            // {{formatnum:{{#expr:{{{3}}}}}}}\n            /\\{{3}.+?\\}{3}/,\n            /\\{\\{.+?\\}\\}/\n        ],\n        symbol: [\n            /^#redirect/im,\n            /~{3,5}/\n        ],\n        // Handle table attrs:\n        // {|\n        // ! style=\"text-align:left;\"| Item\n        // |}\n        \"table-tag\": {\n            pattern: /((?:^|[|!])[|!])[^|\\r\\n]+\\|(?!\\|)/m,\n            lookbehind: true,\n            inside: {\n                \"table-bar\": {\n                    pattern: /\\|$/,\n                    alias: \"punctuation\"\n                },\n                rest: Prism.languages.markup[\"tag\"].inside\n            }\n        },\n        punctuation: /^(?:\\{\\||\\|\\}|\\|-|[*#:;!|])|\\|\\||!!/m\n    });\n    Prism.languages.insertBefore(\"wiki\", \"tag\", {\n        // Prevent highlighting inside <nowiki>, <source> and <pre> tags\n        nowiki: {\n            pattern: /<(nowiki|pre|source)\\b[^>]*>[\\s\\S]*?<\\/\\1>/i,\n            inside: {\n                tag: {\n                    pattern: /<(?:nowiki|pre|source)\\b[^>]*>|<\\/(?:nowiki|pre|source)>/i,\n                    inside: Prism.languages.markup[\"tag\"].inside\n                }\n            }\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvd2lraS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDakJBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHRyxNQUFNQyxTQUFTLENBQUNDLE1BQU0sQ0FBQyxVQUFVO1FBQ3RELGlCQUFpQjtZQUNmQyxTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsT0FBTztRQUNUO1FBQ0FDLFNBQVM7WUFDUEgsU0FBUztZQUNUSSxRQUFRO2dCQUNOQyxhQUFhO2dCQUNiQyxXQUFXO1lBQ2I7UUFDRjtRQUNBQyxVQUFVO1lBQ1Isa0JBQWtCO1lBQ2xCUCxTQUFTO1lBQ1RJLFFBQVE7Z0JBQ04sZUFBZTtvQkFDYkosU0FBUztvQkFDVEMsWUFBWTtvQkFDWkMsT0FBTzt3QkFBQzt3QkFBUTtxQkFBUztnQkFDM0I7Z0JBQ0FNLE1BQU07b0JBQ0pSLFNBQVM7b0JBQ1RDLFlBQVk7Z0JBQ2Q7Z0JBQ0FRLFFBQVE7b0JBQ05ULFNBQVM7b0JBQ1RDLFlBQVk7Z0JBQ2Q7Z0JBQ0FJLGFBQWE7WUFDZjtRQUNGO1FBQ0FLLElBQUk7WUFDRlYsU0FBUztZQUNURSxPQUFPO1FBQ1Q7UUFDQVMsS0FBSztZQUNIO1lBQ0E7U0FDRDtRQUNEQyxVQUFVO1lBQ1I7WUFDQSxrQ0FBa0M7WUFDbEM7WUFDQTtTQUNEO1FBQ0RDLFFBQVE7WUFBQztZQUFnQjtTQUFTO1FBQ2xDLHNCQUFzQjtRQUN0QixLQUFLO1FBQ0wsbUNBQW1DO1FBQ25DLEtBQUs7UUFDTCxhQUFhO1lBQ1hiLFNBQVM7WUFDVEMsWUFBWTtZQUNaRyxRQUFRO2dCQUNOLGFBQWE7b0JBQ1hKLFNBQVM7b0JBQ1RFLE9BQU87Z0JBQ1Q7Z0JBQ0FZLE1BQU1qQixNQUFNQyxTQUFTLENBQUNpQixNQUFNLENBQUMsTUFBTSxDQUFDWCxNQUFNO1lBQzVDO1FBQ0Y7UUFDQUMsYUFBYTtJQUNmO0lBQ0FSLE1BQU1DLFNBQVMsQ0FBQ2tCLFlBQVksQ0FBQyxRQUFRLE9BQU87UUFDMUMsZ0VBQWdFO1FBQ2hFQyxRQUFRO1lBQ05qQixTQUFTO1lBQ1RJLFFBQVE7Z0JBQ05jLEtBQUs7b0JBQ0hsQixTQUFTO29CQUNUSSxRQUFRUCxNQUFNQyxTQUFTLENBQUNpQixNQUFNLENBQUMsTUFBTSxDQUFDWCxNQUFNO2dCQUM5QztZQUNGO1FBQ0Y7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3dpa2kuanM/ZDI5MSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSB3aWtpXG53aWtpLmRpc3BsYXlOYW1lID0gJ3dpa2knXG53aWtpLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gd2lraShQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMud2lraSA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ21hcmt1cCcsIHtcbiAgICAnYmxvY2stY29tbWVudCc6IHtcbiAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKVxcL1xcKltcXHNcXFNdKj9cXCpcXC8vLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAnY29tbWVudCdcbiAgICB9LFxuICAgIGhlYWRpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9eKD0rKVtePVxcclxcbl0uKj9cXDEvbSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBwdW5jdHVhdGlvbjogL149K3w9KyQvLFxuICAgICAgICBpbXBvcnRhbnQ6IC8uKy9cbiAgICAgIH1cbiAgICB9LFxuICAgIGVtcGhhc2lzOiB7XG4gICAgICAvLyBUT0RPIE11bHRpLWxpbmVcbiAgICAgIHBhdHRlcm46IC8oJ3syLDV9KS4rP1xcMS8sXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgJ2JvbGQtaXRhbGljJzoge1xuICAgICAgICAgIHBhdHRlcm46IC8oJycnJycpLis/KD89XFwxKS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBhbGlhczogWydib2xkJywgJ2l0YWxpYyddXG4gICAgICAgIH0sXG4gICAgICAgIGJvbGQ6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKCcnJylbXiddKD86Lio/W14nXSk/KD89XFwxKS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICBpdGFsaWM6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKCcnKVteJ10oPzouKj9bXiddKT8oPz1cXDEpLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIHB1bmN0dWF0aW9uOiAvXicnK3wnJyskL1xuICAgICAgfVxuICAgIH0sXG4gICAgaHI6IHtcbiAgICAgIHBhdHRlcm46IC9eLXs0LH0vbSxcbiAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgfSxcbiAgICB1cmw6IFtcbiAgICAgIC9JU0JOICsoPzo5N1s4OV1bIC1dPyk/KD86XFxkWyAtXT8pezl9W1xcZHhdXFxifCg/OlBNSUR8UkZDKSArXFxkKy9pLFxuICAgICAgL1xcW1xcWy4rP1xcXVxcXXxcXFsuKz9cXF0vXG4gICAgXSxcbiAgICB2YXJpYWJsZTogW1xuICAgICAgL19fW0EtWl0rX18vLCAvLyBGSVhNRSBOZXN0ZWQgc3RydWN0dXJlcyBzaG91bGQgYmUgaGFuZGxlZFxuICAgICAgLy8ge3tmb3JtYXRudW06e3sjZXhwcjp7e3szfX19fX19fVxuICAgICAgL1xce3szfS4rP1xcfXszfS8sXG4gICAgICAvXFx7XFx7Lis/XFx9XFx9L1xuICAgIF0sXG4gICAgc3ltYm9sOiBbL14jcmVkaXJlY3QvaW0sIC9+ezMsNX0vXSxcbiAgICAvLyBIYW5kbGUgdGFibGUgYXR0cnM6XG4gICAgLy8ge3xcbiAgICAvLyAhIHN0eWxlPVwidGV4dC1hbGlnbjpsZWZ0O1wifCBJdGVtXG4gICAgLy8gfH1cbiAgICAndGFibGUtdGFnJzoge1xuICAgICAgcGF0dGVybjogLygoPzpefFt8IV0pW3whXSlbXnxcXHJcXG5dK1xcfCg/IVxcfCkvbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgJ3RhYmxlLWJhcic6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXFx8JC8sXG4gICAgICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbidcbiAgICAgICAgfSxcbiAgICAgICAgcmVzdDogUHJpc20ubGFuZ3VhZ2VzLm1hcmt1cFsndGFnJ10uaW5zaWRlXG4gICAgICB9XG4gICAgfSxcbiAgICBwdW5jdHVhdGlvbjogL14oPzpcXHtcXHx8XFx8XFx9fFxcfC18WyojOjshfF0pfFxcfFxcfHwhIS9tXG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ3dpa2knLCAndGFnJywge1xuICAgIC8vIFByZXZlbnQgaGlnaGxpZ2h0aW5nIGluc2lkZSA8bm93aWtpPiwgPHNvdXJjZT4gYW5kIDxwcmU+IHRhZ3NcbiAgICBub3dpa2k6IHtcbiAgICAgIHBhdHRlcm46IC88KG5vd2lraXxwcmV8c291cmNlKVxcYltePl0qPltcXHNcXFNdKj88XFwvXFwxPi9pLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHRhZzoge1xuICAgICAgICAgIHBhdHRlcm46IC88KD86bm93aWtpfHByZXxzb3VyY2UpXFxiW14+XSo+fDxcXC8oPzpub3dpa2l8cHJlfHNvdXJjZSk+L2ksXG4gICAgICAgICAgaW5zaWRlOiBQcmlzbS5sYW5ndWFnZXMubWFya3VwWyd0YWcnXS5pbnNpZGVcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSlcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwid2lraSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJhbGlhcyIsImhlYWRpbmciLCJpbnNpZGUiLCJwdW5jdHVhdGlvbiIsImltcG9ydGFudCIsImVtcGhhc2lzIiwiYm9sZCIsIml0YWxpYyIsImhyIiwidXJsIiwidmFyaWFibGUiLCJzeW1ib2wiLCJyZXN0IiwibWFya3VwIiwiaW5zZXJ0QmVmb3JlIiwibm93aWtpIiwidGFnIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/wiki.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/wolfram.js":
/*!************************************************!*\
  !*** ./node_modules/refractor/lang/wolfram.js ***!
  \************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = wolfram;\nwolfram.displayName = \"wolfram\";\nwolfram.aliases = [\n    \"mathematica\",\n    \"wl\",\n    \"nb\"\n];\nfunction wolfram(Prism) {\n    Prism.languages.wolfram = {\n        // Allow one level of nesting - note: regex taken from applescipt\n        comment: /\\(\\*(?:\\(\\*(?:[^*]|\\*(?!\\)))*\\*\\)|(?!\\(\\*)[\\s\\S])*?\\*\\)/,\n        string: {\n            pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n            greedy: true\n        },\n        keyword: /\\b(?:Abs|AbsArg|Accuracy|Block|Do|For|Function|If|Manipulate|Module|Nest|NestList|None|Return|Switch|Table|Which|While)\\b/,\n        context: {\n            pattern: /\\b\\w+`+\\w*/,\n            alias: \"class-name\"\n        },\n        blank: {\n            pattern: /\\b\\w+_\\b/,\n            alias: \"regex\"\n        },\n        \"global-variable\": {\n            pattern: /\\$\\w+/,\n            alias: \"variable\"\n        },\n        boolean: /\\b(?:False|True)\\b/,\n        number: /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n        operator: /\\/\\.|;|=\\.|\\^=|\\^:=|:=|<<|>>|<\\||\\|>|:>|\\|->|->|<-|@@@|@@|@|\\/@|=!=|===|==|=|\\+|-|\\^|\\[\\/-+%=\\]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n        punctuation: /[{}[\\];(),.:]/\n    };\n    Prism.languages.mathematica = Prism.languages.wolfram;\n    Prism.languages.wl = Prism.languages.wolfram;\n    Prism.languages.nb = Prism.languages.wolfram;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvd29sZnJhbS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxRQUFRQyxXQUFXLEdBQUc7QUFDdEJELFFBQVFFLE9BQU8sR0FBRztJQUFDO0lBQWU7SUFBTTtDQUFLO0FBQzdDLFNBQVNGLFFBQVFHLEtBQUs7SUFDcEJBLE1BQU1DLFNBQVMsQ0FBQ0osT0FBTyxHQUFHO1FBQ3hCLGlFQUFpRTtRQUNqRUssU0FBUztRQUNUQyxRQUFRO1lBQ05DLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FDLFNBQ0U7UUFDRkMsU0FBUztZQUNQSCxTQUFTO1lBQ1RJLE9BQU87UUFDVDtRQUNBQyxPQUFPO1lBQ0xMLFNBQVM7WUFDVEksT0FBTztRQUNUO1FBQ0EsbUJBQW1CO1lBQ2pCSixTQUFTO1lBQ1RJLE9BQU87UUFDVDtRQUNBRSxTQUFTO1FBQ1RDLFFBQ0U7UUFDRkMsVUFDRTtRQUNGQyxhQUFhO0lBQ2Y7SUFDQWIsTUFBTUMsU0FBUyxDQUFDYSxXQUFXLEdBQUdkLE1BQU1DLFNBQVMsQ0FBQ0osT0FBTztJQUNyREcsTUFBTUMsU0FBUyxDQUFDYyxFQUFFLEdBQUdmLE1BQU1DLFNBQVMsQ0FBQ0osT0FBTztJQUM1Q0csTUFBTUMsU0FBUyxDQUFDZSxFQUFFLEdBQUdoQixNQUFNQyxTQUFTLENBQUNKLE9BQU87QUFDOUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvd29sZnJhbS5qcz8wM2ZhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHdvbGZyYW1cbndvbGZyYW0uZGlzcGxheU5hbWUgPSAnd29sZnJhbSdcbndvbGZyYW0uYWxpYXNlcyA9IFsnbWF0aGVtYXRpY2EnLCAnd2wnLCAnbmInXVxuZnVuY3Rpb24gd29sZnJhbShQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMud29sZnJhbSA9IHtcbiAgICAvLyBBbGxvdyBvbmUgbGV2ZWwgb2YgbmVzdGluZyAtIG5vdGU6IHJlZ2V4IHRha2VuIGZyb20gYXBwbGVzY2lwdFxuICAgIGNvbW1lbnQ6IC9cXChcXCooPzpcXChcXCooPzpbXipdfFxcKig/IVxcKSkpKlxcKlxcKXwoPyFcXChcXCopW1xcc1xcU10pKj9cXCpcXCkvLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1wiKD86XFxcXC58W15cIlxcXFxcXHJcXG5dKSpcIi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86QWJzfEFic0FyZ3xBY2N1cmFjeXxCbG9ja3xEb3xGb3J8RnVuY3Rpb258SWZ8TWFuaXB1bGF0ZXxNb2R1bGV8TmVzdHxOZXN0TGlzdHxOb25lfFJldHVybnxTd2l0Y2h8VGFibGV8V2hpY2h8V2hpbGUpXFxiLyxcbiAgICBjb250ZXh0OiB7XG4gICAgICBwYXR0ZXJuOiAvXFxiXFx3K2ArXFx3Ki8sXG4gICAgICBhbGlhczogJ2NsYXNzLW5hbWUnXG4gICAgfSxcbiAgICBibGFuazoge1xuICAgICAgcGF0dGVybjogL1xcYlxcdytfXFxiLyxcbiAgICAgIGFsaWFzOiAncmVnZXgnXG4gICAgfSxcbiAgICAnZ2xvYmFsLXZhcmlhYmxlJzoge1xuICAgICAgcGF0dGVybjogL1xcJFxcdysvLFxuICAgICAgYWxpYXM6ICd2YXJpYWJsZSdcbiAgICB9LFxuICAgIGJvb2xlYW46IC9cXGIoPzpGYWxzZXxUcnVlKVxcYi8sXG4gICAgbnVtYmVyOlxuICAgICAgLyg/OlxcYig/PVxcZCl8XFxCKD89XFwuKSkoPzowW2JvXSk/KD86KD86XFxkfDB4W1xcZGEtZl0pW1xcZGEtZl0qKD86XFwuXFxkKik/fFxcLlxcZCspKD86ZVsrLV0/XFxkKyk/aj9cXGIvaSxcbiAgICBvcGVyYXRvcjpcbiAgICAgIC9cXC9cXC58O3w9XFwufFxcXj18XFxeOj18Oj18PDx8Pj58PFxcfHxcXHw+fDo+fFxcfC0+fC0+fDwtfEBAQHxAQHxAfFxcL0B8PSE9fD09PXw9PXw9fFxcK3wtfFxcXnxcXFtcXC8tKyU9XFxdPT98IT18XFwqXFwqPz0/fFxcL1xcLz89P3w8Wzw9Pl0/fD5bPT5dP3xbJnxefl0vLFxuICAgIHB1bmN0dWF0aW9uOiAvW3t9W1xcXTsoKSwuOl0vXG4gIH1cbiAgUHJpc20ubGFuZ3VhZ2VzLm1hdGhlbWF0aWNhID0gUHJpc20ubGFuZ3VhZ2VzLndvbGZyYW1cbiAgUHJpc20ubGFuZ3VhZ2VzLndsID0gUHJpc20ubGFuZ3VhZ2VzLndvbGZyYW1cbiAgUHJpc20ubGFuZ3VhZ2VzLm5iID0gUHJpc20ubGFuZ3VhZ2VzLndvbGZyYW1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwid29sZnJhbSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJrZXl3b3JkIiwiY29udGV4dCIsImFsaWFzIiwiYmxhbmsiLCJib29sZWFuIiwibnVtYmVyIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiIsIm1hdGhlbWF0aWNhIiwid2wiLCJuYiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/wolfram.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/wren.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/wren.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = wren;\nwren.displayName = \"wren\";\nwren.aliases = [];\nfunction wren(Prism) {\n    // https://wren.io/\n    Prism.languages.wren = {\n        // Multiline comments in Wren can have nested multiline comments\n        // Comments: // and /* */\n        comment: [\n            {\n                // support 3 levels of nesting\n                // regex: \\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\/\n                pattern: /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*))*\\*\\/)*\\*\\/)*\\*\\//,\n                greedy: true\n            },\n            {\n                pattern: /(^|[^\\\\:])\\/\\/.*/,\n                lookbehind: true,\n                greedy: true\n            }\n        ],\n        // Triple quoted strings are multiline but cannot have interpolation (raw strings)\n        // Based on prism-python.js\n        \"triple-quoted-string\": {\n            pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n            greedy: true,\n            alias: \"string\"\n        },\n        // see below\n        \"string-literal\": null,\n        // #!/usr/bin/env wren on the first line\n        hashbang: {\n            pattern: /^#!\\/.+/,\n            greedy: true,\n            alias: \"comment\"\n        },\n        // Attributes are special keywords to add meta data to classes\n        attribute: {\n            // #! attributes are stored in class properties\n            // #!myvar = true\n            // #attributes are not stored and dismissed at compilation\n            pattern: /#!?[ \\t\\u3000]*\\w+/,\n            alias: \"keyword\"\n        },\n        \"class-name\": [\n            {\n                // class definition\n                // class Meta {}\n                pattern: /(\\bclass\\s+)\\w+/,\n                lookbehind: true\n            },\n            // File.read\n            /\\b[A-Z][a-z\\d_]*\\b/\n        ],\n        // A constant can be a variable, class, property or method. Just named in all uppercase letters\n        constant: /\\b[A-Z][A-Z\\d_]*\\b/,\n        null: {\n            pattern: /\\bnull\\b/,\n            alias: \"keyword\"\n        },\n        keyword: /\\b(?:as|break|class|construct|continue|else|for|foreign|if|import|in|is|return|static|super|this|var|while)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n        // Functions can be Class.method()\n        function: /\\b[a-z_]\\w*(?=\\s*[({])/i,\n        operator: /<<|>>|[=!<>]=?|&&|\\|\\||[-+*/%~^&|?:]|\\.{2,3}/,\n        punctuation: /[\\[\\](){}.,;]/\n    };\n    Prism.languages.wren[\"string-literal\"] = {\n        // A single quote string is multiline and can have interpolation (similar to JS backticks ``)\n        pattern: /(^|[^\\\\\"])\"(?:[^\\\\\"%]|\\\\[\\s\\S]|%(?!\\()|%\\((?:[^()]|\\((?:[^()]|\\([^)]*\\))*\\))*\\))*\"/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n            interpolation: {\n                // \"%(interpolation)\"\n                pattern: /((?:^|[^\\\\])(?:\\\\{2})*)%\\((?:[^()]|\\((?:[^()]|\\([^)]*\\))*\\))*\\)/,\n                lookbehind: true,\n                inside: {\n                    expression: {\n                        pattern: /^(%\\()[\\s\\S]+(?=\\)$)/,\n                        lookbehind: true,\n                        inside: Prism.languages.wren\n                    },\n                    \"interpolation-punctuation\": {\n                        pattern: /^%\\(|\\)$/,\n                        alias: \"punctuation\"\n                    }\n                }\n            },\n            string: /[\\s\\S]+/\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvd3Jlbi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDakIsbUJBQW1CO0lBQ25CQSxNQUFNQyxTQUFTLENBQUNKLElBQUksR0FBRztRQUNyQixnRUFBZ0U7UUFDaEUseUJBQXlCO1FBQ3pCSyxTQUFTO1lBQ1A7Z0JBQ0UsOEJBQThCO2dCQUM5QixxREFBcUQ7Z0JBQ3JEQyxTQUNFO2dCQUNGQyxRQUFRO1lBQ1Y7WUFDQTtnQkFDRUQsU0FBUztnQkFDVEUsWUFBWTtnQkFDWkQsUUFBUTtZQUNWO1NBQ0Q7UUFDRCxrRkFBa0Y7UUFDbEYsMkJBQTJCO1FBQzNCLHdCQUF3QjtZQUN0QkQsU0FBUztZQUNUQyxRQUFRO1lBQ1JFLE9BQU87UUFDVDtRQUNBLFlBQVk7UUFDWixrQkFBa0I7UUFDbEIsd0NBQXdDO1FBQ3hDQyxVQUFVO1lBQ1JKLFNBQVM7WUFDVEMsUUFBUTtZQUNSRSxPQUFPO1FBQ1Q7UUFDQSw4REFBOEQ7UUFDOURFLFdBQVc7WUFDVCwrQ0FBK0M7WUFDL0MsaUJBQWlCO1lBQ2pCLDBEQUEwRDtZQUMxREwsU0FBUztZQUNURyxPQUFPO1FBQ1Q7UUFDQSxjQUFjO1lBQ1o7Z0JBQ0UsbUJBQW1CO2dCQUNuQixnQkFBZ0I7Z0JBQ2hCSCxTQUFTO2dCQUNURSxZQUFZO1lBQ2Q7WUFDQSxZQUFZO1lBQ1o7U0FDRDtRQUNELCtGQUErRjtRQUMvRkksVUFBVTtRQUNWQyxNQUFNO1lBQ0pQLFNBQVM7WUFDVEcsT0FBTztRQUNUO1FBQ0FLLFNBQ0U7UUFDRkMsU0FBUztRQUNUQyxRQUFRO1FBQ1Isa0NBQWtDO1FBQ2xDQyxVQUFVO1FBQ1ZDLFVBQVU7UUFDVkMsYUFBYTtJQUNmO0lBQ0FoQixNQUFNQyxTQUFTLENBQUNKLElBQUksQ0FBQyxpQkFBaUIsR0FBRztRQUN2Qyw2RkFBNkY7UUFDN0ZNLFNBQ0U7UUFDRkUsWUFBWTtRQUNaRCxRQUFRO1FBQ1JhLFFBQVE7WUFDTkMsZUFBZTtnQkFDYixxQkFBcUI7Z0JBQ3JCZixTQUNFO2dCQUNGRSxZQUFZO2dCQUNaWSxRQUFRO29CQUNORSxZQUFZO3dCQUNWaEIsU0FBUzt3QkFDVEUsWUFBWTt3QkFDWlksUUFBUWpCLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSTtvQkFDOUI7b0JBQ0EsNkJBQTZCO3dCQUMzQk0sU0FBUzt3QkFDVEcsT0FBTztvQkFDVDtnQkFDRjtZQUNGO1lBQ0FjLFFBQVE7UUFDVjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWxpdGUvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvd3Jlbi5qcz8zYzRiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHdyZW5cbndyZW4uZGlzcGxheU5hbWUgPSAnd3JlbidcbndyZW4uYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiB3cmVuKFByaXNtKSB7XG4gIC8vIGh0dHBzOi8vd3Jlbi5pby9cbiAgUHJpc20ubGFuZ3VhZ2VzLndyZW4gPSB7XG4gICAgLy8gTXVsdGlsaW5lIGNvbW1lbnRzIGluIFdyZW4gY2FuIGhhdmUgbmVzdGVkIG11bHRpbGluZSBjb21tZW50c1xuICAgIC8vIENvbW1lbnRzOiAvLyBhbmQgLyogKi9cbiAgICBjb21tZW50OiBbXG4gICAgICB7XG4gICAgICAgIC8vIHN1cHBvcnQgMyBsZXZlbHMgb2YgbmVzdGluZ1xuICAgICAgICAvLyByZWdleDogXFwvXFwqKD86W14qL118XFwqKD8hXFwvKXxcXC8oPyFcXCopfDxzZWxmPikqXFwqXFwvXG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgL1xcL1xcKig/OlteKi9dfFxcKig/IVxcLyl8XFwvKD8hXFwqKXxcXC9cXCooPzpbXiovXXxcXCooPyFcXC8pfFxcLyg/IVxcKil8XFwvXFwqKD86W14qL118XFwqKD8hXFwvKXxcXC8oPyFcXCopKSpcXCpcXC8pKlxcKlxcLykqXFwqXFwvLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvKF58W15cXFxcOl0pXFwvXFwvLiovLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH1cbiAgICBdLFxuICAgIC8vIFRyaXBsZSBxdW90ZWQgc3RyaW5ncyBhcmUgbXVsdGlsaW5lIGJ1dCBjYW5ub3QgaGF2ZSBpbnRlcnBvbGF0aW9uIChyYXcgc3RyaW5ncylcbiAgICAvLyBCYXNlZCBvbiBwcmlzbS1weXRob24uanNcbiAgICAndHJpcGxlLXF1b3RlZC1zdHJpbmcnOiB7XG4gICAgICBwYXR0ZXJuOiAvXCJcIlwiW1xcc1xcU10qP1wiXCJcIi8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBhbGlhczogJ3N0cmluZydcbiAgICB9LFxuICAgIC8vIHNlZSBiZWxvd1xuICAgICdzdHJpbmctbGl0ZXJhbCc6IG51bGwsXG4gICAgLy8gIyEvdXNyL2Jpbi9lbnYgd3JlbiBvbiB0aGUgZmlyc3QgbGluZVxuICAgIGhhc2hiYW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvXiMhXFwvLisvLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgYWxpYXM6ICdjb21tZW50J1xuICAgIH0sXG4gICAgLy8gQXR0cmlidXRlcyBhcmUgc3BlY2lhbCBrZXl3b3JkcyB0byBhZGQgbWV0YSBkYXRhIHRvIGNsYXNzZXNcbiAgICBhdHRyaWJ1dGU6IHtcbiAgICAgIC8vICMhIGF0dHJpYnV0ZXMgYXJlIHN0b3JlZCBpbiBjbGFzcyBwcm9wZXJ0aWVzXG4gICAgICAvLyAjIW15dmFyID0gdHJ1ZVxuICAgICAgLy8gI2F0dHJpYnV0ZXMgYXJlIG5vdCBzdG9yZWQgYW5kIGRpc21pc3NlZCBhdCBjb21waWxhdGlvblxuICAgICAgcGF0dGVybjogLyMhP1sgXFx0XFx1MzAwMF0qXFx3Ky8sXG4gICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgfSxcbiAgICAnY2xhc3MtbmFtZSc6IFtcbiAgICAgIHtcbiAgICAgICAgLy8gY2xhc3MgZGVmaW5pdGlvblxuICAgICAgICAvLyBjbGFzcyBNZXRhIHt9XG4gICAgICAgIHBhdHRlcm46IC8oXFxiY2xhc3NcXHMrKVxcdysvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LCAvLyBBIGNsYXNzIG11c3QgYWx3YXlzIHN0YXJ0IHdpdGggYW4gdXBwZXJjYXNlLlxuICAgICAgLy8gRmlsZS5yZWFkXG4gICAgICAvXFxiW0EtWl1bYS16XFxkX10qXFxiL1xuICAgIF0sXG4gICAgLy8gQSBjb25zdGFudCBjYW4gYmUgYSB2YXJpYWJsZSwgY2xhc3MsIHByb3BlcnR5IG9yIG1ldGhvZC4gSnVzdCBuYW1lZCBpbiBhbGwgdXBwZXJjYXNlIGxldHRlcnNcbiAgICBjb25zdGFudDogL1xcYltBLVpdW0EtWlxcZF9dKlxcYi8sXG4gICAgbnVsbDoge1xuICAgICAgcGF0dGVybjogL1xcYm51bGxcXGIvLFxuICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgIH0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzphc3xicmVha3xjbGFzc3xjb25zdHJ1Y3R8Y29udGludWV8ZWxzZXxmb3J8Zm9yZWlnbnxpZnxpbXBvcnR8aW58aXN8cmV0dXJufHN0YXRpY3xzdXBlcnx0aGlzfHZhcnx3aGlsZSlcXGIvLFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAgbnVtYmVyOiAvXFxiKD86MHhbXFxkYS1mXSt8XFxkKyg/OlxcLlxcZCspPyg/OmVbKy1dP1xcZCspPylcXGIvaSxcbiAgICAvLyBGdW5jdGlvbnMgY2FuIGJlIENsYXNzLm1ldGhvZCgpXG4gICAgZnVuY3Rpb246IC9cXGJbYS16X11cXHcqKD89XFxzKlsoe10pL2ksXG4gICAgb3BlcmF0b3I6IC88PHw+PnxbPSE8Pl09P3wmJnxcXHxcXHx8Wy0rKi8lfl4mfD86XXxcXC57MiwzfS8sXG4gICAgcHVuY3R1YXRpb246IC9bXFxbXFxdKCl7fS4sO10vXG4gIH1cbiAgUHJpc20ubGFuZ3VhZ2VzLndyZW5bJ3N0cmluZy1saXRlcmFsJ10gPSB7XG4gICAgLy8gQSBzaW5nbGUgcXVvdGUgc3RyaW5nIGlzIG11bHRpbGluZSBhbmQgY2FuIGhhdmUgaW50ZXJwb2xhdGlvbiAoc2ltaWxhciB0byBKUyBiYWNrdGlja3MgYGApXG4gICAgcGF0dGVybjpcbiAgICAgIC8oXnxbXlxcXFxcIl0pXCIoPzpbXlxcXFxcIiVdfFxcXFxbXFxzXFxTXXwlKD8hXFwoKXwlXFwoKD86W14oKV18XFwoKD86W14oKV18XFwoW14pXSpcXCkpKlxcKSkqXFwpKSpcIi8sXG4gICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICBncmVlZHk6IHRydWUsXG4gICAgaW5zaWRlOiB7XG4gICAgICBpbnRlcnBvbGF0aW9uOiB7XG4gICAgICAgIC8vIFwiJShpbnRlcnBvbGF0aW9uKVwiXG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLygoPzpefFteXFxcXF0pKD86XFxcXHsyfSkqKSVcXCgoPzpbXigpXXxcXCgoPzpbXigpXXxcXChbXildKlxcKSkqXFwpKSpcXCkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBleHByZXNzaW9uOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvXiglXFwoKVtcXHNcXFNdKyg/PVxcKSQpLyxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy53cmVuXG4gICAgICAgICAgfSxcbiAgICAgICAgICAnaW50ZXJwb2xhdGlvbi1wdW5jdHVhdGlvbic6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC9eJVxcKHxcXCkkLyxcbiAgICAgICAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgc3RyaW5nOiAvW1xcc1xcU10rL1xuICAgIH1cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJ3cmVuIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImdyZWVkeSIsImxvb2tiZWhpbmQiLCJhbGlhcyIsImhhc2hiYW5nIiwiYXR0cmlidXRlIiwiY29uc3RhbnQiLCJudWxsIiwia2V5d29yZCIsImJvb2xlYW4iLCJudW1iZXIiLCJmdW5jdGlvbiIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iLCJpbnNpZGUiLCJpbnRlcnBvbGF0aW9uIiwiZXhwcmVzc2lvbiIsInN0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/wren.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/xeora.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/xeora.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = xeora;\nxeora.displayName = \"xeora\";\nxeora.aliases = [\n    \"xeoracube\"\n];\nfunction xeora(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.xeora = Prism.languages.extend(\"markup\", {\n            constant: {\n                pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n                inside: {\n                    punctuation: {\n                        pattern: /\\$/\n                    }\n                }\n            },\n            variable: {\n                pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n                inside: {\n                    punctuation: {\n                        pattern: /[$.]/\n                    },\n                    operator: {\n                        pattern: /#+|[-+*~=^@]/\n                    }\n                }\n            },\n            \"function-inline\": {\n                pattern: /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\$/,\n                inside: {\n                    variable: {\n                        pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n                        inside: {\n                            punctuation: {\n                                pattern: /[,.|]/\n                            },\n                            operator: {\n                                pattern: /#+|[-+*~=^@]/\n                            }\n                        }\n                    },\n                    punctuation: {\n                        pattern: /\\$\\w:|[$:?.,|]/\n                    }\n                },\n                alias: \"function\"\n            },\n            \"function-block\": {\n                pattern: /\\$XF:\\{[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\}:XF\\$/,\n                inside: {\n                    punctuation: {\n                        pattern: /[$:{}?.,|]/\n                    }\n                },\n                alias: \"function\"\n            },\n            \"directive-inline\": {\n                pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\/\\w.]+\\$/,\n                inside: {\n                    punctuation: {\n                        pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n                        inside: {\n                            tag: {\n                                pattern: /#\\d/\n                            }\n                        }\n                    }\n                },\n                alias: \"function\"\n            },\n            \"directive-block-open\": {\n                pattern: /\\$\\w+:\\{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\w.]+:\\{(?:![A-Z]+)?/,\n                inside: {\n                    punctuation: {\n                        pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n                        inside: {\n                            tag: {\n                                pattern: /#\\d/\n                            }\n                        }\n                    },\n                    attribute: {\n                        pattern: /![A-Z]+$/,\n                        inside: {\n                            punctuation: {\n                                pattern: /!/\n                            }\n                        },\n                        alias: \"keyword\"\n                    }\n                },\n                alias: \"function\"\n            },\n            \"directive-block-separator\": {\n                pattern: /\\}:[-\\w.]+:\\{/,\n                inside: {\n                    punctuation: {\n                        pattern: /[:{}]/\n                    }\n                },\n                alias: \"function\"\n            },\n            \"directive-block-close\": {\n                pattern: /\\}:[-\\w.]+\\$/,\n                inside: {\n                    punctuation: {\n                        pattern: /[:{}$]/\n                    }\n                },\n                alias: \"function\"\n            }\n        });\n        Prism.languages.insertBefore(\"inside\", \"punctuation\", {\n            variable: Prism.languages.xeora[\"function-inline\"].inside[\"variable\"]\n        }, Prism.languages.xeora[\"function-block\"]);\n        Prism.languages.xeoracube = Prism.languages.xeora;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcveGVvcmEuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsTUFBTUMsV0FBVyxHQUFHO0FBQ3BCRCxNQUFNRSxPQUFPLEdBQUc7SUFBQztDQUFZO0FBQzdCLFNBQVNGLE1BQU1HLEtBQUs7O0lBQ2hCLFVBQVVBLEtBQUs7UUFDZkEsTUFBTUMsU0FBUyxDQUFDSixLQUFLLEdBQUdHLE1BQU1DLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLFVBQVU7WUFDdkRDLFVBQVU7Z0JBQ1JDLFNBQVM7Z0JBQ1RDLFFBQVE7b0JBQ05DLGFBQWE7d0JBQ1hGLFNBQVM7b0JBQ1g7Z0JBQ0Y7WUFDRjtZQUNBRyxVQUFVO2dCQUNSSCxTQUFTO2dCQUNUQyxRQUFRO29CQUNOQyxhQUFhO3dCQUNYRixTQUFTO29CQUNYO29CQUNBSSxVQUFVO3dCQUNSSixTQUFTO29CQUNYO2dCQUNGO1lBQ0Y7WUFDQSxtQkFBbUI7Z0JBQ2pCQSxTQUNFO2dCQUNGQyxRQUFRO29CQUNORSxVQUFVO3dCQUNSSCxTQUFTO3dCQUNUQyxRQUFROzRCQUNOQyxhQUFhO2dDQUNYRixTQUFTOzRCQUNYOzRCQUNBSSxVQUFVO2dDQUNSSixTQUFTOzRCQUNYO3dCQUNGO29CQUNGO29CQUNBRSxhQUFhO3dCQUNYRixTQUFTO29CQUNYO2dCQUNGO2dCQUNBSyxPQUFPO1lBQ1Q7WUFDQSxrQkFBa0I7Z0JBQ2hCTCxTQUNFO2dCQUNGQyxRQUFRO29CQUNOQyxhQUFhO3dCQUNYRixTQUFTO29CQUNYO2dCQUNGO2dCQUNBSyxPQUFPO1lBQ1Q7WUFDQSxvQkFBb0I7Z0JBQ2xCTCxTQUFTO2dCQUNUQyxRQUFRO29CQUNOQyxhQUFhO3dCQUNYRixTQUFTO3dCQUNUQyxRQUFROzRCQUNOSyxLQUFLO2dDQUNITixTQUFTOzRCQUNYO3dCQUNGO29CQUNGO2dCQUNGO2dCQUNBSyxPQUFPO1lBQ1Q7WUFDQSx3QkFBd0I7Z0JBQ3RCTCxTQUNFO2dCQUNGQyxRQUFRO29CQUNOQyxhQUFhO3dCQUNYRixTQUFTO3dCQUNUQyxRQUFROzRCQUNOSyxLQUFLO2dDQUNITixTQUFTOzRCQUNYO3dCQUNGO29CQUNGO29CQUNBTyxXQUFXO3dCQUNUUCxTQUFTO3dCQUNUQyxRQUFROzRCQUNOQyxhQUFhO2dDQUNYRixTQUFTOzRCQUNYO3dCQUNGO3dCQUNBSyxPQUFPO29CQUNUO2dCQUNGO2dCQUNBQSxPQUFPO1lBQ1Q7WUFDQSw2QkFBNkI7Z0JBQzNCTCxTQUFTO2dCQUNUQyxRQUFRO29CQUNOQyxhQUFhO3dCQUNYRixTQUFTO29CQUNYO2dCQUNGO2dCQUNBSyxPQUFPO1lBQ1Q7WUFDQSx5QkFBeUI7Z0JBQ3ZCTCxTQUFTO2dCQUNUQyxRQUFRO29CQUNOQyxhQUFhO3dCQUNYRixTQUFTO29CQUNYO2dCQUNGO2dCQUNBSyxPQUFPO1lBQ1Q7UUFDRjtRQUNBVCxNQUFNQyxTQUFTLENBQUNXLFlBQVksQ0FDMUIsVUFDQSxlQUNBO1lBQ0VMLFVBQVVQLE1BQU1DLFNBQVMsQ0FBQ0osS0FBSyxDQUFDLGtCQUFrQixDQUFDUSxNQUFNLENBQUMsV0FBVztRQUN2RSxHQUNBTCxNQUFNQyxTQUFTLENBQUNKLEtBQUssQ0FBQyxpQkFBaUI7UUFFekNHLE1BQU1DLFNBQVMsQ0FBQ1ksU0FBUyxHQUFHYixNQUFNQyxTQUFTLENBQUNKLEtBQUs7SUFDbkQsR0FBR0c7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy94ZW9yYS5qcz8yZjVmIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHhlb3JhXG54ZW9yYS5kaXNwbGF5TmFtZSA9ICd4ZW9yYSdcbnhlb3JhLmFsaWFzZXMgPSBbJ3hlb3JhY3ViZSddXG5mdW5jdGlvbiB4ZW9yYShQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIFByaXNtLmxhbmd1YWdlcy54ZW9yYSA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ21hcmt1cCcsIHtcbiAgICAgIGNvbnN0YW50OiB7XG4gICAgICAgIHBhdHRlcm46IC9cXCQoPzpEb21haW5Db250ZW50c3xQYWdlUmVuZGVyRHVyYXRpb24pXFwkLyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgcHVuY3R1YXRpb246IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC9cXCQvXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgdmFyaWFibGU6IHtcbiAgICAgICAgcGF0dGVybjogL1xcJEA/KD86Iyt8Wy0rKn49Xl0pP1tcXHcuXStcXCQvLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjoge1xuICAgICAgICAgICAgcGF0dGVybjogL1skLl0vXG4gICAgICAgICAgfSxcbiAgICAgICAgICBvcGVyYXRvcjoge1xuICAgICAgICAgICAgcGF0dGVybjogLyMrfFstKyp+PV5AXS9cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICAnZnVuY3Rpb24taW5saW5lJzoge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC9cXCRGOlstXFx3Ll0rXFw/Wy1cXHcuXSsoPzosKD86KD86QFstI10qXFx3K1xcLltcXHcrLl1cXC4qKSpcXHwpKig/Oig/OltcXHcrXXxbLSMqLn5eXStbXFx3K118PVxcUykoPzpbXiQ9XXw9K1tePV0pKj0qfCg/OkBbLSNdKlxcdytcXC5bXFx3Ky5dXFwuKikrKD86KD86W1xcdytdfFstIyp+Xl1bLSMqLn5eXSpbXFx3K118PVxcUykoPzpbXiQ9XXw9K1tePV0pKj0qKT8pPyk/XFwkLyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgdmFyaWFibGU6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC8oPzpbLHxdKUA/KD86Iyt8Wy0rKn49Xl0pP1tcXHcuXSsvLFxuICAgICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICAgIHB1bmN0dWF0aW9uOiB7XG4gICAgICAgICAgICAgICAgcGF0dGVybjogL1ssLnxdL1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBvcGVyYXRvcjoge1xuICAgICAgICAgICAgICAgIHBhdHRlcm46IC8jK3xbLSsqfj1eQF0vXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHB1bmN0dWF0aW9uOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvXFwkXFx3OnxbJDo/Lix8XS9cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGFsaWFzOiAnZnVuY3Rpb24nXG4gICAgICB9LFxuICAgICAgJ2Z1bmN0aW9uLWJsb2NrJzoge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC9cXCRYRjpcXHtbLVxcdy5dK1xcP1stXFx3Ll0rKD86LCg/Oig/OkBbLSNdKlxcdytcXC5bXFx3Ky5dXFwuKikqXFx8KSooPzooPzpbXFx3K118Wy0jKi5+Xl0rW1xcdytdfD1cXFMpKD86W14kPV18PStbXj1dKSo9KnwoPzpAWy0jXSpcXHcrXFwuW1xcdysuXVxcLiopKyg/Oig/OltcXHcrXXxbLSMqfl5dWy0jKi5+Xl0qW1xcdytdfD1cXFMpKD86W14kPV18PStbXj1dKSo9Kik/KT8pP1xcfTpYRlxcJC8sXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIHB1bmN0dWF0aW9uOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvWyQ6e30/Lix8XS9cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGFsaWFzOiAnZnVuY3Rpb24nXG4gICAgICB9LFxuICAgICAgJ2RpcmVjdGl2ZS1pbmxpbmUnOiB7XG4gICAgICAgIHBhdHRlcm46IC9cXCRcXHcoPzojXFxkK1xcKz8pPyg/OlxcW1stXFx3Ll0rXFxdKT86Wy1cXC9cXHcuXStcXCQvLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjoge1xuICAgICAgICAgICAgcGF0dGVybjogL1xcJCg/Olxcdzp8Qyg/OlxcW3wjXFxkKSk/fFs6e1tcXF1dLyxcbiAgICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgICB0YWc6IHtcbiAgICAgICAgICAgICAgICBwYXR0ZXJuOiAvI1xcZC9cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgYWxpYXM6ICdmdW5jdGlvbidcbiAgICAgIH0sXG4gICAgICAnZGlyZWN0aXZlLWJsb2NrLW9wZW4nOiB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgL1xcJFxcdys6XFx7fFxcJFxcdyg/OiNcXGQrXFwrPyk/KD86XFxbWy1cXHcuXStcXF0pPzpbLVxcdy5dKzpcXHsoPzohW0EtWl0rKT8vLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjoge1xuICAgICAgICAgICAgcGF0dGVybjogL1xcJCg/Olxcdzp8Qyg/OlxcW3wjXFxkKSk/fFs6e1tcXF1dLyxcbiAgICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgICB0YWc6IHtcbiAgICAgICAgICAgICAgICBwYXR0ZXJuOiAvI1xcZC9cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgYXR0cmlidXRlOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvIVtBLVpdKyQvLFxuICAgICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICAgIHB1bmN0dWF0aW9uOiB7XG4gICAgICAgICAgICAgICAgcGF0dGVybjogLyEvXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBhbGlhczogJ2Z1bmN0aW9uJ1xuICAgICAgfSxcbiAgICAgICdkaXJlY3RpdmUtYmxvY2stc2VwYXJhdG9yJzoge1xuICAgICAgICBwYXR0ZXJuOiAvXFx9OlstXFx3Ll0rOlxcey8sXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIHB1bmN0dWF0aW9uOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvWzp7fV0vXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBhbGlhczogJ2Z1bmN0aW9uJ1xuICAgICAgfSxcbiAgICAgICdkaXJlY3RpdmUtYmxvY2stY2xvc2UnOiB7XG4gICAgICAgIHBhdHRlcm46IC9cXH06Wy1cXHcuXStcXCQvLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjoge1xuICAgICAgICAgICAgcGF0dGVybjogL1s6e30kXS9cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGFsaWFzOiAnZnVuY3Rpb24nXG4gICAgICB9XG4gICAgfSlcbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKFxuICAgICAgJ2luc2lkZScsXG4gICAgICAncHVuY3R1YXRpb24nLFxuICAgICAge1xuICAgICAgICB2YXJpYWJsZTogUHJpc20ubGFuZ3VhZ2VzLnhlb3JhWydmdW5jdGlvbi1pbmxpbmUnXS5pbnNpZGVbJ3ZhcmlhYmxlJ11cbiAgICAgIH0sXG4gICAgICBQcmlzbS5sYW5ndWFnZXMueGVvcmFbJ2Z1bmN0aW9uLWJsb2NrJ11cbiAgICApXG4gICAgUHJpc20ubGFuZ3VhZ2VzLnhlb3JhY3ViZSA9IFByaXNtLmxhbmd1YWdlcy54ZW9yYVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwieGVvcmEiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImV4dGVuZCIsImNvbnN0YW50IiwicGF0dGVybiIsImluc2lkZSIsInB1bmN0dWF0aW9uIiwidmFyaWFibGUiLCJvcGVyYXRvciIsImFsaWFzIiwidGFnIiwiYXR0cmlidXRlIiwiaW5zZXJ0QmVmb3JlIiwieGVvcmFjdWJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/xeora.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/xml-doc.js":
/*!************************************************!*\
  !*** ./node_modules/refractor/lang/xml-doc.js ***!
  \************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = xmlDoc;\nxmlDoc.displayName = \"xmlDoc\";\nxmlDoc.aliases = [];\nfunction xmlDoc(Prism) {\n    ;\n    (function(Prism) {\n        /**\n     * If the given language is present, it will insert the given doc comment grammar token into it.\n     *\n     * @param {string} lang\n     * @param {any} docComment\n     */ function insertDocComment(lang, docComment) {\n            if (Prism.languages[lang]) {\n                Prism.languages.insertBefore(lang, \"comment\", {\n                    \"doc-comment\": docComment\n                });\n            }\n        }\n        var tag = Prism.languages.markup.tag;\n        var slashDocComment = {\n            pattern: /\\/\\/\\/.*/,\n            greedy: true,\n            alias: \"comment\",\n            inside: {\n                tag: tag\n            }\n        };\n        var tickDocComment = {\n            pattern: /'''.*/,\n            greedy: true,\n            alias: \"comment\",\n            inside: {\n                tag: tag\n            }\n        };\n        insertDocComment(\"csharp\", slashDocComment);\n        insertDocComment(\"fsharp\", slashDocComment);\n        insertDocComment(\"vbnet\", tickDocComment);\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcveG1sLWRvYy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxPQUFPQyxXQUFXLEdBQUc7QUFDckJELE9BQU9FLE9BQU8sR0FBRyxFQUFFO0FBQ25CLFNBQVNGLE9BQU9HLEtBQUs7O0lBQ2pCLFVBQVVBLEtBQUs7UUFDZjs7Ozs7S0FLQyxHQUNELFNBQVNDLGlCQUFpQkMsSUFBSSxFQUFFQyxVQUFVO1lBQ3hDLElBQUlILE1BQU1JLFNBQVMsQ0FBQ0YsS0FBSyxFQUFFO2dCQUN6QkYsTUFBTUksU0FBUyxDQUFDQyxZQUFZLENBQUNILE1BQU0sV0FBVztvQkFDNUMsZUFBZUM7Z0JBQ2pCO1lBQ0Y7UUFDRjtRQUNBLElBQUlHLE1BQU1OLE1BQU1JLFNBQVMsQ0FBQ0csTUFBTSxDQUFDRCxHQUFHO1FBQ3BDLElBQUlFLGtCQUFrQjtZQUNwQkMsU0FBUztZQUNUQyxRQUFRO1lBQ1JDLE9BQU87WUFDUEMsUUFBUTtnQkFDTk4sS0FBS0E7WUFDUDtRQUNGO1FBQ0EsSUFBSU8saUJBQWlCO1lBQ25CSixTQUFTO1lBQ1RDLFFBQVE7WUFDUkMsT0FBTztZQUNQQyxRQUFRO2dCQUNOTixLQUFLQTtZQUNQO1FBQ0Y7UUFDQUwsaUJBQWlCLFVBQVVPO1FBQzNCUCxpQkFBaUIsVUFBVU87UUFDM0JQLGlCQUFpQixTQUFTWTtJQUM1QixHQUFHYjtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3htbC1kb2MuanM/NDE4MiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSB4bWxEb2NcbnhtbERvYy5kaXNwbGF5TmFtZSA9ICd4bWxEb2MnXG54bWxEb2MuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiB4bWxEb2MoUHJpc20pIHtcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICAvKipcbiAgICAgKiBJZiB0aGUgZ2l2ZW4gbGFuZ3VhZ2UgaXMgcHJlc2VudCwgaXQgd2lsbCBpbnNlcnQgdGhlIGdpdmVuIGRvYyBjb21tZW50IGdyYW1tYXIgdG9rZW4gaW50byBpdC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBsYW5nXG4gICAgICogQHBhcmFtIHthbnl9IGRvY0NvbW1lbnRcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpbnNlcnREb2NDb21tZW50KGxhbmcsIGRvY0NvbW1lbnQpIHtcbiAgICAgIGlmIChQcmlzbS5sYW5ndWFnZXNbbGFuZ10pIHtcbiAgICAgICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZShsYW5nLCAnY29tbWVudCcsIHtcbiAgICAgICAgICAnZG9jLWNvbW1lbnQnOiBkb2NDb21tZW50XG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgfVxuICAgIHZhciB0YWcgPSBQcmlzbS5sYW5ndWFnZXMubWFya3VwLnRhZ1xuICAgIHZhciBzbGFzaERvY0NvbW1lbnQgPSB7XG4gICAgICBwYXR0ZXJuOiAvXFwvXFwvXFwvLiovLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgYWxpYXM6ICdjb21tZW50JyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICB0YWc6IHRhZ1xuICAgICAgfVxuICAgIH1cbiAgICB2YXIgdGlja0RvY0NvbW1lbnQgPSB7XG4gICAgICBwYXR0ZXJuOiAvJycnLiovLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgYWxpYXM6ICdjb21tZW50JyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICB0YWc6IHRhZ1xuICAgICAgfVxuICAgIH1cbiAgICBpbnNlcnREb2NDb21tZW50KCdjc2hhcnAnLCBzbGFzaERvY0NvbW1lbnQpXG4gICAgaW5zZXJ0RG9jQ29tbWVudCgnZnNoYXJwJywgc2xhc2hEb2NDb21tZW50KVxuICAgIGluc2VydERvY0NvbW1lbnQoJ3ZibmV0JywgdGlja0RvY0NvbW1lbnQpXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJ4bWxEb2MiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImluc2VydERvY0NvbW1lbnQiLCJsYW5nIiwiZG9jQ29tbWVudCIsImxhbmd1YWdlcyIsImluc2VydEJlZm9yZSIsInRhZyIsIm1hcmt1cCIsInNsYXNoRG9jQ29tbWVudCIsInBhdHRlcm4iLCJncmVlZHkiLCJhbGlhcyIsImluc2lkZSIsInRpY2tEb2NDb21tZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/xml-doc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/xojo.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/xojo.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = xojo;\nxojo.displayName = \"xojo\";\nxojo.aliases = [];\nfunction xojo(Prism) {\n    Prism.languages.xojo = {\n        comment: {\n            pattern: /(?:'|\\/\\/|Rem\\b).+/i,\n            greedy: true\n        },\n        string: {\n            pattern: /\"(?:\"\"|[^\"])*\"/,\n            greedy: true\n        },\n        number: [\n            /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n            /&[bchou][a-z\\d]+/i\n        ],\n        directive: {\n            pattern: /#(?:Else|ElseIf|Endif|If|Pragma)\\b/i,\n            alias: \"property\"\n        },\n        keyword: /\\b(?:AddHandler|App|Array|As(?:signs)?|Auto|Boolean|Break|By(?:Ref|Val)|Byte|Call|Case|Catch|CFStringRef|CGFloat|Class|Color|Const|Continue|CString|Currency|CurrentMethodName|Declare|Delegate|Dim|Do(?:uble|wnTo)?|Each|Else(?:If)?|End|Enumeration|Event|Exception|Exit|Extends|False|Finally|For|Function|Get|GetTypeInfo|Global|GOTO|If|Implements|In|Inherits|Int(?:8|16|32|64|eger|erface)?|Lib|Loop|Me|Module|Next|Nil|Object|Optional|OSType|ParamArray|Private|Property|Protected|PString|Ptr|Raise(?:Event)?|ReDim|RemoveHandler|Return|Select(?:or)?|Self|Set|Shared|Short|Single|Soft|Static|Step|String|Sub|Super|Text|Then|To|True|Try|Ubound|UInt(?:8|16|32|64|eger)?|Until|Using|Var(?:iant)?|Wend|While|WindowPtr|WString)\\b/i,\n        operator: /<[=>]?|>=?|[+\\-*\\/\\\\^=]|\\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|WeakAddressOf|Xor)\\b/i,\n        punctuation: /[.,;:()]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcveG9qby5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDakJBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHO1FBQ3JCSyxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FDLFFBQVE7WUFDTkYsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUUsUUFBUTtZQUFDO1lBQThDO1NBQW9CO1FBQzNFQyxXQUFXO1lBQ1RKLFNBQVM7WUFDVEssT0FBTztRQUNUO1FBQ0FDLFNBQ0U7UUFDRkMsVUFDRTtRQUNGQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtbGl0ZS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy94b2pvLmpzP2EyOTMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0geG9qb1xueG9qby5kaXNwbGF5TmFtZSA9ICd4b2pvJ1xueG9qby5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIHhvam8oUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLnhvam8gPSB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogLyg/Oid8XFwvXFwvfFJlbVxcYikuKy9pLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIig/OlwiXCJ8W15cIl0pKlwiLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgbnVtYmVyOiBbLyg/OlxcYlxcZCsoPzpcXC5cXGQqKT98XFxCXFwuXFxkKykoPzpFWystXT9cXGQrKT8vaSwgLyZbYmNob3VdW2EtelxcZF0rL2ldLFxuICAgIGRpcmVjdGl2ZToge1xuICAgICAgcGF0dGVybjogLyMoPzpFbHNlfEVsc2VJZnxFbmRpZnxJZnxQcmFnbWEpXFxiL2ksXG4gICAgICBhbGlhczogJ3Byb3BlcnR5J1xuICAgIH0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzpBZGRIYW5kbGVyfEFwcHxBcnJheXxBcyg/OnNpZ25zKT98QXV0b3xCb29sZWFufEJyZWFrfEJ5KD86UmVmfFZhbCl8Qnl0ZXxDYWxsfENhc2V8Q2F0Y2h8Q0ZTdHJpbmdSZWZ8Q0dGbG9hdHxDbGFzc3xDb2xvcnxDb25zdHxDb250aW51ZXxDU3RyaW5nfEN1cnJlbmN5fEN1cnJlbnRNZXRob2ROYW1lfERlY2xhcmV8RGVsZWdhdGV8RGltfERvKD86dWJsZXx3blRvKT98RWFjaHxFbHNlKD86SWYpP3xFbmR8RW51bWVyYXRpb258RXZlbnR8RXhjZXB0aW9ufEV4aXR8RXh0ZW5kc3xGYWxzZXxGaW5hbGx5fEZvcnxGdW5jdGlvbnxHZXR8R2V0VHlwZUluZm98R2xvYmFsfEdPVE98SWZ8SW1wbGVtZW50c3xJbnxJbmhlcml0c3xJbnQoPzo4fDE2fDMyfDY0fGVnZXJ8ZXJmYWNlKT98TGlifExvb3B8TWV8TW9kdWxlfE5leHR8TmlsfE9iamVjdHxPcHRpb25hbHxPU1R5cGV8UGFyYW1BcnJheXxQcml2YXRlfFByb3BlcnR5fFByb3RlY3RlZHxQU3RyaW5nfFB0cnxSYWlzZSg/OkV2ZW50KT98UmVEaW18UmVtb3ZlSGFuZGxlcnxSZXR1cm58U2VsZWN0KD86b3IpP3xTZWxmfFNldHxTaGFyZWR8U2hvcnR8U2luZ2xlfFNvZnR8U3RhdGljfFN0ZXB8U3RyaW5nfFN1YnxTdXBlcnxUZXh0fFRoZW58VG98VHJ1ZXxUcnl8VWJvdW5kfFVJbnQoPzo4fDE2fDMyfDY0fGVnZXIpP3xVbnRpbHxVc2luZ3xWYXIoPzppYW50KT98V2VuZHxXaGlsZXxXaW5kb3dQdHJ8V1N0cmluZylcXGIvaSxcbiAgICBvcGVyYXRvcjpcbiAgICAgIC88Wz0+XT98Pj0/fFsrXFwtKlxcL1xcXFxePV18XFxiKD86QWRkcmVzc09mfEFuZHxDdHlwZXxJc0E/fE1vZHxOZXd8Tm90fE9yfFdlYWtBZGRyZXNzT2Z8WG9yKVxcYi9pLFxuICAgIHB1bmN0dWF0aW9uOiAvWy4sOzooKV0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwieG9qbyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJncmVlZHkiLCJzdHJpbmciLCJudW1iZXIiLCJkaXJlY3RpdmUiLCJhbGlhcyIsImtleXdvcmQiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/xojo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/xquery.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/xquery.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = xquery;\nxquery.displayName = \"xquery\";\nxquery.aliases = [];\nfunction xquery(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.xquery = Prism.languages.extend(\"markup\", {\n            \"xquery-comment\": {\n                pattern: /\\(:[\\s\\S]*?:\\)/,\n                greedy: true,\n                alias: \"comment\"\n            },\n            string: {\n                pattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\n                greedy: true\n            },\n            extension: {\n                pattern: /\\(#.+?#\\)/,\n                alias: \"symbol\"\n            },\n            variable: /\\$[-\\w:]+/,\n            axis: {\n                pattern: /(^|[^-])(?:ancestor(?:-or-self)?|attribute|child|descendant(?:-or-self)?|following(?:-sibling)?|parent|preceding(?:-sibling)?|self)(?=::)/,\n                lookbehind: true,\n                alias: \"operator\"\n            },\n            \"keyword-operator\": {\n                pattern: /(^|[^:-])\\b(?:and|castable as|div|eq|except|ge|gt|idiv|instance of|intersect|is|le|lt|mod|ne|or|union)\\b(?=$|[^:-])/,\n                lookbehind: true,\n                alias: \"operator\"\n            },\n            keyword: {\n                pattern: /(^|[^:-])\\b(?:as|ascending|at|base-uri|boundary-space|case|cast as|collation|construction|copy-namespaces|declare|default|descending|else|empty (?:greatest|least)|encoding|every|external|for|function|if|import|in|inherit|lax|let|map|module|namespace|no-inherit|no-preserve|option|order(?: by|ed|ing)?|preserve|return|satisfies|schema|some|stable|strict|strip|then|to|treat as|typeswitch|unordered|validate|variable|version|where|xquery)\\b(?=$|[^:-])/,\n                lookbehind: true\n            },\n            function: /[\\w-]+(?::[\\w-]+)*(?=\\s*\\()/,\n            \"xquery-element\": {\n                pattern: /(element\\s+)[\\w-]+(?::[\\w-]+)*/,\n                lookbehind: true,\n                alias: \"tag\"\n            },\n            \"xquery-attribute\": {\n                pattern: /(attribute\\s+)[\\w-]+(?::[\\w-]+)*/,\n                lookbehind: true,\n                alias: \"attr-name\"\n            },\n            builtin: {\n                pattern: /(^|[^:-])\\b(?:attribute|comment|document|element|processing-instruction|text|xs:(?:ENTITIES|ENTITY|ID|IDREFS?|NCName|NMTOKENS?|NOTATION|Name|QName|anyAtomicType|anyType|anyURI|base64Binary|boolean|byte|date|dateTime|dayTimeDuration|decimal|double|duration|float|gDay|gMonth|gMonthDay|gYear|gYearMonth|hexBinary|int|integer|language|long|negativeInteger|nonNegativeInteger|nonPositiveInteger|normalizedString|positiveInteger|short|string|time|token|unsigned(?:Byte|Int|Long|Short)|untyped(?:Atomic)?|yearMonthDuration))\\b(?=$|[^:-])/,\n                lookbehind: true\n            },\n            number: /\\b\\d+(?:\\.\\d+)?(?:E[+-]?\\d+)?/,\n            operator: [\n                /[+*=?|@]|\\.\\.?|:=|!=|<[=<]?|>[=>]?/,\n                {\n                    pattern: /(\\s)-(?=\\s)/,\n                    lookbehind: true\n                }\n            ],\n            punctuation: /[[\\](){},;:/]/\n        });\n        Prism.languages.xquery.tag.pattern = /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/;\n        Prism.languages.xquery[\"tag\"].inside[\"attr-value\"].pattern = /=(?:(\"|')(?:\\\\[\\s\\S]|\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/;\n        Prism.languages.xquery[\"tag\"].inside[\"attr-value\"].inside[\"punctuation\"] = /^=\"|\"$/;\n        Prism.languages.xquery[\"tag\"].inside[\"attr-value\"].inside[\"expression\"] = {\n            // Allow for two levels of nesting\n            pattern: /\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}/,\n            inside: Prism.languages.xquery,\n            alias: \"language-xquery\"\n        } // The following will handle plain text inside tags\n        ;\n        var stringifyToken = function(token) {\n            if (typeof token === \"string\") {\n                return token;\n            }\n            if (typeof token.content === \"string\") {\n                return token.content;\n            }\n            return token.content.map(stringifyToken).join(\"\");\n        };\n        var walkTokens = function(tokens) {\n            var openedTags = [];\n            for(var i = 0; i < tokens.length; i++){\n                var token = tokens[i];\n                var notTagNorBrace = false;\n                if (typeof token !== \"string\") {\n                    if (token.type === \"tag\" && token.content[0] && token.content[0].type === \"tag\") {\n                        // We found a tag, now find its kind\n                        if (token.content[0].content[0].content === \"</\") {\n                            // Closing tag\n                            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n                                // Pop matching opening tag\n                                openedTags.pop();\n                            }\n                        } else {\n                            if (token.content[token.content.length - 1].content === \"/>\") {\n                            // Autoclosed tag, ignore\n                            } else {\n                                // Opening tag\n                                openedTags.push({\n                                    tagName: stringifyToken(token.content[0].content[1]),\n                                    openedBraces: 0\n                                });\n                            }\n                        }\n                    } else if (openedTags.length > 0 && token.type === \"punctuation\" && token.content === \"{\" && // Ignore `{{`\n                    (!tokens[i + 1] || tokens[i + 1].type !== \"punctuation\" || tokens[i + 1].content !== \"{\") && (!tokens[i - 1] || tokens[i - 1].type !== \"plain-text\" || tokens[i - 1].content !== \"{\")) {\n                        // Here we might have entered an XQuery expression inside a tag\n                        openedTags[openedTags.length - 1].openedBraces++;\n                    } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === \"punctuation\" && token.content === \"}\") {\n                        // Here we might have left an XQuery expression inside a tag\n                        openedTags[openedTags.length - 1].openedBraces--;\n                    } else if (token.type !== \"comment\") {\n                        notTagNorBrace = true;\n                    }\n                }\n                if (notTagNorBrace || typeof token === \"string\") {\n                    if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n                        // Here we are inside a tag, and not inside an XQuery expression.\n                        // That's plain text: drop any tokens matched.\n                        var plainText = stringifyToken(token) // And merge text with adjacent text\n                        ;\n                        if (i < tokens.length - 1 && (typeof tokens[i + 1] === \"string\" || tokens[i + 1].type === \"plain-text\")) {\n                            plainText += stringifyToken(tokens[i + 1]);\n                            tokens.splice(i + 1, 1);\n                        }\n                        if (i > 0 && (typeof tokens[i - 1] === \"string\" || tokens[i - 1].type === \"plain-text\")) {\n                            plainText = stringifyToken(tokens[i - 1]) + plainText;\n                            tokens.splice(i - 1, 1);\n                            i--;\n                        }\n                        if (/^\\s+$/.test(plainText)) {\n                            tokens[i] = plainText;\n                        } else {\n                            tokens[i] = new Prism.Token(\"plain-text\", plainText, null, plainText);\n                        }\n                    }\n                }\n                if (token.content && typeof token.content !== \"string\") {\n                    walkTokens(token.content);\n                }\n            }\n        };\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            if (env.language !== \"xquery\") {\n                return;\n            }\n            walkTokens(env.tokens);\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/xquery.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/yaml.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/yaml.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = yaml;\nyaml.displayName = \"yaml\";\nyaml.aliases = [\n    \"yml\"\n];\nfunction yaml(Prism) {\n    ;\n    (function(Prism) {\n        // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n        // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n        var anchorOrAlias = /[*&][^\\s[\\]{},]+/ // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n        ;\n        var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/ // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n        ;\n        var properties = \"(?:\" + tag.source + \"(?:[ \t]+\" + anchorOrAlias.source + \")?|\" + anchorOrAlias.source + \"(?:[ \t]+\" + tag.source + \")?)\" // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n        ;\n        // This is a simplified version that doesn't support \"#\" and multiline keys\n        // All these long scarry character classes are simplified versions of YAML's characters\n        var plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function() {\n            return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source;\n        });\n        var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n        /**\n     *\n     * @param {string} value\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */ function createValuePattern(value, flags) {\n            flags = (flags || \"\").replace(/m/g, \"\") + \"m\" // add m flag\n            ;\n            var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g, function() {\n                return properties;\n            }).replace(/<<value>>/g, function() {\n                return value;\n            });\n            return RegExp(pattern, flags);\n        }\n        Prism.languages.yaml = {\n            scalar: {\n                pattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g, function() {\n                    return properties;\n                })),\n                lookbehind: true,\n                alias: \"string\"\n            },\n            comment: /#.*/,\n            key: {\n                pattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g, function() {\n                    return properties;\n                }).replace(/<<key>>/g, function() {\n                    return \"(?:\" + plainKey + \"|\" + string + \")\";\n                })),\n                lookbehind: true,\n                greedy: true,\n                alias: \"atrule\"\n            },\n            directive: {\n                pattern: /(^[ \\t]*)%.+/m,\n                lookbehind: true,\n                alias: \"important\"\n            },\n            datetime: {\n                pattern: createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n                lookbehind: true,\n                alias: \"number\"\n            },\n            boolean: {\n                pattern: createValuePattern(/false|true/.source, \"i\"),\n                lookbehind: true,\n                alias: \"important\"\n            },\n            null: {\n                pattern: createValuePattern(/null|~/.source, \"i\"),\n                lookbehind: true,\n                alias: \"important\"\n            },\n            string: {\n                pattern: createValuePattern(string),\n                lookbehind: true,\n                greedy: true\n            },\n            number: {\n                pattern: createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, \"i\"),\n                lookbehind: true\n            },\n            tag: tag,\n            important: anchorOrAlias,\n            punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n        };\n        Prism.languages.yml = Prism.languages.yaml;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/yaml.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/yang.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/yang.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = yang;\nyang.displayName = \"yang\";\nyang.aliases = [];\nfunction yang(Prism) {\n    Prism.languages.yang = {\n        // https://tools.ietf.org/html/rfc6020#page-34\n        // http://www.yang-central.org/twiki/bin/view/Main/YangExamples\n        comment: /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,\n        string: {\n            pattern: /\"(?:[^\\\\\"]|\\\\.)*\"|'[^']*'/,\n            greedy: true\n        },\n        keyword: {\n            pattern: /(^|[{};\\r\\n][ \\t]*)[a-z_][\\w.-]*/i,\n            lookbehind: true\n        },\n        namespace: {\n            pattern: /(\\s)[a-z_][\\w.-]*(?=:)/i,\n            lookbehind: true\n        },\n        boolean: /\\b(?:false|true)\\b/,\n        operator: /\\+/,\n        punctuation: /[{};:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcveWFuZy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxLQUFLQyxXQUFXLEdBQUc7QUFDbkJELEtBQUtFLE9BQU8sR0FBRyxFQUFFO0FBQ2pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDakJBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHO1FBQ3JCLDhDQUE4QztRQUM5QywrREFBK0Q7UUFDL0RLLFNBQVM7UUFDVEMsUUFBUTtZQUNOQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBQyxTQUFTO1lBQ1BGLFNBQVM7WUFDVEcsWUFBWTtRQUNkO1FBQ0FDLFdBQVc7WUFDVEosU0FBUztZQUNURyxZQUFZO1FBQ2Q7UUFDQUUsU0FBUztRQUNUQyxVQUFVO1FBQ1ZDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3lhbmcuanM/M2NmZCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSB5YW5nXG55YW5nLmRpc3BsYXlOYW1lID0gJ3lhbmcnXG55YW5nLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24geWFuZyhQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMueWFuZyA9IHtcbiAgICAvLyBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNjAyMCNwYWdlLTM0XG4gICAgLy8gaHR0cDovL3d3dy55YW5nLWNlbnRyYWwub3JnL3R3aWtpL2Jpbi92aWV3L01haW4vWWFuZ0V4YW1wbGVzXG4gICAgY29tbWVudDogL1xcL1xcKltcXHNcXFNdKj9cXCpcXC98XFwvXFwvLiovLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1wiKD86W15cXFxcXCJdfFxcXFwuKSpcInwnW14nXSonLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAga2V5d29yZDoge1xuICAgICAgcGF0dGVybjogLyhefFt7fTtcXHJcXG5dWyBcXHRdKilbYS16X11bXFx3Li1dKi9pLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgbmFtZXNwYWNlOiB7XG4gICAgICBwYXR0ZXJuOiAvKFxccylbYS16X11bXFx3Li1dKig/PTopL2ksXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvLFxuICAgIG9wZXJhdG9yOiAvXFwrLyxcbiAgICBwdW5jdHVhdGlvbjogL1t7fTs6XS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJ5YW5nIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50Iiwic3RyaW5nIiwicGF0dGVybiIsImdyZWVkeSIsImtleXdvcmQiLCJsb29rYmVoaW5kIiwibmFtZXNwYWNlIiwiYm9vbGVhbiIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/yang.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/lang/zig.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/zig.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = zig;\nzig.displayName = \"zig\";\nzig.aliases = [];\nfunction zig(Prism) {\n    ;\n    (function(Prism) {\n        function literal(str) {\n            return function() {\n                return str;\n            };\n        }\n        var keyword = /\\b(?:align|allowzero|and|anyframe|anytype|asm|async|await|break|cancel|catch|comptime|const|continue|defer|else|enum|errdefer|error|export|extern|fn|for|if|inline|linksection|nakedcc|noalias|nosuspend|null|or|orelse|packed|promise|pub|resume|return|stdcallcc|struct|suspend|switch|test|threadlocal|try|undefined|union|unreachable|usingnamespace|var|volatile|while)\\b/;\n        var IDENTIFIER = \"\\\\b(?!\" + keyword.source + \")(?!\\\\d)\\\\w+\\\\b\";\n        var ALIGN = /align\\s*\\((?:[^()]|\\([^()]*\\))*\\)/.source;\n        var PREFIX_TYPE_OP = /(?:\\?|\\bpromise->|(?:\\[[^[\\]]*\\]|\\*(?!\\*)|\\*\\*)(?:\\s*<ALIGN>|\\s*const\\b|\\s*volatile\\b|\\s*allowzero\\b)*)/.source.replace(/<ALIGN>/g, literal(ALIGN));\n        var SUFFIX_EXPR = /(?:\\bpromise\\b|(?:\\berror\\.)?<ID>(?:\\.<ID>)*(?!\\s+<ID>))/.source.replace(/<ID>/g, literal(IDENTIFIER));\n        var TYPE = \"(?!\\\\s)(?:!?\\\\s*(?:\" + PREFIX_TYPE_OP + \"\\\\s*)*\" + SUFFIX_EXPR + \")+\";\n        /*\n     * A simplified grammar for Zig compile time type literals:\n     *\n     * TypeExpr = ( \"!\"? PREFIX_TYPE_OP* SUFFIX_EXPR )+\n     *\n     * SUFFIX_EXPR = ( \\b \"promise\" \\b | ( \\b \"error\" \".\" )? IDENTIFIER ( \".\" IDENTIFIER )* (?! \\s+ IDENTIFIER ) )\n     *\n     * PREFIX_TYPE_OP = \"?\"\n     *                | \\b \"promise\" \"->\"\n     *                | ( \"[\" [^\\[\\]]* \"]\" | \"*\" | \"**\" ) ( ALIGN | \"const\" \\b | \"volatile\" \\b | \"allowzero\" \\b )*\n     *\n     * ALIGN = \"align\" \"(\" ( [^()] | \"(\" [^()]* \")\" )* \")\"\n     *\n     * IDENTIFIER = \\b (?! KEYWORD ) [a-zA-Z_] \\w* \\b\n     *\n     */ Prism.languages.zig = {\n            comment: [\n                {\n                    pattern: /\\/\\/[/!].*/,\n                    alias: \"doc-comment\"\n                },\n                /\\/{2}.*/\n            ],\n            string: [\n                {\n                    // \"string\" and c\"string\"\n                    pattern: /(^|[^\\\\@])c?\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n                    lookbehind: true,\n                    greedy: true\n                },\n                {\n                    // multiline strings and c-strings\n                    pattern: /([\\r\\n])([ \\t]+c?\\\\{2}).*(?:(?:\\r\\n?|\\n)\\2.*)*/,\n                    lookbehind: true,\n                    greedy: true\n                }\n            ],\n            char: {\n                // characters 'a', '\\n', '\\xFF', '\\u{10FFFF}'\n                pattern: /(^|[^\\\\])'(?:[^'\\\\\\r\\n]|[\\uD800-\\uDFFF]{2}|\\\\(?:.|x[a-fA-F\\d]{2}|u\\{[a-fA-F\\d]{1,6}\\}))'/,\n                lookbehind: true,\n                greedy: true\n            },\n            builtin: /\\B@(?!\\d)\\w+(?=\\s*\\()/,\n            label: {\n                pattern: /(\\b(?:break|continue)\\s*:\\s*)\\w+\\b|\\b(?!\\d)\\w+\\b(?=\\s*:\\s*(?:\\{|while\\b))/,\n                lookbehind: true\n            },\n            \"class-name\": [\n                // const Foo = struct {};\n                /\\b(?!\\d)\\w+(?=\\s*=\\s*(?:(?:extern|packed)\\s+)?(?:enum|struct|union)\\s*[({])/,\n                {\n                    // const x: i32 = 9;\n                    // var x: Bar;\n                    // fn foo(x: bool, y: f32) void {}\n                    pattern: RegExp(/(:\\s*)<TYPE>(?=\\s*(?:<ALIGN>\\s*)?[=;,)])|<TYPE>(?=\\s*(?:<ALIGN>\\s*)?\\{)/.source.replace(/<TYPE>/g, literal(TYPE)).replace(/<ALIGN>/g, literal(ALIGN))),\n                    lookbehind: true,\n                    inside: null // see below\n                },\n                {\n                    // extern fn foo(x: f64) f64; (optional alignment)\n                    pattern: RegExp(/(\\)\\s*)<TYPE>(?=\\s*(?:<ALIGN>\\s*)?;)/.source.replace(/<TYPE>/g, literal(TYPE)).replace(/<ALIGN>/g, literal(ALIGN))),\n                    lookbehind: true,\n                    inside: null // see below\n                }\n            ],\n            \"builtin-type\": {\n                pattern: /\\b(?:anyerror|bool|c_u?(?:int|long|longlong|short)|c_longdouble|c_void|comptime_(?:float|int)|f(?:16|32|64|128)|[iu](?:8|16|32|64|128|size)|noreturn|type|void)\\b/,\n                alias: \"keyword\"\n            },\n            keyword: keyword,\n            function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n            number: /\\b(?:0b[01]+|0o[0-7]+|0x[a-fA-F\\d]+(?:\\.[a-fA-F\\d]*)?(?:[pP][+-]?[a-fA-F\\d]+)?|\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\b/,\n            boolean: /\\b(?:false|true)\\b/,\n            operator: /\\.[*?]|\\.{2,3}|[-=]>|\\*\\*|\\+\\+|\\|\\||(?:<<|>>|[-+*]%|[-+*/%^&|<>!=])=?|[?~]/,\n            punctuation: /[.:,;(){}[\\]]/\n        };\n        Prism.languages.zig[\"class-name\"].forEach(function(obj) {\n            if (obj.inside === null) {\n                obj.inside = Prism.languages.zig;\n            }\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/lang/zig.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/refractor/node_modules/prismjs/components/prism-core.js":
/*!******************************************************************************!*\
  !*** ./node_modules/refractor/node_modules/prismjs/components/prism-core.js ***!
  \******************************************************************************/
/***/ ((module) => {

eval("/// <reference lib=\"WebWorker\"/>\nvar _self =  false ? 0 // if in browser\n : typeof WorkerGlobalScope !== \"undefined\" && self instanceof WorkerGlobalScope ? self // if in worker\n : {} // if in node js\n;\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */ var Prism = function(_self) {\n    // Private helper vars\n    var lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n    var uniqueId = 0;\n    // The grammar object for plaintext\n    var plainTextGrammar = {};\n    var _ = {\n        /**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */ manual: _self.Prism && _self.Prism.manual,\n        /**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */ disableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n        /**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */ util: {\n            encode: function encode(tokens) {\n                if (tokens instanceof Token) {\n                    return new Token(tokens.type, encode(tokens.content), tokens.alias);\n                } else if (Array.isArray(tokens)) {\n                    return tokens.map(encode);\n                } else {\n                    return tokens.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/\\u00a0/g, \" \");\n                }\n            },\n            /**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */ type: function(o) {\n                return Object.prototype.toString.call(o).slice(8, -1);\n            },\n            /**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */ objId: function(obj) {\n                if (!obj[\"__id\"]) {\n                    Object.defineProperty(obj, \"__id\", {\n                        value: ++uniqueId\n                    });\n                }\n                return obj[\"__id\"];\n            },\n            /**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */ clone: function deepClone(o, visited) {\n                visited = visited || {};\n                var clone;\n                var id;\n                switch(_.util.type(o)){\n                    case \"Object\":\n                        id = _.util.objId(o);\n                        if (visited[id]) {\n                            return visited[id];\n                        }\n                        clone = /** @type {Record<string, any>} */ {};\n                        visited[id] = clone;\n                        for(var key in o){\n                            if (o.hasOwnProperty(key)) {\n                                clone[key] = deepClone(o[key], visited);\n                            }\n                        }\n                        return /** @type {any} */ clone;\n                    case \"Array\":\n                        id = _.util.objId(o);\n                        if (visited[id]) {\n                            return visited[id];\n                        }\n                        clone = [];\n                        visited[id] = clone;\n                        /** @type {Array} */ /** @type {any} */ o.forEach(function(v, i) {\n                            clone[i] = deepClone(v, visited);\n                        });\n                        return /** @type {any} */ clone;\n                    default:\n                        return o;\n                }\n            },\n            /**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */ getLanguage: function(element) {\n                while(element){\n                    var m = lang.exec(element.className);\n                    if (m) {\n                        return m[1].toLowerCase();\n                    }\n                    element = element.parentElement;\n                }\n                return \"none\";\n            },\n            /**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */ setLanguage: function(element, language) {\n                // remove all `language-xxxx` classes\n                // (this might leave behind a leading space)\n                element.className = element.className.replace(RegExp(lang, \"gi\"), \"\");\n                // add the new `language-xxxx` class\n                // (using `classList` will automatically clean up spaces for us)\n                element.classList.add(\"language-\" + language);\n            },\n            /**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */ currentScript: function() {\n                if (typeof document === \"undefined\") {\n                    return null;\n                }\n                if (\"currentScript\" in document && 1 < 2 /* hack to trip TS' flow analysis */ ) {\n                    return /** @type {any} */ document.currentScript;\n                }\n                // IE11 workaround\n                // we'll get the src of the current script by parsing IE11's error stack trace\n                // this will not work for inline scripts\n                try {\n                    throw new Error();\n                } catch (err) {\n                    // Get file src url from stack. Specifically works with the format of stack traces in IE.\n                    // A stack will look like this:\n                    //\n                    // Error\n                    //    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n                    //    at Global code (http://localhost/components/prism-core.js:606:1)\n                    var src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n                    if (src) {\n                        var scripts = document.getElementsByTagName(\"script\");\n                        for(var i in scripts){\n                            if (scripts[i].src == src) {\n                                return scripts[i];\n                            }\n                        }\n                    }\n                    return null;\n                }\n            },\n            /**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */ isActive: function(element, className, defaultActivation) {\n                var no = \"no-\" + className;\n                while(element){\n                    var classList = element.classList;\n                    if (classList.contains(className)) {\n                        return true;\n                    }\n                    if (classList.contains(no)) {\n                        return false;\n                    }\n                    element = element.parentElement;\n                }\n                return !!defaultActivation;\n            }\n        },\n        /**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */ languages: {\n            /**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */ plain: plainTextGrammar,\n            plaintext: plainTextGrammar,\n            text: plainTextGrammar,\n            txt: plainTextGrammar,\n            /**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */ extend: function(id, redef) {\n                var lang = _.util.clone(_.languages[id]);\n                for(var key in redef){\n                    lang[key] = redef[key];\n                }\n                return lang;\n            },\n            /**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */ insertBefore: function(inside, before, insert, root) {\n                root = root || /** @type {any} */ _.languages;\n                var grammar = root[inside];\n                /** @type {Grammar} */ var ret = {};\n                for(var token in grammar){\n                    if (grammar.hasOwnProperty(token)) {\n                        if (token == before) {\n                            for(var newToken in insert){\n                                if (insert.hasOwnProperty(newToken)) {\n                                    ret[newToken] = insert[newToken];\n                                }\n                            }\n                        }\n                        // Do not insert token which also occur in insert. See #1525\n                        if (!insert.hasOwnProperty(token)) {\n                            ret[token] = grammar[token];\n                        }\n                    }\n                }\n                var old = root[inside];\n                root[inside] = ret;\n                // Update references in other language definitions\n                _.languages.DFS(_.languages, function(key, value) {\n                    if (value === old && key != inside) {\n                        this[key] = ret;\n                    }\n                });\n                return ret;\n            },\n            // Traverse a language definition with Depth First Search\n            DFS: function DFS(o, callback, type, visited) {\n                visited = visited || {};\n                var objId = _.util.objId;\n                for(var i in o){\n                    if (o.hasOwnProperty(i)) {\n                        callback.call(o, i, o[i], type || i);\n                        var property = o[i];\n                        var propertyType = _.util.type(property);\n                        if (propertyType === \"Object\" && !visited[objId(property)]) {\n                            visited[objId(property)] = true;\n                            DFS(property, callback, null, visited);\n                        } else if (propertyType === \"Array\" && !visited[objId(property)]) {\n                            visited[objId(property)] = true;\n                            DFS(property, callback, i, visited);\n                        }\n                    }\n                }\n            }\n        },\n        plugins: {},\n        /**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */ highlightAll: function(async, callback) {\n            _.highlightAllUnder(document, async, callback);\n        },\n        /**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */ highlightAllUnder: function(container, async, callback) {\n            var env = {\n                callback: callback,\n                container: container,\n                selector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n            };\n            _.hooks.run(\"before-highlightall\", env);\n            env.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n            _.hooks.run(\"before-all-elements-highlight\", env);\n            for(var i = 0, element; element = env.elements[i++];){\n                _.highlightElement(element, async === true, env.callback);\n            }\n        },\n        /**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */ highlightElement: function(element, async, callback) {\n            // Find language\n            var language = _.util.getLanguage(element);\n            var grammar = _.languages[language];\n            // Set language on the element, if not present\n            _.util.setLanguage(element, language);\n            // Set language on the parent, for styling\n            var parent = element.parentElement;\n            if (parent && parent.nodeName.toLowerCase() === \"pre\") {\n                _.util.setLanguage(parent, language);\n            }\n            var code = element.textContent;\n            var env = {\n                element: element,\n                language: language,\n                grammar: grammar,\n                code: code\n            };\n            function insertHighlightedCode(highlightedCode) {\n                env.highlightedCode = highlightedCode;\n                _.hooks.run(\"before-insert\", env);\n                env.element.innerHTML = env.highlightedCode;\n                _.hooks.run(\"after-highlight\", env);\n                _.hooks.run(\"complete\", env);\n                callback && callback.call(env.element);\n            }\n            _.hooks.run(\"before-sanity-check\", env);\n            // plugins may change/add the parent/element\n            parent = env.element.parentElement;\n            if (parent && parent.nodeName.toLowerCase() === \"pre\" && !parent.hasAttribute(\"tabindex\")) {\n                parent.setAttribute(\"tabindex\", \"0\");\n            }\n            if (!env.code) {\n                _.hooks.run(\"complete\", env);\n                callback && callback.call(env.element);\n                return;\n            }\n            _.hooks.run(\"before-highlight\", env);\n            if (!env.grammar) {\n                insertHighlightedCode(_.util.encode(env.code));\n                return;\n            }\n            if (async && _self.Worker) {\n                var worker = new Worker(_.filename);\n                worker.onmessage = function(evt) {\n                    insertHighlightedCode(evt.data);\n                };\n                worker.postMessage(JSON.stringify({\n                    language: env.language,\n                    code: env.code,\n                    immediateClose: true\n                }));\n            } else {\n                insertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n            }\n        },\n        /**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */ highlight: function(text, grammar, language) {\n            var env = {\n                code: text,\n                grammar: grammar,\n                language: language\n            };\n            _.hooks.run(\"before-tokenize\", env);\n            if (!env.grammar) {\n                throw new Error('The language \"' + env.language + '\" has no grammar.');\n            }\n            env.tokens = _.tokenize(env.code, env.grammar);\n            _.hooks.run(\"after-tokenize\", env);\n            return Token.stringify(_.util.encode(env.tokens), env.language);\n        },\n        /**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */ tokenize: function(text, grammar) {\n            var rest = grammar.rest;\n            if (rest) {\n                for(var token in rest){\n                    grammar[token] = rest[token];\n                }\n                delete grammar.rest;\n            }\n            var tokenList = new LinkedList();\n            addAfter(tokenList, tokenList.head, text);\n            matchGrammar(text, tokenList, grammar, tokenList.head, 0);\n            return toArray(tokenList);\n        },\n        /**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */ hooks: {\n            all: {},\n            /**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */ add: function(name, callback) {\n                var hooks = _.hooks.all;\n                hooks[name] = hooks[name] || [];\n                hooks[name].push(callback);\n            },\n            /**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */ run: function(name, env) {\n                var callbacks = _.hooks.all[name];\n                if (!callbacks || !callbacks.length) {\n                    return;\n                }\n                for(var i = 0, callback; callback = callbacks[i++];){\n                    callback(env);\n                }\n            }\n        },\n        Token: Token\n    };\n    _self.Prism = _;\n    // Typescript note:\n    // The following can be used to import the Token type in JSDoc:\n    //\n    //   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n    /**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */ function Token(type, content, alias, matchedStr) {\n        /**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */ this.type = type;\n        /**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */ this.content = content;\n        /**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */ this.alias = alias;\n        // Copy of the full string this token was created from\n        this.length = (matchedStr || \"\").length | 0;\n    }\n    /**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */ /**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */ Token.stringify = function stringify(o, language) {\n        if (typeof o == \"string\") {\n            return o;\n        }\n        if (Array.isArray(o)) {\n            var s = \"\";\n            o.forEach(function(e) {\n                s += stringify(e, language);\n            });\n            return s;\n        }\n        var env = {\n            type: o.type,\n            content: stringify(o.content, language),\n            tag: \"span\",\n            classes: [\n                \"token\",\n                o.type\n            ],\n            attributes: {},\n            language: language\n        };\n        var aliases = o.alias;\n        if (aliases) {\n            if (Array.isArray(aliases)) {\n                Array.prototype.push.apply(env.classes, aliases);\n            } else {\n                env.classes.push(aliases);\n            }\n        }\n        _.hooks.run(\"wrap\", env);\n        var attributes = \"\";\n        for(var name in env.attributes){\n            attributes += \" \" + name + '=\"' + (env.attributes[name] || \"\").replace(/\"/g, \"&quot;\") + '\"';\n        }\n        return \"<\" + env.tag + ' class=\"' + env.classes.join(\" \") + '\"' + attributes + \">\" + env.content + \"</\" + env.tag + \">\";\n    };\n    /**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */ function matchPattern(pattern, pos, text, lookbehind) {\n        pattern.lastIndex = pos;\n        var match = pattern.exec(text);\n        if (match && lookbehind && match[1]) {\n            // change the match to remove the text matched by the Prism lookbehind group\n            var lookbehindLength = match[1].length;\n            match.index += lookbehindLength;\n            match[0] = match[0].slice(lookbehindLength);\n        }\n        return match;\n    }\n    /**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */ function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n        for(var token in grammar){\n            if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n                continue;\n            }\n            var patterns = grammar[token];\n            patterns = Array.isArray(patterns) ? patterns : [\n                patterns\n            ];\n            for(var j = 0; j < patterns.length; ++j){\n                if (rematch && rematch.cause == token + \",\" + j) {\n                    return;\n                }\n                var patternObj = patterns[j];\n                var inside = patternObj.inside;\n                var lookbehind = !!patternObj.lookbehind;\n                var greedy = !!patternObj.greedy;\n                var alias = patternObj.alias;\n                if (greedy && !patternObj.pattern.global) {\n                    // Without the global flag, lastIndex won't work\n                    var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n                    patternObj.pattern = RegExp(patternObj.pattern.source, flags + \"g\");\n                }\n                /** @type {RegExp} */ var pattern = patternObj.pattern || patternObj;\n                for(var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next){\n                    if (rematch && pos >= rematch.reach) {\n                        break;\n                    }\n                    var str = currentNode.value;\n                    if (tokenList.length > text.length) {\n                        // Something went terribly wrong, ABORT, ABORT!\n                        return;\n                    }\n                    if (str instanceof Token) {\n                        continue;\n                    }\n                    var removeCount = 1; // this is the to parameter of removeBetween\n                    var match;\n                    if (greedy) {\n                        match = matchPattern(pattern, pos, text, lookbehind);\n                        if (!match || match.index >= text.length) {\n                            break;\n                        }\n                        var from = match.index;\n                        var to = match.index + match[0].length;\n                        var p = pos;\n                        // find the node that contains the match\n                        p += currentNode.value.length;\n                        while(from >= p){\n                            currentNode = currentNode.next;\n                            p += currentNode.value.length;\n                        }\n                        // adjust pos (and p)\n                        p -= currentNode.value.length;\n                        pos = p;\n                        // the current node is a Token, then the match starts inside another Token, which is invalid\n                        if (currentNode.value instanceof Token) {\n                            continue;\n                        }\n                        // find the last node which is affected by this match\n                        for(var k = currentNode; k !== tokenList.tail && (p < to || typeof k.value === \"string\"); k = k.next){\n                            removeCount++;\n                            p += k.value.length;\n                        }\n                        removeCount--;\n                        // replace with the new match\n                        str = text.slice(pos, p);\n                        match.index -= pos;\n                    } else {\n                        match = matchPattern(pattern, 0, str, lookbehind);\n                        if (!match) {\n                            continue;\n                        }\n                    }\n                    // eslint-disable-next-line no-redeclare\n                    var from = match.index;\n                    var matchStr = match[0];\n                    var before = str.slice(0, from);\n                    var after = str.slice(from + matchStr.length);\n                    var reach = pos + str.length;\n                    if (rematch && reach > rematch.reach) {\n                        rematch.reach = reach;\n                    }\n                    var removeFrom = currentNode.prev;\n                    if (before) {\n                        removeFrom = addAfter(tokenList, removeFrom, before);\n                        pos += before.length;\n                    }\n                    removeRange(tokenList, removeFrom, removeCount);\n                    var wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n                    currentNode = addAfter(tokenList, removeFrom, wrapped);\n                    if (after) {\n                        addAfter(tokenList, currentNode, after);\n                    }\n                    if (removeCount > 1) {\n                        // at least one Token object was removed, so we have to do some rematching\n                        // this can only happen if the current pattern is greedy\n                        /** @type {RematchOptions} */ var nestedRematch = {\n                            cause: token + \",\" + j,\n                            reach: reach\n                        };\n                        matchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n                        // the reach might have been extended because of the rematching\n                        if (rematch && nestedRematch.reach > rematch.reach) {\n                            rematch.reach = nestedRematch.reach;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    /**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */ /**\n\t * @template T\n\t * @private\n\t */ function LinkedList() {\n        /** @type {LinkedListNode<T>} */ var head = {\n            value: null,\n            prev: null,\n            next: null\n        };\n        /** @type {LinkedListNode<T>} */ var tail = {\n            value: null,\n            prev: head,\n            next: null\n        };\n        head.next = tail;\n        /** @type {LinkedListNode<T>} */ this.head = head;\n        /** @type {LinkedListNode<T>} */ this.tail = tail;\n        this.length = 0;\n    }\n    /**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */ function addAfter(list, node, value) {\n        // assumes that node != list.tail && values.length >= 0\n        var next = node.next;\n        var newNode = {\n            value: value,\n            prev: node,\n            next: next\n        };\n        node.next = newNode;\n        next.prev = newNode;\n        list.length++;\n        return newNode;\n    }\n    /**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */ function removeRange(list, node, count) {\n        var next = node.next;\n        for(var i = 0; i < count && next !== list.tail; i++){\n            next = next.next;\n        }\n        node.next = next;\n        next.prev = node;\n        list.length -= i;\n    }\n    /**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */ function toArray(list) {\n        var array = [];\n        var node = list.head.next;\n        while(node !== list.tail){\n            array.push(node.value);\n            node = node.next;\n        }\n        return array;\n    }\n    if (!_self.document) {\n        if (!_self.addEventListener) {\n            // in Node.js\n            return _;\n        }\n        if (!_.disableWorkerMessageHandler) {\n            // In worker\n            _self.addEventListener(\"message\", function(evt) {\n                var message = JSON.parse(evt.data);\n                var lang = message.language;\n                var code = message.code;\n                var immediateClose = message.immediateClose;\n                _self.postMessage(_.highlight(code, _.languages[lang], lang));\n                if (immediateClose) {\n                    _self.close();\n                }\n            }, false);\n        }\n        return _;\n    }\n    // Get current script and highlight\n    var script = _.util.currentScript();\n    if (script) {\n        _.filename = script.src;\n        if (script.hasAttribute(\"data-manual\")) {\n            _.manual = true;\n        }\n    }\n    function highlightAutomaticallyCallback() {\n        if (!_.manual) {\n            _.highlightAll();\n        }\n    }\n    if (!_.manual) {\n        // If the document state is \"loading\", then we'll use DOMContentLoaded.\n        // If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n        // DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n        // might take longer one animation frame to execute which can create a race condition where only some plugins have\n        // been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n        // See https://github.com/PrismJS/prism/issues/2102\n        var readyState = document.readyState;\n        if (readyState === \"loading\" || readyState === \"interactive\" && script && script.defer) {\n            document.addEventListener(\"DOMContentLoaded\", highlightAutomaticallyCallback);\n        } else {\n            if (window.requestAnimationFrame) {\n                window.requestAnimationFrame(highlightAutomaticallyCallback);\n            } else {\n                window.setTimeout(highlightAutomaticallyCallback, 16);\n            }\n        }\n    }\n    return _;\n}(_self);\nif ( true && module.exports) {\n    module.exports = Prism;\n}\n// hack for components to work correctly in node.js\nif (typeof global !== \"undefined\") {\n    global.Prism = Prism;\n} // some additional documentation/types\n /**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */  /**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */  /**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */  /**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */ \n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL25vZGVfbW9kdWxlcy9wcmlzbWpzL2NvbXBvbmVudHMvcHJpc20tY29yZS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxnQ0FBZ0M7QUFFaEMsSUFBSUEsUUFBUSxNQUFtQixHQUM1QkMsQ0FBTUEsQ0FBRyxnQkFBZ0I7R0FFMUIsT0FBUUMsc0JBQXNCLGVBQWVDLGdCQUFnQkQsb0JBQzFEQyxLQUFLLGVBQWU7R0FDcEIsQ0FBQyxFQUFJLGdCQUFnQjs7QUFHMUI7Ozs7Ozs7Q0FPQyxHQUNELElBQUlDLFFBQVMsU0FBVUosS0FBSztJQUUzQixzQkFBc0I7SUFDdEIsSUFBSUssT0FBTztJQUNYLElBQUlDLFdBQVc7SUFFZixtQ0FBbUM7SUFDbkMsSUFBSUMsbUJBQW1CLENBQUM7SUFHeEIsSUFBSUMsSUFBSTtRQUNQOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW9CQyxHQUNEQyxRQUFRVCxNQUFNSSxLQUFLLElBQUlKLE1BQU1JLEtBQUssQ0FBQ0ssTUFBTTtRQUN6Qzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FvQkMsR0FDREMsNkJBQTZCVixNQUFNSSxLQUFLLElBQUlKLE1BQU1JLEtBQUssQ0FBQ00sMkJBQTJCO1FBRW5GOzs7Ozs7OztHQVFDLEdBQ0RDLE1BQU07WUFDTEMsUUFBUSxTQUFTQSxPQUFPQyxNQUFNO2dCQUM3QixJQUFJQSxrQkFBa0JDLE9BQU87b0JBQzVCLE9BQU8sSUFBSUEsTUFBTUQsT0FBT0UsSUFBSSxFQUFFSCxPQUFPQyxPQUFPRyxPQUFPLEdBQUdILE9BQU9JLEtBQUs7Z0JBQ25FLE9BQU8sSUFBSUMsTUFBTUMsT0FBTyxDQUFDTixTQUFTO29CQUNqQyxPQUFPQSxPQUFPTyxHQUFHLENBQUNSO2dCQUNuQixPQUFPO29CQUNOLE9BQU9DLE9BQU9RLE9BQU8sQ0FBQyxNQUFNLFNBQVNBLE9BQU8sQ0FBQyxNQUFNLFFBQVFBLE9BQU8sQ0FBQyxXQUFXO2dCQUMvRTtZQUNEO1lBRUE7Ozs7Ozs7Ozs7Ozs7OztJQWVDLEdBQ0ROLE1BQU0sU0FBVU8sQ0FBQztnQkFDaEIsT0FBT0MsT0FBT0MsU0FBUyxDQUFDQyxRQUFRLENBQUNDLElBQUksQ0FBQ0osR0FBR0ssS0FBSyxDQUFDLEdBQUcsQ0FBQztZQUNwRDtZQUVBOzs7OztJQUtDLEdBQ0RDLE9BQU8sU0FBVUMsR0FBRztnQkFDbkIsSUFBSSxDQUFDQSxHQUFHLENBQUMsT0FBTyxFQUFFO29CQUNqQk4sT0FBT08sY0FBYyxDQUFDRCxLQUFLLFFBQVE7d0JBQUVFLE9BQU8sRUFBRXpCO29CQUFTO2dCQUN4RDtnQkFDQSxPQUFPdUIsR0FBRyxDQUFDLE9BQU87WUFDbkI7WUFFQTs7Ozs7Ozs7O0lBU0MsR0FDREcsT0FBTyxTQUFTQyxVQUFVWCxDQUFDLEVBQUVZLE9BQU87Z0JBQ25DQSxVQUFVQSxXQUFXLENBQUM7Z0JBRXRCLElBQUlGO2dCQUFPLElBQUlHO2dCQUNmLE9BQVEzQixFQUFFRyxJQUFJLENBQUNJLElBQUksQ0FBQ087b0JBQ25CLEtBQUs7d0JBQ0phLEtBQUszQixFQUFFRyxJQUFJLENBQUNpQixLQUFLLENBQUNOO3dCQUNsQixJQUFJWSxPQUFPLENBQUNDLEdBQUcsRUFBRTs0QkFDaEIsT0FBT0QsT0FBTyxDQUFDQyxHQUFHO3dCQUNuQjt3QkFDQUgsUUFBUSxnQ0FBZ0MsR0FBSSxDQUFDO3dCQUM3Q0UsT0FBTyxDQUFDQyxHQUFHLEdBQUdIO3dCQUVkLElBQUssSUFBSUksT0FBT2QsRUFBRzs0QkFDbEIsSUFBSUEsRUFBRWUsY0FBYyxDQUFDRCxNQUFNO2dDQUMxQkosS0FBSyxDQUFDSSxJQUFJLEdBQUdILFVBQVVYLENBQUMsQ0FBQ2MsSUFBSSxFQUFFRjs0QkFDaEM7d0JBQ0Q7d0JBRUEsT0FBTyxnQkFBZ0IsR0FBSUY7b0JBRTVCLEtBQUs7d0JBQ0pHLEtBQUszQixFQUFFRyxJQUFJLENBQUNpQixLQUFLLENBQUNOO3dCQUNsQixJQUFJWSxPQUFPLENBQUNDLEdBQUcsRUFBRTs0QkFDaEIsT0FBT0QsT0FBTyxDQUFDQyxHQUFHO3dCQUNuQjt3QkFDQUgsUUFBUSxFQUFFO3dCQUNWRSxPQUFPLENBQUNDLEdBQUcsR0FBR0g7d0JBRWIsa0JBQWtCLEdBQUcsZ0JBQWdCLEdBQUdWLEVBQUtnQixPQUFPLENBQUMsU0FBVUMsQ0FBQyxFQUFFQyxDQUFDOzRCQUNuRVIsS0FBSyxDQUFDUSxFQUFFLEdBQUdQLFVBQVVNLEdBQUdMO3dCQUN6Qjt3QkFFQSxPQUFPLGdCQUFnQixHQUFJRjtvQkFFNUI7d0JBQ0MsT0FBT1Y7Z0JBQ1Q7WUFDRDtZQUVBOzs7Ozs7O0lBT0MsR0FDRG1CLGFBQWEsU0FBVUMsT0FBTztnQkFDN0IsTUFBT0EsUUFBUztvQkFDZixJQUFJQyxJQUFJdEMsS0FBS3VDLElBQUksQ0FBQ0YsUUFBUUcsU0FBUztvQkFDbkMsSUFBSUYsR0FBRzt3QkFDTixPQUFPQSxDQUFDLENBQUMsRUFBRSxDQUFDRyxXQUFXO29CQUN4QjtvQkFDQUosVUFBVUEsUUFBUUssYUFBYTtnQkFDaEM7Z0JBQ0EsT0FBTztZQUNSO1lBRUE7Ozs7OztJQU1DLEdBQ0RDLGFBQWEsU0FBVU4sT0FBTyxFQUFFTyxRQUFRO2dCQUN2QyxxQ0FBcUM7Z0JBQ3JDLDRDQUE0QztnQkFDNUNQLFFBQVFHLFNBQVMsR0FBR0gsUUFBUUcsU0FBUyxDQUFDeEIsT0FBTyxDQUFDNkIsT0FBTzdDLE1BQU0sT0FBTztnQkFFbEUsb0NBQW9DO2dCQUNwQyxnRUFBZ0U7Z0JBQ2hFcUMsUUFBUVMsU0FBUyxDQUFDQyxHQUFHLENBQUMsY0FBY0g7WUFDckM7WUFFQTs7Ozs7O0lBTUMsR0FDREksZUFBZTtnQkFDZCxJQUFJLE9BQU9DLGFBQWEsYUFBYTtvQkFDcEMsT0FBTztnQkFDUjtnQkFDQSxJQUFJLG1CQUFtQkEsWUFBWSxJQUFJLEVBQUUsa0NBQWtDLEtBQUk7b0JBQzlFLE9BQU8sZ0JBQWdCLEdBQUlBLFNBQVNELGFBQWE7Z0JBQ2xEO2dCQUVBLGtCQUFrQjtnQkFDbEIsOEVBQThFO2dCQUM5RSx3Q0FBd0M7Z0JBRXhDLElBQUk7b0JBQ0gsTUFBTSxJQUFJRTtnQkFDWCxFQUFFLE9BQU9DLEtBQUs7b0JBQ2IseUZBQXlGO29CQUN6RiwrQkFBK0I7b0JBQy9CLEVBQUU7b0JBQ0YsUUFBUTtvQkFDUiwrRUFBK0U7b0JBQy9FLHNFQUFzRTtvQkFFdEUsSUFBSUMsTUFBTSxDQUFDLHFDQUFxQ2IsSUFBSSxDQUFDWSxJQUFJRSxLQUFLLEtBQUssRUFBRSxDQUFDLENBQUMsRUFBRTtvQkFDekUsSUFBSUQsS0FBSzt3QkFDUixJQUFJRSxVQUFVTCxTQUFTTSxvQkFBb0IsQ0FBQzt3QkFDNUMsSUFBSyxJQUFJcEIsS0FBS21CLFFBQVM7NEJBQ3RCLElBQUlBLE9BQU8sQ0FBQ25CLEVBQUUsQ0FBQ2lCLEdBQUcsSUFBSUEsS0FBSztnQ0FDMUIsT0FBT0UsT0FBTyxDQUFDbkIsRUFBRTs0QkFDbEI7d0JBQ0Q7b0JBQ0Q7b0JBQ0EsT0FBTztnQkFDUjtZQUNEO1lBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQWtCQyxHQUNEcUIsVUFBVSxTQUFVbkIsT0FBTyxFQUFFRyxTQUFTLEVBQUVpQixpQkFBaUI7Z0JBQ3hELElBQUlDLEtBQUssUUFBUWxCO2dCQUVqQixNQUFPSCxRQUFTO29CQUNmLElBQUlTLFlBQVlULFFBQVFTLFNBQVM7b0JBQ2pDLElBQUlBLFVBQVVhLFFBQVEsQ0FBQ25CLFlBQVk7d0JBQ2xDLE9BQU87b0JBQ1I7b0JBQ0EsSUFBSU0sVUFBVWEsUUFBUSxDQUFDRCxLQUFLO3dCQUMzQixPQUFPO29CQUNSO29CQUNBckIsVUFBVUEsUUFBUUssYUFBYTtnQkFDaEM7Z0JBQ0EsT0FBTyxDQUFDLENBQUNlO1lBQ1Y7UUFDRDtRQUVBOzs7Ozs7R0FNQyxHQUNERyxXQUFXO1lBQ1Y7O0lBRUMsR0FDREMsT0FBTzNEO1lBQ1A0RCxXQUFXNUQ7WUFDWDZELE1BQU03RDtZQUNOOEQsS0FBSzlEO1lBRUw7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQTJCQyxHQUNEK0QsUUFBUSxTQUFVbkMsRUFBRSxFQUFFb0MsS0FBSztnQkFDMUIsSUFBSWxFLE9BQU9HLEVBQUVHLElBQUksQ0FBQ3FCLEtBQUssQ0FBQ3hCLEVBQUV5RCxTQUFTLENBQUM5QixHQUFHO2dCQUV2QyxJQUFLLElBQUlDLE9BQU9tQyxNQUFPO29CQUN0QmxFLElBQUksQ0FBQytCLElBQUksR0FBR21DLEtBQUssQ0FBQ25DLElBQUk7Z0JBQ3ZCO2dCQUVBLE9BQU8vQjtZQUNSO1lBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBMEVDLEdBQ0RtRSxjQUFjLFNBQVVDLE1BQU0sRUFBRUMsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLElBQUk7Z0JBQ25EQSxPQUFPQSxRQUFRLGdCQUFnQixHQUFJcEUsRUFBRXlELFNBQVM7Z0JBQzlDLElBQUlZLFVBQVVELElBQUksQ0FBQ0gsT0FBTztnQkFDMUIsb0JBQW9CLEdBQ3BCLElBQUlLLE1BQU0sQ0FBQztnQkFFWCxJQUFLLElBQUlDLFNBQVNGLFFBQVM7b0JBQzFCLElBQUlBLFFBQVF4QyxjQUFjLENBQUMwQyxRQUFRO3dCQUVsQyxJQUFJQSxTQUFTTCxRQUFROzRCQUNwQixJQUFLLElBQUlNLFlBQVlMLE9BQVE7Z0NBQzVCLElBQUlBLE9BQU90QyxjQUFjLENBQUMyQyxXQUFXO29DQUNwQ0YsR0FBRyxDQUFDRSxTQUFTLEdBQUdMLE1BQU0sQ0FBQ0ssU0FBUztnQ0FDakM7NEJBQ0Q7d0JBQ0Q7d0JBRUEsNERBQTREO3dCQUM1RCxJQUFJLENBQUNMLE9BQU90QyxjQUFjLENBQUMwQyxRQUFROzRCQUNsQ0QsR0FBRyxDQUFDQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0UsTUFBTTt3QkFDNUI7b0JBQ0Q7Z0JBQ0Q7Z0JBRUEsSUFBSUUsTUFBTUwsSUFBSSxDQUFDSCxPQUFPO2dCQUN0QkcsSUFBSSxDQUFDSCxPQUFPLEdBQUdLO2dCQUVmLGtEQUFrRDtnQkFDbER0RSxFQUFFeUQsU0FBUyxDQUFDaUIsR0FBRyxDQUFDMUUsRUFBRXlELFNBQVMsRUFBRSxTQUFVN0IsR0FBRyxFQUFFTCxLQUFLO29CQUNoRCxJQUFJQSxVQUFVa0QsT0FBTzdDLE9BQU9xQyxRQUFRO3dCQUNuQyxJQUFJLENBQUNyQyxJQUFJLEdBQUcwQztvQkFDYjtnQkFDRDtnQkFFQSxPQUFPQTtZQUNSO1lBRUEseURBQXlEO1lBQ3pESSxLQUFLLFNBQVNBLElBQUk1RCxDQUFDLEVBQUU2RCxRQUFRLEVBQUVwRSxJQUFJLEVBQUVtQixPQUFPO2dCQUMzQ0EsVUFBVUEsV0FBVyxDQUFDO2dCQUV0QixJQUFJTixRQUFRcEIsRUFBRUcsSUFBSSxDQUFDaUIsS0FBSztnQkFFeEIsSUFBSyxJQUFJWSxLQUFLbEIsRUFBRztvQkFDaEIsSUFBSUEsRUFBRWUsY0FBYyxDQUFDRyxJQUFJO3dCQUN4QjJDLFNBQVN6RCxJQUFJLENBQUNKLEdBQUdrQixHQUFHbEIsQ0FBQyxDQUFDa0IsRUFBRSxFQUFFekIsUUFBUXlCO3dCQUVsQyxJQUFJNEMsV0FBVzlELENBQUMsQ0FBQ2tCLEVBQUU7d0JBQ25CLElBQUk2QyxlQUFlN0UsRUFBRUcsSUFBSSxDQUFDSSxJQUFJLENBQUNxRTt3QkFFL0IsSUFBSUMsaUJBQWlCLFlBQVksQ0FBQ25ELE9BQU8sQ0FBQ04sTUFBTXdELFVBQVUsRUFBRTs0QkFDM0RsRCxPQUFPLENBQUNOLE1BQU13RCxVQUFVLEdBQUc7NEJBQzNCRixJQUFJRSxVQUFVRCxVQUFVLE1BQU1qRDt3QkFDL0IsT0FBTyxJQUFJbUQsaUJBQWlCLFdBQVcsQ0FBQ25ELE9BQU8sQ0FBQ04sTUFBTXdELFVBQVUsRUFBRTs0QkFDakVsRCxPQUFPLENBQUNOLE1BQU13RCxVQUFVLEdBQUc7NEJBQzNCRixJQUFJRSxVQUFVRCxVQUFVM0MsR0FBR047d0JBQzVCO29CQUNEO2dCQUNEO1lBQ0Q7UUFDRDtRQUVBb0QsU0FBUyxDQUFDO1FBRVY7Ozs7Ozs7Ozs7O0dBV0MsR0FDREMsY0FBYyxTQUFVQyxLQUFLLEVBQUVMLFFBQVE7WUFDdEMzRSxFQUFFaUYsaUJBQWlCLENBQUNuQyxVQUFVa0MsT0FBT0w7UUFDdEM7UUFFQTs7Ozs7Ozs7Ozs7Ozs7R0FjQyxHQUNETSxtQkFBbUIsU0FBVUMsU0FBUyxFQUFFRixLQUFLLEVBQUVMLFFBQVE7WUFDdEQsSUFBSVEsTUFBTTtnQkFDVFIsVUFBVUE7Z0JBQ1ZPLFdBQVdBO2dCQUNYRSxVQUFVO1lBQ1g7WUFFQXBGLEVBQUVxRixLQUFLLENBQUNDLEdBQUcsQ0FBQyx1QkFBdUJIO1lBRW5DQSxJQUFJSSxRQUFRLEdBQUc3RSxNQUFNTSxTQUFTLENBQUNHLEtBQUssQ0FBQ3FFLEtBQUssQ0FBQ0wsSUFBSUQsU0FBUyxDQUFDTyxnQkFBZ0IsQ0FBQ04sSUFBSUMsUUFBUTtZQUV0RnBGLEVBQUVxRixLQUFLLENBQUNDLEdBQUcsQ0FBQyxpQ0FBaUNIO1lBRTdDLElBQUssSUFBSW5ELElBQUksR0FBR0UsU0FBVUEsVUFBVWlELElBQUlJLFFBQVEsQ0FBQ3ZELElBQUksRUFBSTtnQkFDeERoQyxFQUFFMEYsZ0JBQWdCLENBQUN4RCxTQUFTOEMsVUFBVSxNQUFNRyxJQUFJUixRQUFRO1lBQ3pEO1FBQ0Q7UUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBMkJDLEdBQ0RlLGtCQUFrQixTQUFVeEQsT0FBTyxFQUFFOEMsS0FBSyxFQUFFTCxRQUFRO1lBQ25ELGdCQUFnQjtZQUNoQixJQUFJbEMsV0FBV3pDLEVBQUVHLElBQUksQ0FBQzhCLFdBQVcsQ0FBQ0M7WUFDbEMsSUFBSW1DLFVBQVVyRSxFQUFFeUQsU0FBUyxDQUFDaEIsU0FBUztZQUVuQyw4Q0FBOEM7WUFDOUN6QyxFQUFFRyxJQUFJLENBQUNxQyxXQUFXLENBQUNOLFNBQVNPO1lBRTVCLDBDQUEwQztZQUMxQyxJQUFJa0QsU0FBU3pELFFBQVFLLGFBQWE7WUFDbEMsSUFBSW9ELFVBQVVBLE9BQU9DLFFBQVEsQ0FBQ3RELFdBQVcsT0FBTyxPQUFPO2dCQUN0RHRDLEVBQUVHLElBQUksQ0FBQ3FDLFdBQVcsQ0FBQ21ELFFBQVFsRDtZQUM1QjtZQUVBLElBQUlvRCxPQUFPM0QsUUFBUTRELFdBQVc7WUFFOUIsSUFBSVgsTUFBTTtnQkFDVGpELFNBQVNBO2dCQUNUTyxVQUFVQTtnQkFDVjRCLFNBQVNBO2dCQUNUd0IsTUFBTUE7WUFDUDtZQUVBLFNBQVNFLHNCQUFzQkMsZUFBZTtnQkFDN0NiLElBQUlhLGVBQWUsR0FBR0E7Z0JBRXRCaEcsRUFBRXFGLEtBQUssQ0FBQ0MsR0FBRyxDQUFDLGlCQUFpQkg7Z0JBRTdCQSxJQUFJakQsT0FBTyxDQUFDK0QsU0FBUyxHQUFHZCxJQUFJYSxlQUFlO2dCQUUzQ2hHLEVBQUVxRixLQUFLLENBQUNDLEdBQUcsQ0FBQyxtQkFBbUJIO2dCQUMvQm5GLEVBQUVxRixLQUFLLENBQUNDLEdBQUcsQ0FBQyxZQUFZSDtnQkFDeEJSLFlBQVlBLFNBQVN6RCxJQUFJLENBQUNpRSxJQUFJakQsT0FBTztZQUN0QztZQUVBbEMsRUFBRXFGLEtBQUssQ0FBQ0MsR0FBRyxDQUFDLHVCQUF1Qkg7WUFFbkMsNENBQTRDO1lBQzVDUSxTQUFTUixJQUFJakQsT0FBTyxDQUFDSyxhQUFhO1lBQ2xDLElBQUlvRCxVQUFVQSxPQUFPQyxRQUFRLENBQUN0RCxXQUFXLE9BQU8sU0FBUyxDQUFDcUQsT0FBT08sWUFBWSxDQUFDLGFBQWE7Z0JBQzFGUCxPQUFPUSxZQUFZLENBQUMsWUFBWTtZQUNqQztZQUVBLElBQUksQ0FBQ2hCLElBQUlVLElBQUksRUFBRTtnQkFDZDdGLEVBQUVxRixLQUFLLENBQUNDLEdBQUcsQ0FBQyxZQUFZSDtnQkFDeEJSLFlBQVlBLFNBQVN6RCxJQUFJLENBQUNpRSxJQUFJakQsT0FBTztnQkFDckM7WUFDRDtZQUVBbEMsRUFBRXFGLEtBQUssQ0FBQ0MsR0FBRyxDQUFDLG9CQUFvQkg7WUFFaEMsSUFBSSxDQUFDQSxJQUFJZCxPQUFPLEVBQUU7Z0JBQ2pCMEIsc0JBQXNCL0YsRUFBRUcsSUFBSSxDQUFDQyxNQUFNLENBQUMrRSxJQUFJVSxJQUFJO2dCQUM1QztZQUNEO1lBRUEsSUFBSWIsU0FBU3hGLE1BQU00RyxNQUFNLEVBQUU7Z0JBQzFCLElBQUlDLFNBQVMsSUFBSUQsT0FBT3BHLEVBQUVzRyxRQUFRO2dCQUVsQ0QsT0FBT0UsU0FBUyxHQUFHLFNBQVVDLEdBQUc7b0JBQy9CVCxzQkFBc0JTLElBQUlDLElBQUk7Z0JBQy9CO2dCQUVBSixPQUFPSyxXQUFXLENBQUNDLEtBQUtDLFNBQVMsQ0FBQztvQkFDakNuRSxVQUFVMEMsSUFBSTFDLFFBQVE7b0JBQ3RCb0QsTUFBTVYsSUFBSVUsSUFBSTtvQkFDZGdCLGdCQUFnQjtnQkFDakI7WUFDRCxPQUFPO2dCQUNOZCxzQkFBc0IvRixFQUFFOEcsU0FBUyxDQUFDM0IsSUFBSVUsSUFBSSxFQUFFVixJQUFJZCxPQUFPLEVBQUVjLElBQUkxQyxRQUFRO1lBQ3RFO1FBQ0Q7UUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW1CQyxHQUNEcUUsV0FBVyxTQUFVbEQsSUFBSSxFQUFFUyxPQUFPLEVBQUU1QixRQUFRO1lBQzNDLElBQUkwQyxNQUFNO2dCQUNUVSxNQUFNakM7Z0JBQ05TLFNBQVNBO2dCQUNUNUIsVUFBVUE7WUFDWDtZQUNBekMsRUFBRXFGLEtBQUssQ0FBQ0MsR0FBRyxDQUFDLG1CQUFtQkg7WUFDL0IsSUFBSSxDQUFDQSxJQUFJZCxPQUFPLEVBQUU7Z0JBQ2pCLE1BQU0sSUFBSXRCLE1BQU0sbUJBQW1Cb0MsSUFBSTFDLFFBQVEsR0FBRztZQUNuRDtZQUNBMEMsSUFBSTlFLE1BQU0sR0FBR0wsRUFBRStHLFFBQVEsQ0FBQzVCLElBQUlVLElBQUksRUFBRVYsSUFBSWQsT0FBTztZQUM3Q3JFLEVBQUVxRixLQUFLLENBQUNDLEdBQUcsQ0FBQyxrQkFBa0JIO1lBQzlCLE9BQU83RSxNQUFNc0csU0FBUyxDQUFDNUcsRUFBRUcsSUFBSSxDQUFDQyxNQUFNLENBQUMrRSxJQUFJOUUsTUFBTSxHQUFHOEUsSUFBSTFDLFFBQVE7UUFDL0Q7UUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0F1QkMsR0FDRHNFLFVBQVUsU0FBVW5ELElBQUksRUFBRVMsT0FBTztZQUNoQyxJQUFJMkMsT0FBTzNDLFFBQVEyQyxJQUFJO1lBQ3ZCLElBQUlBLE1BQU07Z0JBQ1QsSUFBSyxJQUFJekMsU0FBU3lDLEtBQU07b0JBQ3ZCM0MsT0FBTyxDQUFDRSxNQUFNLEdBQUd5QyxJQUFJLENBQUN6QyxNQUFNO2dCQUM3QjtnQkFFQSxPQUFPRixRQUFRMkMsSUFBSTtZQUNwQjtZQUVBLElBQUlDLFlBQVksSUFBSUM7WUFDcEJDLFNBQVNGLFdBQVdBLFVBQVVHLElBQUksRUFBRXhEO1lBRXBDeUQsYUFBYXpELE1BQU1xRCxXQUFXNUMsU0FBUzRDLFVBQVVHLElBQUksRUFBRTtZQUV2RCxPQUFPRSxRQUFRTDtRQUNoQjtRQUVBOzs7O0dBSUMsR0FDRDVCLE9BQU87WUFDTmtDLEtBQUssQ0FBQztZQUVOOzs7Ozs7Ozs7OztJQVdDLEdBQ0QzRSxLQUFLLFNBQVU0RSxJQUFJLEVBQUU3QyxRQUFRO2dCQUM1QixJQUFJVSxRQUFRckYsRUFBRXFGLEtBQUssQ0FBQ2tDLEdBQUc7Z0JBRXZCbEMsS0FBSyxDQUFDbUMsS0FBSyxHQUFHbkMsS0FBSyxDQUFDbUMsS0FBSyxJQUFJLEVBQUU7Z0JBRS9CbkMsS0FBSyxDQUFDbUMsS0FBSyxDQUFDQyxJQUFJLENBQUM5QztZQUNsQjtZQUVBOzs7Ozs7OztJQVFDLEdBQ0RXLEtBQUssU0FBVWtDLElBQUksRUFBRXJDLEdBQUc7Z0JBQ3ZCLElBQUl1QyxZQUFZMUgsRUFBRXFGLEtBQUssQ0FBQ2tDLEdBQUcsQ0FBQ0MsS0FBSztnQkFFakMsSUFBSSxDQUFDRSxhQUFhLENBQUNBLFVBQVVDLE1BQU0sRUFBRTtvQkFDcEM7Z0JBQ0Q7Z0JBRUEsSUFBSyxJQUFJM0YsSUFBSSxHQUFHMkMsVUFBV0EsV0FBVytDLFNBQVMsQ0FBQzFGLElBQUksRUFBSTtvQkFDdkQyQyxTQUFTUTtnQkFDVjtZQUNEO1FBQ0Q7UUFFQTdFLE9BQU9BO0lBQ1I7SUFDQWQsTUFBTUksS0FBSyxHQUFHSTtJQUdkLG1CQUFtQjtJQUNuQiwrREFBK0Q7SUFDL0QsRUFBRTtJQUNGLG1FQUFtRTtJQUVuRTs7Ozs7Ozs7OztFQVVDLEdBQ0QsU0FBU00sTUFBTUMsSUFBSSxFQUFFQyxPQUFPLEVBQUVDLEtBQUssRUFBRW1ILFVBQVU7UUFDOUM7Ozs7Ozs7O0dBUUMsR0FDRCxJQUFJLENBQUNySCxJQUFJLEdBQUdBO1FBQ1o7Ozs7Ozs7R0FPQyxHQUNELElBQUksQ0FBQ0MsT0FBTyxHQUFHQTtRQUNmOzs7Ozs7R0FNQyxHQUNELElBQUksQ0FBQ0MsS0FBSyxHQUFHQTtRQUNiLHNEQUFzRDtRQUN0RCxJQUFJLENBQUNrSCxNQUFNLEdBQUcsQ0FBQ0MsY0FBYyxFQUFDLEVBQUdELE1BQU0sR0FBRztJQUMzQztJQUVBOzs7Ozs7Ozs7Ozs7OztFQWNDLEdBRUQ7Ozs7Ozs7Ozs7O0VBV0MsR0FDRHJILE1BQU1zRyxTQUFTLEdBQUcsU0FBU0EsVUFBVTlGLENBQUMsRUFBRTJCLFFBQVE7UUFDL0MsSUFBSSxPQUFPM0IsS0FBSyxVQUFVO1lBQ3pCLE9BQU9BO1FBQ1I7UUFDQSxJQUFJSixNQUFNQyxPQUFPLENBQUNHLElBQUk7WUFDckIsSUFBSStHLElBQUk7WUFDUi9HLEVBQUVnQixPQUFPLENBQUMsU0FBVWdHLENBQUM7Z0JBQ3BCRCxLQUFLakIsVUFBVWtCLEdBQUdyRjtZQUNuQjtZQUNBLE9BQU9vRjtRQUNSO1FBRUEsSUFBSTFDLE1BQU07WUFDVDVFLE1BQU1PLEVBQUVQLElBQUk7WUFDWkMsU0FBU29HLFVBQVU5RixFQUFFTixPQUFPLEVBQUVpQztZQUM5QnNGLEtBQUs7WUFDTEMsU0FBUztnQkFBQztnQkFBU2xILEVBQUVQLElBQUk7YUFBQztZQUMxQjBILFlBQVksQ0FBQztZQUNieEYsVUFBVUE7UUFDWDtRQUVBLElBQUl5RixVQUFVcEgsRUFBRUwsS0FBSztRQUNyQixJQUFJeUgsU0FBUztZQUNaLElBQUl4SCxNQUFNQyxPQUFPLENBQUN1SCxVQUFVO2dCQUMzQnhILE1BQU1NLFNBQVMsQ0FBQ3lHLElBQUksQ0FBQ2pDLEtBQUssQ0FBQ0wsSUFBSTZDLE9BQU8sRUFBRUU7WUFDekMsT0FBTztnQkFDTi9DLElBQUk2QyxPQUFPLENBQUNQLElBQUksQ0FBQ1M7WUFDbEI7UUFDRDtRQUVBbEksRUFBRXFGLEtBQUssQ0FBQ0MsR0FBRyxDQUFDLFFBQVFIO1FBRXBCLElBQUk4QyxhQUFhO1FBQ2pCLElBQUssSUFBSVQsUUFBUXJDLElBQUk4QyxVQUFVLENBQUU7WUFDaENBLGNBQWMsTUFBTVQsT0FBTyxPQUFPLENBQUNyQyxJQUFJOEMsVUFBVSxDQUFDVCxLQUFLLElBQUksRUFBQyxFQUFHM0csT0FBTyxDQUFDLE1BQU0sWUFBWTtRQUMxRjtRQUVBLE9BQU8sTUFBTXNFLElBQUk0QyxHQUFHLEdBQUcsYUFBYTVDLElBQUk2QyxPQUFPLENBQUNHLElBQUksQ0FBQyxPQUFPLE1BQU1GLGFBQWEsTUFBTTlDLElBQUkzRSxPQUFPLEdBQUcsT0FBTzJFLElBQUk0QyxHQUFHLEdBQUc7SUFDckg7SUFFQTs7Ozs7O0VBTUMsR0FDRCxTQUFTSyxhQUFhQyxPQUFPLEVBQUVDLEdBQUcsRUFBRTFFLElBQUksRUFBRTJFLFVBQVU7UUFDbkRGLFFBQVFHLFNBQVMsR0FBR0Y7UUFDcEIsSUFBSUcsUUFBUUosUUFBUWpHLElBQUksQ0FBQ3dCO1FBQ3pCLElBQUk2RSxTQUFTRixjQUFjRSxLQUFLLENBQUMsRUFBRSxFQUFFO1lBQ3BDLDRFQUE0RTtZQUM1RSxJQUFJQyxtQkFBbUJELEtBQUssQ0FBQyxFQUFFLENBQUNkLE1BQU07WUFDdENjLE1BQU1FLEtBQUssSUFBSUQ7WUFDZkQsS0FBSyxDQUFDLEVBQUUsR0FBR0EsS0FBSyxDQUFDLEVBQUUsQ0FBQ3RILEtBQUssQ0FBQ3VIO1FBQzNCO1FBQ0EsT0FBT0Q7SUFDUjtJQUVBOzs7Ozs7Ozs7Ozs7O0VBYUMsR0FDRCxTQUFTcEIsYUFBYXpELElBQUksRUFBRXFELFNBQVMsRUFBRTVDLE9BQU8sRUFBRXVFLFNBQVMsRUFBRUMsUUFBUSxFQUFFQyxPQUFPO1FBQzNFLElBQUssSUFBSXZFLFNBQVNGLFFBQVM7WUFDMUIsSUFBSSxDQUFDQSxRQUFReEMsY0FBYyxDQUFDMEMsVUFBVSxDQUFDRixPQUFPLENBQUNFLE1BQU0sRUFBRTtnQkFDdEQ7WUFDRDtZQUVBLElBQUl3RSxXQUFXMUUsT0FBTyxDQUFDRSxNQUFNO1lBQzdCd0UsV0FBV3JJLE1BQU1DLE9BQU8sQ0FBQ29JLFlBQVlBLFdBQVc7Z0JBQUNBO2FBQVM7WUFFMUQsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlELFNBQVNwQixNQUFNLEVBQUUsRUFBRXFCLEVBQUc7Z0JBQ3pDLElBQUlGLFdBQVdBLFFBQVFHLEtBQUssSUFBSTFFLFFBQVEsTUFBTXlFLEdBQUc7b0JBQ2hEO2dCQUNEO2dCQUVBLElBQUlFLGFBQWFILFFBQVEsQ0FBQ0MsRUFBRTtnQkFDNUIsSUFBSS9FLFNBQVNpRixXQUFXakYsTUFBTTtnQkFDOUIsSUFBSXNFLGFBQWEsQ0FBQyxDQUFDVyxXQUFXWCxVQUFVO2dCQUN4QyxJQUFJWSxTQUFTLENBQUMsQ0FBQ0QsV0FBV0MsTUFBTTtnQkFDaEMsSUFBSTFJLFFBQVF5SSxXQUFXekksS0FBSztnQkFFNUIsSUFBSTBJLFVBQVUsQ0FBQ0QsV0FBV2IsT0FBTyxDQUFDZSxNQUFNLEVBQUU7b0JBQ3pDLGdEQUFnRDtvQkFDaEQsSUFBSUMsUUFBUUgsV0FBV2IsT0FBTyxDQUFDcEgsUUFBUSxHQUFHd0gsS0FBSyxDQUFDLFlBQVksQ0FBQyxFQUFFO29CQUMvRFMsV0FBV2IsT0FBTyxHQUFHM0YsT0FBT3dHLFdBQVdiLE9BQU8sQ0FBQ2lCLE1BQU0sRUFBRUQsUUFBUTtnQkFDaEU7Z0JBRUEsbUJBQW1CLEdBQ25CLElBQUloQixVQUFVYSxXQUFXYixPQUFPLElBQUlhO2dCQUVwQyxJQUNDLElBQUlLLGNBQWNYLFVBQVVZLElBQUksRUFBRWxCLE1BQU1PLFVBQ3hDVSxnQkFBZ0J0QyxVQUFVd0MsSUFBSSxFQUM5Qm5CLE9BQU9pQixZQUFZaEksS0FBSyxDQUFDb0csTUFBTSxFQUFFNEIsY0FBY0EsWUFBWUMsSUFBSSxDQUM5RDtvQkFFRCxJQUFJVixXQUFXUixPQUFPUSxRQUFRWSxLQUFLLEVBQUU7d0JBQ3BDO29CQUNEO29CQUVBLElBQUlDLE1BQU1KLFlBQVloSSxLQUFLO29CQUUzQixJQUFJMEYsVUFBVVUsTUFBTSxHQUFHL0QsS0FBSytELE1BQU0sRUFBRTt3QkFDbkMsK0NBQStDO3dCQUMvQztvQkFDRDtvQkFFQSxJQUFJZ0MsZUFBZXJKLE9BQU87d0JBQ3pCO29CQUNEO29CQUVBLElBQUlzSixjQUFjLEdBQUcsNENBQTRDO29CQUNqRSxJQUFJbkI7b0JBRUosSUFBSVUsUUFBUTt3QkFDWFYsUUFBUUwsYUFBYUMsU0FBU0MsS0FBSzFFLE1BQU0yRTt3QkFDekMsSUFBSSxDQUFDRSxTQUFTQSxNQUFNRSxLQUFLLElBQUkvRSxLQUFLK0QsTUFBTSxFQUFFOzRCQUN6Qzt3QkFDRDt3QkFFQSxJQUFJa0MsT0FBT3BCLE1BQU1FLEtBQUs7d0JBQ3RCLElBQUltQixLQUFLckIsTUFBTUUsS0FBSyxHQUFHRixLQUFLLENBQUMsRUFBRSxDQUFDZCxNQUFNO3dCQUN0QyxJQUFJb0MsSUFBSXpCO3dCQUVSLHdDQUF3Qzt3QkFDeEN5QixLQUFLUixZQUFZaEksS0FBSyxDQUFDb0csTUFBTTt3QkFDN0IsTUFBT2tDLFFBQVFFLEVBQUc7NEJBQ2pCUixjQUFjQSxZQUFZQyxJQUFJOzRCQUM5Qk8sS0FBS1IsWUFBWWhJLEtBQUssQ0FBQ29HLE1BQU07d0JBQzlCO3dCQUNBLHFCQUFxQjt3QkFDckJvQyxLQUFLUixZQUFZaEksS0FBSyxDQUFDb0csTUFBTTt3QkFDN0JXLE1BQU15Qjt3QkFFTiw0RkFBNEY7d0JBQzVGLElBQUlSLFlBQVloSSxLQUFLLFlBQVlqQixPQUFPOzRCQUN2Qzt3QkFDRDt3QkFFQSxxREFBcUQ7d0JBQ3JELElBQ0MsSUFBSTBKLElBQUlULGFBQ1JTLE1BQU0vQyxVQUFVd0MsSUFBSSxJQUFLTSxDQUFBQSxJQUFJRCxNQUFNLE9BQU9FLEVBQUV6SSxLQUFLLEtBQUssUUFBTyxHQUM3RHlJLElBQUlBLEVBQUVSLElBQUksQ0FDVDs0QkFDREk7NEJBQ0FHLEtBQUtDLEVBQUV6SSxLQUFLLENBQUNvRyxNQUFNO3dCQUNwQjt3QkFDQWlDO3dCQUVBLDZCQUE2Qjt3QkFDN0JELE1BQU0vRixLQUFLekMsS0FBSyxDQUFDbUgsS0FBS3lCO3dCQUN0QnRCLE1BQU1FLEtBQUssSUFBSUw7b0JBQ2hCLE9BQU87d0JBQ05HLFFBQVFMLGFBQWFDLFNBQVMsR0FBR3NCLEtBQUtwQjt3QkFDdEMsSUFBSSxDQUFDRSxPQUFPOzRCQUNYO3dCQUNEO29CQUNEO29CQUVBLHdDQUF3QztvQkFDeEMsSUFBSW9CLE9BQU9wQixNQUFNRSxLQUFLO29CQUN0QixJQUFJc0IsV0FBV3hCLEtBQUssQ0FBQyxFQUFFO29CQUN2QixJQUFJdkUsU0FBU3lGLElBQUl4SSxLQUFLLENBQUMsR0FBRzBJO29CQUMxQixJQUFJSyxRQUFRUCxJQUFJeEksS0FBSyxDQUFDMEksT0FBT0ksU0FBU3RDLE1BQU07b0JBRTVDLElBQUkrQixRQUFRcEIsTUFBTXFCLElBQUloQyxNQUFNO29CQUM1QixJQUFJbUIsV0FBV1ksUUFBUVosUUFBUVksS0FBSyxFQUFFO3dCQUNyQ1osUUFBUVksS0FBSyxHQUFHQTtvQkFDakI7b0JBRUEsSUFBSVMsYUFBYVosWUFBWWEsSUFBSTtvQkFFakMsSUFBSWxHLFFBQVE7d0JBQ1hpRyxhQUFhaEQsU0FBU0YsV0FBV2tELFlBQVlqRzt3QkFDN0NvRSxPQUFPcEUsT0FBT3lELE1BQU07b0JBQ3JCO29CQUVBMEMsWUFBWXBELFdBQVdrRCxZQUFZUDtvQkFFbkMsSUFBSVUsVUFBVSxJQUFJaEssTUFBTWlFLE9BQU9OLFNBQVNqRSxFQUFFK0csUUFBUSxDQUFDa0QsVUFBVWhHLFVBQVVnRyxVQUFVeEosT0FBT3dKO29CQUN4RlYsY0FBY3BDLFNBQVNGLFdBQVdrRCxZQUFZRztvQkFFOUMsSUFBSUosT0FBTzt3QkFDVi9DLFNBQVNGLFdBQVdzQyxhQUFhVztvQkFDbEM7b0JBRUEsSUFBSU4sY0FBYyxHQUFHO3dCQUNwQiwwRUFBMEU7d0JBQzFFLHdEQUF3RDt3QkFFeEQsMkJBQTJCLEdBQzNCLElBQUlXLGdCQUFnQjs0QkFDbkJ0QixPQUFPMUUsUUFBUSxNQUFNeUU7NEJBQ3JCVSxPQUFPQTt3QkFDUjt3QkFDQXJDLGFBQWF6RCxNQUFNcUQsV0FBVzVDLFNBQVNrRixZQUFZYSxJQUFJLEVBQUU5QixLQUFLaUM7d0JBRTlELCtEQUErRDt3QkFDL0QsSUFBSXpCLFdBQVd5QixjQUFjYixLQUFLLEdBQUdaLFFBQVFZLEtBQUssRUFBRTs0QkFDbkRaLFFBQVFZLEtBQUssR0FBR2EsY0FBY2IsS0FBSzt3QkFDcEM7b0JBQ0Q7Z0JBQ0Q7WUFDRDtRQUNEO0lBQ0Q7SUFFQTs7Ozs7OztFQU9DLEdBRUQ7OztFQUdDLEdBQ0QsU0FBU3hDO1FBQ1IsOEJBQThCLEdBQzlCLElBQUlFLE9BQU87WUFBRTdGLE9BQU87WUFBTTZJLE1BQU07WUFBTVosTUFBTTtRQUFLO1FBQ2pELDhCQUE4QixHQUM5QixJQUFJQyxPQUFPO1lBQUVsSSxPQUFPO1lBQU02SSxNQUFNaEQ7WUFBTW9DLE1BQU07UUFBSztRQUNqRHBDLEtBQUtvQyxJQUFJLEdBQUdDO1FBRVosOEJBQThCLEdBQzlCLElBQUksQ0FBQ3JDLElBQUksR0FBR0E7UUFDWiw4QkFBOEIsR0FDOUIsSUFBSSxDQUFDcUMsSUFBSSxHQUFHQTtRQUNaLElBQUksQ0FBQzlCLE1BQU0sR0FBRztJQUNmO0lBRUE7Ozs7Ozs7O0VBUUMsR0FDRCxTQUFTUixTQUFTcUQsSUFBSSxFQUFFQyxJQUFJLEVBQUVsSixLQUFLO1FBQ2xDLHVEQUF1RDtRQUN2RCxJQUFJaUksT0FBT2lCLEtBQUtqQixJQUFJO1FBRXBCLElBQUlrQixVQUFVO1lBQUVuSixPQUFPQTtZQUFPNkksTUFBTUs7WUFBTWpCLE1BQU1BO1FBQUs7UUFDckRpQixLQUFLakIsSUFBSSxHQUFHa0I7UUFDWmxCLEtBQUtZLElBQUksR0FBR007UUFDWkYsS0FBSzdDLE1BQU07UUFFWCxPQUFPK0M7SUFDUjtJQUNBOzs7Ozs7O0VBT0MsR0FDRCxTQUFTTCxZQUFZRyxJQUFJLEVBQUVDLElBQUksRUFBRUUsS0FBSztRQUNyQyxJQUFJbkIsT0FBT2lCLEtBQUtqQixJQUFJO1FBQ3BCLElBQUssSUFBSXhILElBQUksR0FBR0EsSUFBSTJJLFNBQVNuQixTQUFTZ0IsS0FBS2YsSUFBSSxFQUFFekgsSUFBSztZQUNyRHdILE9BQU9BLEtBQUtBLElBQUk7UUFDakI7UUFDQWlCLEtBQUtqQixJQUFJLEdBQUdBO1FBQ1pBLEtBQUtZLElBQUksR0FBR0s7UUFDWkQsS0FBSzdDLE1BQU0sSUFBSTNGO0lBQ2hCO0lBQ0E7Ozs7RUFJQyxHQUNELFNBQVNzRixRQUFRa0QsSUFBSTtRQUNwQixJQUFJSSxRQUFRLEVBQUU7UUFDZCxJQUFJSCxPQUFPRCxLQUFLcEQsSUFBSSxDQUFDb0MsSUFBSTtRQUN6QixNQUFPaUIsU0FBU0QsS0FBS2YsSUFBSSxDQUFFO1lBQzFCbUIsTUFBTW5ELElBQUksQ0FBQ2dELEtBQUtsSixLQUFLO1lBQ3JCa0osT0FBT0EsS0FBS2pCLElBQUk7UUFDakI7UUFDQSxPQUFPb0I7SUFDUjtJQUdBLElBQUksQ0FBQ3BMLE1BQU1zRCxRQUFRLEVBQUU7UUFDcEIsSUFBSSxDQUFDdEQsTUFBTXFMLGdCQUFnQixFQUFFO1lBQzVCLGFBQWE7WUFDYixPQUFPN0s7UUFDUjtRQUVBLElBQUksQ0FBQ0EsRUFBRUUsMkJBQTJCLEVBQUU7WUFDbkMsWUFBWTtZQUNaVixNQUFNcUwsZ0JBQWdCLENBQUMsV0FBVyxTQUFVckUsR0FBRztnQkFDOUMsSUFBSXNFLFVBQVVuRSxLQUFLb0UsS0FBSyxDQUFDdkUsSUFBSUMsSUFBSTtnQkFDakMsSUFBSTVHLE9BQU9pTCxRQUFRckksUUFBUTtnQkFDM0IsSUFBSW9ELE9BQU9pRixRQUFRakYsSUFBSTtnQkFDdkIsSUFBSWdCLGlCQUFpQmlFLFFBQVFqRSxjQUFjO2dCQUUzQ3JILE1BQU1rSCxXQUFXLENBQUMxRyxFQUFFOEcsU0FBUyxDQUFDakIsTUFBTTdGLEVBQUV5RCxTQUFTLENBQUM1RCxLQUFLLEVBQUVBO2dCQUN2RCxJQUFJZ0gsZ0JBQWdCO29CQUNuQnJILE1BQU13TCxLQUFLO2dCQUNaO1lBQ0QsR0FBRztRQUNKO1FBRUEsT0FBT2hMO0lBQ1I7SUFFQSxtQ0FBbUM7SUFDbkMsSUFBSWlMLFNBQVNqTCxFQUFFRyxJQUFJLENBQUMwQyxhQUFhO0lBRWpDLElBQUlvSSxRQUFRO1FBQ1hqTCxFQUFFc0csUUFBUSxHQUFHMkUsT0FBT2hJLEdBQUc7UUFFdkIsSUFBSWdJLE9BQU8vRSxZQUFZLENBQUMsZ0JBQWdCO1lBQ3ZDbEcsRUFBRUMsTUFBTSxHQUFHO1FBQ1o7SUFDRDtJQUVBLFNBQVNpTDtRQUNSLElBQUksQ0FBQ2xMLEVBQUVDLE1BQU0sRUFBRTtZQUNkRCxFQUFFK0UsWUFBWTtRQUNmO0lBQ0Q7SUFFQSxJQUFJLENBQUMvRSxFQUFFQyxNQUFNLEVBQUU7UUFDZCx1RUFBdUU7UUFDdkUsc0dBQXNHO1FBQ3RHLGlIQUFpSDtRQUNqSCxrSEFBa0g7UUFDbEgsaUdBQWlHO1FBQ2pHLG1EQUFtRDtRQUNuRCxJQUFJa0wsYUFBYXJJLFNBQVNxSSxVQUFVO1FBQ3BDLElBQUlBLGVBQWUsYUFBYUEsZUFBZSxpQkFBaUJGLFVBQVVBLE9BQU9HLEtBQUssRUFBRTtZQUN2RnRJLFNBQVMrSCxnQkFBZ0IsQ0FBQyxvQkFBb0JLO1FBQy9DLE9BQU87WUFDTixJQUFJekwsT0FBTzRMLHFCQUFxQixFQUFFO2dCQUNqQzVMLE9BQU80TCxxQkFBcUIsQ0FBQ0g7WUFDOUIsT0FBTztnQkFDTnpMLE9BQU82TCxVQUFVLENBQUNKLGdDQUFnQztZQUNuRDtRQUNEO0lBQ0Q7SUFFQSxPQUFPbEw7QUFFUixFQUFFUjtBQUVGLElBQUksS0FBa0IsSUFBZStMLE9BQU9DLE9BQU8sRUFBRTtJQUNwREQsT0FBT0MsT0FBTyxHQUFHNUw7QUFDbEI7QUFFQSxtREFBbUQ7QUFDbkQsSUFBSSxPQUFPd0osV0FBVyxhQUFhO0lBQ2xDQSxPQUFPeEosS0FBSyxHQUFHQTtBQUNoQixFQUVBLHNDQUFzQztDQUV0Qzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQW1CQyxJQUVEOzs7Ozs7Q0FNQyxJQUVEOzs7Ozs7OztDQVFDLElBRUQ7Ozs7OztDQU1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGdwdC1saXRlLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9ub2RlX21vZHVsZXMvcHJpc21qcy9jb21wb25lbnRzL3ByaXNtLWNvcmUuanM/MGE5YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLy8gPHJlZmVyZW5jZSBsaWI9XCJXZWJXb3JrZXJcIi8+XG5cbnZhciBfc2VsZiA9ICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJylcblx0PyB3aW5kb3cgICAvLyBpZiBpbiBicm93c2VyXG5cdDogKFxuXHRcdCh0eXBlb2YgV29ya2VyR2xvYmFsU2NvcGUgIT09ICd1bmRlZmluZWQnICYmIHNlbGYgaW5zdGFuY2VvZiBXb3JrZXJHbG9iYWxTY29wZSlcblx0XHRcdD8gc2VsZiAvLyBpZiBpbiB3b3JrZXJcblx0XHRcdDoge30gICAvLyBpZiBpbiBub2RlIGpzXG5cdCk7XG5cbi8qKlxuICogUHJpc206IExpZ2h0d2VpZ2h0LCByb2J1c3QsIGVsZWdhbnQgc3ludGF4IGhpZ2hsaWdodGluZ1xuICpcbiAqIEBsaWNlbnNlIE1JVCA8aHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9NSVQ+XG4gKiBAYXV0aG9yIExlYSBWZXJvdSA8aHR0cHM6Ly9sZWEudmVyb3UubWU+XG4gKiBAbmFtZXNwYWNlXG4gKiBAcHVibGljXG4gKi9cbnZhciBQcmlzbSA9IChmdW5jdGlvbiAoX3NlbGYpIHtcblxuXHQvLyBQcml2YXRlIGhlbHBlciB2YXJzXG5cdHZhciBsYW5nID0gLyg/Ol58XFxzKWxhbmcoPzp1YWdlKT8tKFtcXHctXSspKD89XFxzfCQpL2k7XG5cdHZhciB1bmlxdWVJZCA9IDA7XG5cblx0Ly8gVGhlIGdyYW1tYXIgb2JqZWN0IGZvciBwbGFpbnRleHRcblx0dmFyIHBsYWluVGV4dEdyYW1tYXIgPSB7fTtcblxuXG5cdHZhciBfID0ge1xuXHRcdC8qKlxuXHRcdCAqIEJ5IGRlZmF1bHQsIFByaXNtIHdpbGwgYXR0ZW1wdCB0byBoaWdobGlnaHQgYWxsIGNvZGUgZWxlbWVudHMgKGJ5IGNhbGxpbmcge0BsaW5rIFByaXNtLmhpZ2hsaWdodEFsbH0pIG9uIHRoZVxuXHRcdCAqIGN1cnJlbnQgcGFnZSBhZnRlciB0aGUgcGFnZSBmaW5pc2hlZCBsb2FkaW5nLiBUaGlzIG1pZ2h0IGJlIGEgcHJvYmxlbSBpZiBlLmcuIHlvdSB3YW50ZWQgdG8gYXN5bmNocm9ub3VzbHkgbG9hZFxuXHRcdCAqIGFkZGl0aW9uYWwgbGFuZ3VhZ2VzIG9yIHBsdWdpbnMgeW91cnNlbGYuXG5cdFx0ICpcblx0XHQgKiBCeSBzZXR0aW5nIHRoaXMgdmFsdWUgdG8gYHRydWVgLCBQcmlzbSB3aWxsIG5vdCBhdXRvbWF0aWNhbGx5IGhpZ2hsaWdodCBhbGwgY29kZSBlbGVtZW50cyBvbiB0aGUgcGFnZS5cblx0XHQgKlxuXHRcdCAqIFlvdSBvYnZpb3VzbHkgaGF2ZSB0byBjaGFuZ2UgdGhpcyB2YWx1ZSBiZWZvcmUgdGhlIGF1dG9tYXRpYyBoaWdobGlnaHRpbmcgc3RhcnRlZC4gVG8gZG8gdGhpcywgeW91IGNhbiBhZGQgYW5cblx0XHQgKiBlbXB0eSBQcmlzbSBvYmplY3QgaW50byB0aGUgZ2xvYmFsIHNjb3BlIGJlZm9yZSBsb2FkaW5nIHRoZSBQcmlzbSBzY3JpcHQgbGlrZSB0aGlzOlxuXHRcdCAqXG5cdFx0ICogYGBganNcblx0XHQgKiB3aW5kb3cuUHJpc20gPSB3aW5kb3cuUHJpc20gfHwge307XG5cdFx0ICogUHJpc20ubWFudWFsID0gdHJ1ZTtcblx0XHQgKiAvLyBhZGQgYSBuZXcgPHNjcmlwdD4gdG8gbG9hZCBQcmlzbSdzIHNjcmlwdFxuXHRcdCAqIGBgYFxuXHRcdCAqXG5cdFx0ICogQGRlZmF1bHQgZmFsc2Vcblx0XHQgKiBAdHlwZSB7Ym9vbGVhbn1cblx0XHQgKiBAbWVtYmVyb2YgUHJpc21cblx0XHQgKiBAcHVibGljXG5cdFx0ICovXG5cdFx0bWFudWFsOiBfc2VsZi5QcmlzbSAmJiBfc2VsZi5QcmlzbS5tYW51YWwsXG5cdFx0LyoqXG5cdFx0ICogQnkgZGVmYXVsdCwgaWYgUHJpc20gaXMgaW4gYSB3ZWIgd29ya2VyLCBpdCBhc3N1bWVzIHRoYXQgaXQgaXMgaW4gYSB3b3JrZXIgaXQgY3JlYXRlZCBpdHNlbGYsIHNvIGl0IHVzZXNcblx0XHQgKiBgYWRkRXZlbnRMaXN0ZW5lcmAgdG8gY29tbXVuaWNhdGUgd2l0aCBpdHMgcGFyZW50IGluc3RhbmNlLiBIb3dldmVyLCBpZiB5b3UncmUgdXNpbmcgUHJpc20gbWFudWFsbHkgaW4geW91clxuXHRcdCAqIG93biB3b3JrZXIsIHlvdSBkb24ndCB3YW50IGl0IHRvIGRvIHRoaXMuXG5cdFx0ICpcblx0XHQgKiBCeSBzZXR0aW5nIHRoaXMgdmFsdWUgdG8gYHRydWVgLCBQcmlzbSB3aWxsIG5vdCBhZGQgaXRzIG93biBsaXN0ZW5lcnMgdG8gdGhlIHdvcmtlci5cblx0XHQgKlxuXHRcdCAqIFlvdSBvYnZpb3VzbHkgaGF2ZSB0byBjaGFuZ2UgdGhpcyB2YWx1ZSBiZWZvcmUgUHJpc20gZXhlY3V0ZXMuIFRvIGRvIHRoaXMsIHlvdSBjYW4gYWRkIGFuXG5cdFx0ICogZW1wdHkgUHJpc20gb2JqZWN0IGludG8gdGhlIGdsb2JhbCBzY29wZSBiZWZvcmUgbG9hZGluZyB0aGUgUHJpc20gc2NyaXB0IGxpa2UgdGhpczpcblx0XHQgKlxuXHRcdCAqIGBgYGpzXG5cdFx0ICogd2luZG93LlByaXNtID0gd2luZG93LlByaXNtIHx8IHt9O1xuXHRcdCAqIFByaXNtLmRpc2FibGVXb3JrZXJNZXNzYWdlSGFuZGxlciA9IHRydWU7XG5cdFx0ICogLy8gTG9hZCBQcmlzbSdzIHNjcmlwdFxuXHRcdCAqIGBgYFxuXHRcdCAqXG5cdFx0ICogQGRlZmF1bHQgZmFsc2Vcblx0XHQgKiBAdHlwZSB7Ym9vbGVhbn1cblx0XHQgKiBAbWVtYmVyb2YgUHJpc21cblx0XHQgKiBAcHVibGljXG5cdFx0ICovXG5cdFx0ZGlzYWJsZVdvcmtlck1lc3NhZ2VIYW5kbGVyOiBfc2VsZi5QcmlzbSAmJiBfc2VsZi5QcmlzbS5kaXNhYmxlV29ya2VyTWVzc2FnZUhhbmRsZXIsXG5cblx0XHQvKipcblx0XHQgKiBBIG5hbWVzcGFjZSBmb3IgdXRpbGl0eSBtZXRob2RzLlxuXHRcdCAqXG5cdFx0ICogQWxsIGZ1bmN0aW9uIGluIHRoaXMgbmFtZXNwYWNlIHRoYXQgYXJlIG5vdCBleHBsaWNpdGx5IG1hcmtlZCBhcyBfcHVibGljXyBhcmUgZm9yIF9faW50ZXJuYWwgdXNlIG9ubHlfXyBhbmQgbWF5XG5cdFx0ICogY2hhbmdlIG9yIGRpc2FwcGVhciBhdCBhbnkgdGltZS5cblx0XHQgKlxuXHRcdCAqIEBuYW1lc3BhY2Vcblx0XHQgKiBAbWVtYmVyb2YgUHJpc21cblx0XHQgKi9cblx0XHR1dGlsOiB7XG5cdFx0XHRlbmNvZGU6IGZ1bmN0aW9uIGVuY29kZSh0b2tlbnMpIHtcblx0XHRcdFx0aWYgKHRva2VucyBpbnN0YW5jZW9mIFRva2VuKSB7XG5cdFx0XHRcdFx0cmV0dXJuIG5ldyBUb2tlbih0b2tlbnMudHlwZSwgZW5jb2RlKHRva2Vucy5jb250ZW50KSwgdG9rZW5zLmFsaWFzKTtcblx0XHRcdFx0fSBlbHNlIGlmIChBcnJheS5pc0FycmF5KHRva2VucykpIHtcblx0XHRcdFx0XHRyZXR1cm4gdG9rZW5zLm1hcChlbmNvZGUpO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHJldHVybiB0b2tlbnMucmVwbGFjZSgvJi9nLCAnJmFtcDsnKS5yZXBsYWNlKC88L2csICcmbHQ7JykucmVwbGFjZSgvXFx1MDBhMC9nLCAnICcpO1xuXHRcdFx0XHR9XG5cdFx0XHR9LFxuXG5cdFx0XHQvKipcblx0XHRcdCAqIFJldHVybnMgdGhlIG5hbWUgb2YgdGhlIHR5cGUgb2YgdGhlIGdpdmVuIHZhbHVlLlxuXHRcdFx0ICpcblx0XHRcdCAqIEBwYXJhbSB7YW55fSBvXG5cdFx0XHQgKiBAcmV0dXJucyB7c3RyaW5nfVxuXHRcdFx0ICogQGV4YW1wbGVcblx0XHRcdCAqIHR5cGUobnVsbCkgICAgICA9PT0gJ051bGwnXG5cdFx0XHQgKiB0eXBlKHVuZGVmaW5lZCkgPT09ICdVbmRlZmluZWQnXG5cdFx0XHQgKiB0eXBlKDEyMykgICAgICAgPT09ICdOdW1iZXInXG5cdFx0XHQgKiB0eXBlKCdmb28nKSAgICAgPT09ICdTdHJpbmcnXG5cdFx0XHQgKiB0eXBlKHRydWUpICAgICAgPT09ICdCb29sZWFuJ1xuXHRcdFx0ICogdHlwZShbMSwgMl0pICAgID09PSAnQXJyYXknXG5cdFx0XHQgKiB0eXBlKHt9KSAgICAgICAgPT09ICdPYmplY3QnXG5cdFx0XHQgKiB0eXBlKFN0cmluZykgICAgPT09ICdGdW5jdGlvbidcblx0XHRcdCAqIHR5cGUoL2FiYysvKSAgICA9PT0gJ1JlZ0V4cCdcblx0XHRcdCAqL1xuXHRcdFx0dHlwZTogZnVuY3Rpb24gKG8pIHtcblx0XHRcdFx0cmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7XG5cdFx0XHR9LFxuXG5cdFx0XHQvKipcblx0XHRcdCAqIFJldHVybnMgYSB1bmlxdWUgbnVtYmVyIGZvciB0aGUgZ2l2ZW4gb2JqZWN0LiBMYXRlciBjYWxscyB3aWxsIHN0aWxsIHJldHVybiB0aGUgc2FtZSBudW1iZXIuXG5cdFx0XHQgKlxuXHRcdFx0ICogQHBhcmFtIHtPYmplY3R9IG9ialxuXHRcdFx0ICogQHJldHVybnMge251bWJlcn1cblx0XHRcdCAqL1xuXHRcdFx0b2JqSWQ6IGZ1bmN0aW9uIChvYmopIHtcblx0XHRcdFx0aWYgKCFvYmpbJ19faWQnXSkge1xuXHRcdFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosICdfX2lkJywgeyB2YWx1ZTogKyt1bmlxdWVJZCB9KTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gb2JqWydfX2lkJ107XG5cdFx0XHR9LFxuXG5cdFx0XHQvKipcblx0XHRcdCAqIENyZWF0ZXMgYSBkZWVwIGNsb25lIG9mIHRoZSBnaXZlbiBvYmplY3QuXG5cdFx0XHQgKlxuXHRcdFx0ICogVGhlIG1haW4gaW50ZW5kZWQgdXNlIG9mIHRoaXMgZnVuY3Rpb24gaXMgdG8gY2xvbmUgbGFuZ3VhZ2UgZGVmaW5pdGlvbnMuXG5cdFx0XHQgKlxuXHRcdFx0ICogQHBhcmFtIHtUfSBvXG5cdFx0XHQgKiBAcGFyYW0ge1JlY29yZDxudW1iZXIsIGFueT59IFt2aXNpdGVkXVxuXHRcdFx0ICogQHJldHVybnMge1R9XG5cdFx0XHQgKiBAdGVtcGxhdGUgVFxuXHRcdFx0ICovXG5cdFx0XHRjbG9uZTogZnVuY3Rpb24gZGVlcENsb25lKG8sIHZpc2l0ZWQpIHtcblx0XHRcdFx0dmlzaXRlZCA9IHZpc2l0ZWQgfHwge307XG5cblx0XHRcdFx0dmFyIGNsb25lOyB2YXIgaWQ7XG5cdFx0XHRcdHN3aXRjaCAoXy51dGlsLnR5cGUobykpIHtcblx0XHRcdFx0XHRjYXNlICdPYmplY3QnOlxuXHRcdFx0XHRcdFx0aWQgPSBfLnV0aWwub2JqSWQobyk7XG5cdFx0XHRcdFx0XHRpZiAodmlzaXRlZFtpZF0pIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHZpc2l0ZWRbaWRdO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0Y2xvbmUgPSAvKiogQHR5cGUge1JlY29yZDxzdHJpbmcsIGFueT59ICovICh7fSk7XG5cdFx0XHRcdFx0XHR2aXNpdGVkW2lkXSA9IGNsb25lO1xuXG5cdFx0XHRcdFx0XHRmb3IgKHZhciBrZXkgaW4gbykge1xuXHRcdFx0XHRcdFx0XHRpZiAoby5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG5cdFx0XHRcdFx0XHRcdFx0Y2xvbmVba2V5XSA9IGRlZXBDbG9uZShvW2tleV0sIHZpc2l0ZWQpO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdHJldHVybiAvKiogQHR5cGUge2FueX0gKi8gKGNsb25lKTtcblxuXHRcdFx0XHRcdGNhc2UgJ0FycmF5Jzpcblx0XHRcdFx0XHRcdGlkID0gXy51dGlsLm9iaklkKG8pO1xuXHRcdFx0XHRcdFx0aWYgKHZpc2l0ZWRbaWRdKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiB2aXNpdGVkW2lkXTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGNsb25lID0gW107XG5cdFx0XHRcdFx0XHR2aXNpdGVkW2lkXSA9IGNsb25lO1xuXG5cdFx0XHRcdFx0XHQoLyoqIEB0eXBlIHtBcnJheX0gKi8oLyoqIEB0eXBlIHthbnl9ICovKG8pKSkuZm9yRWFjaChmdW5jdGlvbiAodiwgaSkge1xuXHRcdFx0XHRcdFx0XHRjbG9uZVtpXSA9IGRlZXBDbG9uZSh2LCB2aXNpdGVkKTtcblx0XHRcdFx0XHRcdH0pO1xuXG5cdFx0XHRcdFx0XHRyZXR1cm4gLyoqIEB0eXBlIHthbnl9ICovIChjbG9uZSk7XG5cblx0XHRcdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRcdFx0cmV0dXJuIG87XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cblx0XHRcdC8qKlxuXHRcdFx0ICogUmV0dXJucyB0aGUgUHJpc20gbGFuZ3VhZ2Ugb2YgdGhlIGdpdmVuIGVsZW1lbnQgc2V0IGJ5IGEgYGxhbmd1YWdlLXh4eHhgIG9yIGBsYW5nLXh4eHhgIGNsYXNzLlxuXHRcdFx0ICpcblx0XHRcdCAqIElmIG5vIGxhbmd1YWdlIGlzIHNldCBmb3IgdGhlIGVsZW1lbnQgb3IgdGhlIGVsZW1lbnQgaXMgYG51bGxgIG9yIGB1bmRlZmluZWRgLCBgbm9uZWAgd2lsbCBiZSByZXR1cm5lZC5cblx0XHRcdCAqXG5cdFx0XHQgKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnRcblx0XHRcdCAqIEByZXR1cm5zIHtzdHJpbmd9XG5cdFx0XHQgKi9cblx0XHRcdGdldExhbmd1YWdlOiBmdW5jdGlvbiAoZWxlbWVudCkge1xuXHRcdFx0XHR3aGlsZSAoZWxlbWVudCkge1xuXHRcdFx0XHRcdHZhciBtID0gbGFuZy5leGVjKGVsZW1lbnQuY2xhc3NOYW1lKTtcblx0XHRcdFx0XHRpZiAobSkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIG1bMV0udG9Mb3dlckNhc2UoKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZWxlbWVudCA9IGVsZW1lbnQucGFyZW50RWxlbWVudDtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gJ25vbmUnO1xuXHRcdFx0fSxcblxuXHRcdFx0LyoqXG5cdFx0XHQgKiBTZXRzIHRoZSBQcmlzbSBgbGFuZ3VhZ2UteHh4eGAgY2xhc3Mgb2YgdGhlIGdpdmVuIGVsZW1lbnQuXG5cdFx0XHQgKlxuXHRcdFx0ICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50XG5cdFx0XHQgKiBAcGFyYW0ge3N0cmluZ30gbGFuZ3VhZ2Vcblx0XHRcdCAqIEByZXR1cm5zIHt2b2lkfVxuXHRcdFx0ICovXG5cdFx0XHRzZXRMYW5ndWFnZTogZnVuY3Rpb24gKGVsZW1lbnQsIGxhbmd1YWdlKSB7XG5cdFx0XHRcdC8vIHJlbW92ZSBhbGwgYGxhbmd1YWdlLXh4eHhgIGNsYXNzZXNcblx0XHRcdFx0Ly8gKHRoaXMgbWlnaHQgbGVhdmUgYmVoaW5kIGEgbGVhZGluZyBzcGFjZSlcblx0XHRcdFx0ZWxlbWVudC5jbGFzc05hbWUgPSBlbGVtZW50LmNsYXNzTmFtZS5yZXBsYWNlKFJlZ0V4cChsYW5nLCAnZ2knKSwgJycpO1xuXG5cdFx0XHRcdC8vIGFkZCB0aGUgbmV3IGBsYW5ndWFnZS14eHh4YCBjbGFzc1xuXHRcdFx0XHQvLyAodXNpbmcgYGNsYXNzTGlzdGAgd2lsbCBhdXRvbWF0aWNhbGx5IGNsZWFuIHVwIHNwYWNlcyBmb3IgdXMpXG5cdFx0XHRcdGVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnbGFuZ3VhZ2UtJyArIGxhbmd1YWdlKTtcblx0XHRcdH0sXG5cblx0XHRcdC8qKlxuXHRcdFx0ICogUmV0dXJucyB0aGUgc2NyaXB0IGVsZW1lbnQgdGhhdCBpcyBjdXJyZW50bHkgZXhlY3V0aW5nLlxuXHRcdFx0ICpcblx0XHRcdCAqIFRoaXMgZG9lcyBfX25vdF9fIHdvcmsgZm9yIGxpbmUgc2NyaXB0IGVsZW1lbnQuXG5cdFx0XHQgKlxuXHRcdFx0ICogQHJldHVybnMge0hUTUxTY3JpcHRFbGVtZW50IHwgbnVsbH1cblx0XHRcdCAqL1xuXHRcdFx0Y3VycmVudFNjcmlwdDogZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRpZiAodHlwZW9mIGRvY3VtZW50ID09PSAndW5kZWZpbmVkJykge1xuXHRcdFx0XHRcdHJldHVybiBudWxsO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICgnY3VycmVudFNjcmlwdCcgaW4gZG9jdW1lbnQgJiYgMSA8IDIgLyogaGFjayB0byB0cmlwIFRTJyBmbG93IGFuYWx5c2lzICovKSB7XG5cdFx0XHRcdFx0cmV0dXJuIC8qKiBAdHlwZSB7YW55fSAqLyAoZG9jdW1lbnQuY3VycmVudFNjcmlwdCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBJRTExIHdvcmthcm91bmRcblx0XHRcdFx0Ly8gd2UnbGwgZ2V0IHRoZSBzcmMgb2YgdGhlIGN1cnJlbnQgc2NyaXB0IGJ5IHBhcnNpbmcgSUUxMSdzIGVycm9yIHN0YWNrIHRyYWNlXG5cdFx0XHRcdC8vIHRoaXMgd2lsbCBub3Qgd29yayBmb3IgaW5saW5lIHNjcmlwdHNcblxuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdHRocm93IG5ldyBFcnJvcigpO1xuXHRcdFx0XHR9IGNhdGNoIChlcnIpIHtcblx0XHRcdFx0XHQvLyBHZXQgZmlsZSBzcmMgdXJsIGZyb20gc3RhY2suIFNwZWNpZmljYWxseSB3b3JrcyB3aXRoIHRoZSBmb3JtYXQgb2Ygc3RhY2sgdHJhY2VzIGluIElFLlxuXHRcdFx0XHRcdC8vIEEgc3RhY2sgd2lsbCBsb29rIGxpa2UgdGhpczpcblx0XHRcdFx0XHQvL1xuXHRcdFx0XHRcdC8vIEVycm9yXG5cdFx0XHRcdFx0Ly8gICAgYXQgXy51dGlsLmN1cnJlbnRTY3JpcHQgKGh0dHA6Ly9sb2NhbGhvc3QvY29tcG9uZW50cy9wcmlzbS1jb3JlLmpzOjExOTo1KVxuXHRcdFx0XHRcdC8vICAgIGF0IEdsb2JhbCBjb2RlIChodHRwOi8vbG9jYWxob3N0L2NvbXBvbmVudHMvcHJpc20tY29yZS5qczo2MDY6MSlcblxuXHRcdFx0XHRcdHZhciBzcmMgPSAoL2F0IFteKFxcclxcbl0qXFwoKC4qKTpbXjpdKzpbXjpdK1xcKSQvaS5leGVjKGVyci5zdGFjaykgfHwgW10pWzFdO1xuXHRcdFx0XHRcdGlmIChzcmMpIHtcblx0XHRcdFx0XHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3NjcmlwdCcpO1xuXHRcdFx0XHRcdFx0Zm9yICh2YXIgaSBpbiBzY3JpcHRzKSB7XG5cdFx0XHRcdFx0XHRcdGlmIChzY3JpcHRzW2ldLnNyYyA9PSBzcmMpIHtcblx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gc2NyaXB0c1tpXTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gbnVsbDtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblxuXHRcdFx0LyoqXG5cdFx0XHQgKiBSZXR1cm5zIHdoZXRoZXIgYSBnaXZlbiBjbGFzcyBpcyBhY3RpdmUgZm9yIGBlbGVtZW50YC5cblx0XHRcdCAqXG5cdFx0XHQgKiBUaGUgY2xhc3MgY2FuIGJlIGFjdGl2YXRlZCBpZiBgZWxlbWVudGAgb3Igb25lIG9mIGl0cyBhbmNlc3RvcnMgaGFzIHRoZSBnaXZlbiBjbGFzcyBhbmQgaXQgY2FuIGJlIGRlYWN0aXZhdGVkXG5cdFx0XHQgKiBpZiBgZWxlbWVudGAgb3Igb25lIG9mIGl0cyBhbmNlc3RvcnMgaGFzIHRoZSBuZWdhdGVkIHZlcnNpb24gb2YgdGhlIGdpdmVuIGNsYXNzLiBUaGUgX25lZ2F0ZWQgdmVyc2lvbl8gb2YgdGhlXG5cdFx0XHQgKiBnaXZlbiBjbGFzcyBpcyBqdXN0IHRoZSBnaXZlbiBjbGFzcyB3aXRoIGEgYG5vLWAgcHJlZml4LlxuXHRcdFx0ICpcblx0XHRcdCAqIFdoZXRoZXIgdGhlIGNsYXNzIGlzIGFjdGl2ZSBpcyBkZXRlcm1pbmVkIGJ5IHRoZSBjbG9zZXN0IGFuY2VzdG9yIG9mIGBlbGVtZW50YCAod2hlcmUgYGVsZW1lbnRgIGl0c2VsZiBpc1xuXHRcdFx0ICogY2xvc2VzdCBhbmNlc3RvcikgdGhhdCBoYXMgdGhlIGdpdmVuIGNsYXNzIG9yIHRoZSBuZWdhdGVkIHZlcnNpb24gb2YgaXQuIElmIG5laXRoZXIgYGVsZW1lbnRgIG5vciBhbnkgb2YgaXRzXG5cdFx0XHQgKiBhbmNlc3RvcnMgaGF2ZSB0aGUgZ2l2ZW4gY2xhc3Mgb3IgdGhlIG5lZ2F0ZWQgdmVyc2lvbiBvZiBpdCwgdGhlbiB0aGUgZGVmYXVsdCBhY3RpdmF0aW9uIHdpbGwgYmUgcmV0dXJuZWQuXG5cdFx0XHQgKlxuXHRcdFx0ICogSW4gdGhlIHBhcmFkb3hpY2FsIHNpdHVhdGlvbiB3aGVyZSB0aGUgY2xvc2VzdCBhbmNlc3RvciBjb250YWlucyBfX2JvdGhfXyB0aGUgZ2l2ZW4gY2xhc3MgYW5kIHRoZSBuZWdhdGVkXG5cdFx0XHQgKiB2ZXJzaW9uIG9mIGl0LCB0aGUgY2xhc3MgaXMgY29uc2lkZXJlZCBhY3RpdmUuXG5cdFx0XHQgKlxuXHRcdFx0ICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50XG5cdFx0XHQgKiBAcGFyYW0ge3N0cmluZ30gY2xhc3NOYW1lXG5cdFx0XHQgKiBAcGFyYW0ge2Jvb2xlYW59IFtkZWZhdWx0QWN0aXZhdGlvbj1mYWxzZV1cblx0XHRcdCAqIEByZXR1cm5zIHtib29sZWFufVxuXHRcdFx0ICovXG5cdFx0XHRpc0FjdGl2ZTogZnVuY3Rpb24gKGVsZW1lbnQsIGNsYXNzTmFtZSwgZGVmYXVsdEFjdGl2YXRpb24pIHtcblx0XHRcdFx0dmFyIG5vID0gJ25vLScgKyBjbGFzc05hbWU7XG5cblx0XHRcdFx0d2hpbGUgKGVsZW1lbnQpIHtcblx0XHRcdFx0XHR2YXIgY2xhc3NMaXN0ID0gZWxlbWVudC5jbGFzc0xpc3Q7XG5cdFx0XHRcdFx0aWYgKGNsYXNzTGlzdC5jb250YWlucyhjbGFzc05hbWUpKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKGNsYXNzTGlzdC5jb250YWlucyhubykpIHtcblx0XHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZWxlbWVudCA9IGVsZW1lbnQucGFyZW50RWxlbWVudDtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gISFkZWZhdWx0QWN0aXZhdGlvbjtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0LyoqXG5cdFx0ICogVGhpcyBuYW1lc3BhY2UgY29udGFpbnMgYWxsIGN1cnJlbnRseSBsb2FkZWQgbGFuZ3VhZ2VzIGFuZCB0aGUgc29tZSBoZWxwZXIgZnVuY3Rpb25zIHRvIGNyZWF0ZSBhbmQgbW9kaWZ5IGxhbmd1YWdlcy5cblx0XHQgKlxuXHRcdCAqIEBuYW1lc3BhY2Vcblx0XHQgKiBAbWVtYmVyb2YgUHJpc21cblx0XHQgKiBAcHVibGljXG5cdFx0ICovXG5cdFx0bGFuZ3VhZ2VzOiB7XG5cdFx0XHQvKipcblx0XHRcdCAqIFRoZSBncmFtbWFyIGZvciBwbGFpbiwgdW5mb3JtYXR0ZWQgdGV4dC5cblx0XHRcdCAqL1xuXHRcdFx0cGxhaW46IHBsYWluVGV4dEdyYW1tYXIsXG5cdFx0XHRwbGFpbnRleHQ6IHBsYWluVGV4dEdyYW1tYXIsXG5cdFx0XHR0ZXh0OiBwbGFpblRleHRHcmFtbWFyLFxuXHRcdFx0dHh0OiBwbGFpblRleHRHcmFtbWFyLFxuXG5cdFx0XHQvKipcblx0XHRcdCAqIENyZWF0ZXMgYSBkZWVwIGNvcHkgb2YgdGhlIGxhbmd1YWdlIHdpdGggdGhlIGdpdmVuIGlkIGFuZCBhcHBlbmRzIHRoZSBnaXZlbiB0b2tlbnMuXG5cdFx0XHQgKlxuXHRcdFx0ICogSWYgYSB0b2tlbiBpbiBgcmVkZWZgIGFsc28gYXBwZWFycyBpbiB0aGUgY29waWVkIGxhbmd1YWdlLCB0aGVuIHRoZSBleGlzdGluZyB0b2tlbiBpbiB0aGUgY29waWVkIGxhbmd1YWdlXG5cdFx0XHQgKiB3aWxsIGJlIG92ZXJ3cml0dGVuIGF0IGl0cyBvcmlnaW5hbCBwb3NpdGlvbi5cblx0XHRcdCAqXG5cdFx0XHQgKiAjIyBCZXN0IHByYWN0aWNlc1xuXHRcdFx0ICpcblx0XHRcdCAqIFNpbmNlIHRoZSBwb3NpdGlvbiBvZiBvdmVyd3JpdGluZyB0b2tlbnMgKHRva2VuIGluIGByZWRlZmAgdGhhdCBvdmVyd3JpdGUgdG9rZW5zIGluIHRoZSBjb3BpZWQgbGFuZ3VhZ2UpXG5cdFx0XHQgKiBkb2Vzbid0IG1hdHRlciwgdGhleSBjYW4gdGVjaG5pY2FsbHkgYmUgaW4gYW55IG9yZGVyLiBIb3dldmVyLCB0aGlzIGNhbiBiZSBjb25mdXNpbmcgdG8gb3RoZXJzIHRoYXQgdHJ5aW5nIHRvXG5cdFx0XHQgKiB1bmRlcnN0YW5kIHRoZSBsYW5ndWFnZSBkZWZpbml0aW9uIGJlY2F1c2UsIG5vcm1hbGx5LCB0aGUgb3JkZXIgb2YgdG9rZW5zIG1hdHRlcnMgaW4gUHJpc20gZ3JhbW1hcnMuXG5cdFx0XHQgKlxuXHRcdFx0ICogVGhlcmVmb3JlLCBpdCBpcyBlbmNvdXJhZ2VkIHRvIG9yZGVyIG92ZXJ3cml0aW5nIHRva2VucyBhY2NvcmRpbmcgdG8gdGhlIHBvc2l0aW9ucyBvZiB0aGUgb3ZlcndyaXR0ZW4gdG9rZW5zLlxuXHRcdFx0ICogRnVydGhlcm1vcmUsIGFsbCBub24tb3ZlcndyaXRpbmcgdG9rZW5zIHNob3VsZCBiZSBwbGFjZWQgYWZ0ZXIgdGhlIG92ZXJ3cml0aW5nIG9uZXMuXG5cdFx0XHQgKlxuXHRcdFx0ICogQHBhcmFtIHtzdHJpbmd9IGlkIFRoZSBpZCBvZiB0aGUgbGFuZ3VhZ2UgdG8gZXh0ZW5kLiBUaGlzIGhhcyB0byBiZSBhIGtleSBpbiBgUHJpc20ubGFuZ3VhZ2VzYC5cblx0XHRcdCAqIEBwYXJhbSB7R3JhbW1hcn0gcmVkZWYgVGhlIG5ldyB0b2tlbnMgdG8gYXBwZW5kLlxuXHRcdFx0ICogQHJldHVybnMge0dyYW1tYXJ9IFRoZSBuZXcgbGFuZ3VhZ2UgY3JlYXRlZC5cblx0XHRcdCAqIEBwdWJsaWNcblx0XHRcdCAqIEBleGFtcGxlXG5cdFx0XHQgKiBQcmlzbS5sYW5ndWFnZXNbJ2Nzcy13aXRoLWNvbG9ycyddID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnY3NzJywge1xuXHRcdFx0ICogICAgIC8vIFByaXNtLmxhbmd1YWdlcy5jc3MgYWxyZWFkeSBoYXMgYSAnY29tbWVudCcgdG9rZW4sIHNvIHRoaXMgdG9rZW4gd2lsbCBvdmVyd3JpdGUgQ1NTJyAnY29tbWVudCcgdG9rZW5cblx0XHRcdCAqICAgICAvLyBhdCBpdHMgb3JpZ2luYWwgcG9zaXRpb25cblx0XHRcdCAqICAgICAnY29tbWVudCc6IHsgLi4uIH0sXG5cdFx0XHQgKiAgICAgLy8gQ1NTIGRvZXNuJ3QgaGF2ZSBhICdjb2xvcicgdG9rZW4sIHNvIHRoaXMgdG9rZW4gd2lsbCBiZSBhcHBlbmRlZFxuXHRcdFx0ICogICAgICdjb2xvcic6IC9cXGIoPzpyZWR8Z3JlZW58Ymx1ZSlcXGIvXG5cdFx0XHQgKiB9KTtcblx0XHRcdCAqL1xuXHRcdFx0ZXh0ZW5kOiBmdW5jdGlvbiAoaWQsIHJlZGVmKSB7XG5cdFx0XHRcdHZhciBsYW5nID0gXy51dGlsLmNsb25lKF8ubGFuZ3VhZ2VzW2lkXSk7XG5cblx0XHRcdFx0Zm9yICh2YXIga2V5IGluIHJlZGVmKSB7XG5cdFx0XHRcdFx0bGFuZ1trZXldID0gcmVkZWZba2V5XTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiBsYW5nO1xuXHRcdFx0fSxcblxuXHRcdFx0LyoqXG5cdFx0XHQgKiBJbnNlcnRzIHRva2VucyBfYmVmb3JlXyBhbm90aGVyIHRva2VuIGluIGEgbGFuZ3VhZ2UgZGVmaW5pdGlvbiBvciBhbnkgb3RoZXIgZ3JhbW1hci5cblx0XHRcdCAqXG5cdFx0XHQgKiAjIyBVc2FnZVxuXHRcdFx0ICpcblx0XHRcdCAqIFRoaXMgaGVscGVyIG1ldGhvZCBtYWtlcyBpdCBlYXN5IHRvIG1vZGlmeSBleGlzdGluZyBsYW5ndWFnZXMuIEZvciBleGFtcGxlLCB0aGUgQ1NTIGxhbmd1YWdlIGRlZmluaXRpb25cblx0XHRcdCAqIG5vdCBvbmx5IGRlZmluZXMgQ1NTIGhpZ2hsaWdodGluZyBmb3IgQ1NTIGRvY3VtZW50cywgYnV0IGFsc28gbmVlZHMgdG8gZGVmaW5lIGhpZ2hsaWdodGluZyBmb3IgQ1NTIGVtYmVkZGVkXG5cdFx0XHQgKiBpbiBIVE1MIHRocm91Z2ggYDxzdHlsZT5gIGVsZW1lbnRzLiBUbyBkbyB0aGlzLCBpdCBuZWVkcyB0byBtb2RpZnkgYFByaXNtLmxhbmd1YWdlcy5tYXJrdXBgIGFuZCBhZGQgdGhlXG5cdFx0XHQgKiBhcHByb3ByaWF0ZSB0b2tlbnMuIEhvd2V2ZXIsIGBQcmlzbS5sYW5ndWFnZXMubWFya3VwYCBpcyBhIHJlZ3VsYXIgSmF2YVNjcmlwdCBvYmplY3QgbGl0ZXJhbCwgc28gaWYgeW91IGRvXG5cdFx0XHQgKiB0aGlzOlxuXHRcdFx0ICpcblx0XHRcdCAqIGBgYGpzXG5cdFx0XHQgKiBQcmlzbS5sYW5ndWFnZXMubWFya3VwLnN0eWxlID0ge1xuXHRcdFx0ICogICAgIC8vIHRva2VuXG5cdFx0XHQgKiB9O1xuXHRcdFx0ICogYGBgXG5cdFx0XHQgKlxuXHRcdFx0ICogdGhlbiB0aGUgYHN0eWxlYCB0b2tlbiB3aWxsIGJlIGFkZGVkIChhbmQgcHJvY2Vzc2VkKSBhdCB0aGUgZW5kLiBgaW5zZXJ0QmVmb3JlYCBhbGxvd3MgeW91IHRvIGluc2VydCB0b2tlbnNcblx0XHRcdCAqIGJlZm9yZSBleGlzdGluZyB0b2tlbnMuIEZvciB0aGUgQ1NTIGV4YW1wbGUgYWJvdmUsIHlvdSB3b3VsZCB1c2UgaXQgbGlrZSB0aGlzOlxuXHRcdFx0ICpcblx0XHRcdCAqIGBgYGpzXG5cdFx0XHQgKiBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdtYXJrdXAnLCAnY2RhdGEnLCB7XG5cdFx0XHQgKiAgICAgJ3N0eWxlJzoge1xuXHRcdFx0ICogICAgICAgICAvLyB0b2tlblxuXHRcdFx0ICogICAgIH1cblx0XHRcdCAqIH0pO1xuXHRcdFx0ICogYGBgXG5cdFx0XHQgKlxuXHRcdFx0ICogIyMgU3BlY2lhbCBjYXNlc1xuXHRcdFx0ICpcblx0XHRcdCAqIElmIHRoZSBncmFtbWFycyBvZiBgaW5zaWRlYCBhbmQgYGluc2VydGAgaGF2ZSB0b2tlbnMgd2l0aCB0aGUgc2FtZSBuYW1lLCB0aGUgdG9rZW5zIGluIGBpbnNpZGVgJ3MgZ3JhbW1hclxuXHRcdFx0ICogd2lsbCBiZSBpZ25vcmVkLlxuXHRcdFx0ICpcblx0XHRcdCAqIFRoaXMgYmVoYXZpb3IgY2FuIGJlIHVzZWQgdG8gaW5zZXJ0IHRva2VucyBhZnRlciBgYmVmb3JlYDpcblx0XHRcdCAqXG5cdFx0XHQgKiBgYGBqc1xuXHRcdFx0ICogUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnbWFya3VwJywgJ2NvbW1lbnQnLCB7XG5cdFx0XHQgKiAgICAgJ2NvbW1lbnQnOiBQcmlzbS5sYW5ndWFnZXMubWFya3VwLmNvbW1lbnQsXG5cdFx0XHQgKiAgICAgLy8gdG9rZW5zIGFmdGVyICdjb21tZW50J1xuXHRcdFx0ICogfSk7XG5cdFx0XHQgKiBgYGBcblx0XHRcdCAqXG5cdFx0XHQgKiAjIyBMaW1pdGF0aW9uc1xuXHRcdFx0ICpcblx0XHRcdCAqIFRoZSBtYWluIHByb2JsZW0gYGluc2VydEJlZm9yZWAgaGFzIHRvIHNvbHZlIGlzIGl0ZXJhdGlvbiBvcmRlci4gU2luY2UgRVMyMDE1LCB0aGUgaXRlcmF0aW9uIG9yZGVyIGZvciBvYmplY3Rcblx0XHRcdCAqIHByb3BlcnRpZXMgaXMgZ3VhcmFudGVlZCB0byBiZSB0aGUgaW5zZXJ0aW9uIG9yZGVyIChleGNlcHQgZm9yIGludGVnZXIga2V5cykgYnV0IHNvbWUgYnJvd3NlcnMgYmVoYXZlXG5cdFx0XHQgKiBkaWZmZXJlbnRseSB3aGVuIGtleXMgYXJlIGRlbGV0ZWQgYW5kIHJlLWluc2VydGVkLiBTbyBgaW5zZXJ0QmVmb3JlYCBjYW4ndCBiZSBpbXBsZW1lbnRlZCBieSB0ZW1wb3JhcmlseVxuXHRcdFx0ICogZGVsZXRpbmcgcHJvcGVydGllcyB3aGljaCBpcyBuZWNlc3NhcnkgdG8gaW5zZXJ0IGF0IGFyYml0cmFyeSBwb3NpdGlvbnMuXG5cdFx0XHQgKlxuXHRcdFx0ICogVG8gc29sdmUgdGhpcyBwcm9ibGVtLCBgaW5zZXJ0QmVmb3JlYCBkb2Vzbid0IGFjdHVhbGx5IGluc2VydCB0aGUgZ2l2ZW4gdG9rZW5zIGludG8gdGhlIHRhcmdldCBvYmplY3QuXG5cdFx0XHQgKiBJbnN0ZWFkLCBpdCB3aWxsIGNyZWF0ZSBhIG5ldyBvYmplY3QgYW5kIHJlcGxhY2UgYWxsIHJlZmVyZW5jZXMgdG8gdGhlIHRhcmdldCBvYmplY3Qgd2l0aCB0aGUgbmV3IG9uZS4gVGhpc1xuXHRcdFx0ICogY2FuIGJlIGRvbmUgd2l0aG91dCB0ZW1wb3JhcmlseSBkZWxldGluZyBwcm9wZXJ0aWVzLCBzbyB0aGUgaXRlcmF0aW9uIG9yZGVyIGlzIHdlbGwtZGVmaW5lZC5cblx0XHRcdCAqXG5cdFx0XHQgKiBIb3dldmVyLCBvbmx5IHJlZmVyZW5jZXMgdGhhdCBjYW4gYmUgcmVhY2hlZCBmcm9tIGBQcmlzbS5sYW5ndWFnZXNgIG9yIGBpbnNlcnRgIHdpbGwgYmUgcmVwbGFjZWQuIEkuZS4gaWZcblx0XHRcdCAqIHlvdSBob2xkIHRoZSB0YXJnZXQgb2JqZWN0IGluIGEgdmFyaWFibGUsIHRoZW4gdGhlIHZhbHVlIG9mIHRoZSB2YXJpYWJsZSB3aWxsIG5vdCBjaGFuZ2UuXG5cdFx0XHQgKlxuXHRcdFx0ICogYGBganNcblx0XHRcdCAqIHZhciBvbGRNYXJrdXAgPSBQcmlzbS5sYW5ndWFnZXMubWFya3VwO1xuXHRcdFx0ICogdmFyIG5ld01hcmt1cCA9IFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ21hcmt1cCcsICdjb21tZW50JywgeyAuLi4gfSk7XG5cdFx0XHQgKlxuXHRcdFx0ICogYXNzZXJ0KG9sZE1hcmt1cCAhPT0gUHJpc20ubGFuZ3VhZ2VzLm1hcmt1cCk7XG5cdFx0XHQgKiBhc3NlcnQobmV3TWFya3VwID09PSBQcmlzbS5sYW5ndWFnZXMubWFya3VwKTtcblx0XHRcdCAqIGBgYFxuXHRcdFx0ICpcblx0XHRcdCAqIEBwYXJhbSB7c3RyaW5nfSBpbnNpZGUgVGhlIHByb3BlcnR5IG9mIGByb290YCAoZS5nLiBhIGxhbmd1YWdlIGlkIGluIGBQcmlzbS5sYW5ndWFnZXNgKSB0aGF0IGNvbnRhaW5zIHRoZVxuXHRcdFx0ICogb2JqZWN0IHRvIGJlIG1vZGlmaWVkLlxuXHRcdFx0ICogQHBhcmFtIHtzdHJpbmd9IGJlZm9yZSBUaGUga2V5IHRvIGluc2VydCBiZWZvcmUuXG5cdFx0XHQgKiBAcGFyYW0ge0dyYW1tYXJ9IGluc2VydCBBbiBvYmplY3QgY29udGFpbmluZyB0aGUga2V5LXZhbHVlIHBhaXJzIHRvIGJlIGluc2VydGVkLlxuXHRcdFx0ICogQHBhcmFtIHtPYmplY3Q8c3RyaW5nLCBhbnk+fSBbcm9vdF0gVGhlIG9iamVjdCBjb250YWluaW5nIGBpbnNpZGVgLCBpLmUuIHRoZSBvYmplY3QgdGhhdCBjb250YWlucyB0aGVcblx0XHRcdCAqIG9iamVjdCB0byBiZSBtb2RpZmllZC5cblx0XHRcdCAqXG5cdFx0XHQgKiBEZWZhdWx0cyB0byBgUHJpc20ubGFuZ3VhZ2VzYC5cblx0XHRcdCAqIEByZXR1cm5zIHtHcmFtbWFyfSBUaGUgbmV3IGdyYW1tYXIgb2JqZWN0LlxuXHRcdFx0ICogQHB1YmxpY1xuXHRcdFx0ICovXG5cdFx0XHRpbnNlcnRCZWZvcmU6IGZ1bmN0aW9uIChpbnNpZGUsIGJlZm9yZSwgaW5zZXJ0LCByb290KSB7XG5cdFx0XHRcdHJvb3QgPSByb290IHx8IC8qKiBAdHlwZSB7YW55fSAqLyAoXy5sYW5ndWFnZXMpO1xuXHRcdFx0XHR2YXIgZ3JhbW1hciA9IHJvb3RbaW5zaWRlXTtcblx0XHRcdFx0LyoqIEB0eXBlIHtHcmFtbWFyfSAqL1xuXHRcdFx0XHR2YXIgcmV0ID0ge307XG5cblx0XHRcdFx0Zm9yICh2YXIgdG9rZW4gaW4gZ3JhbW1hcikge1xuXHRcdFx0XHRcdGlmIChncmFtbWFyLmhhc093blByb3BlcnR5KHRva2VuKSkge1xuXG5cdFx0XHRcdFx0XHRpZiAodG9rZW4gPT0gYmVmb3JlKSB7XG5cdFx0XHRcdFx0XHRcdGZvciAodmFyIG5ld1Rva2VuIGluIGluc2VydCkge1xuXHRcdFx0XHRcdFx0XHRcdGlmIChpbnNlcnQuaGFzT3duUHJvcGVydHkobmV3VG9rZW4pKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRyZXRbbmV3VG9rZW5dID0gaW5zZXJ0W25ld1Rva2VuXTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0Ly8gRG8gbm90IGluc2VydCB0b2tlbiB3aGljaCBhbHNvIG9jY3VyIGluIGluc2VydC4gU2VlICMxNTI1XG5cdFx0XHRcdFx0XHRpZiAoIWluc2VydC5oYXNPd25Qcm9wZXJ0eSh0b2tlbikpIHtcblx0XHRcdFx0XHRcdFx0cmV0W3Rva2VuXSA9IGdyYW1tYXJbdG9rZW5dO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdHZhciBvbGQgPSByb290W2luc2lkZV07XG5cdFx0XHRcdHJvb3RbaW5zaWRlXSA9IHJldDtcblxuXHRcdFx0XHQvLyBVcGRhdGUgcmVmZXJlbmNlcyBpbiBvdGhlciBsYW5ndWFnZSBkZWZpbml0aW9uc1xuXHRcdFx0XHRfLmxhbmd1YWdlcy5ERlMoXy5sYW5ndWFnZXMsIGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG5cdFx0XHRcdFx0aWYgKHZhbHVlID09PSBvbGQgJiYga2V5ICE9IGluc2lkZSkge1xuXHRcdFx0XHRcdFx0dGhpc1trZXldID0gcmV0O1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSk7XG5cblx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdH0sXG5cblx0XHRcdC8vIFRyYXZlcnNlIGEgbGFuZ3VhZ2UgZGVmaW5pdGlvbiB3aXRoIERlcHRoIEZpcnN0IFNlYXJjaFxuXHRcdFx0REZTOiBmdW5jdGlvbiBERlMobywgY2FsbGJhY2ssIHR5cGUsIHZpc2l0ZWQpIHtcblx0XHRcdFx0dmlzaXRlZCA9IHZpc2l0ZWQgfHwge307XG5cblx0XHRcdFx0dmFyIG9iaklkID0gXy51dGlsLm9iaklkO1xuXG5cdFx0XHRcdGZvciAodmFyIGkgaW4gbykge1xuXHRcdFx0XHRcdGlmIChvLmhhc093blByb3BlcnR5KGkpKSB7XG5cdFx0XHRcdFx0XHRjYWxsYmFjay5jYWxsKG8sIGksIG9baV0sIHR5cGUgfHwgaSk7XG5cblx0XHRcdFx0XHRcdHZhciBwcm9wZXJ0eSA9IG9baV07XG5cdFx0XHRcdFx0XHR2YXIgcHJvcGVydHlUeXBlID0gXy51dGlsLnR5cGUocHJvcGVydHkpO1xuXG5cdFx0XHRcdFx0XHRpZiAocHJvcGVydHlUeXBlID09PSAnT2JqZWN0JyAmJiAhdmlzaXRlZFtvYmpJZChwcm9wZXJ0eSldKSB7XG5cdFx0XHRcdFx0XHRcdHZpc2l0ZWRbb2JqSWQocHJvcGVydHkpXSA9IHRydWU7XG5cdFx0XHRcdFx0XHRcdERGUyhwcm9wZXJ0eSwgY2FsbGJhY2ssIG51bGwsIHZpc2l0ZWQpO1xuXHRcdFx0XHRcdFx0fSBlbHNlIGlmIChwcm9wZXJ0eVR5cGUgPT09ICdBcnJheScgJiYgIXZpc2l0ZWRbb2JqSWQocHJvcGVydHkpXSkge1xuXHRcdFx0XHRcdFx0XHR2aXNpdGVkW29iaklkKHByb3BlcnR5KV0gPSB0cnVlO1xuXHRcdFx0XHRcdFx0XHRERlMocHJvcGVydHksIGNhbGxiYWNrLCBpLCB2aXNpdGVkKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0cGx1Z2luczoge30sXG5cblx0XHQvKipcblx0XHQgKiBUaGlzIGlzIHRoZSBtb3N0IGhpZ2gtbGV2ZWwgZnVuY3Rpb24gaW4gUHJpc23igJlzIEFQSS5cblx0XHQgKiBJdCBmZXRjaGVzIGFsbCB0aGUgZWxlbWVudHMgdGhhdCBoYXZlIGEgYC5sYW5ndWFnZS14eHh4YCBjbGFzcyBhbmQgdGhlbiBjYWxscyB7QGxpbmsgUHJpc20uaGlnaGxpZ2h0RWxlbWVudH0gb25cblx0XHQgKiBlYWNoIG9uZSBvZiB0aGVtLlxuXHRcdCAqXG5cdFx0ICogVGhpcyBpcyBlcXVpdmFsZW50IHRvIGBQcmlzbS5oaWdobGlnaHRBbGxVbmRlcihkb2N1bWVudCwgYXN5bmMsIGNhbGxiYWNrKWAuXG5cdFx0ICpcblx0XHQgKiBAcGFyYW0ge2Jvb2xlYW59IFthc3luYz1mYWxzZV0gU2FtZSBhcyBpbiB7QGxpbmsgUHJpc20uaGlnaGxpZ2h0QWxsVW5kZXJ9LlxuXHRcdCAqIEBwYXJhbSB7SGlnaGxpZ2h0Q2FsbGJhY2t9IFtjYWxsYmFja10gU2FtZSBhcyBpbiB7QGxpbmsgUHJpc20uaGlnaGxpZ2h0QWxsVW5kZXJ9LlxuXHRcdCAqIEBtZW1iZXJvZiBQcmlzbVxuXHRcdCAqIEBwdWJsaWNcblx0XHQgKi9cblx0XHRoaWdobGlnaHRBbGw6IGZ1bmN0aW9uIChhc3luYywgY2FsbGJhY2spIHtcblx0XHRcdF8uaGlnaGxpZ2h0QWxsVW5kZXIoZG9jdW1lbnQsIGFzeW5jLCBjYWxsYmFjayk7XG5cdFx0fSxcblxuXHRcdC8qKlxuXHRcdCAqIEZldGNoZXMgYWxsIHRoZSBkZXNjZW5kYW50cyBvZiBgY29udGFpbmVyYCB0aGF0IGhhdmUgYSBgLmxhbmd1YWdlLXh4eHhgIGNsYXNzIGFuZCB0aGVuIGNhbGxzXG5cdFx0ICoge0BsaW5rIFByaXNtLmhpZ2hsaWdodEVsZW1lbnR9IG9uIGVhY2ggb25lIG9mIHRoZW0uXG5cdFx0ICpcblx0XHQgKiBUaGUgZm9sbG93aW5nIGhvb2tzIHdpbGwgYmUgcnVuOlxuXHRcdCAqIDEuIGBiZWZvcmUtaGlnaGxpZ2h0YWxsYFxuXHRcdCAqIDIuIGBiZWZvcmUtYWxsLWVsZW1lbnRzLWhpZ2hsaWdodGBcblx0XHQgKiAzLiBBbGwgaG9va3Mgb2Yge0BsaW5rIFByaXNtLmhpZ2hsaWdodEVsZW1lbnR9IGZvciBlYWNoIGVsZW1lbnQuXG5cdFx0ICpcblx0XHQgKiBAcGFyYW0ge1BhcmVudE5vZGV9IGNvbnRhaW5lciBUaGUgcm9vdCBlbGVtZW50LCB3aG9zZSBkZXNjZW5kYW50cyB0aGF0IGhhdmUgYSBgLmxhbmd1YWdlLXh4eHhgIGNsYXNzIHdpbGwgYmUgaGlnaGxpZ2h0ZWQuXG5cdFx0ICogQHBhcmFtIHtib29sZWFufSBbYXN5bmM9ZmFsc2VdIFdoZXRoZXIgZWFjaCBlbGVtZW50IGlzIHRvIGJlIGhpZ2hsaWdodGVkIGFzeW5jaHJvbm91c2x5IHVzaW5nIFdlYiBXb3JrZXJzLlxuXHRcdCAqIEBwYXJhbSB7SGlnaGxpZ2h0Q2FsbGJhY2t9IFtjYWxsYmFja10gQW4gb3B0aW9uYWwgY2FsbGJhY2sgdG8gYmUgaW52b2tlZCBvbiBlYWNoIGVsZW1lbnQgYWZ0ZXIgaXRzIGhpZ2hsaWdodGluZyBpcyBkb25lLlxuXHRcdCAqIEBtZW1iZXJvZiBQcmlzbVxuXHRcdCAqIEBwdWJsaWNcblx0XHQgKi9cblx0XHRoaWdobGlnaHRBbGxVbmRlcjogZnVuY3Rpb24gKGNvbnRhaW5lciwgYXN5bmMsIGNhbGxiYWNrKSB7XG5cdFx0XHR2YXIgZW52ID0ge1xuXHRcdFx0XHRjYWxsYmFjazogY2FsbGJhY2ssXG5cdFx0XHRcdGNvbnRhaW5lcjogY29udGFpbmVyLFxuXHRcdFx0XHRzZWxlY3RvcjogJ2NvZGVbY2xhc3MqPVwibGFuZ3VhZ2UtXCJdLCBbY2xhc3MqPVwibGFuZ3VhZ2UtXCJdIGNvZGUsIGNvZGVbY2xhc3MqPVwibGFuZy1cIl0sIFtjbGFzcyo9XCJsYW5nLVwiXSBjb2RlJ1xuXHRcdFx0fTtcblxuXHRcdFx0Xy5ob29rcy5ydW4oJ2JlZm9yZS1oaWdobGlnaHRhbGwnLCBlbnYpO1xuXG5cdFx0XHRlbnYuZWxlbWVudHMgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuYXBwbHkoZW52LmNvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKGVudi5zZWxlY3RvcikpO1xuXG5cdFx0XHRfLmhvb2tzLnJ1bignYmVmb3JlLWFsbC1lbGVtZW50cy1oaWdobGlnaHQnLCBlbnYpO1xuXG5cdFx0XHRmb3IgKHZhciBpID0gMCwgZWxlbWVudDsgKGVsZW1lbnQgPSBlbnYuZWxlbWVudHNbaSsrXSk7KSB7XG5cdFx0XHRcdF8uaGlnaGxpZ2h0RWxlbWVudChlbGVtZW50LCBhc3luYyA9PT0gdHJ1ZSwgZW52LmNhbGxiYWNrKTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0LyoqXG5cdFx0ICogSGlnaGxpZ2h0cyB0aGUgY29kZSBpbnNpZGUgYSBzaW5nbGUgZWxlbWVudC5cblx0XHQgKlxuXHRcdCAqIFRoZSBmb2xsb3dpbmcgaG9va3Mgd2lsbCBiZSBydW46XG5cdFx0ICogMS4gYGJlZm9yZS1zYW5pdHktY2hlY2tgXG5cdFx0ICogMi4gYGJlZm9yZS1oaWdobGlnaHRgXG5cdFx0ICogMy4gQWxsIGhvb2tzIG9mIHtAbGluayBQcmlzbS5oaWdobGlnaHR9LiBUaGVzZSBob29rcyB3aWxsIGJlIHJ1biBieSBhbiBhc3luY2hyb25vdXMgd29ya2VyIGlmIGBhc3luY2AgaXMgYHRydWVgLlxuXHRcdCAqIDQuIGBiZWZvcmUtaW5zZXJ0YFxuXHRcdCAqIDUuIGBhZnRlci1oaWdobGlnaHRgXG5cdFx0ICogNi4gYGNvbXBsZXRlYFxuXHRcdCAqXG5cdFx0ICogU29tZSB0aGUgYWJvdmUgaG9va3Mgd2lsbCBiZSBza2lwcGVkIGlmIHRoZSBlbGVtZW50IGRvZXNuJ3QgY29udGFpbiBhbnkgdGV4dCBvciB0aGVyZSBpcyBubyBncmFtbWFyIGxvYWRlZCBmb3Jcblx0XHQgKiB0aGUgZWxlbWVudCdzIGxhbmd1YWdlLlxuXHRcdCAqXG5cdFx0ICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50IFRoZSBlbGVtZW50IGNvbnRhaW5pbmcgdGhlIGNvZGUuXG5cdFx0ICogSXQgbXVzdCBoYXZlIGEgY2xhc3Mgb2YgYGxhbmd1YWdlLXh4eHhgIHRvIGJlIHByb2Nlc3NlZCwgd2hlcmUgYHh4eHhgIGlzIGEgdmFsaWQgbGFuZ3VhZ2UgaWRlbnRpZmllci5cblx0XHQgKiBAcGFyYW0ge2Jvb2xlYW59IFthc3luYz1mYWxzZV0gV2hldGhlciB0aGUgZWxlbWVudCBpcyB0byBiZSBoaWdobGlnaHRlZCBhc3luY2hyb25vdXNseSB1c2luZyBXZWIgV29ya2Vyc1xuXHRcdCAqIHRvIGltcHJvdmUgcGVyZm9ybWFuY2UgYW5kIGF2b2lkIGJsb2NraW5nIHRoZSBVSSB3aGVuIGhpZ2hsaWdodGluZyB2ZXJ5IGxhcmdlIGNodW5rcyBvZiBjb2RlLiBUaGlzIG9wdGlvbiBpc1xuXHRcdCAqIFtkaXNhYmxlZCBieSBkZWZhdWx0XShodHRwczovL3ByaXNtanMuY29tL2ZhcS5odG1sI3doeS1pcy1hc3luY2hyb25vdXMtaGlnaGxpZ2h0aW5nLWRpc2FibGVkLWJ5LWRlZmF1bHQpLlxuXHRcdCAqXG5cdFx0ICogTm90ZTogQWxsIGxhbmd1YWdlIGRlZmluaXRpb25zIHJlcXVpcmVkIHRvIGhpZ2hsaWdodCB0aGUgY29kZSBtdXN0IGJlIGluY2x1ZGVkIGluIHRoZSBtYWluIGBwcmlzbS5qc2AgZmlsZSBmb3Jcblx0XHQgKiBhc3luY2hyb25vdXMgaGlnaGxpZ2h0aW5nIHRvIHdvcmsuIFlvdSBjYW4gYnVpbGQgeW91ciBvd24gYnVuZGxlIG9uIHRoZVxuXHRcdCAqIFtEb3dubG9hZCBwYWdlXShodHRwczovL3ByaXNtanMuY29tL2Rvd25sb2FkLmh0bWwpLlxuXHRcdCAqIEBwYXJhbSB7SGlnaGxpZ2h0Q2FsbGJhY2t9IFtjYWxsYmFja10gQW4gb3B0aW9uYWwgY2FsbGJhY2sgdG8gYmUgaW52b2tlZCBhZnRlciB0aGUgaGlnaGxpZ2h0aW5nIGlzIGRvbmUuXG5cdFx0ICogTW9zdGx5IHVzZWZ1bCB3aGVuIGBhc3luY2AgaXMgYHRydWVgLCBzaW5jZSBpbiB0aGF0IGNhc2UsIHRoZSBoaWdobGlnaHRpbmcgaXMgZG9uZSBhc3luY2hyb25vdXNseS5cblx0XHQgKiBAbWVtYmVyb2YgUHJpc21cblx0XHQgKiBAcHVibGljXG5cdFx0ICovXG5cdFx0aGlnaGxpZ2h0RWxlbWVudDogZnVuY3Rpb24gKGVsZW1lbnQsIGFzeW5jLCBjYWxsYmFjaykge1xuXHRcdFx0Ly8gRmluZCBsYW5ndWFnZVxuXHRcdFx0dmFyIGxhbmd1YWdlID0gXy51dGlsLmdldExhbmd1YWdlKGVsZW1lbnQpO1xuXHRcdFx0dmFyIGdyYW1tYXIgPSBfLmxhbmd1YWdlc1tsYW5ndWFnZV07XG5cblx0XHRcdC8vIFNldCBsYW5ndWFnZSBvbiB0aGUgZWxlbWVudCwgaWYgbm90IHByZXNlbnRcblx0XHRcdF8udXRpbC5zZXRMYW5ndWFnZShlbGVtZW50LCBsYW5ndWFnZSk7XG5cblx0XHRcdC8vIFNldCBsYW5ndWFnZSBvbiB0aGUgcGFyZW50LCBmb3Igc3R5bGluZ1xuXHRcdFx0dmFyIHBhcmVudCA9IGVsZW1lbnQucGFyZW50RWxlbWVudDtcblx0XHRcdGlmIChwYXJlbnQgJiYgcGFyZW50Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09ICdwcmUnKSB7XG5cdFx0XHRcdF8udXRpbC5zZXRMYW5ndWFnZShwYXJlbnQsIGxhbmd1YWdlKTtcblx0XHRcdH1cblxuXHRcdFx0dmFyIGNvZGUgPSBlbGVtZW50LnRleHRDb250ZW50O1xuXG5cdFx0XHR2YXIgZW52ID0ge1xuXHRcdFx0XHRlbGVtZW50OiBlbGVtZW50LFxuXHRcdFx0XHRsYW5ndWFnZTogbGFuZ3VhZ2UsXG5cdFx0XHRcdGdyYW1tYXI6IGdyYW1tYXIsXG5cdFx0XHRcdGNvZGU6IGNvZGVcblx0XHRcdH07XG5cblx0XHRcdGZ1bmN0aW9uIGluc2VydEhpZ2hsaWdodGVkQ29kZShoaWdobGlnaHRlZENvZGUpIHtcblx0XHRcdFx0ZW52LmhpZ2hsaWdodGVkQ29kZSA9IGhpZ2hsaWdodGVkQ29kZTtcblxuXHRcdFx0XHRfLmhvb2tzLnJ1bignYmVmb3JlLWluc2VydCcsIGVudik7XG5cblx0XHRcdFx0ZW52LmVsZW1lbnQuaW5uZXJIVE1MID0gZW52LmhpZ2hsaWdodGVkQ29kZTtcblxuXHRcdFx0XHRfLmhvb2tzLnJ1bignYWZ0ZXItaGlnaGxpZ2h0JywgZW52KTtcblx0XHRcdFx0Xy5ob29rcy5ydW4oJ2NvbXBsZXRlJywgZW52KTtcblx0XHRcdFx0Y2FsbGJhY2sgJiYgY2FsbGJhY2suY2FsbChlbnYuZWxlbWVudCk7XG5cdFx0XHR9XG5cblx0XHRcdF8uaG9va3MucnVuKCdiZWZvcmUtc2FuaXR5LWNoZWNrJywgZW52KTtcblxuXHRcdFx0Ly8gcGx1Z2lucyBtYXkgY2hhbmdlL2FkZCB0aGUgcGFyZW50L2VsZW1lbnRcblx0XHRcdHBhcmVudCA9IGVudi5lbGVtZW50LnBhcmVudEVsZW1lbnQ7XG5cdFx0XHRpZiAocGFyZW50ICYmIHBhcmVudC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSAncHJlJyAmJiAhcGFyZW50Lmhhc0F0dHJpYnV0ZSgndGFiaW5kZXgnKSkge1xuXHRcdFx0XHRwYXJlbnQuc2V0QXR0cmlidXRlKCd0YWJpbmRleCcsICcwJyk7XG5cdFx0XHR9XG5cblx0XHRcdGlmICghZW52LmNvZGUpIHtcblx0XHRcdFx0Xy5ob29rcy5ydW4oJ2NvbXBsZXRlJywgZW52KTtcblx0XHRcdFx0Y2FsbGJhY2sgJiYgY2FsbGJhY2suY2FsbChlbnYuZWxlbWVudCk7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Xy5ob29rcy5ydW4oJ2JlZm9yZS1oaWdobGlnaHQnLCBlbnYpO1xuXG5cdFx0XHRpZiAoIWVudi5ncmFtbWFyKSB7XG5cdFx0XHRcdGluc2VydEhpZ2hsaWdodGVkQ29kZShfLnV0aWwuZW5jb2RlKGVudi5jb2RlKSk7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0aWYgKGFzeW5jICYmIF9zZWxmLldvcmtlcikge1xuXHRcdFx0XHR2YXIgd29ya2VyID0gbmV3IFdvcmtlcihfLmZpbGVuYW1lKTtcblxuXHRcdFx0XHR3b3JrZXIub25tZXNzYWdlID0gZnVuY3Rpb24gKGV2dCkge1xuXHRcdFx0XHRcdGluc2VydEhpZ2hsaWdodGVkQ29kZShldnQuZGF0YSk7XG5cdFx0XHRcdH07XG5cblx0XHRcdFx0d29ya2VyLnBvc3RNZXNzYWdlKEpTT04uc3RyaW5naWZ5KHtcblx0XHRcdFx0XHRsYW5ndWFnZTogZW52Lmxhbmd1YWdlLFxuXHRcdFx0XHRcdGNvZGU6IGVudi5jb2RlLFxuXHRcdFx0XHRcdGltbWVkaWF0ZUNsb3NlOiB0cnVlXG5cdFx0XHRcdH0pKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGluc2VydEhpZ2hsaWdodGVkQ29kZShfLmhpZ2hsaWdodChlbnYuY29kZSwgZW52LmdyYW1tYXIsIGVudi5sYW5ndWFnZSkpO1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHQvKipcblx0XHQgKiBMb3ctbGV2ZWwgZnVuY3Rpb24sIG9ubHkgdXNlIGlmIHlvdSBrbm93IHdoYXQgeW914oCZcmUgZG9pbmcuIEl0IGFjY2VwdHMgYSBzdHJpbmcgb2YgdGV4dCBhcyBpbnB1dFxuXHRcdCAqIGFuZCB0aGUgbGFuZ3VhZ2UgZGVmaW5pdGlvbnMgdG8gdXNlLCBhbmQgcmV0dXJucyBhIHN0cmluZyB3aXRoIHRoZSBIVE1MIHByb2R1Y2VkLlxuXHRcdCAqXG5cdFx0ICogVGhlIGZvbGxvd2luZyBob29rcyB3aWxsIGJlIHJ1bjpcblx0XHQgKiAxLiBgYmVmb3JlLXRva2VuaXplYFxuXHRcdCAqIDIuIGBhZnRlci10b2tlbml6ZWBcblx0XHQgKiAzLiBgd3JhcGA6IE9uIGVhY2gge0BsaW5rIFRva2VufS5cblx0XHQgKlxuXHRcdCAqIEBwYXJhbSB7c3RyaW5nfSB0ZXh0IEEgc3RyaW5nIHdpdGggdGhlIGNvZGUgdG8gYmUgaGlnaGxpZ2h0ZWQuXG5cdFx0ICogQHBhcmFtIHtHcmFtbWFyfSBncmFtbWFyIEFuIG9iamVjdCBjb250YWluaW5nIHRoZSB0b2tlbnMgdG8gdXNlLlxuXHRcdCAqXG5cdFx0ICogVXN1YWxseSBhIGxhbmd1YWdlIGRlZmluaXRpb24gbGlrZSBgUHJpc20ubGFuZ3VhZ2VzLm1hcmt1cGAuXG5cdFx0ICogQHBhcmFtIHtzdHJpbmd9IGxhbmd1YWdlIFRoZSBuYW1lIG9mIHRoZSBsYW5ndWFnZSBkZWZpbml0aW9uIHBhc3NlZCB0byBgZ3JhbW1hcmAuXG5cdFx0ICogQHJldHVybnMge3N0cmluZ30gVGhlIGhpZ2hsaWdodGVkIEhUTUwuXG5cdFx0ICogQG1lbWJlcm9mIFByaXNtXG5cdFx0ICogQHB1YmxpY1xuXHRcdCAqIEBleGFtcGxlXG5cdFx0ICogUHJpc20uaGlnaGxpZ2h0KCd2YXIgZm9vID0gdHJ1ZTsnLCBQcmlzbS5sYW5ndWFnZXMuamF2YXNjcmlwdCwgJ2phdmFzY3JpcHQnKTtcblx0XHQgKi9cblx0XHRoaWdobGlnaHQ6IGZ1bmN0aW9uICh0ZXh0LCBncmFtbWFyLCBsYW5ndWFnZSkge1xuXHRcdFx0dmFyIGVudiA9IHtcblx0XHRcdFx0Y29kZTogdGV4dCxcblx0XHRcdFx0Z3JhbW1hcjogZ3JhbW1hcixcblx0XHRcdFx0bGFuZ3VhZ2U6IGxhbmd1YWdlXG5cdFx0XHR9O1xuXHRcdFx0Xy5ob29rcy5ydW4oJ2JlZm9yZS10b2tlbml6ZScsIGVudik7XG5cdFx0XHRpZiAoIWVudi5ncmFtbWFyKSB7XG5cdFx0XHRcdHRocm93IG5ldyBFcnJvcignVGhlIGxhbmd1YWdlIFwiJyArIGVudi5sYW5ndWFnZSArICdcIiBoYXMgbm8gZ3JhbW1hci4nKTtcblx0XHRcdH1cblx0XHRcdGVudi50b2tlbnMgPSBfLnRva2VuaXplKGVudi5jb2RlLCBlbnYuZ3JhbW1hcik7XG5cdFx0XHRfLmhvb2tzLnJ1bignYWZ0ZXItdG9rZW5pemUnLCBlbnYpO1xuXHRcdFx0cmV0dXJuIFRva2VuLnN0cmluZ2lmeShfLnV0aWwuZW5jb2RlKGVudi50b2tlbnMpLCBlbnYubGFuZ3VhZ2UpO1xuXHRcdH0sXG5cblx0XHQvKipcblx0XHQgKiBUaGlzIGlzIHRoZSBoZWFydCBvZiBQcmlzbSwgYW5kIHRoZSBtb3N0IGxvdy1sZXZlbCBmdW5jdGlvbiB5b3UgY2FuIHVzZS4gSXQgYWNjZXB0cyBhIHN0cmluZyBvZiB0ZXh0IGFzIGlucHV0XG5cdFx0ICogYW5kIHRoZSBsYW5ndWFnZSBkZWZpbml0aW9ucyB0byB1c2UsIGFuZCByZXR1cm5zIGFuIGFycmF5IHdpdGggdGhlIHRva2VuaXplZCBjb2RlLlxuXHRcdCAqXG5cdFx0ICogV2hlbiB0aGUgbGFuZ3VhZ2UgZGVmaW5pdGlvbiBpbmNsdWRlcyBuZXN0ZWQgdG9rZW5zLCB0aGUgZnVuY3Rpb24gaXMgY2FsbGVkIHJlY3Vyc2l2ZWx5IG9uIGVhY2ggb2YgdGhlc2UgdG9rZW5zLlxuXHRcdCAqXG5cdFx0ICogVGhpcyBtZXRob2QgY291bGQgYmUgdXNlZnVsIGluIG90aGVyIGNvbnRleHRzIGFzIHdlbGwsIGFzIGEgdmVyeSBjcnVkZSBwYXJzZXIuXG5cdFx0ICpcblx0XHQgKiBAcGFyYW0ge3N0cmluZ30gdGV4dCBBIHN0cmluZyB3aXRoIHRoZSBjb2RlIHRvIGJlIGhpZ2hsaWdodGVkLlxuXHRcdCAqIEBwYXJhbSB7R3JhbW1hcn0gZ3JhbW1hciBBbiBvYmplY3QgY29udGFpbmluZyB0aGUgdG9rZW5zIHRvIHVzZS5cblx0XHQgKlxuXHRcdCAqIFVzdWFsbHkgYSBsYW5ndWFnZSBkZWZpbml0aW9uIGxpa2UgYFByaXNtLmxhbmd1YWdlcy5tYXJrdXBgLlxuXHRcdCAqIEByZXR1cm5zIHtUb2tlblN0cmVhbX0gQW4gYXJyYXkgb2Ygc3RyaW5ncyBhbmQgdG9rZW5zLCBhIHRva2VuIHN0cmVhbS5cblx0XHQgKiBAbWVtYmVyb2YgUHJpc21cblx0XHQgKiBAcHVibGljXG5cdFx0ICogQGV4YW1wbGVcblx0XHQgKiBsZXQgY29kZSA9IGB2YXIgZm9vID0gMDtgO1xuXHRcdCAqIGxldCB0b2tlbnMgPSBQcmlzbS50b2tlbml6ZShjb2RlLCBQcmlzbS5sYW5ndWFnZXMuamF2YXNjcmlwdCk7XG5cdFx0ICogdG9rZW5zLmZvckVhY2godG9rZW4gPT4ge1xuXHRcdCAqICAgICBpZiAodG9rZW4gaW5zdGFuY2VvZiBQcmlzbS5Ub2tlbiAmJiB0b2tlbi50eXBlID09PSAnbnVtYmVyJykge1xuXHRcdCAqICAgICAgICAgY29uc29sZS5sb2coYEZvdW5kIG51bWVyaWMgbGl0ZXJhbDogJHt0b2tlbi5jb250ZW50fWApO1xuXHRcdCAqICAgICB9XG5cdFx0ICogfSk7XG5cdFx0ICovXG5cdFx0dG9rZW5pemU6IGZ1bmN0aW9uICh0ZXh0LCBncmFtbWFyKSB7XG5cdFx0XHR2YXIgcmVzdCA9IGdyYW1tYXIucmVzdDtcblx0XHRcdGlmIChyZXN0KSB7XG5cdFx0XHRcdGZvciAodmFyIHRva2VuIGluIHJlc3QpIHtcblx0XHRcdFx0XHRncmFtbWFyW3Rva2VuXSA9IHJlc3RbdG9rZW5dO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0ZGVsZXRlIGdyYW1tYXIucmVzdDtcblx0XHRcdH1cblxuXHRcdFx0dmFyIHRva2VuTGlzdCA9IG5ldyBMaW5rZWRMaXN0KCk7XG5cdFx0XHRhZGRBZnRlcih0b2tlbkxpc3QsIHRva2VuTGlzdC5oZWFkLCB0ZXh0KTtcblxuXHRcdFx0bWF0Y2hHcmFtbWFyKHRleHQsIHRva2VuTGlzdCwgZ3JhbW1hciwgdG9rZW5MaXN0LmhlYWQsIDApO1xuXG5cdFx0XHRyZXR1cm4gdG9BcnJheSh0b2tlbkxpc3QpO1xuXHRcdH0sXG5cblx0XHQvKipcblx0XHQgKiBAbmFtZXNwYWNlXG5cdFx0ICogQG1lbWJlcm9mIFByaXNtXG5cdFx0ICogQHB1YmxpY1xuXHRcdCAqL1xuXHRcdGhvb2tzOiB7XG5cdFx0XHRhbGw6IHt9LFxuXG5cdFx0XHQvKipcblx0XHRcdCAqIEFkZHMgdGhlIGdpdmVuIGNhbGxiYWNrIHRvIHRoZSBsaXN0IG9mIGNhbGxiYWNrcyBmb3IgdGhlIGdpdmVuIGhvb2suXG5cdFx0XHQgKlxuXHRcdFx0ICogVGhlIGNhbGxiYWNrIHdpbGwgYmUgaW52b2tlZCB3aGVuIHRoZSBob29rIGl0IGlzIHJlZ2lzdGVyZWQgZm9yIGlzIHJ1bi5cblx0XHRcdCAqIEhvb2tzIGFyZSB1c3VhbGx5IGRpcmVjdGx5IHJ1biBieSBhIGhpZ2hsaWdodCBmdW5jdGlvbiBidXQgeW91IGNhbiBhbHNvIHJ1biBob29rcyB5b3Vyc2VsZi5cblx0XHRcdCAqXG5cdFx0XHQgKiBPbmUgY2FsbGJhY2sgZnVuY3Rpb24gY2FuIGJlIHJlZ2lzdGVyZWQgdG8gbXVsdGlwbGUgaG9va3MgYW5kIHRoZSBzYW1lIGhvb2sgbXVsdGlwbGUgdGltZXMuXG5cdFx0XHQgKlxuXHRcdFx0ICogQHBhcmFtIHtzdHJpbmd9IG5hbWUgVGhlIG5hbWUgb2YgdGhlIGhvb2suXG5cdFx0XHQgKiBAcGFyYW0ge0hvb2tDYWxsYmFja30gY2FsbGJhY2sgVGhlIGNhbGxiYWNrIGZ1bmN0aW9uIHdoaWNoIGlzIGdpdmVuIGVudmlyb25tZW50IHZhcmlhYmxlcy5cblx0XHRcdCAqIEBwdWJsaWNcblx0XHRcdCAqL1xuXHRcdFx0YWRkOiBmdW5jdGlvbiAobmFtZSwgY2FsbGJhY2spIHtcblx0XHRcdFx0dmFyIGhvb2tzID0gXy5ob29rcy5hbGw7XG5cblx0XHRcdFx0aG9va3NbbmFtZV0gPSBob29rc1tuYW1lXSB8fCBbXTtcblxuXHRcdFx0XHRob29rc1tuYW1lXS5wdXNoKGNhbGxiYWNrKTtcblx0XHRcdH0sXG5cblx0XHRcdC8qKlxuXHRcdFx0ICogUnVucyBhIGhvb2sgaW52b2tpbmcgYWxsIHJlZ2lzdGVyZWQgY2FsbGJhY2tzIHdpdGggdGhlIGdpdmVuIGVudmlyb25tZW50IHZhcmlhYmxlcy5cblx0XHRcdCAqXG5cdFx0XHQgKiBDYWxsYmFja3Mgd2lsbCBiZSBpbnZva2VkIHN5bmNocm9ub3VzbHkgYW5kIGluIHRoZSBvcmRlciBpbiB3aGljaCB0aGV5IHdlcmUgcmVnaXN0ZXJlZC5cblx0XHRcdCAqXG5cdFx0XHQgKiBAcGFyYW0ge3N0cmluZ30gbmFtZSBUaGUgbmFtZSBvZiB0aGUgaG9vay5cblx0XHRcdCAqIEBwYXJhbSB7T2JqZWN0PHN0cmluZywgYW55Pn0gZW52IFRoZSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgb2YgdGhlIGhvb2sgcGFzc2VkIHRvIGFsbCBjYWxsYmFja3MgcmVnaXN0ZXJlZC5cblx0XHRcdCAqIEBwdWJsaWNcblx0XHRcdCAqL1xuXHRcdFx0cnVuOiBmdW5jdGlvbiAobmFtZSwgZW52KSB7XG5cdFx0XHRcdHZhciBjYWxsYmFja3MgPSBfLmhvb2tzLmFsbFtuYW1lXTtcblxuXHRcdFx0XHRpZiAoIWNhbGxiYWNrcyB8fCAhY2FsbGJhY2tzLmxlbmd0aCkge1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGZvciAodmFyIGkgPSAwLCBjYWxsYmFjazsgKGNhbGxiYWNrID0gY2FsbGJhY2tzW2krK10pOykge1xuXHRcdFx0XHRcdGNhbGxiYWNrKGVudik7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0VG9rZW46IFRva2VuXG5cdH07XG5cdF9zZWxmLlByaXNtID0gXztcblxuXG5cdC8vIFR5cGVzY3JpcHQgbm90ZTpcblx0Ly8gVGhlIGZvbGxvd2luZyBjYW4gYmUgdXNlZCB0byBpbXBvcnQgdGhlIFRva2VuIHR5cGUgaW4gSlNEb2M6XG5cdC8vXG5cdC8vICAgQHR5cGVkZWYge0luc3RhbmNlVHlwZTxpbXBvcnQoXCIuL3ByaXNtLWNvcmVcIilbXCJUb2tlblwiXT59IFRva2VuXG5cblx0LyoqXG5cdCAqIENyZWF0ZXMgYSBuZXcgdG9rZW4uXG5cdCAqXG5cdCAqIEBwYXJhbSB7c3RyaW5nfSB0eXBlIFNlZSB7QGxpbmsgVG9rZW4jdHlwZSB0eXBlfVxuXHQgKiBAcGFyYW0ge3N0cmluZyB8IFRva2VuU3RyZWFtfSBjb250ZW50IFNlZSB7QGxpbmsgVG9rZW4jY29udGVudCBjb250ZW50fVxuXHQgKiBAcGFyYW0ge3N0cmluZ3xzdHJpbmdbXX0gW2FsaWFzXSBUaGUgYWxpYXMoZXMpIG9mIHRoZSB0b2tlbi5cblx0ICogQHBhcmFtIHtzdHJpbmd9IFttYXRjaGVkU3RyPVwiXCJdIEEgY29weSBvZiB0aGUgZnVsbCBzdHJpbmcgdGhpcyB0b2tlbiB3YXMgY3JlYXRlZCBmcm9tLlxuXHQgKiBAY2xhc3Ncblx0ICogQGdsb2JhbFxuXHQgKiBAcHVibGljXG5cdCAqL1xuXHRmdW5jdGlvbiBUb2tlbih0eXBlLCBjb250ZW50LCBhbGlhcywgbWF0Y2hlZFN0cikge1xuXHRcdC8qKlxuXHRcdCAqIFRoZSB0eXBlIG9mIHRoZSB0b2tlbi5cblx0XHQgKlxuXHRcdCAqIFRoaXMgaXMgdXN1YWxseSB0aGUga2V5IG9mIGEgcGF0dGVybiBpbiBhIHtAbGluayBHcmFtbWFyfS5cblx0XHQgKlxuXHRcdCAqIEB0eXBlIHtzdHJpbmd9XG5cdFx0ICogQHNlZSBHcmFtbWFyVG9rZW5cblx0XHQgKiBAcHVibGljXG5cdFx0ICovXG5cdFx0dGhpcy50eXBlID0gdHlwZTtcblx0XHQvKipcblx0XHQgKiBUaGUgc3RyaW5ncyBvciB0b2tlbnMgY29udGFpbmVkIGJ5IHRoaXMgdG9rZW4uXG5cdFx0ICpcblx0XHQgKiBUaGlzIHdpbGwgYmUgYSB0b2tlbiBzdHJlYW0gaWYgdGhlIHBhdHRlcm4gbWF0Y2hlZCBhbHNvIGRlZmluZWQgYW4gYGluc2lkZWAgZ3JhbW1hci5cblx0XHQgKlxuXHRcdCAqIEB0eXBlIHtzdHJpbmcgfCBUb2tlblN0cmVhbX1cblx0XHQgKiBAcHVibGljXG5cdFx0ICovXG5cdFx0dGhpcy5jb250ZW50ID0gY29udGVudDtcblx0XHQvKipcblx0XHQgKiBUaGUgYWxpYXMoZXMpIG9mIHRoZSB0b2tlbi5cblx0XHQgKlxuXHRcdCAqIEB0eXBlIHtzdHJpbmd8c3RyaW5nW119XG5cdFx0ICogQHNlZSBHcmFtbWFyVG9rZW5cblx0XHQgKiBAcHVibGljXG5cdFx0ICovXG5cdFx0dGhpcy5hbGlhcyA9IGFsaWFzO1xuXHRcdC8vIENvcHkgb2YgdGhlIGZ1bGwgc3RyaW5nIHRoaXMgdG9rZW4gd2FzIGNyZWF0ZWQgZnJvbVxuXHRcdHRoaXMubGVuZ3RoID0gKG1hdGNoZWRTdHIgfHwgJycpLmxlbmd0aCB8IDA7XG5cdH1cblxuXHQvKipcblx0ICogQSB0b2tlbiBzdHJlYW0gaXMgYW4gYXJyYXkgb2Ygc3RyaW5ncyBhbmQge0BsaW5rIFRva2VuIFRva2VufSBvYmplY3RzLlxuXHQgKlxuXHQgKiBUb2tlbiBzdHJlYW1zIGhhdmUgdG8gZnVsZmlsbCBhIGZldyBwcm9wZXJ0aWVzIHRoYXQgYXJlIGFzc3VtZWQgYnkgbW9zdCBmdW5jdGlvbnMgKG1vc3RseSBpbnRlcm5hbCBvbmVzKSB0aGF0IHByb2Nlc3Ncblx0ICogdGhlbS5cblx0ICpcblx0ICogMS4gTm8gYWRqYWNlbnQgc3RyaW5ncy5cblx0ICogMi4gTm8gZW1wdHkgc3RyaW5ncy5cblx0ICpcblx0ICogICAgVGhlIG9ubHkgZXhjZXB0aW9uIGhlcmUgaXMgdGhlIHRva2VuIHN0cmVhbSB0aGF0IG9ubHkgY29udGFpbnMgdGhlIGVtcHR5IHN0cmluZyBhbmQgbm90aGluZyBlbHNlLlxuXHQgKlxuXHQgKiBAdHlwZWRlZiB7QXJyYXk8c3RyaW5nIHwgVG9rZW4+fSBUb2tlblN0cmVhbVxuXHQgKiBAZ2xvYmFsXG5cdCAqIEBwdWJsaWNcblx0ICovXG5cblx0LyoqXG5cdCAqIENvbnZlcnRzIHRoZSBnaXZlbiB0b2tlbiBvciB0b2tlbiBzdHJlYW0gdG8gYW4gSFRNTCByZXByZXNlbnRhdGlvbi5cblx0ICpcblx0ICogVGhlIGZvbGxvd2luZyBob29rcyB3aWxsIGJlIHJ1bjpcblx0ICogMS4gYHdyYXBgOiBPbiBlYWNoIHtAbGluayBUb2tlbn0uXG5cdCAqXG5cdCAqIEBwYXJhbSB7c3RyaW5nIHwgVG9rZW4gfCBUb2tlblN0cmVhbX0gbyBUaGUgdG9rZW4gb3IgdG9rZW4gc3RyZWFtIHRvIGJlIGNvbnZlcnRlZC5cblx0ICogQHBhcmFtIHtzdHJpbmd9IGxhbmd1YWdlIFRoZSBuYW1lIG9mIGN1cnJlbnQgbGFuZ3VhZ2UuXG5cdCAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBIVE1MIHJlcHJlc2VudGF0aW9uIG9mIHRoZSB0b2tlbiBvciB0b2tlbiBzdHJlYW0uXG5cdCAqIEBtZW1iZXJvZiBUb2tlblxuXHQgKiBAc3RhdGljXG5cdCAqL1xuXHRUb2tlbi5zdHJpbmdpZnkgPSBmdW5jdGlvbiBzdHJpbmdpZnkobywgbGFuZ3VhZ2UpIHtcblx0XHRpZiAodHlwZW9mIG8gPT0gJ3N0cmluZycpIHtcblx0XHRcdHJldHVybiBvO1xuXHRcdH1cblx0XHRpZiAoQXJyYXkuaXNBcnJheShvKSkge1xuXHRcdFx0dmFyIHMgPSAnJztcblx0XHRcdG8uZm9yRWFjaChmdW5jdGlvbiAoZSkge1xuXHRcdFx0XHRzICs9IHN0cmluZ2lmeShlLCBsYW5ndWFnZSk7XG5cdFx0XHR9KTtcblx0XHRcdHJldHVybiBzO1xuXHRcdH1cblxuXHRcdHZhciBlbnYgPSB7XG5cdFx0XHR0eXBlOiBvLnR5cGUsXG5cdFx0XHRjb250ZW50OiBzdHJpbmdpZnkoby5jb250ZW50LCBsYW5ndWFnZSksXG5cdFx0XHR0YWc6ICdzcGFuJyxcblx0XHRcdGNsYXNzZXM6IFsndG9rZW4nLCBvLnR5cGVdLFxuXHRcdFx0YXR0cmlidXRlczoge30sXG5cdFx0XHRsYW5ndWFnZTogbGFuZ3VhZ2Vcblx0XHR9O1xuXG5cdFx0dmFyIGFsaWFzZXMgPSBvLmFsaWFzO1xuXHRcdGlmIChhbGlhc2VzKSB7XG5cdFx0XHRpZiAoQXJyYXkuaXNBcnJheShhbGlhc2VzKSkge1xuXHRcdFx0XHRBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShlbnYuY2xhc3NlcywgYWxpYXNlcyk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRlbnYuY2xhc3Nlcy5wdXNoKGFsaWFzZXMpO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdF8uaG9va3MucnVuKCd3cmFwJywgZW52KTtcblxuXHRcdHZhciBhdHRyaWJ1dGVzID0gJyc7XG5cdFx0Zm9yICh2YXIgbmFtZSBpbiBlbnYuYXR0cmlidXRlcykge1xuXHRcdFx0YXR0cmlidXRlcyArPSAnICcgKyBuYW1lICsgJz1cIicgKyAoZW52LmF0dHJpYnV0ZXNbbmFtZV0gfHwgJycpLnJlcGxhY2UoL1wiL2csICcmcXVvdDsnKSArICdcIic7XG5cdFx0fVxuXG5cdFx0cmV0dXJuICc8JyArIGVudi50YWcgKyAnIGNsYXNzPVwiJyArIGVudi5jbGFzc2VzLmpvaW4oJyAnKSArICdcIicgKyBhdHRyaWJ1dGVzICsgJz4nICsgZW52LmNvbnRlbnQgKyAnPC8nICsgZW52LnRhZyArICc+Jztcblx0fTtcblxuXHQvKipcblx0ICogQHBhcmFtIHtSZWdFeHB9IHBhdHRlcm5cblx0ICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuXHQgKiBAcGFyYW0ge3N0cmluZ30gdGV4dFxuXHQgKiBAcGFyYW0ge2Jvb2xlYW59IGxvb2tiZWhpbmRcblx0ICogQHJldHVybnMge1JlZ0V4cEV4ZWNBcnJheSB8IG51bGx9XG5cdCAqL1xuXHRmdW5jdGlvbiBtYXRjaFBhdHRlcm4ocGF0dGVybiwgcG9zLCB0ZXh0LCBsb29rYmVoaW5kKSB7XG5cdFx0cGF0dGVybi5sYXN0SW5kZXggPSBwb3M7XG5cdFx0dmFyIG1hdGNoID0gcGF0dGVybi5leGVjKHRleHQpO1xuXHRcdGlmIChtYXRjaCAmJiBsb29rYmVoaW5kICYmIG1hdGNoWzFdKSB7XG5cdFx0XHQvLyBjaGFuZ2UgdGhlIG1hdGNoIHRvIHJlbW92ZSB0aGUgdGV4dCBtYXRjaGVkIGJ5IHRoZSBQcmlzbSBsb29rYmVoaW5kIGdyb3VwXG5cdFx0XHR2YXIgbG9va2JlaGluZExlbmd0aCA9IG1hdGNoWzFdLmxlbmd0aDtcblx0XHRcdG1hdGNoLmluZGV4ICs9IGxvb2tiZWhpbmRMZW5ndGg7XG5cdFx0XHRtYXRjaFswXSA9IG1hdGNoWzBdLnNsaWNlKGxvb2tiZWhpbmRMZW5ndGgpO1xuXHRcdH1cblx0XHRyZXR1cm4gbWF0Y2g7XG5cdH1cblxuXHQvKipcblx0ICogQHBhcmFtIHtzdHJpbmd9IHRleHRcblx0ICogQHBhcmFtIHtMaW5rZWRMaXN0PHN0cmluZyB8IFRva2VuPn0gdG9rZW5MaXN0XG5cdCAqIEBwYXJhbSB7YW55fSBncmFtbWFyXG5cdCAqIEBwYXJhbSB7TGlua2VkTGlzdE5vZGU8c3RyaW5nIHwgVG9rZW4+fSBzdGFydE5vZGVcblx0ICogQHBhcmFtIHtudW1iZXJ9IHN0YXJ0UG9zXG5cdCAqIEBwYXJhbSB7UmVtYXRjaE9wdGlvbnN9IFtyZW1hdGNoXVxuXHQgKiBAcmV0dXJucyB7dm9pZH1cblx0ICogQHByaXZhdGVcblx0ICpcblx0ICogQHR5cGVkZWYgUmVtYXRjaE9wdGlvbnNcblx0ICogQHByb3BlcnR5IHtzdHJpbmd9IGNhdXNlXG5cdCAqIEBwcm9wZXJ0eSB7bnVtYmVyfSByZWFjaFxuXHQgKi9cblx0ZnVuY3Rpb24gbWF0Y2hHcmFtbWFyKHRleHQsIHRva2VuTGlzdCwgZ3JhbW1hciwgc3RhcnROb2RlLCBzdGFydFBvcywgcmVtYXRjaCkge1xuXHRcdGZvciAodmFyIHRva2VuIGluIGdyYW1tYXIpIHtcblx0XHRcdGlmICghZ3JhbW1hci5oYXNPd25Qcm9wZXJ0eSh0b2tlbikgfHwgIWdyYW1tYXJbdG9rZW5dKSB7XG5cdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0fVxuXG5cdFx0XHR2YXIgcGF0dGVybnMgPSBncmFtbWFyW3Rva2VuXTtcblx0XHRcdHBhdHRlcm5zID0gQXJyYXkuaXNBcnJheShwYXR0ZXJucykgPyBwYXR0ZXJucyA6IFtwYXR0ZXJuc107XG5cblx0XHRcdGZvciAodmFyIGogPSAwOyBqIDwgcGF0dGVybnMubGVuZ3RoOyArK2opIHtcblx0XHRcdFx0aWYgKHJlbWF0Y2ggJiYgcmVtYXRjaC5jYXVzZSA9PSB0b2tlbiArICcsJyArIGopIHtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblxuXHRcdFx0XHR2YXIgcGF0dGVybk9iaiA9IHBhdHRlcm5zW2pdO1xuXHRcdFx0XHR2YXIgaW5zaWRlID0gcGF0dGVybk9iai5pbnNpZGU7XG5cdFx0XHRcdHZhciBsb29rYmVoaW5kID0gISFwYXR0ZXJuT2JqLmxvb2tiZWhpbmQ7XG5cdFx0XHRcdHZhciBncmVlZHkgPSAhIXBhdHRlcm5PYmouZ3JlZWR5O1xuXHRcdFx0XHR2YXIgYWxpYXMgPSBwYXR0ZXJuT2JqLmFsaWFzO1xuXG5cdFx0XHRcdGlmIChncmVlZHkgJiYgIXBhdHRlcm5PYmoucGF0dGVybi5nbG9iYWwpIHtcblx0XHRcdFx0XHQvLyBXaXRob3V0IHRoZSBnbG9iYWwgZmxhZywgbGFzdEluZGV4IHdvbid0IHdvcmtcblx0XHRcdFx0XHR2YXIgZmxhZ3MgPSBwYXR0ZXJuT2JqLnBhdHRlcm4udG9TdHJpbmcoKS5tYXRjaCgvW2ltc3V5XSokLylbMF07XG5cdFx0XHRcdFx0cGF0dGVybk9iai5wYXR0ZXJuID0gUmVnRXhwKHBhdHRlcm5PYmoucGF0dGVybi5zb3VyY2UsIGZsYWdzICsgJ2cnKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8qKiBAdHlwZSB7UmVnRXhwfSAqL1xuXHRcdFx0XHR2YXIgcGF0dGVybiA9IHBhdHRlcm5PYmoucGF0dGVybiB8fCBwYXR0ZXJuT2JqO1xuXG5cdFx0XHRcdGZvciAoIC8vIGl0ZXJhdGUgdGhlIHRva2VuIGxpc3QgYW5kIGtlZXAgdHJhY2sgb2YgdGhlIGN1cnJlbnQgdG9rZW4vc3RyaW5nIHBvc2l0aW9uXG5cdFx0XHRcdFx0dmFyIGN1cnJlbnROb2RlID0gc3RhcnROb2RlLm5leHQsIHBvcyA9IHN0YXJ0UG9zO1xuXHRcdFx0XHRcdGN1cnJlbnROb2RlICE9PSB0b2tlbkxpc3QudGFpbDtcblx0XHRcdFx0XHRwb3MgKz0gY3VycmVudE5vZGUudmFsdWUubGVuZ3RoLCBjdXJyZW50Tm9kZSA9IGN1cnJlbnROb2RlLm5leHRcblx0XHRcdFx0KSB7XG5cblx0XHRcdFx0XHRpZiAocmVtYXRjaCAmJiBwb3MgPj0gcmVtYXRjaC5yZWFjaCkge1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0dmFyIHN0ciA9IGN1cnJlbnROb2RlLnZhbHVlO1xuXG5cdFx0XHRcdFx0aWYgKHRva2VuTGlzdC5sZW5ndGggPiB0ZXh0Lmxlbmd0aCkge1xuXHRcdFx0XHRcdFx0Ly8gU29tZXRoaW5nIHdlbnQgdGVycmlibHkgd3JvbmcsIEFCT1JULCBBQk9SVCFcblx0XHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRpZiAoc3RyIGluc3RhbmNlb2YgVG9rZW4pIHtcblx0XHRcdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHZhciByZW1vdmVDb3VudCA9IDE7IC8vIHRoaXMgaXMgdGhlIHRvIHBhcmFtZXRlciBvZiByZW1vdmVCZXR3ZWVuXG5cdFx0XHRcdFx0dmFyIG1hdGNoO1xuXG5cdFx0XHRcdFx0aWYgKGdyZWVkeSkge1xuXHRcdFx0XHRcdFx0bWF0Y2ggPSBtYXRjaFBhdHRlcm4ocGF0dGVybiwgcG9zLCB0ZXh0LCBsb29rYmVoaW5kKTtcblx0XHRcdFx0XHRcdGlmICghbWF0Y2ggfHwgbWF0Y2guaW5kZXggPj0gdGV4dC5sZW5ndGgpIHtcblx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdHZhciBmcm9tID0gbWF0Y2guaW5kZXg7XG5cdFx0XHRcdFx0XHR2YXIgdG8gPSBtYXRjaC5pbmRleCArIG1hdGNoWzBdLmxlbmd0aDtcblx0XHRcdFx0XHRcdHZhciBwID0gcG9zO1xuXG5cdFx0XHRcdFx0XHQvLyBmaW5kIHRoZSBub2RlIHRoYXQgY29udGFpbnMgdGhlIG1hdGNoXG5cdFx0XHRcdFx0XHRwICs9IGN1cnJlbnROb2RlLnZhbHVlLmxlbmd0aDtcblx0XHRcdFx0XHRcdHdoaWxlIChmcm9tID49IHApIHtcblx0XHRcdFx0XHRcdFx0Y3VycmVudE5vZGUgPSBjdXJyZW50Tm9kZS5uZXh0O1xuXHRcdFx0XHRcdFx0XHRwICs9IGN1cnJlbnROb2RlLnZhbHVlLmxlbmd0aDtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdC8vIGFkanVzdCBwb3MgKGFuZCBwKVxuXHRcdFx0XHRcdFx0cCAtPSBjdXJyZW50Tm9kZS52YWx1ZS5sZW5ndGg7XG5cdFx0XHRcdFx0XHRwb3MgPSBwO1xuXG5cdFx0XHRcdFx0XHQvLyB0aGUgY3VycmVudCBub2RlIGlzIGEgVG9rZW4sIHRoZW4gdGhlIG1hdGNoIHN0YXJ0cyBpbnNpZGUgYW5vdGhlciBUb2tlbiwgd2hpY2ggaXMgaW52YWxpZFxuXHRcdFx0XHRcdFx0aWYgKGN1cnJlbnROb2RlLnZhbHVlIGluc3RhbmNlb2YgVG9rZW4pIHtcblx0XHRcdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdC8vIGZpbmQgdGhlIGxhc3Qgbm9kZSB3aGljaCBpcyBhZmZlY3RlZCBieSB0aGlzIG1hdGNoXG5cdFx0XHRcdFx0XHRmb3IgKFxuXHRcdFx0XHRcdFx0XHR2YXIgayA9IGN1cnJlbnROb2RlO1xuXHRcdFx0XHRcdFx0XHRrICE9PSB0b2tlbkxpc3QudGFpbCAmJiAocCA8IHRvIHx8IHR5cGVvZiBrLnZhbHVlID09PSAnc3RyaW5nJyk7XG5cdFx0XHRcdFx0XHRcdGsgPSBrLm5leHRcblx0XHRcdFx0XHRcdCkge1xuXHRcdFx0XHRcdFx0XHRyZW1vdmVDb3VudCsrO1xuXHRcdFx0XHRcdFx0XHRwICs9IGsudmFsdWUubGVuZ3RoO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0cmVtb3ZlQ291bnQtLTtcblxuXHRcdFx0XHRcdFx0Ly8gcmVwbGFjZSB3aXRoIHRoZSBuZXcgbWF0Y2hcblx0XHRcdFx0XHRcdHN0ciA9IHRleHQuc2xpY2UocG9zLCBwKTtcblx0XHRcdFx0XHRcdG1hdGNoLmluZGV4IC09IHBvcztcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0bWF0Y2ggPSBtYXRjaFBhdHRlcm4ocGF0dGVybiwgMCwgc3RyLCBsb29rYmVoaW5kKTtcblx0XHRcdFx0XHRcdGlmICghbWF0Y2gpIHtcblx0XHRcdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlZGVjbGFyZVxuXHRcdFx0XHRcdHZhciBmcm9tID0gbWF0Y2guaW5kZXg7XG5cdFx0XHRcdFx0dmFyIG1hdGNoU3RyID0gbWF0Y2hbMF07XG5cdFx0XHRcdFx0dmFyIGJlZm9yZSA9IHN0ci5zbGljZSgwLCBmcm9tKTtcblx0XHRcdFx0XHR2YXIgYWZ0ZXIgPSBzdHIuc2xpY2UoZnJvbSArIG1hdGNoU3RyLmxlbmd0aCk7XG5cblx0XHRcdFx0XHR2YXIgcmVhY2ggPSBwb3MgKyBzdHIubGVuZ3RoO1xuXHRcdFx0XHRcdGlmIChyZW1hdGNoICYmIHJlYWNoID4gcmVtYXRjaC5yZWFjaCkge1xuXHRcdFx0XHRcdFx0cmVtYXRjaC5yZWFjaCA9IHJlYWNoO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHZhciByZW1vdmVGcm9tID0gY3VycmVudE5vZGUucHJldjtcblxuXHRcdFx0XHRcdGlmIChiZWZvcmUpIHtcblx0XHRcdFx0XHRcdHJlbW92ZUZyb20gPSBhZGRBZnRlcih0b2tlbkxpc3QsIHJlbW92ZUZyb20sIGJlZm9yZSk7XG5cdFx0XHRcdFx0XHRwb3MgKz0gYmVmb3JlLmxlbmd0aDtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRyZW1vdmVSYW5nZSh0b2tlbkxpc3QsIHJlbW92ZUZyb20sIHJlbW92ZUNvdW50KTtcblxuXHRcdFx0XHRcdHZhciB3cmFwcGVkID0gbmV3IFRva2VuKHRva2VuLCBpbnNpZGUgPyBfLnRva2VuaXplKG1hdGNoU3RyLCBpbnNpZGUpIDogbWF0Y2hTdHIsIGFsaWFzLCBtYXRjaFN0cik7XG5cdFx0XHRcdFx0Y3VycmVudE5vZGUgPSBhZGRBZnRlcih0b2tlbkxpc3QsIHJlbW92ZUZyb20sIHdyYXBwZWQpO1xuXG5cdFx0XHRcdFx0aWYgKGFmdGVyKSB7XG5cdFx0XHRcdFx0XHRhZGRBZnRlcih0b2tlbkxpc3QsIGN1cnJlbnROb2RlLCBhZnRlcik7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0aWYgKHJlbW92ZUNvdW50ID4gMSkge1xuXHRcdFx0XHRcdFx0Ly8gYXQgbGVhc3Qgb25lIFRva2VuIG9iamVjdCB3YXMgcmVtb3ZlZCwgc28gd2UgaGF2ZSB0byBkbyBzb21lIHJlbWF0Y2hpbmdcblx0XHRcdFx0XHRcdC8vIHRoaXMgY2FuIG9ubHkgaGFwcGVuIGlmIHRoZSBjdXJyZW50IHBhdHRlcm4gaXMgZ3JlZWR5XG5cblx0XHRcdFx0XHRcdC8qKiBAdHlwZSB7UmVtYXRjaE9wdGlvbnN9ICovXG5cdFx0XHRcdFx0XHR2YXIgbmVzdGVkUmVtYXRjaCA9IHtcblx0XHRcdFx0XHRcdFx0Y2F1c2U6IHRva2VuICsgJywnICsgaixcblx0XHRcdFx0XHRcdFx0cmVhY2g6IHJlYWNoXG5cdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdFx0bWF0Y2hHcmFtbWFyKHRleHQsIHRva2VuTGlzdCwgZ3JhbW1hciwgY3VycmVudE5vZGUucHJldiwgcG9zLCBuZXN0ZWRSZW1hdGNoKTtcblxuXHRcdFx0XHRcdFx0Ly8gdGhlIHJlYWNoIG1pZ2h0IGhhdmUgYmVlbiBleHRlbmRlZCBiZWNhdXNlIG9mIHRoZSByZW1hdGNoaW5nXG5cdFx0XHRcdFx0XHRpZiAocmVtYXRjaCAmJiBuZXN0ZWRSZW1hdGNoLnJlYWNoID4gcmVtYXRjaC5yZWFjaCkge1xuXHRcdFx0XHRcdFx0XHRyZW1hdGNoLnJlYWNoID0gbmVzdGVkUmVtYXRjaC5yZWFjaDtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvKipcblx0ICogQHR5cGVkZWYgTGlua2VkTGlzdE5vZGVcblx0ICogQHByb3BlcnR5IHtUfSB2YWx1ZVxuXHQgKiBAcHJvcGVydHkge0xpbmtlZExpc3ROb2RlPFQ+IHwgbnVsbH0gcHJldiBUaGUgcHJldmlvdXMgbm9kZS5cblx0ICogQHByb3BlcnR5IHtMaW5rZWRMaXN0Tm9kZTxUPiB8IG51bGx9IG5leHQgVGhlIG5leHQgbm9kZS5cblx0ICogQHRlbXBsYXRlIFRcblx0ICogQHByaXZhdGVcblx0ICovXG5cblx0LyoqXG5cdCAqIEB0ZW1wbGF0ZSBUXG5cdCAqIEBwcml2YXRlXG5cdCAqL1xuXHRmdW5jdGlvbiBMaW5rZWRMaXN0KCkge1xuXHRcdC8qKiBAdHlwZSB7TGlua2VkTGlzdE5vZGU8VD59ICovXG5cdFx0dmFyIGhlYWQgPSB7IHZhbHVlOiBudWxsLCBwcmV2OiBudWxsLCBuZXh0OiBudWxsIH07XG5cdFx0LyoqIEB0eXBlIHtMaW5rZWRMaXN0Tm9kZTxUPn0gKi9cblx0XHR2YXIgdGFpbCA9IHsgdmFsdWU6IG51bGwsIHByZXY6IGhlYWQsIG5leHQ6IG51bGwgfTtcblx0XHRoZWFkLm5leHQgPSB0YWlsO1xuXG5cdFx0LyoqIEB0eXBlIHtMaW5rZWRMaXN0Tm9kZTxUPn0gKi9cblx0XHR0aGlzLmhlYWQgPSBoZWFkO1xuXHRcdC8qKiBAdHlwZSB7TGlua2VkTGlzdE5vZGU8VD59ICovXG5cdFx0dGhpcy50YWlsID0gdGFpbDtcblx0XHR0aGlzLmxlbmd0aCA9IDA7XG5cdH1cblxuXHQvKipcblx0ICogQWRkcyBhIG5ldyBub2RlIHdpdGggdGhlIGdpdmVuIHZhbHVlIHRvIHRoZSBsaXN0LlxuXHQgKlxuXHQgKiBAcGFyYW0ge0xpbmtlZExpc3Q8VD59IGxpc3Rcblx0ICogQHBhcmFtIHtMaW5rZWRMaXN0Tm9kZTxUPn0gbm9kZVxuXHQgKiBAcGFyYW0ge1R9IHZhbHVlXG5cdCAqIEByZXR1cm5zIHtMaW5rZWRMaXN0Tm9kZTxUPn0gVGhlIGFkZGVkIG5vZGUuXG5cdCAqIEB0ZW1wbGF0ZSBUXG5cdCAqL1xuXHRmdW5jdGlvbiBhZGRBZnRlcihsaXN0LCBub2RlLCB2YWx1ZSkge1xuXHRcdC8vIGFzc3VtZXMgdGhhdCBub2RlICE9IGxpc3QudGFpbCAmJiB2YWx1ZXMubGVuZ3RoID49IDBcblx0XHR2YXIgbmV4dCA9IG5vZGUubmV4dDtcblxuXHRcdHZhciBuZXdOb2RlID0geyB2YWx1ZTogdmFsdWUsIHByZXY6IG5vZGUsIG5leHQ6IG5leHQgfTtcblx0XHRub2RlLm5leHQgPSBuZXdOb2RlO1xuXHRcdG5leHQucHJldiA9IG5ld05vZGU7XG5cdFx0bGlzdC5sZW5ndGgrKztcblxuXHRcdHJldHVybiBuZXdOb2RlO1xuXHR9XG5cdC8qKlxuXHQgKiBSZW1vdmVzIGBjb3VudGAgbm9kZXMgYWZ0ZXIgdGhlIGdpdmVuIG5vZGUuIFRoZSBnaXZlbiBub2RlIHdpbGwgbm90IGJlIHJlbW92ZWQuXG5cdCAqXG5cdCAqIEBwYXJhbSB7TGlua2VkTGlzdDxUPn0gbGlzdFxuXHQgKiBAcGFyYW0ge0xpbmtlZExpc3ROb2RlPFQ+fSBub2RlXG5cdCAqIEBwYXJhbSB7bnVtYmVyfSBjb3VudFxuXHQgKiBAdGVtcGxhdGUgVFxuXHQgKi9cblx0ZnVuY3Rpb24gcmVtb3ZlUmFuZ2UobGlzdCwgbm9kZSwgY291bnQpIHtcblx0XHR2YXIgbmV4dCA9IG5vZGUubmV4dDtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGNvdW50ICYmIG5leHQgIT09IGxpc3QudGFpbDsgaSsrKSB7XG5cdFx0XHRuZXh0ID0gbmV4dC5uZXh0O1xuXHRcdH1cblx0XHRub2RlLm5leHQgPSBuZXh0O1xuXHRcdG5leHQucHJldiA9IG5vZGU7XG5cdFx0bGlzdC5sZW5ndGggLT0gaTtcblx0fVxuXHQvKipcblx0ICogQHBhcmFtIHtMaW5rZWRMaXN0PFQ+fSBsaXN0XG5cdCAqIEByZXR1cm5zIHtUW119XG5cdCAqIEB0ZW1wbGF0ZSBUXG5cdCAqL1xuXHRmdW5jdGlvbiB0b0FycmF5KGxpc3QpIHtcblx0XHR2YXIgYXJyYXkgPSBbXTtcblx0XHR2YXIgbm9kZSA9IGxpc3QuaGVhZC5uZXh0O1xuXHRcdHdoaWxlIChub2RlICE9PSBsaXN0LnRhaWwpIHtcblx0XHRcdGFycmF5LnB1c2gobm9kZS52YWx1ZSk7XG5cdFx0XHRub2RlID0gbm9kZS5uZXh0O1xuXHRcdH1cblx0XHRyZXR1cm4gYXJyYXk7XG5cdH1cblxuXG5cdGlmICghX3NlbGYuZG9jdW1lbnQpIHtcblx0XHRpZiAoIV9zZWxmLmFkZEV2ZW50TGlzdGVuZXIpIHtcblx0XHRcdC8vIGluIE5vZGUuanNcblx0XHRcdHJldHVybiBfO1xuXHRcdH1cblxuXHRcdGlmICghXy5kaXNhYmxlV29ya2VyTWVzc2FnZUhhbmRsZXIpIHtcblx0XHRcdC8vIEluIHdvcmtlclxuXHRcdFx0X3NlbGYuYWRkRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIGZ1bmN0aW9uIChldnQpIHtcblx0XHRcdFx0dmFyIG1lc3NhZ2UgPSBKU09OLnBhcnNlKGV2dC5kYXRhKTtcblx0XHRcdFx0dmFyIGxhbmcgPSBtZXNzYWdlLmxhbmd1YWdlO1xuXHRcdFx0XHR2YXIgY29kZSA9IG1lc3NhZ2UuY29kZTtcblx0XHRcdFx0dmFyIGltbWVkaWF0ZUNsb3NlID0gbWVzc2FnZS5pbW1lZGlhdGVDbG9zZTtcblxuXHRcdFx0XHRfc2VsZi5wb3N0TWVzc2FnZShfLmhpZ2hsaWdodChjb2RlLCBfLmxhbmd1YWdlc1tsYW5nXSwgbGFuZykpO1xuXHRcdFx0XHRpZiAoaW1tZWRpYXRlQ2xvc2UpIHtcblx0XHRcdFx0XHRfc2VsZi5jbG9zZSgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9LCBmYWxzZSk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIF87XG5cdH1cblxuXHQvLyBHZXQgY3VycmVudCBzY3JpcHQgYW5kIGhpZ2hsaWdodFxuXHR2YXIgc2NyaXB0ID0gXy51dGlsLmN1cnJlbnRTY3JpcHQoKTtcblxuXHRpZiAoc2NyaXB0KSB7XG5cdFx0Xy5maWxlbmFtZSA9IHNjcmlwdC5zcmM7XG5cblx0XHRpZiAoc2NyaXB0Lmhhc0F0dHJpYnV0ZSgnZGF0YS1tYW51YWwnKSkge1xuXHRcdFx0Xy5tYW51YWwgPSB0cnVlO1xuXHRcdH1cblx0fVxuXG5cdGZ1bmN0aW9uIGhpZ2hsaWdodEF1dG9tYXRpY2FsbHlDYWxsYmFjaygpIHtcblx0XHRpZiAoIV8ubWFudWFsKSB7XG5cdFx0XHRfLmhpZ2hsaWdodEFsbCgpO1xuXHRcdH1cblx0fVxuXG5cdGlmICghXy5tYW51YWwpIHtcblx0XHQvLyBJZiB0aGUgZG9jdW1lbnQgc3RhdGUgaXMgXCJsb2FkaW5nXCIsIHRoZW4gd2UnbGwgdXNlIERPTUNvbnRlbnRMb2FkZWQuXG5cdFx0Ly8gSWYgdGhlIGRvY3VtZW50IHN0YXRlIGlzIFwiaW50ZXJhY3RpdmVcIiBhbmQgdGhlIHByaXNtLmpzIHNjcmlwdCBpcyBkZWZlcnJlZCwgdGhlbiB3ZSdsbCBhbHNvIHVzZSB0aGVcblx0XHQvLyBET01Db250ZW50TG9hZGVkIGV2ZW50IGJlY2F1c2UgdGhlcmUgbWlnaHQgYmUgc29tZSBwbHVnaW5zIG9yIGxhbmd1YWdlcyB3aGljaCBoYXZlIGFsc28gYmVlbiBkZWZlcnJlZCBhbmQgdGhleVxuXHRcdC8vIG1pZ2h0IHRha2UgbG9uZ2VyIG9uZSBhbmltYXRpb24gZnJhbWUgdG8gZXhlY3V0ZSB3aGljaCBjYW4gY3JlYXRlIGEgcmFjZSBjb25kaXRpb24gd2hlcmUgb25seSBzb21lIHBsdWdpbnMgaGF2ZVxuXHRcdC8vIGJlZW4gbG9hZGVkIHdoZW4gUHJpc20uaGlnaGxpZ2h0QWxsKCkgaXMgZXhlY3V0ZWQsIGRlcGVuZGluZyBvbiBob3cgZmFzdCByZXNvdXJjZXMgYXJlIGxvYWRlZC5cblx0XHQvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL1ByaXNtSlMvcHJpc20vaXNzdWVzLzIxMDJcblx0XHR2YXIgcmVhZHlTdGF0ZSA9IGRvY3VtZW50LnJlYWR5U3RhdGU7XG5cdFx0aWYgKHJlYWR5U3RhdGUgPT09ICdsb2FkaW5nJyB8fCByZWFkeVN0YXRlID09PSAnaW50ZXJhY3RpdmUnICYmIHNjcmlwdCAmJiBzY3JpcHQuZGVmZXIpIHtcblx0XHRcdGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBoaWdobGlnaHRBdXRvbWF0aWNhbGx5Q2FsbGJhY2spO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRpZiAod2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSkge1xuXHRcdFx0XHR3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKGhpZ2hsaWdodEF1dG9tYXRpY2FsbHlDYWxsYmFjayk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR3aW5kb3cuc2V0VGltZW91dChoaWdobGlnaHRBdXRvbWF0aWNhbGx5Q2FsbGJhY2ssIDE2KTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gXztcblxufShfc2VsZikpO1xuXG5pZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIHtcblx0bW9kdWxlLmV4cG9ydHMgPSBQcmlzbTtcbn1cblxuLy8gaGFjayBmb3IgY29tcG9uZW50cyB0byB3b3JrIGNvcnJlY3RseSBpbiBub2RlLmpzXG5pZiAodHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcpIHtcblx0Z2xvYmFsLlByaXNtID0gUHJpc207XG59XG5cbi8vIHNvbWUgYWRkaXRpb25hbCBkb2N1bWVudGF0aW9uL3R5cGVzXG5cbi8qKlxuICogVGhlIGV4cGFuc2lvbiBvZiBhIHNpbXBsZSBgUmVnRXhwYCBsaXRlcmFsIHRvIHN1cHBvcnQgYWRkaXRpb25hbCBwcm9wZXJ0aWVzLlxuICpcbiAqIEB0eXBlZGVmIEdyYW1tYXJUb2tlblxuICogQHByb3BlcnR5IHtSZWdFeHB9IHBhdHRlcm4gVGhlIHJlZ3VsYXIgZXhwcmVzc2lvbiBvZiB0aGUgdG9rZW4uXG4gKiBAcHJvcGVydHkge2Jvb2xlYW59IFtsb29rYmVoaW5kPWZhbHNlXSBJZiBgdHJ1ZWAsIHRoZW4gdGhlIGZpcnN0IGNhcHR1cmluZyBncm91cCBvZiBgcGF0dGVybmAgd2lsbCAoZWZmZWN0aXZlbHkpXG4gKiBiZWhhdmUgYXMgYSBsb29rYmVoaW5kIGdyb3VwIG1lYW5pbmcgdGhhdCB0aGUgY2FwdHVyZWQgdGV4dCB3aWxsIG5vdCBiZSBwYXJ0IG9mIHRoZSBtYXRjaGVkIHRleHQgb2YgdGhlIG5ldyB0b2tlbi5cbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbn0gW2dyZWVkeT1mYWxzZV0gV2hldGhlciB0aGUgdG9rZW4gaXMgZ3JlZWR5LlxuICogQHByb3BlcnR5IHtzdHJpbmd8c3RyaW5nW119IFthbGlhc10gQW4gb3B0aW9uYWwgYWxpYXMgb3IgbGlzdCBvZiBhbGlhc2VzLlxuICogQHByb3BlcnR5IHtHcmFtbWFyfSBbaW5zaWRlXSBUaGUgbmVzdGVkIGdyYW1tYXIgb2YgdGhpcyB0b2tlbi5cbiAqXG4gKiBUaGUgYGluc2lkZWAgZ3JhbW1hciB3aWxsIGJlIHVzZWQgdG8gdG9rZW5pemUgdGhlIHRleHQgdmFsdWUgb2YgZWFjaCB0b2tlbiBvZiB0aGlzIGtpbmQuXG4gKlxuICogVGhpcyBjYW4gYmUgdXNlZCB0byBtYWtlIG5lc3RlZCBhbmQgZXZlbiByZWN1cnNpdmUgbGFuZ3VhZ2UgZGVmaW5pdGlvbnMuXG4gKlxuICogTm90ZTogVGhpcyBjYW4gY2F1c2UgaW5maW5pdGUgcmVjdXJzaW9uLiBCZSBjYXJlZnVsIHdoZW4geW91IGVtYmVkIGRpZmZlcmVudCBsYW5ndWFnZXMgb3IgZXZlbiB0aGUgc2FtZSBsYW5ndWFnZSBpbnRvXG4gKiBlYWNoIGFub3RoZXIuXG4gKiBAZ2xvYmFsXG4gKiBAcHVibGljXG4gKi9cblxuLyoqXG4gKiBAdHlwZWRlZiBHcmFtbWFyXG4gKiBAdHlwZSB7T2JqZWN0PHN0cmluZywgUmVnRXhwIHwgR3JhbW1hclRva2VuIHwgQXJyYXk8UmVnRXhwIHwgR3JhbW1hclRva2VuPj59XG4gKiBAcHJvcGVydHkge0dyYW1tYXJ9IFtyZXN0XSBBbiBvcHRpb25hbCBncmFtbWFyIG9iamVjdCB0aGF0IHdpbGwgYmUgYXBwZW5kZWQgdG8gdGhpcyBncmFtbWFyLlxuICogQGdsb2JhbFxuICogQHB1YmxpY1xuICovXG5cbi8qKlxuICogQSBmdW5jdGlvbiB3aGljaCB3aWxsIGludm9rZWQgYWZ0ZXIgYW4gZWxlbWVudCB3YXMgc3VjY2Vzc2Z1bGx5IGhpZ2hsaWdodGVkLlxuICpcbiAqIEBjYWxsYmFjayBIaWdobGlnaHRDYWxsYmFja1xuICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50IFRoZSBlbGVtZW50IHN1Y2Nlc3NmdWxseSBoaWdobGlnaHRlZC5cbiAqIEByZXR1cm5zIHt2b2lkfVxuICogQGdsb2JhbFxuICogQHB1YmxpY1xuICovXG5cbi8qKlxuICogQGNhbGxiYWNrIEhvb2tDYWxsYmFja1xuICogQHBhcmFtIHtPYmplY3Q8c3RyaW5nLCBhbnk+fSBlbnYgVGhlIGVudmlyb25tZW50IHZhcmlhYmxlcyBvZiB0aGUgaG9vay5cbiAqIEByZXR1cm5zIHt2b2lkfVxuICogQGdsb2JhbFxuICogQHB1YmxpY1xuICovXG4iXSwibmFtZXMiOlsiX3NlbGYiLCJ3aW5kb3ciLCJXb3JrZXJHbG9iYWxTY29wZSIsInNlbGYiLCJQcmlzbSIsImxhbmciLCJ1bmlxdWVJZCIsInBsYWluVGV4dEdyYW1tYXIiLCJfIiwibWFudWFsIiwiZGlzYWJsZVdvcmtlck1lc3NhZ2VIYW5kbGVyIiwidXRpbCIsImVuY29kZSIsInRva2VucyIsIlRva2VuIiwidHlwZSIsImNvbnRlbnQiLCJhbGlhcyIsIkFycmF5IiwiaXNBcnJheSIsIm1hcCIsInJlcGxhY2UiLCJvIiwiT2JqZWN0IiwicHJvdG90eXBlIiwidG9TdHJpbmciLCJjYWxsIiwic2xpY2UiLCJvYmpJZCIsIm9iaiIsImRlZmluZVByb3BlcnR5IiwidmFsdWUiLCJjbG9uZSIsImRlZXBDbG9uZSIsInZpc2l0ZWQiLCJpZCIsImtleSIsImhhc093blByb3BlcnR5IiwiZm9yRWFjaCIsInYiLCJpIiwiZ2V0TGFuZ3VhZ2UiLCJlbGVtZW50IiwibSIsImV4ZWMiLCJjbGFzc05hbWUiLCJ0b0xvd2VyQ2FzZSIsInBhcmVudEVsZW1lbnQiLCJzZXRMYW5ndWFnZSIsImxhbmd1YWdlIiwiUmVnRXhwIiwiY2xhc3NMaXN0IiwiYWRkIiwiY3VycmVudFNjcmlwdCIsImRvY3VtZW50IiwiRXJyb3IiLCJlcnIiLCJzcmMiLCJzdGFjayIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImlzQWN0aXZlIiwiZGVmYXVsdEFjdGl2YXRpb24iLCJubyIsImNvbnRhaW5zIiwibGFuZ3VhZ2VzIiwicGxhaW4iLCJwbGFpbnRleHQiLCJ0ZXh0IiwidHh0IiwiZXh0ZW5kIiwicmVkZWYiLCJpbnNlcnRCZWZvcmUiLCJpbnNpZGUiLCJiZWZvcmUiLCJpbnNlcnQiLCJyb290IiwiZ3JhbW1hciIsInJldCIsInRva2VuIiwibmV3VG9rZW4iLCJvbGQiLCJERlMiLCJjYWxsYmFjayIsInByb3BlcnR5IiwicHJvcGVydHlUeXBlIiwicGx1Z2lucyIsImhpZ2hsaWdodEFsbCIsImFzeW5jIiwiaGlnaGxpZ2h0QWxsVW5kZXIiLCJjb250YWluZXIiLCJlbnYiLCJzZWxlY3RvciIsImhvb2tzIiwicnVuIiwiZWxlbWVudHMiLCJhcHBseSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJoaWdobGlnaHRFbGVtZW50IiwicGFyZW50Iiwibm9kZU5hbWUiLCJjb2RlIiwidGV4dENvbnRlbnQiLCJpbnNlcnRIaWdobGlnaHRlZENvZGUiLCJoaWdobGlnaHRlZENvZGUiLCJpbm5lckhUTUwiLCJoYXNBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiLCJXb3JrZXIiLCJ3b3JrZXIiLCJmaWxlbmFtZSIsIm9ubWVzc2FnZSIsImV2dCIsImRhdGEiLCJwb3N0TWVzc2FnZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJpbW1lZGlhdGVDbG9zZSIsImhpZ2hsaWdodCIsInRva2VuaXplIiwicmVzdCIsInRva2VuTGlzdCIsIkxpbmtlZExpc3QiLCJhZGRBZnRlciIsImhlYWQiLCJtYXRjaEdyYW1tYXIiLCJ0b0FycmF5IiwiYWxsIiwibmFtZSIsInB1c2giLCJjYWxsYmFja3MiLCJsZW5ndGgiLCJtYXRjaGVkU3RyIiwicyIsImUiLCJ0YWciLCJjbGFzc2VzIiwiYXR0cmlidXRlcyIsImFsaWFzZXMiLCJqb2luIiwibWF0Y2hQYXR0ZXJuIiwicGF0dGVybiIsInBvcyIsImxvb2tiZWhpbmQiLCJsYXN0SW5kZXgiLCJtYXRjaCIsImxvb2tiZWhpbmRMZW5ndGgiLCJpbmRleCIsInN0YXJ0Tm9kZSIsInN0YXJ0UG9zIiwicmVtYXRjaCIsInBhdHRlcm5zIiwiaiIsImNhdXNlIiwicGF0dGVybk9iaiIsImdyZWVkeSIsImdsb2JhbCIsImZsYWdzIiwic291cmNlIiwiY3VycmVudE5vZGUiLCJuZXh0IiwidGFpbCIsInJlYWNoIiwic3RyIiwicmVtb3ZlQ291bnQiLCJmcm9tIiwidG8iLCJwIiwiayIsIm1hdGNoU3RyIiwiYWZ0ZXIiLCJyZW1vdmVGcm9tIiwicHJldiIsInJlbW92ZVJhbmdlIiwid3JhcHBlZCIsIm5lc3RlZFJlbWF0Y2giLCJsaXN0Iiwibm9kZSIsIm5ld05vZGUiLCJjb3VudCIsImFycmF5IiwiYWRkRXZlbnRMaXN0ZW5lciIsIm1lc3NhZ2UiLCJwYXJzZSIsImNsb3NlIiwic2NyaXB0IiwiaGlnaGxpZ2h0QXV0b21hdGljYWxseUNhbGxiYWNrIiwicmVhZHlTdGF0ZSIsImRlZmVyIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwic2V0VGltZW91dCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/refractor/node_modules/prismjs/components/prism-core.js\n");

/***/ })

};
;